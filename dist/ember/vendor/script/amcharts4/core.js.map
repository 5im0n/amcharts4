{"version":3,"sources":["webpack:///webpack/bootstrap c105542061ddb18f31b1","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/tslib/tslib.es6.js","webpack:///../../../../src/.internal/core/Registry.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_export.js","webpack:///../../../../../src/.internal/core/utils/Type.ts","webpack:///../../../../../src/.internal/core/utils/Math.ts","webpack:///../../../../../src/.internal/core/utils/Iterator.ts","webpack:///../../../../../src/.internal/core/utils/Utils.ts","webpack:///../../../../../src/.internal/core/utils/Disposer.ts","webpack:///../../../../../src/.internal/core/utils/Percent.ts","webpack:///../../../../src/.internal/core/Container.ts","webpack:///../../../../src/.internal/core/Sprite.ts","webpack:///../../../../../src/.internal/core/utils/InterfaceColorSet.ts","webpack:///../../../../../src/.internal/core/utils/List.ts","webpack:///../../../../../src/.internal/core/rendering/Path.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_an-object.js","webpack:///../../../../../src/.internal/core/utils/Color.ts","webpack:///../../../../../src/.internal/core/utils/Array.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_global.js","webpack:///../../../../../src/.internal/core/utils/Object.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fails.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-object.js","webpack:///../../../../src/.internal/core/Base.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_descriptors.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-dp.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-length.js","webpack:///../../../../../src/.internal/core/utils/Dictionary.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-object.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_a-function.js","webpack:///../../../../../src/.internal/core/utils/Adapter.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_hide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_redefine.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-html.js","webpack:///../../../../../src/.internal/core/interaction/Interaction.ts","webpack:///../../../../../src/.internal/core/utils/DOM.ts","webpack:///../../../../../src/.internal/core/utils/Animation.ts","webpack:///../../../../../src/.internal/core/elements/Label.ts","webpack:///../../../../../src/.internal/core/utils/ColorSet.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_has.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-iobject.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopd.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gpo.js","webpack:///../../../../../src/.internal/core/elements/RoundedRectangle.ts","webpack:///../../../../../src/.internal/core/utils/Ease.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_ctx.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_cof.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_strict-method.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-primitive.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_defined.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-sap.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-methods.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_core.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_metadata.js","webpack:///../../../../../src/.internal/core/utils/Keyboard.ts","webpack:///../../../../src/.internal/core/Component.ts","webpack:///../../../../../src/.internal/core/utils/EventDispatcher.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/Filter.ts","webpack:///../../../../../src/.internal/core/utils/Language.ts","webpack:///../../../../../src/.internal/charts/axes/ValueAxis.ts","webpack:///../../../../../src/.internal/charts/elements/Column.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_meta.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_add-to-unscopables.js","webpack:///../../../../../src/.internal/core/rendering/Paper.ts","webpack:///../../../../../src/.internal/core/utils/Strings.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/LinearGradient.ts","webpack:///../../../../../src/.internal/core/interaction/Mouse.ts","webpack:///../../../../../src/.internal/core/elements/Line.ts","webpack:///../../../../../src/.internal/core/rendering/Smoothing.ts","webpack:///../../../../src/.internal/core/DataItem.ts","webpack:///../../../../../src/.internal/core/elements/Slice.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_property-desc.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_uid.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_library.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-absolute-index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-create.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopn.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-species.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_an-instance.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_for-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_redefine-all.js","webpack:///../../../../../src/.internal/charts/axes/AxisRendererY.ts","webpack:///../../../../../src/.internal/core/elements/Button.ts","webpack:///../../../../../src/.internal/core/utils/AsyncPending.ts","webpack:///../../../../../src/.internal/core/utils/Colors.ts","webpack:///../../../../src/.internal/core/System.ts","webpack:///../../../../src/.internal/core/Options.ts","webpack:///../../../../../src/.internal/core/formatters/TextFormatter.ts","webpack:///../../../../../src/.internal/charts/series/Series.ts","webpack:///../../../../../src/.internal/core/elements/Tooltip.ts","webpack:///../../../../../src/.internal/charts/elements/Bullet.ts","webpack:///../../../../../src/.internal/core/elements/Scrollbar.ts","webpack:///../../../../../src/.internal/core/elements/Circle.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-to-string-tag.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-trim.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iterators.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_validate-collection.js","webpack:///../../../../../src/.internal/charts/map/MapSeries.ts","webpack:///../../../../../src/.internal/core/elements/Rectangle.ts","webpack:///../../../../../src/.internal/core/utils/String.ts","webpack:///../../../../../src/.internal/core/utils/Number.ts","webpack:///../../../../../src/.internal/core/formatters/DateFormatter.ts","webpack:///../../../../../src/.internal/charts/elements/Tick.ts","webpack:///../../../../../src/.internal/core/elements/Polyline.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iobject.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-pie.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_classof.js","webpack:///../../../../../src/.internal/charts/axes/AxisRenderer.ts","webpack:///../../../../src/.internal/charts/Chart.ts","webpack:///../../../../../src/.internal/charts/axes/AxisRendererX.ts","webpack:///../../../../src/.internal/charts/Legend.ts","webpack:///../../../../../src/.internal/charts/types/SerialChart.ts","webpack:///../../../../src/.internal/core/SpriteState.ts","webpack:///../../../../../src/.internal/core/utils/SortedList.ts","webpack:///../../../../../src/.internal/core/utils/Order.ts","webpack:///../../../../../src/.internal/core/rendering/AMElement.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/Pattern.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/RadialGradient.ts","webpack:///../../../../../src/.internal/core/elements/WavedLine.ts","webpack:///../../../../../src/.internal/charts/axes/AxisBreak.ts","webpack:///../../../../../src/.internal/charts/series/PercentSeries.ts","webpack:///../../../../../src/.internal/charts/elements/FlowDiagramNode.ts","webpack:///../../../../../src/.internal/charts/elements/FlowDiagramLink.ts","webpack:///../../../../../src/.internal/core/elements/Polyspline.ts","webpack:///../../../../../src/.internal/core/elements/Triangle.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_shared.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-includes.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gops.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-regexp.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-detect.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_flags.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fix-re-wks.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_species-constructor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-forced-pam.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-collection-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-collection-from.js","webpack:///../../../../../src/.internal/charts/axes/AxisFill.ts","webpack:///../../../../../src/.internal/charts/axes/Grid.ts","webpack:///../../../../../src/.internal/charts/axes/AxisLabel.ts","webpack:///../../../../../src/.internal/core/utils/Cache.ts","webpack:///../../../../../src/.internal/core/rendering/SVGContainer.ts","webpack:///../../../../../src/.internal/core/elements/Popup.ts","webpack:///../../../../../src/.internal/core/utils/Time.ts","webpack:///../../../../../src/.internal/core/elements/Modal.ts","webpack:///../../../../../src/.internal/core/utils/Validatable.ts","webpack:///../../../../../src/.internal/core/data/CSVParser.ts","webpack:///../../../../../src/.internal/core/data/DataParser.ts","webpack:///../../../../../src/.internal/core/data/JSONParser.ts","webpack:///../../../../../src/.internal/core/elements/WavedRectangle.ts","webpack:///../../../../../src/.internal/charts/axes/Axis.ts","webpack:///../../../../../src/.internal/charts/axes/ValueAxisBreak.ts","webpack:///../../../../../src/.internal/core/elements/ResizeButton.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/DesaturateFilter.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/LightenFilter.ts","webpack:///../../../../../src/.internal/charts/types/FlowDiagram.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/LinearGradientModifier.ts","webpack:///../../../../../src/.internal/charts/elements/Column3D.ts","webpack:///../../../../../src/.internal/charts/series/FunnelSeries.ts","webpack:///../../../../../src/.internal/charts/elements/FunnelSlice.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_dom-create.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks-define.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_shared-key.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_enum-bug-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_html.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-proto.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-ws.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_inherit-if-required.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-repeat.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-sign.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-expm1.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-at.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-define.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-create.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-context.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fails-is-regexp.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-array-iter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_create-property.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/core.get-iterator-method.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-species-create.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-fill.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.iterator.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_task.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_microtask.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_new-promise-capability.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed-buffer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_user-agent.js","webpack:///../../../../../src/.internal/core/elements/Preloader.ts","webpack:///../../../../../src/.internal/core/rendering/Group.ts","webpack:///../../../../../src/.internal/core/defs/SVGDefaults.ts","webpack:///../../../../src/.internal/core/SpriteEvents.ts","webpack:///../../../../../src/.internal/core/interaction/InteractionObject.ts","webpack:///../../../../../src/.internal/core/interaction/InteractionObjectEvents.ts","webpack:///../../../../../src/.internal/core/interaction/InteractionKeyboardObject.ts","webpack:///../../../../../src/.internal/core/interaction/Inertia.ts","webpack:///../../../../../src/.internal/core/formatters/NumberFormatter.ts","webpack:///../../../src/lang/en.ts","webpack:///../../../../../src/.internal/core/formatters/DurationFormatter.ts","webpack:///../../../../../src/.internal/core/export/Export.ts","webpack:///../../../../../src/.internal/core/export/ExportMenu.ts","webpack:///../../../../../src/.internal/core/utils/Net.ts","webpack:///../../../../../src/.internal/core/data/DataSource.ts","webpack:///../../../../../src/.internal/core/data/DataLoader.ts","webpack:///../../../../../src/.internal/core/responsive/Responsive.ts","webpack:///../../../../../src/.internal/charts/axes/AxisLine.ts","webpack:///../../../../../src/.internal/charts/axes/AxisTick.ts","webpack:///../../../../../src/.internal/core/elements/PointedRectangle.ts","webpack:///../../../../../src/.internal/core/elements/PointedShape.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/DropShadowFilter.ts","webpack:///../../../../../src/.internal/core/elements/ZoomOutButton.ts","webpack:///../../../../../src/.internal/core/elements/WavedCircle.ts","webpack:///../../../../../src/.internal/core/elements/Trapezoid.ts","webpack:///../../../../../../src/.internal/core/elements/3d/Slice3D.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/GradientModifier.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/ColorModifier.ts","webpack:///../../../../../src/.internal/charts/types/SankeyDiagram.ts","webpack:///../../../../../src/.internal/charts/elements/SankeyNode.ts","webpack:///../../../../../src/.internal/charts/elements/LabelBullet.ts","webpack:///../../../../../src/.internal/charts/elements/SankeyLink.ts","webpack:///../../../../../../src/.internal/core/elements/3d/Rectangle3D.ts","webpack:///../../../../../src/.internal/charts/elements/HeatLegend.ts","webpack:///../../../../../../src/.internal/core/elements/3d/Cone.ts","webpack:///../../../../../src/.internal/core/elements/Ellipse.ts","webpack:///../../../../../src/.internal/core/elements/TextLink.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_ie8-dom-define.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks-ext.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-keys-internal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-dps.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopn-ext.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-assign.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_bind.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_invoke.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_parse-int.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_parse-float.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_a-number-value.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-log1p.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-fround.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-call.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-reduce.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-copy-within.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-step.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.flags.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_perform.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_promise-resolve.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.map.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-strong.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.set.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.weak-map.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-weak.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_own-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_flatten-into-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-pad.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-to-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-to-json.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-from-iterable.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-scale.js","webpack:///../../../../../src/.internal/core/elements/Polyarc.ts","webpack:///../../../../../src/.internal/core/elements/Polygon.ts","webpack:///../../../../../src/.internal/core/utils/Morpher.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/FocusFilter.ts","webpack:///../../../../../src/.internal/core/utils/Instance.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/css-element-queries/src/ResizeSensor.js","webpack:///../../../../../src/.internal/core/elements/PopupCSS.ts","webpack:///../../../../../../src/.internal/git/amcharts4-lang/src/en.ts","webpack:///../../../../../src/.internal/core/export/ExportCSS.ts","webpack:///../../../../../src/.internal/charts/elements/FunnelTick.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/shim.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.symbol.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_enum-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.create.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.define-property.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.define-properties.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-own-property-descriptor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-prototype-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-own-property-names.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.freeze.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.seal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.prevent-extensions.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-frozen.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-sealed.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-extensible.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.assign.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_same-value.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.set-prototype-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.to-string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.bind.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.name.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.has-instance.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.parse-int.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.parse-float.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.constructor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.to-fixed.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.to-precision.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.epsilon.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-finite.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-nan.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-safe-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.max-safe-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.min-safe-integer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.parse-float.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.parse-int.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.acosh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.asinh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.atanh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.cbrt.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.clz32.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.cosh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.expm1.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.fround.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.hypot.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.imul.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log10.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log1p.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log2.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.sign.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.sinh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.tanh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.trunc.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.from-code-point.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.raw.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.trim.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.iterator.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.code-point-at.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.ends-with.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.includes.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.repeat.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.starts-with.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.anchor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.big.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.blink.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.bold.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fixed.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fontcolor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fontsize.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.italics.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.link.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.small.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.strike.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.sub.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.sup.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.now.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-json.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-iso-string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_date-to-iso-string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-primitive.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_date-to-primitive.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.is-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.from.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.join.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.slice.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.sort.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.for-each.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-species-constructor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.map.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.filter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.some.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.every.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.reduce.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.reduce-right.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.index-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.last-index-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.copy-within.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.fill.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.find.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.find-index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.species.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.match.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.replace.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.search.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.split.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.promise.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.weak-set.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.array-buffer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.data-view.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int8-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint8-clamped-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int16-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint16-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int32-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint32-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.float32-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.float64-array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.apply.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.construct.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.define-property.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.delete-property.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.enumerate.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get-prototype-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.has.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.is-extensible.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.own-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.prevent-extensions.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.set.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.set-prototype-of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.includes.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.flat-map.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.flatten.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.at.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.pad-start.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.pad-end.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.trim-left.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.trim-right.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.match-all.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.symbol.async-iterator.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.symbol.observable.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.get-own-property-descriptors.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.values.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.entries.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.define-getter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.define-setter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.lookup-getter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.lookup-setter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.to-json.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.to-json.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-map.of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-set.of.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.from.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.from.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-map.from.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-set.from.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.global.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.system.global.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.error.is-error.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.clamp.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.deg-per-rad.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.degrees.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.fscale.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.iaddh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.isubh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.imulh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.rad-per-deg.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.radians.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.scale.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.umulh.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.signbit.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.promise.finally.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.promise.try.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.define-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.delete-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-metadata-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-own-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.has-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.has-own-metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.metadata.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.asap.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.observable.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.timers.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.immediate.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.dom.iterable.js","webpack:///./core.js","webpack:///../../src/core.ts","webpack:///../../../../../src/.internal/core/elements/Image.ts","webpack:///../../../../../src/.internal/core/elements/Slider.ts","webpack:///../../../../../src/.internal/core/elements/PlayButton.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/RadialGradientModifier.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/LinePattern.ts","webpack:///../../../../../../src/.internal/core/rendering/fills/RectPattern.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/ColorizeFilter.ts","webpack:///../../../../../../src/.internal/core/rendering/filters/BlurFilter.ts","webpack:///../../../../../src/.internal/core/elements/AmChartsLogo.ts"],"names":["parentJsonpFunction","window","chunkIds","moreModules","executeModules","moduleId","chunkId","result","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","shift","__webpack_require__","s","installedModules","302","exports","module","l","e","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","script","createElement","type","charset","async","timeout","nc","setAttribute","src","p","0","1","2","3","setTimeout","onScriptComplete","onerror","onload","clearTimeout","chunk","Error","undefined","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","__esModule","object","property","oe","err","console","error","__webpack_exports__","b","__","this","constructor","extendStatics","create","__assign","thisArg","_arguments","P","generator","fulfilled","value","step","next","rejected","done","then","apply","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","__values","__read","ar","arguments","concat","setPrototypeOf","__proto__","Array","assign","r","Registry","registry","__WEBPACK_IMPORTED_MODULE_0__utils_EventDispatcher__","__WEBPACK_IMPORTED_MODULE_1__utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_2__utils_Cache__","__WEBPACK_IMPORTED_MODULE_3__utils_Type__","__WEBPACK_IMPORTED_MODULE_4__utils_String__","__WEBPACK_IMPORTED_MODULE_5__utils_Array__","events","themes","loadedThemes","_uidCount","registeredClasses","_placeholders","frameRate","invalidSprites","invalidDatas","invalidRawDatas","invalidDataItems","invalidDataRange","invalidPositions","invalidLayouts","baseSprites","baseSpritesByUid","uid","getUniqueId","noBase","_map","setCache","key","ttl","set","getCache","dispatch","eventType","data","isEnabled","target","dispatchImmediately","getPlaceholder","addToInvalidComponents","component","baseId","removeFromInvalidComponents","addToInvalidSprites","sprite","removeFromInvalidSprites","addToInvalidPositions","removeFromInvalidPositions","addToInvalidLayouts","removeFromInvalidLayouts","global","core","hide","redefine","ctx","$export","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","expProto","Function","U","W","R","isNaN","getType","optional","isArray","castString","number","JSON","stringify","getTime","toNumber","hasValue","isString","isNumber","__WEBPACK_IMPORTED_MODULE_0__Percent__","indexOf","a","defaultValue","Number","toString","converted","replace","PI","HALFPI","RADIANS","DEGREES","min","max","__WEBPACK_IMPORTED_MODULE_0__Type__","fitToRange","round","precision","Math","ceil","pow","from","to","sin","tan","cos","values","referenceValue","reduce","prev","curr","abs","range1","range2","start1","start","start2","end1","end","end2","range","startMax","endMin","getDistance","point1","startPoint1","point2","startPoint2","initialDistance","currentDistance","position","x","getRotation","getAngle","center","angle","distance","points","length_1","top_1","left","right","bottom","point","width","height","rectangles","minX","minY","maxX","maxY","rectangle","pointA","pointB","controlPoint","controlPointA","controlPointB","mt1","mt2","mt3","p0","p1","p2","p3","tensionX","tensionY","adjustTension","normalizeAngle","startAngle","endAngle","temp","count","radius","pointA1","pointA2","pointB1","pointB2","floor","rounded","minValue","maxValue","sqrt","diff","diffX","diffY","atan2","tension","fromArray","iter","sum","toArray","fn","sort","args","_i","go","push2","index","matches","found","output","foldl","min2","max2","separator","first","init","ListIterator","__WEBPACK_IMPORTED_MODULE_0__Array__","array","list","createNewItems","_create","reset","_listCopy","clear","getFirst","returnItem","getLast","find","item","removeItem","__WEBPACK_IMPORTED_MODULE_5__Object__","__WEBPACK_IMPORTED_MODULE_2__utils_Type__","percent","full","subtractIfNegative","devicePixelRatio","str","toLowerCase","arr","split","toUpperCase","join","splitTextByCharCount","text","maxChars","ellipsis","fullWords","rtl","reverseString","res","trim","len","char","format","__WEBPACK_IMPORTED_MODULE_4__Strings__","hints","match","stripTags","Infinity","negative","parsed","exec","digits","decimals","exponent","zeros","__WEBPACK_IMPORTED_MODULE_3__String__","slice","Date","num","getYearDay","getWeek","date","utc","firstWeek","getFullYear","getMonth","currentWeek","week","year","weekday","setUTCFullYear","getDay","hours","base","long","savings","wotz","toLocaleString","wtz","timeZoneName","substr","random","gap","svgPointToSprite","spritePointToSvg","toSprite","rect","documentPointToSvg","svgPointToDocument","svgPoint","htmlContainer","element","clientWidth","clientHeight","parseUrl","serializeUrl","parsedLeft","parsedRight","isRelativeUrl","path","leftPath","rightPath","__WEBPACK_IMPORTED_MODULE_6__Array__","query","hash","__WEBPACK_IMPORTED_MODULE_1__utils_Math__","currentIndex","words","word","wordLength","parts","RegExp","reverse","day","sprites","parent","sprite_1","rotation","relativeX","pixelX","ex","relativeY","pixelY","ey","dx","dy","scale","pixelPaddingLeft","pixelPaddingTop","svgContainer","bbox","getBoundingClientRect","top","urlRegexp","url","protocol","authority","domain","port","Disposer","dispose","_disposed","_dispose","isDisposed","MultiDisposer","_super","disposers","__WEBPACK_IMPORTED_MODULE_1__Array__","__WEBPACK_IMPORTED_MODULE_0_tslib__","MutableValueDisposer","_this","__WEBPACK_IMPORTED_MODULE_2__Type__","_disposer","_value","disposer","CounterDisposer","_counter","increment","Percent","Container","__WEBPACK_IMPORTED_MODULE_1__Sprite__","__WEBPACK_IMPORTED_MODULE_2__SpriteState__","__WEBPACK_IMPORTED_MODULE_3__utils_List__","__WEBPACK_IMPORTED_MODULE_4__utils_Disposer__","__WEBPACK_IMPORTED_MODULE_5__utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_6__elements_Rectangle__","__WEBPACK_IMPORTED_MODULE_7__utils_Percent__","__WEBPACK_IMPORTED_MODULE_8__Registry__","__WEBPACK_IMPORTED_MODULE_9__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_10__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_11__utils_Array__","__WEBPACK_IMPORTED_MODULE_12__utils_Math__","__WEBPACK_IMPORTED_MODULE_13__utils_Type__","__WEBPACK_IMPORTED_MODULE_14__System__","_childrenByLayout","_childrenDisposers","hasFocused","setStateOnChildren","setStateOnSprites","layoutInvalid","_absoluteWidth","_absoluteHeight","className","_element","paper","addGroup","group","add","setPropertyValue","_positionPrecision","_disposers","children","on","handleChildAdded","handleChildRemoved","applyTheme","event","processChild","newValue","child","insertKey","handleChildTransform","sortAndAdd","invalidate","sortChildren","addChildren","oldValue","removeKey","removeElement","isMeasured","invalidateLayout","disabled","isTemplate","layout","__disabled","requestFrame","deepInvalidate","_children","getPropertyValue","fixed_1","relative_1","percentWidth","percentHeight","calculateRelativeSize","totalRelativeWidth","totalRelativeHeight","relativeWidth","relativeHeight","zindexed","sortArray","map","idx","ai","zIndex","bi","val","group_1","isCorrect","node","childNodes","_background","addToBack","createChild","classType","removeChildren","getIndex","removeValue","disposeChildren","createBackground","processBackground","background","removeDispose","handleGlobalScale","each","fill","getFor","validateLayout","_availableWidth","innerWidth","_availableHeight","innerHeight","measuredWidth","measuredHeight","allValid","maxWidth","maxHeight","pixelMarginRight","pixelMarginLeft","invalid","validate","pixelMarginTop","pixelMarginBottom","childMeasuredWidth","childMeasuredHeight","align","valign","arrange","maxCellWidth","minCellWidth","columnCount","contentLeft","contentRight","contentTop","contentBottom","nextX","pixelPaddingRight","pixelPaddingBottom","nextY","row","column","columnWidth","rowHeight","minWidth","minHeight","fixedWidthGrid","maxColumns","getColumnWidth","validatePosition","childMarginLeft","childMarginRight","childMarginTop","childMarginBottom","childWidth","childHeight","childLeft","childRight","childTop","childBottom","maxLeft","maxRight","maxTop","maxBottom","nextColumnWidth","moveTo","_pixelWidth","_pixelHeight","measuredContentWidth","measuredContentHeight","dx_1","dy_1","mwa","mha","contentAlign","contentValign","ddx","ddy","oldBBox","contentWidth","contentHeight","_bbox","prevLeft","prevTop","prevBotttom","prevRight","measure","event_1","dummyData","updateCenter","updateBackground","fitsToBounds","pixelWidth","pixelHeight","copyFrom","clone","shouldClone","preloader","_preloader","tooltipContainer","setPaper","changed","topParent","removeFromInvalids","setDataItem","dataItem","_dataItem","measureElement","getTooltipX","getTooltipY","setSVGAttribute","font-family","invalidateLabels","font-size","font-weight","text-decoration","setState","transitionDuration","easing","stateName","isActive","setActive","visualProperties","Sprite","__WEBPACK_IMPORTED_MODULE_1__SpriteState__","__WEBPACK_IMPORTED_MODULE_2__SpriteEvents__","__WEBPACK_IMPORTED_MODULE_3__Base__","__WEBPACK_IMPORTED_MODULE_4__utils_Adapter__","__WEBPACK_IMPORTED_MODULE_6__utils_List__","__WEBPACK_IMPORTED_MODULE_7__utils_Disposer__","__WEBPACK_IMPORTED_MODULE_8__utils_Animation__","__WEBPACK_IMPORTED_MODULE_9__rendering_Paper__","__WEBPACK_IMPORTED_MODULE_10__Container__","__WEBPACK_IMPORTED_MODULE_11__rendering_fills_Pattern__","__WEBPACK_IMPORTED_MODULE_12__rendering_fills_LinearGradient__","__WEBPACK_IMPORTED_MODULE_13__rendering_fills_RadialGradient__","__WEBPACK_IMPORTED_MODULE_14__elements_Popup__","__WEBPACK_IMPORTED_MODULE_15__elements_Modal__","__WEBPACK_IMPORTED_MODULE_16__utils_Color__","__WEBPACK_IMPORTED_MODULE_17__interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_18__interaction_Mouse__","__WEBPACK_IMPORTED_MODULE_19__Options__","__WEBPACK_IMPORTED_MODULE_20__Registry__","__WEBPACK_IMPORTED_MODULE_21__formatters_NumberFormatter__","__WEBPACK_IMPORTED_MODULE_22__formatters_DateFormatter__","__WEBPACK_IMPORTED_MODULE_23__formatters_DurationFormatter__","__WEBPACK_IMPORTED_MODULE_24__formatters_TextFormatter__","__WEBPACK_IMPORTED_MODULE_25__utils_Language__","__WEBPACK_IMPORTED_MODULE_26__export_Export__","__WEBPACK_IMPORTED_MODULE_27__utils_Utils__","__WEBPACK_IMPORTED_MODULE_28__utils_Math__","__WEBPACK_IMPORTED_MODULE_29__utils_Strings__","__WEBPACK_IMPORTED_MODULE_30__utils_Array__","__WEBPACK_IMPORTED_MODULE_31__utils_Object__","__WEBPACK_IMPORTED_MODULE_32__utils_Type__","__WEBPACK_IMPORTED_MODULE_33__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_34__System__","__WEBPACK_IMPORTED_MODULE_35__utils_Percent__","properties","adapter","_bindings","_isTemplate","_inited","isHiding","_isHidden","isShowing","isStandaloneInstance","_isActive","_mask","_language","_rtl","_exporting","positionInvalid","propertyFields","applyOnClones","_isDragged","_disabled","_internalDisabled","_updateDisabled","_internalDefaultsApplied","rollOutDelay","isBaseSprite","appeared","_prevMeasuredWidth","_prevMeasuredHeight","_measuredWidth","_measuredHeight","_isMeasured","autoSetClassName","setClassName","getCurrentThemes","_themes","parent_1","applyInternalDefaults","beforeDraw","draw","afterDraw","invalidatePosition","attr","display","removeSVGAttribute","sizeChanged","prevGroupTransform","transformString","nonScaling","globalScale","maskRectangle","_maskRectangle","_clipElement","horizontalCenter","verticalCenter","_a","keys","_b","applyFilters","visible","interactionsEnabled","applyMask","reinit","defaultState","nonScalingStroke","strokeWidth","updateFilterScale","filters","filter","states","interactions","configField","virtualParent","_tooltip","tooltip","_showSystemTooltip","showSystemTooltip","fillModifier","strokeModifier","removeChild","firstChild","_clones","_svgContainer","_interactionDisposer","_urlDisposer","_numberFormatter","_focusFilter","stroke","id","_filters","_topParent","_parent","oldParent","_tooltipContainer","_virtualParent","appendDefs","filterElement","appendDef","fill_1","modify","stroke_1","_clipPath","_id","hasKey","setKey","_paper","_htmlContainer","_titleElement","_descriptionElement","onAll","setSVGAttributes","opacity","fillOpacity","strokeOpacity","shapeRendering","strokeDasharray","focusable","tabindex","role","attribute","removeAttr","classNamePrefix","addClass","uidAttr","updateClipPath","mask","createClipPath","clip-path","width_1","height_1","removeChildNodes","appendPrimitives","removeClipPath","setElement","applyAccessibility","definedBBox","svgBBox","getBBox","prevElementTransform","elementX","elementY","elementWidth","elementHeigth","pixelPerfect","_measuredWidthSelf","_measuredHeightSelf","positionPrecision","svg","matrix","createSVGMatrix","createSVGPoint","p4","pt1","matrixTransform","pt2","pt3","pt4","isHover","updateTooltipPosition","insertBefore","moveValue","insertAfter","getRelativeX","getRelativeY","getPixelX","pixel","relative","getPixelY","isDragged","inited","hitTest","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","_states","state","processState","getKey","hiddenState","tooltipHTML","tooltipText","hoverable","clickable","_animations","getSvgPoint","animate","animationOptions","duration","isHidden","setVisibility","transitionEasing","transitTo","applyCurrentState","animation","isDown","downPointers","isFocused","transition","options","propValues","allValues","propertyName","finalValue","currentValue","option","isFinished","newFilters_1","stateFilter","newFilter","currentFilter","pushAll","isInTransition","animations","isInteractive","handleOver","handleOut","handleDown","handleUp","handleFocus","handleBlur","current","setDisabled","numberFormatter","language","_dateFormatter","dateFormatter","_durationFormatter","durationFormatter","ev","populateString","string","tags","escape","tag","getTagValue","unescape","tagName","reg","prop","params","reg2","matches2","method","getTagValueFromObject","dataContext","populateStringFrom","formatApplied","part","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","config","fieldValue","propValue","setColorProperty","hex","setPercentProperty","transform","clones","bind","bindToProperty","modifier","observe","listener","context","title","readerTitle","description","readerDescription","hidden","readerHidden","checked","readerChecked","controls","readerControls","live","readerLive","labelledByIds","describedByIds","labelledBy","readerLabelledBy","describedBy","readerDescribedBy","titleElement","titleId","textContent","descriptionElement","descriptionId","aria-label","aria-labelledby","aria-describedby","aria-hidden","aria-checked","aria-controls","aria-live","keyboardOptions","_interaction","interaction","getInteraction","dom","trackable","draggable","swipeable","resizable","wheelable","inert","setEventDisposer","focusFilter","hoverOnFocus","_tabindex","inertiaOptions","applyCursorStyle","handleDragStart","handleDragMove","handleDragStop","originalPosition","hideTooltip","dragStart","pointer","showTooltip","dragStop","hoverOptions","_outTimeout","SVGContainer","handleOutReal","hitOptions","originalAngle","originalScale","handleToggle","urlHandler","cursorOverStyle","_baseId","setBaseId","urlTarget","location","href","open","swipeOptions","handleResize","svgPoint1","svgPoint2","svgMidPoint","parentPoint1","parentPoint2","spritePoint1","spritePoint2","spriteMidPoint","parentPoint","cursorOptions","style","overStyle","applyCursorOverStyle","downStyle","pointerEvents","getExporting","_export","exporting","modal","_modal","container","openModal","closeModal","content","close","popups","_popups","popupTemplate","template","openPopup","popup","closeAllPopups","setMaxWidth","prevWidth","event_2","previousWidth","previousHeight","setMaxHeight","event_3","_relativeHeight","_relativeWidth","margin","marginTop","marginRight","marginBottom","marginLeft","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","once","setFill","fill-opacity","realFill","setStroke","realStroke","stroke-opacity","stroke-width","stroke-dasharray","shape-rendering","show","showReal","_hideAnimation","kill","_showHideDisposer","hideReal","getVisibility","visibility","event_4","toFront","toBack","tooltipDataItem","_tooltipDataItem","_tooltipColorSource","colorSource_1","tooltipColorSource_1","tooltipColorSource","getStrokeFromObject","getFillFromObject","clonedFrom","animationDuration","rgb","autoTextColor","alternative","html","currentText","tooltipPosition","pointTooltipTo","globalPoint","tooltipX","tooltipY","instantly","pointTo","raiseCriticalError","message","closable","verbose","log","processConfig","configOrder","setShowOnInit","hideInitially","appear","InterfaceColorSet","__WEBPACK_IMPORTED_MODULE_1__Base__","__WEBPACK_IMPORTED_MODULE_2__Color__","_purposes","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","brighten","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabledBackground","positive","debug","purpose","setFor","color","IndexedIterable","_array","_start","_end","backwards","ListGrouper","_getKey","__WEBPACK_IMPORTED_MODULE_4__Iterator__","_insert","_remove","_keys","_groups","_sort","__WEBPACK_IMPORTED_MODULE_3__Array__","index_1","__WEBPACK_IMPORTED_MODULE_1__Disposer__","ListDisposer","checkBounds","List","initial","__WEBPACK_IMPORTED_MODULE_2__EventDispatcher__","_values","contains","removeIndex","hasIndex","setIndex","insertIndex","_sortQuicksort","low","high","order","_sortPartition","pivot","j","swap","value_a","value_b","toIndex","unshift","setAll","newArray","oldArray","ListTemplate","_template","make","lineTo","prevPoint","__WEBPACK_IMPORTED_MODULE_0__utils_Math__","closePath","arcTo","arc","innerRadius","radiusY","cornerRadius","innerCornerRadius","__WEBPACK_IMPORTED_MODULE_1__utils_Type__","crSin","innerRadiusY","cornerRadiusY","innerCornerRadiusY","crAngle","asin","crAngleY","crInnerAngle","crInnerAngleY","middleAngle","mPoint","a0","b0","c0","d0","b1","d1","arcToPoint","ccw","L","segments","cx","cy","pax","pay","ax","ay","sweepFlag","largeArcFlag","xAxisRotation","Boolean","isObject","it","Color","isColor","castColor","__WEBPACK_IMPORTED_MODULE_0__Registry__","__WEBPACK_IMPORTED_MODULE_1__Colors__","_lightColor","_darkColor","alpha","rgba","lighten","saturate","saturation","darkColor","lightColor","cacheId","cached","test","input","remove","__WEBPACK_IMPORTED_MODULE_1__Type__","splice","ordering","findIndex","self","__g","keysOrdered","eachContinue","ord","object1","object2","copyProperties","BaseObject","BaseObjectEvents","__WEBPACK_IMPORTED_MODULE_1__utils_List__","__WEBPACK_IMPORTED_MODULE_2__utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_3__utils_Disposer__","__WEBPACK_IMPORTED_MODULE_4__utils_EventDispatcher__","__WEBPACK_IMPORTED_MODULE_5__utils_Adapter__","__WEBPACK_IMPORTED_MODULE_6__utils_Color__","__WEBPACK_IMPORTED_MODULE_9__utils_Cache__","__WEBPACK_IMPORTED_MODULE_10__utils_Array__","__WEBPACK_IMPORTED_MODULE_11__utils_Object__","__WEBPACK_IMPORTED_MODULE_12__utils_Type__","_uid","theme","clearCache","addDisposer","cloneId","newObject","_className","delay","configKey","item_1","configValue","hasProperty","createClassInstance","processAdapters","processEvents","asIs","entry","listItem","getConfigEntryType","entryKey","entryValue","processDictionaryTemplate","processList","maybeColorOrPercent","has","callback","priority","createEntryInstance","field","store","USE_SYMBOL","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","Attributes","toInteger","DictionaryDisposer","dict","Dictionary","_dictionary","__WEBPACK_IMPORTED_MODULE_3__Object__","updateKey","insertKeyIfEmpty","ifEmpty","_c","sortedIterator","__WEBPACK_IMPORTED_MODULE_5__String__","DictionaryTemplate","defined","GlobalAdapter","globalAdapter","Adapter","__WEBPACK_IMPORTED_MODULE_0__SortedList__","__WEBPACK_IMPORTED_MODULE_1__Number__","__WEBPACK_IMPORTED_MODULE_2__Order__","__WEBPACK_IMPORTED_MODULE_3__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_4__utils_Array__","__WEBPACK_IMPORTED_MODULE_5__utils_Type__","_callbackId","_callbacks","addAll","scope","insert","applyAll","callbacks","createDesc","SRC","$toString","TPL","inspectSource","safe","isFunction","String","fails","quot","createHTML","NAME","Interaction","__WEBPACK_IMPORTED_MODULE_2__utils_List__","__WEBPACK_IMPORTED_MODULE_3__utils_Animation__","__WEBPACK_IMPORTED_MODULE_5__InteractionObject__","__WEBPACK_IMPORTED_MODULE_6__InteractionKeyboardObject__","__WEBPACK_IMPORTED_MODULE_7__utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_8__Inertia__","__WEBPACK_IMPORTED_MODULE_9__utils_DOM__","__WEBPACK_IMPORTED_MODULE_10__utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_11__utils_Ease__","__WEBPACK_IMPORTED_MODULE_13__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_14__utils_Type__","__WEBPACK_IMPORTED_MODULE_15__utils_Time__","_globalEventsAdded","_pointerEvents","pointerdown","pointerup","pointermove","pointercancel","pointerover","pointerout","wheel","_usePointerEventsOnly","_passiveSupported","_delayedEvents","overObjects","downObjects","trackedObjects","transformedObjects","pointers","doubleHitTime","hitTolerance","noFocus","touchOutBehavior","touchOutDelay","time","verticalThreshold","horizontalThreshold","speed","accelleration","accellerationDelay","onmousewheel","factor","target_1","addEventListener","removeEventListener","addGlobalEvents","handleGlobalPointerDown","handleGlobalPointerMove","handleGlobalPointerUp","handleGlobalTouchStart","handleGlobalTouchMove","handleGlobalTouchEnd","handleGlobalKeyDown","handleGlobalKeyUp","processClickable","io","processTouchable","processHoverable","eventDisposers","handlePointerOut","handlePointerOver","processMovable","isGlobalElement","prepElement","processTrackable","processDraggable","processSwipeable","processResizable","processWheelable","handleMouseWheel","unlockWheel","lockWheel","processFocusable","handleFocusBlur","passive","handlePointerDown","handleTouchDown","imev","preventDefault","getHitOption","focusedObject","isKey","ko","getEventKey","directionY","directionX","getPointer","getPointerPoint","addBreadCrumb","handleGlobalMove","processDelayed","preventTouchAction","defaultPrevented","cancelled","handleGlobalUp","changedTouches","touch","which","button","resetPointer","deltaX","deltaY","mod","deltaMode","WheelEvent","handleWheel","maybePreventDefault","handleHit","now","lastHit","lastHitPointer","soft","overPointers","handleTrack","force","hasDelayedOut","old","behavior","getHoverOption","keepUntil","delayedEvent","stopInertia","applyCursorDownStyle","processDragStart","processResizeStart","restoreCursorDownStyle","swiped","handleSwipe","moved","handleInertia","processDragStop","processResizeStop","lastEvent","swiping","handleTransform","skipCheck","startPoint","handleMoveInertia","handleResizeInertia","inertia","ref","getTrailPoint","getInertiaOption","inertias","lastUpEvent","pointer2","pointer1","singlePoint","nextPointer","pointer1Moved","dragStartEvents","handleTransformMove","pointer2Moved","handleTransformResize","pointerMoved","dragTarget","getDragPointer","lastDownEvent","getPointerId","identifier","pointerId","clientX","clientY","isPointerTouch","startTime","track","swipeCanceled","Touch","PointerEvent","pointerType","MouseEvent","timestamp","lockDocument","unlockDocument","restoreAllStyles","lockElement","unlockElement","wheelLockEvent","isLocalElement","elementFromPoint","local","permanent","el","props","setTemporaryStyle","getSwipeOption","getKeyboardOption","restoreStyle","setGlobalStyle","styles","restoreGlobalStyle","tolerance","minTime","getShift","pointerExists","exists","replacedStyles","logTouch","TouchEvent","SVGNS","XMLNS","XLINK","__WEBPACK_IMPORTED_MODULE_5__Type__","getElementById","getElementsByClassName","HTMLElement","classList","currentClassName","getAttribute","focus","blur","fo","createElementNS","outerHTML","twrap","tnode","cloneNode","innerHTML","nodeType","compareDocumentPosition","attributes","nodeValue","nodeName","__WEBPACK_IMPORTED_MODULE_2__AsyncPending__","left_1","StyleRule","StyleClass","readyState","listener_1","rootStylesheet","__WEBPACK_IMPORTED_MODULE_4__Array__","getStylesheet","sheet","selector","root","cssRules","_rule","deleteRule","insertRule","makeStylesheet","setStyle","selectorText","_setVendorPrefixName","setProperty","styleId","disposed","__WEBPACK_IMPORTED_MODULE_6__utils_AsyncPending__","loop","AnimationDisposer","Animation","__WEBPACK_IMPORTED_MODULE_2__defs_SVGDefaults__","__WEBPACK_IMPORTED_MODULE_4__utils_Color__","__WEBPACK_IMPORTED_MODULE_5__utils_Percent__","__WEBPACK_IMPORTED_MODULE_7__utils_Ease__","__WEBPACK_IMPORTED_MODULE_8__utils_Colors__","__WEBPACK_IMPORTED_MODULE_9__utils_Math__","__WEBPACK_IMPORTED_MODULE_11__utils_Type__","__WEBPACK_IMPORTED_MODULE_12__System__","getProgressNumber","progress","getProgressPercent","getProgressColor","getHybridProperty","charAt","_loop","_pause","_delayTimeout","_time","_isFinished","pause","id_1","stopSameAnimations","_startTime","staticOptions","childObject","updateMethod","convertedFrom","applyStaticOptions","update","resume","setProgress","stop","skipEvent","delayed","killed_1","newOptions","oldOptions","Label","__WEBPACK_IMPORTED_MODULE_1__Container__","__WEBPACK_IMPORTED_MODULE_2__Registry__","__WEBPACK_IMPORTED_MODULE_3__formatters_TextFormatter__","__WEBPACK_IMPORTED_MODULE_5__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_6__utils_Math__","__WEBPACK_IMPORTED_MODULE_7__utils_Utils__","__WEBPACK_IMPORTED_MODULE_8__utils_Type__","isOversized","wrap","truncate","textAlign","textValign","arg","handleMaxSize","handleValidate","hardInvalidate","availableWidth","availableHeight","alignSVGText","updateCurrentText","supportsForeignObject","_currentFormat","_prevStatus","getLineBBox","lineInfo","status","lines","getAttr","resetBBox","currentHeight","currentFormat","line","chunks","ignoreFormatting","currentLineHeight","firstChunk","skipTextChunks","getLineInfo","getSVGLineElement","complex","translateStyleShortcuts","getSvgElement","lineText","avgCharWidth","excessChars","addEllipsis","node_1","node_2","elementText","lastNode","lastChild","splitLines","cleanUp","restOfLine","addLineInfo","tempElement","offset","hideOversized","hideUnused","pixelRatio","foreignObject","lineElement","getHTMLLineElement","tmpBBox","overflow","setStyles","removeAttribute","direction","unicode-bidi","div","wordWrap","whiteSpace","unicodeBidi","selectable","addStyle","webkitUserSelect","msUserSelect","removeStyle","initLineCache","_sourceDataItemEvents","ColorSet","__WEBPACK_IMPORTED_MODULE_3__Colors__","__WEBPACK_IMPORTED_MODULE_4__Type__","__WEBPACK_IMPORTED_MODULE_5__Utils__","_list","_currentStep","_currentPass","baseColor","stepOptions","passOptions","minColors","minLightness","maxLightness","shuffle","reuse","generate","curColor","currentColor","hsl","hueStep","hue","mods","h","lightness","hues","applyStepOptions","pass","IObject","pIE","toIObject","gOPD","getOwnPropertyDescriptor","toObject","IE_PROTO","ObjectProto","getPrototypeOf","RoundedRectangle","__WEBPACK_IMPORTED_MODULE_3__utils_Math__","__WEBPACK_IMPORTED_MODULE_4__utils_Type__","w","maxcr","crtl","cornerRadiusTopLeft","crtr","cornerRadiusTopRight","crbr","cornerRadiusBottomRight","crbl","cornerRadiusBottomLeft","tl","tr","bl","br","polyIn","polyOut","polyInOut","bounceOut","amplitude","period","b2","b3","b4","b5","b6","b7","b8","b9","aFunction","that","valueOf","KEY","toLength","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","version","__e","LIBRARY","$typed","$buffer","anInstance","propertyDesc","redefineAll","toAbsoluteIndex","classof","isArrayIter","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","RangeError","Uint8Array","ArrayProto","$ArrayBuffer","ArrayBuffer","$DataView","DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","arrayKeys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","VIEW","$map","allocate","LITTLE_ENDIAN","Uint16Array","buffer","FORCED_SET","toOffset","BYTES","C","speciesFromList","fromList","addGetter","internal","_d","$from","aLen","mapfn","mapping","iterFn","$of","TO_LOCALE_BUG","$toLocaleString","proto","copyWithin","every","predicate","forEach","searchElement","includes","middle","some","comparefn","subarray","begin","$begin","byteOffset","BYTES_PER_ELEMENT","$slice","$set","arrayLike","$iterators","isTAIndex","$getDesc","$setDesc","desc","writable","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TypedArray","Base","TAC","FORCED","ABV","TypedArrayPrototype","addElement","setter","$offset","$length","byteLength","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","Map","shared","getOrCreateMetadataMap","targetKey","targetMetadata","keyMetadata","MetadataKey","metadataMap","MetadataValue","Keyboard","keyboard","keyCode","eventKey","shiftKey","ctrlKey","altKey","metaKey","Component","dataFields","_dataSources","_parseDataFrom","_dataDisposers","skipRangeEvent","rangeChangeDuration","rangeChangeEasing","__WEBPACK_IMPORTED_MODULE_13__utils_Ease__","parsingStepDuration","dataInvalid","rawDataInvalid","dataRangeInvalid","dataItemsInvalid","interpolationDuration","interpolationEasing","sequencedInterpolation","sequencedInterpolationDelay","dataValidationProgress","_addAllDataItems","invalidateData","dataUsers","handleDataUserAdded","__WEBPACK_IMPORTED_MODULE_5__utils_Disposer__","createDataItem","__WEBPACK_IMPORTED_MODULE_9__DataItem__","dataProvider","handleDataItemValueChange","invalidateDataItems","handleDataItemWorkingValueChange","handleDataItemWorkingLocationChange","handleDataItemCalculatedValueChange","handleDataItemPropertyChange","processDataItem","hasSomeValues_1","__WEBPACK_IMPORTED_MODULE_16__utils_Object__","fieldName","hasChildren","__WEBPACK_IMPORTED_MODULE_3__utils_SortedList__","handleDataItemAdded","handleDataItemRemoved","rawDataItem","childDataItem","__WEBPACK_IMPORTED_MODULE_17__utils_Type__","dataItems","updateDataItem","dataContext_1","__WEBPACK_IMPORTED_MODULE_15__utils_Iterator__","validateDataElements","endIndex","startIndex","validateDataElement","addData","removeCount","__WEBPACK_IMPORTED_MODULE_12__utils_Array__","removeData","dataUser","__WEBPACK_IMPORTED_MODULE_10__Registry__","__WEBPACK_IMPORTED_MODULE_8__System__","invalidateDataUsers","invalidateDataRange","validateDataRange","_prevStartIndex","_prevEndIndex","rangeChangeUpdate","appendDataItems","sliceData","_workingStartIndex","_workingEndIndex","invalidateRawData","validateRawData","disposeData","_startIndex","_endIndex","validateData","_data","counter","this_1","dataUserDataItem","validateDataItems","getDataSource","__WEBPACK_IMPORTED_MODULE_6__data_DataSource__","setDataSourceEvents","dataSourceDateFields","dataSourceNumberFields","loadData","load","populateDataSourceFields","targetList","ds","incremental","keepCount","_responsive","__WEBPACK_IMPORTED_MODULE_7__responsive_Responsive__","zoom","_finalStart","_finalEnd","maxZoomFactor","rangeChangeAnimation","zoomToIndexes","__WEBPACK_IMPORTED_MODULE_11__utils_Math__","indexToPosition","_dataItems","_dataMethods","__WEBPACK_IMPORTED_MODULE_4__utils_Dictionary__","bindDataField","invalidateProcessedData","resetProcessedRange","_dataUsers","__WEBPACK_IMPORTED_MODULE_14__utils_Utils__","_exportData","EventDispatcher","TargetedEventDispatcher","__WEBPACK_IMPORTED_MODULE_2__Array__","__WEBPACK_IMPORTED_MODULE_3__AsyncPending__","_listeners","_killed","_iterating","_enabled","hasListeners","hasListenersByType","killed","enable","disable","enableType","disableType","amount","_removeListener","_removeExistingListener","info","_shouldDispatch","_eachListener","_on","off","Filter","__WEBPACK_IMPORTED_MODULE_2__Paper__","__WEBPACK_IMPORTED_MODULE_4__utils_List__","__WEBPACK_IMPORTED_MODULE_5__utils_Object__","__WEBPACK_IMPORTED_MODULE_6__utils_Iterator__","_scale","_nonScaling","filterPrimitives","filterPrimitive","updateScale","setSprite","_sprite","Language","__WEBPACK_IMPORTED_MODULE_2__Adapter__","__WEBPACK_IMPORTED_MODULE_5__lang_en__","_locale","_defaultLocale","getLocale","locale","translate","prompt","rest","translation","getTranslations","translateEmpty","translateFunc","translateAll","isDefault","translations","ValueAxisDataItem","ValueAxis","__WEBPACK_IMPORTED_MODULE_1__Axis__","__WEBPACK_IMPORTED_MODULE_2__AxisRendererY__","__WEBPACK_IMPORTED_MODULE_3__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_4__core_Registry__","__WEBPACK_IMPORTED_MODULE_5__ValueAxisBreak__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Math__","__WEBPACK_IMPORTED_MODULE_7__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Object__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Type__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Utils__","endValue","setValue","_stepDecimalPlaces","_baseValue","_adjustedStart","_adjustedEnd","_valueToPosition","_positionToValue","_extremesChanged","fillRule","axis","axisFill","calculateTotals","axisFieldName","MAX_VALUE","createAxisBreak","fixAxisBreaks","getMinMax","minZoomed","positionToValue","maxZoomed","zoomToValues","dataChangeUpdate","_maxZoomed","_maxDefined","_minZoomed","_minDefined","_maxAdjusted","_minAdjusted","processSeriesDataItems","series","total","workingValue","setCalculatedValue","calculateZoom","axisLength","validateAxisElements","hideUnusedDataItems","differece","adjustDifference","minMaxStep","adjustMinMax","_gridCount","_step","value_1","logarithmic","differencePower","LOG10E","resetIterators","dataItemsIterator_1","_dataItemsIterator","isInBreak","appendDataItem","axisBreak","formatLabel","ghostLabel","axisBreaks","renderer_1","renderer","breakSize","endPoint","minGridDistance","breakValue_1","adjustedMin","adjustedMax","adjustedStartValue","adjustedEndValue","adjustedStep","valueToPosition","endPosition","fillEndPosition","positionToPoint","tick","updateTickElement","updateGridElement","updateLabelElement","updateFillElement","isRange","baseValue","anyToPosition","valueToPoint","positionToAngle","anyToPoint","min_1","max_1","difference","_difference","startValue","difference_1","value_2","breakStartPosition","startPosition","breakEndPosition","breakStartValue","breakEndValue","xToValue","pointToPosition","yToValue","updateGridCount","POSITIVE_INFINITY","NEGATIVE_INFINITY","ignoreMinMax","seriesMin","seriesMax","_minReal","_maxReal","dif","fixMin","fixMax","extraMin","extraMax","strictMinMax","_minMaxAnimation","_finalMax","_finalMin","handleSelectionExtremesChange","gridCount","strictMode","initialMin","initialMax","power","extra","stepPower","stepDivisor","maxPrecision","decCount","minCount","maxCount","registerSeries","handleExtremesChange","selectionMin","selectionMax","allHidden","seriesSelectionMin","seriesSelectionMax","getX","stackKey","getWorkingValue","stack","getValue","getY","getAnyRangePath","getPositionRangePath","getTooltipText","axisBreakDif","axisBreakGridCount","breakMinMaxStep","getPositionLabel","showTooltipAt","showTooltipAtPosition","Column","__WEBPACK_IMPORTED_MODULE_1__core_Container__","__WEBPACK_IMPORTED_MODULE_2__core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_3__core_Registry__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_5__core_utils_Math__","createAssets","handleKidAdded","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","meta","NEED","fastKey","getWeak","onFreeze","UNSCOPABLES","Paper","ghostPaper","ghostDiv","ghostSvgContainer","__WEBPACK_IMPORTED_MODULE_2__SVGContainer__","__WEBPACK_IMPORTED_MODULE_0__AMElement__","__WEBPACK_IMPORTED_MODULE_1__Group__","__WEBPACK_IMPORTED_MODULE_3__utils_DOM__","setAttributeNS","createTextNode","defs","elementName","groupName","append","implementation","hasFeature","PX","STRING","NUMBER","DATE","DURATION","PLACEHOLDER","PLACEHOLDER2","LinearGradient","__WEBPACK_IMPORTED_MODULE_3__Paper__","__WEBPACK_IMPORTED_MODULE_4__Registry__","__WEBPACK_IMPORTED_MODULE_5__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_7__utils_Type__","_stops","_rotation","x1","y1","x2","y2","gradientElement","gradientStop","stop-color","stop-opacity","addColor","stops","MouseCursorStyle","grab","grabbing","default","horizontalResize","verticalResize","Line","__WEBPACK_IMPORTED_MODULE_2__utils_Color__","__WEBPACK_IMPORTED_MODULE_3__rendering_fills_LinearGradient__","delta","Tension","waveLength","waveHeight","adjustWaveLength","__WEBPACK_IMPORTED_MODULE_4__utils_Math__","__WEBPACK_IMPORTED_MODULE_3__utils_Utils__","waveLengthX","waveLengthY","__WEBPACK_IMPORTED_MODULE_1__Path__","halfWaveCount","sign_1","smooth","Basis","__WEBPACK_IMPORTED_MODULE_2__utils_Array__","_tensionX","_tensionY","last","closed","_closed","x0","NaN","x3","x4","y0","y3","y4","pushCurve","pushPoint","DataItem","__WEBPACK_IMPORTED_MODULE_2__utils_Adapter__","__WEBPACK_IMPORTED_MODULE_4__utils_Utils__","__WEBPACK_IMPORTED_MODULE_6__utils_Object__","hasProperties","categories","dates","locations","workingLocations","_visible","_hidden","_ignoreMinMax","_valueAnimations","_locationAnimations","noChangeValues","fields","animation_1","_hideDisposer","setWorkingValue","toValue","animation_2","anim","getDuration","calculated","realName","newDuration","handleInterpolationProgress","valueAnimation","setLocation","event_5","setWorkingLocation","workingLocation","locationAnimation","event_6","setDate","parse","getDate","event_7","setCategory","event_8","event_9","depth","_dataContext","addSprite","Slice","__WEBPACK_IMPORTED_MODULE_2__Sprite__","__WEBPACK_IMPORTED_MODULE_3__Registry__","__WEBPACK_IMPORTED_MODULE_5__rendering_Path__","__WEBPACK_IMPORTED_MODULE_6__utils_Type__","__WEBPACK_IMPORTED_MODULE_8__rendering_fills_RadialGradient__","pixelInnerRadius","shiftRadius","updateGradient","gradient","gradientUnits","innerRect","outerRect","ix","iy","bitmap","px","$keys","enumBugKeys","dPs","Empty","createDict","iframeDocument","iframe","contentWindow","write","lt","Properties","hiddenKeys","getOwnPropertyNames","DESCRIPTORS","SPECIES","Constructor","forbiddenField","BREAK","RETURN","iterable","AxisRendererY","__WEBPACK_IMPORTED_MODULE_1__AxisRenderer__","__WEBPACK_IMPORTED_MODULE_2__core_elements_WavedLine__","__WEBPACK_IMPORTED_MODULE_3__core_elements_WavedRectangle__","__WEBPACK_IMPORTED_MODULE_5__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_7__core_rendering_Path__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Utils__","opposite","labels","setAxis","processRenderer","updateTooltip","bbx","bbw","bbh","inside","positionToCoordinate","coordinateToPosition","getWidth","positionItem","toggleVisibility","tickLength","gridContainer","updateAxisLine","updateBaseGridElement","getHeight","basePoint","baseGrid","minLabelPosition","maxLabelPosition","updateBreakElement","startLine","endLine","fillShape","createBreakSprites","wavedRectangle","setWavedSides","coordinate","axisFullLength","inversed","Button","__WEBPACK_IMPORTED_MODULE_2__Label__","__WEBPACK_IMPORTED_MODULE_3__elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_4__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_5__Registry__","iconPosition","interfaceColors","hoverState","downState","icon","currentIcon","_label","raf","nextQueue","pendFrame","readQueue","writeQueue","idleQueue","pendingFrame","requestAnimationFrame","frameLoop","namedColors","hexToRgb","rgbaToRgb","pad2","rgb1","rgb2","__WEBPACK_IMPORTED_MODULE_0__Math__","getLightnessStep","rgbToHsl","hslToRgb","q","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","parseInt","parseFloat","hue2rgb","System","system","__WEBPACK_IMPORTED_MODULE_2__Component__","__WEBPACK_IMPORTED_MODULE_3__Options__","__WEBPACK_IMPORTED_MODULE_4__utils_AsyncPending__","__WEBPACK_IMPORTED_MODULE_5__utils_Animation__","__WEBPACK_IMPORTED_MODULE_6__utils_Array__","dummyCounter","_frameRequested","_updateStepDuration","reportTime","msg","invalidData","skippedSprites","key_1","validateLayouts","key_2","validatePositions","hasSkipped","key_3","key_4","all0","VERSION","commercialLicense","TextFormatter","formatter","__WEBPACK_IMPORTED_MODULE_2__rendering_AMElement__","__WEBPACK_IMPORTED_MODULE_3__utils_Adapter__","__WEBPACK_IMPORTED_MODULE_5__utils_Strings__","formatted","texts","wrapHtml","wrapSvg","styleSvgToHtml","getHtmlElement","quotedBlocks","noFormatting","chunks2","i2","chunk2","isImage","SeriesDataItem","Series","__WEBPACK_IMPORTED_MODULE_1__core_Component__","__WEBPACK_IMPORTED_MODULE_2__core_Sprite__","__WEBPACK_IMPORTED_MODULE_3__core_utils_List__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_5__core_DataItem__","__WEBPACK_IMPORTED_MODULE_6__core_Container__","__WEBPACK_IMPORTED_MODULE_7__core_elements_Tooltip__","__WEBPACK_IMPORTED_MODULE_8__elements_Bullet__","__WEBPACK_IMPORTED_MODULE_9__Legend__","__WEBPACK_IMPORTED_MODULE_10__core_Options__","__WEBPACK_IMPORTED_MODULE_11__core_Registry__","__WEBPACK_IMPORTED_MODULE_12__core_utils_Color__","__WEBPACK_IMPORTED_MODULE_13__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_14__core_utils_Math__","__WEBPACK_IMPORTED_MODULE_15__core_utils_Ease__","__WEBPACK_IMPORTED_MODULE_16__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_17__core_utils_Object__","__WEBPACK_IMPORTED_MODULE_18__core_utils_Type__","__WEBPACK_IMPORTED_MODULE_19__core_utils_Array__","__WEBPACK_IMPORTED_MODULE_20__core_utils_Colors__","bullets","_showBullets","legendSettings","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","calculatePercent","autoDispose","axisRanges","processAxisRange","minBulletDistance","mainContainer","bulletsContainer","showOnInit","_chart","positionBullet","bullet","processBullet","itemsFocusable","removeBullet","eachBullet","processValues","getFirstValue","working","previous","dataItem_1","dataItem_2","prevValue","dataItem_3","ksum","zeroItem_1","axisRange","updateTooltipBounds","setBounds","bulletTemplate","currentDataItem","isDynamic","readerText","itemReaderText","xField","yField","itemWidth","itemHeight","createMask","rangesContainer","contents","getAxisField","xPosition","yPosition","_bullets","createLegendMarker","marker","_title","_itemReaderText","_legendDataItem","itemContainer","updateLegendValue","legendDataItem","valueLabel","itemValueText","itemLabelText","labelText","valueText","_heatRules","heatRule","dataField_1","dataField","seriesDataItem_1","property_1","foundSprite","anySprite","anyChild","foundSprite_1","ruleTarget","propertyField","fieldValues","heatRules","rule","listitem","Tooltip","__WEBPACK_IMPORTED_MODULE_2__PointedRectangle__","__WEBPACK_IMPORTED_MODULE_3__elements_Label__","__WEBPACK_IMPORTED_MODULE_4__utils_Animation__","__WEBPACK_IMPORTED_MODULE_5__utils_Color__","__WEBPACK_IMPORTED_MODULE_6__rendering_filters_DropShadowFilter__","__WEBPACK_IMPORTED_MODULE_7__utils_Math__","__WEBPACK_IMPORTED_MODULE_8__utils_Ease__","__WEBPACK_IMPORTED_MODULE_9__utils_Utils__","_boundingRect","_pointTo","fitPointerToBounds","_verticalOrientation","pointerLength","pointerBaseWidth","drawBackground","pointerOrientation","dropShadow","animationEasing","handleVisibility","textX","textY","boundingRect","textW","textH","documentWidth","offsetWidth","offsetHeight","textWidth","textHeight","bgWidth","bgX","bgHeight","bgY","boundX1","boundX2","boundY1","boundY2","pointerX","pointerY","_animation","oldRect","_boundingContainer","updateBounds","boundingContainer","Bullet","__WEBPACK_IMPORTED_MODULE_2__core_Registry__","copyToLegendMarker","Scrollbar","__WEBPACK_IMPORTED_MODULE_2__elements_ResizeButton__","__WEBPACK_IMPORTED_MODULE_3__elements_Button__","__WEBPACK_IMPORTED_MODULE_4__interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_5__interaction_Mouse__","__WEBPACK_IMPORTED_MODULE_6__elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_7__Registry__","__WEBPACK_IMPORTED_MODULE_8__utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_10__utils_Percent__","__WEBPACK_IMPORTED_MODULE_12__utils_Ease__","_prevStart","_prevEnd","_isBusy","_skipRangeEvents","updateWhileMoving","startGrip","endGrip","updateThumb","thumb","_previousStart","dispatchRangeChange","hideGrips","_orientation","orientation","updateSize","updateExtremes","handleBgHit","makeBusy","spritePoint","thumbX","_thumbAnimation","thumbY","makeUnbusy","_thumb","_unbusyTimeout","stopAnimations","_zoomAnimation","makeUnbusyReal","_usingGrip","_previousEnd","innerWidth_1","innerHeight_1","getPosition","__start","__end","skipRangeEvents","fixRange","updateByOrientation","_startGrip","processGrip","_endGrip","handleGripDrag","cursorDownStyle","handleThumbPosition","handleDoubleClick","newStart","newEnd","zoomAnimation","innerWidth_2","innerHeight_2","_hideGrips","_overDisposer","_outDisposer","Circle","__WEBPACK_IMPORTED_MODULE_2__utils_Percent__","__WEBPACK_IMPORTED_MODULE_5__utils_Math__","pixelRadius","def","stat","spaces","space","ltrim","rtrim","exporter","ALIAS","FORCE","_t","MapSeriesDataItem","MapSeries","__WEBPACK_IMPORTED_MODULE_1__series_Series__","__WEBPACK_IMPORTED_MODULE_3__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Type__","geoPoints","longitude","latitude","west","east","north","south","chart","checkInclude","excludes","processIncExc","handleObjectAdded","mapObject","_geodata","geodata","Rectangle","chars","choice","DateFormatter","__WEBPACK_IMPORTED_MODULE_1__utils_Language__","__WEBPACK_IMPORTED_MODULE_2__Base__","__WEBPACK_IMPORTED_MODULE_6__utils_Utils__","_dateFormat","_inputDateFormat","_utc","_firstDayOfWeek","_months","_monthsShort","_weekdays","_weekdaysShort","_outputFormat","capitalize","parseFormat","applyFormat","fullYear","month","minutes","seconds","milliseconds","getTimezoneOffset","getUTCFullYear","getUTCMonth","getUTCDay","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","inputDateFormat","parsedIndexes","year3","year2","year1","monthShort","monthLong","weekdayShort","weekdayLong","yearDay","hourBase0","hour12Base0","hourBase1","hour12Base1","minute","second","millisecond","millisecondDigits","am","zone","iso","indexAdjust","getStringList","regex","setFullYear","resolveMonth","setUTCMonth","setMonth","resolveShortMonth","setUTCDate","setUTCHours","setHours","isAm","setUTCMinutes","setMinutes","setUTCSeconds","setSeconds","setUTCMilliseconds","setMilliseconds","setTime","dir","hour","invalidateSprite","Tick","__WEBPACK_IMPORTED_MODULE_1__core_Sprite__","__WEBPACK_IMPORTED_MODULE_3__core_utils_InterfaceColorSet__","Polyline","__WEBPACK_IMPORTED_MODULE_4__rendering_Path__","_distance","makePath","_realSegments","deltaAngle","totalDistance","positionA","positionB","positionAB","midPoint","cof","propertyIsEnumerable","ARG","T","tryGet","callee","AxisRenderer","__WEBPACK_IMPORTED_MODULE_2__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_3__AxisLine__","__WEBPACK_IMPORTED_MODULE_4__AxisFill__","__WEBPACK_IMPORTED_MODULE_5__Grid__","__WEBPACK_IMPORTED_MODULE_6__AxisLabel__","__WEBPACK_IMPORTED_MODULE_7__AxisTick__","__WEBPACK_IMPORTED_MODULE_8__core_utils_List__","__WEBPACK_IMPORTED_MODULE_9__core_Registry__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_11__core_utils_Math__","tooltipLocation","fullWidthTooltip","cellStartLocation","cellEndLocation","invalidateAxisItems","breakContainer","ticks","axisFills","_axis","plotContainer","minPosition","maxPosition","updatedStart","updatedEnd","_axisFills","createFill","_grid","createGrid","_ticks","createTick","_labels","createLabel","invalidateSeries","ChartDataItem","Chart","__WEBPACK_IMPORTED_MODULE_2__core_utils_List__","__WEBPACK_IMPORTED_MODULE_3__core_Container__","__WEBPACK_IMPORTED_MODULE_4__core_elements_Label__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Type__","titles","chartAndLegendContainer","chartContainer","processTitle","updateReaderTitleReferences","fixLayout","legend","feedLegend","titleIds_1","_legend","setLegend","AxisRendererX","bby","LegendDataItem","LegendSettings","Legend","__WEBPACK_IMPORTED_MODULE_2__core_DataItem__","__WEBPACK_IMPORTED_MODULE_4__core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_5__core_Container__","__WEBPACK_IMPORTED_MODULE_6__core_elements_Label__","__WEBPACK_IMPORTED_MODULE_7__core_utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_8__core_Registry__","__WEBPACK_IMPORTED_MODULE_9__core_interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_11__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_12__core_utils_Type__","__WEBPACK_IMPORTED_MODULE_13__core_Sprite__","__WEBPACK_IMPORTED_MODULE_14__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_15__core_interaction_Mouse__","childrenCreated","label_1","_valueLabel","valueLabel_1","valueLabels","_itemContainer","itemContainer_1","itemContainers","_marker","marker_1","markers","createMarker","togglable","toggleDataItem","focusedItem","disabledColor","activeState","useDefaultMarker","SerialChartDataItem","SerialChart","__WEBPACK_IMPORTED_MODULE_1__Chart__","__WEBPACK_IMPORTED_MODULE_4__series_Series__","__WEBPACK_IMPORTED_MODULE_6__core_utils_ColorSet__","__WEBPACK_IMPORTED_MODULE_7__core_Registry__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Disposer__","colors","seriesContainer","_series","createSeries","handleSeriesAdded","legendData_1","SpriteState","__WEBPACK_IMPORTED_MODULE_4__rendering_filters_Filter__","__WEBPACK_IMPORTED_MODULE_6__utils_Percent__","__WEBPACK_IMPORTED_MODULE_9__utils_Object__","__WEBPACK_IMPORTED_MODULE_10__utils_Type__","spriteValue","OrderedList","__WEBPACK_IMPORTED_MODULE_1__EventDispatcher__","findClosestIndex","closestValue","closestDifference","closestIndex","__WEBPACK_IMPORTED_MODULE_3__Iterator__","SortedList","_ordering","OrderedListTemplate","SortedListTemplate","AMElement","__WEBPACK_IMPORTED_MODULE_0__utils_DOM__","_isDisposed","_x","_y","removeNode","parentNode","_transformString","transfromString","svgbbox","attributeName","attrNS","ns","getAttrNS","getAttributeNS","getStyle","removeClass","setClass","Pattern","__WEBPACK_IMPORTED_MODULE_6__utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_7__utils_Iterator__","__WEBPACK_IMPORTED_MODULE_8__utils_Object__","__WEBPACK_IMPORTED_MODULE_9__utils_Type__","_elements","patternUnits","backgroundFill","backgroundOpacity","patternElement","elements","RadialGradient","fx","fy","_cx","_cy","_fx","_fy","WavedLine","__WEBPACK_IMPORTED_MODULE_1__Line__","__WEBPACK_IMPORTED_MODULE_3__rendering_Smoothing__","AxisBreak","__WEBPACK_IMPORTED_MODULE_3__core_elements_WavedLine__","__WEBPACK_IMPORTED_MODULE_4__core_utils_List__","__WEBPACK_IMPORTED_MODULE_5__core_Registry__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Color__","__WEBPACK_IMPORTED_MODULE_7__core_utils_InterfaceColorSet__","_fillShape","_startLine","_endLine","addBreakSprite","breakTemplate","PercentSeriesDataItem","PercentSeries","__WEBPACK_IMPORTED_MODULE_1__Series__","__WEBPACK_IMPORTED_MODULE_3__core_elements_Label__","__WEBPACK_IMPORTED_MODULE_4__elements_Tick__","__WEBPACK_IMPORTED_MODULE_5__core_utils_List__","__WEBPACK_IMPORTED_MODULE_7__core_utils_ColorSet__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Ease__","__WEBPACK_IMPORTED_MODULE_11__core_utils_Disposer__","category","_tick","tick_1","ticksContainer","labelsContainer","_slice","slice_1","slices","slicesContainer","hiddenInLegend","alignLabels","createSlice","_slices","initSlice","initTick","initLabel","arrangeLabels","nextLabel","getNextLabel","nextDataItem","handleSliceScale","handleSliceMove","FlowDiagramNode","__WEBPACK_IMPORTED_MODULE_6__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_7__core_utils_String__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Order__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Number__","__WEBPACK_IMPORTED_MODULE_10__core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_11__core_utils_Object__","__WEBPACK_IMPORTED_MODULE_12__Legend__","invalidateLinks","outgoingDataItems","toNode","incomingDataItems","fromNode","link","colorMode","stop_1","stop_2","_incomingDataItems","sortBy","_incomingSorted","fromName","_outgoingDataItems","_outgoingSorted","FlowDiagramLink","__WEBPACK_IMPORTED_MODULE_2__core_Container__","__WEBPACK_IMPORTED_MODULE_3__core_rendering_fills_LinearGradient__","__WEBPACK_IMPORTED_MODULE_5__elements_Bullet__","__WEBPACK_IMPORTED_MODULE_7__core_utils_List__","__WEBPACK_IMPORTED_MODULE_8__core_elements_Polyline__","__WEBPACK_IMPORTED_MODULE_9__core_elements_Line__","__WEBPACK_IMPORTED_MODULE_10__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_11__core_utils_Iterator__","maskBullets","positionBullets","_bulletsContainer","_bulletsMask","bulletsMask","locationX","locationY","middleLine","rotationField","color_1","_gradient","Polyspline","__WEBPACK_IMPORTED_MODULE_1__Polyline__","__WEBPACK_IMPORTED_MODULE_3__core_utils_Math__","__WEBPACK_IMPORTED_MODULE_4__core_rendering_Path__","realPoints","stepCount","Triangle","__WEBPACK_IMPORTED_MODULE_3__rendering_Path__","IS_INCLUDES","fromIndex","getOwnPropertySymbols","MATCH","isRegExp","SAFE_CLOSING","riter","skipClosing","ignoreCase","multiline","unicode","sticky","SYMBOL","fns","strfn","rxfn","D","forOf","setToStringTag","inheritIfRequired","methods","common","IS_WEAK","ADDER","fixMethod","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","getConstructor","setStrong","Typed","TypedArrayConstructors","K","__defineSetter__","COLLECTION","A","cb","mapFn","nextItem","AxisFill","fillPath","Grid","__WEBPACK_IMPORTED_MODULE_3__core_utils_Color__","AxisLabel","__WEBPACK_IMPORTED_MODULE_1__core_elements_Label__","Cache","cache","__WEBPACK_IMPORTED_MODULE_0__Dictionary__","_storage","owner","ownerStorage","touched","cacheItem","expired","svgContainers","__WEBPACK_IMPORTED_MODULE_0__utils_Disposer__","__WEBPACK_IMPORTED_MODULE_1__utils_Utils__","__WEBPACK_IMPORTED_MODULE_2__utils_DOM__","__WEBPACK_IMPORTED_MODULE_3__utils_Array__","__WEBPACK_IMPORTED_MODULE_4_css_element_queries_src_ResizeSensor__","__WEBPACK_IMPORTED_MODULE_4_css_element_queries_src_ResizeSensor___default","htmlElement","autoResize","resizeSensor","_resizeSensorDisposer","detach","_container","Popup","__WEBPACK_IMPORTED_MODULE_1__PopupCSS__","__WEBPACK_IMPORTED_MODULE_5__utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_6__utils_Disposer__","_IOs","_content","_classPrefix","_defaultStyles","_showCurtain","_draggable","_align","_verticalAlign","_shift","_tempShift","_readerTitle","_closable","_cssLoaded","_fitTo","_sized","curtain","showCurtain","positionElement","parentElement","releasePointers","forceResize","toStyle","verticalAlign","setupDragging","createContentElement","getClassNames","wrapperClass","classPrefix","titleClass","contentClass","curtainClass","closeClass","classNames","disablePointers","defaultStyles","loadDefaultCSS","createCurtainElement","applyEvents","applyReaderSettings","_left","_right","_top","_bottom","_spriteInteractionsEnabled","classPrefixRaw","timeUnitDurations","getNextUnit","unit","__WEBPACK_IMPORTED_MODULE_0__utils_Type__","checkChange","dateOne","dateTwo","nextUnit","firstDateOfWeek","weekDay","Modal","__WEBPACK_IMPORTED_MODULE_1__Popup__","Validatable","_invalid","CSVParser","__WEBPACK_IMPORTED_MODULE_1__DataParser__","separators","contentType","delimiter","skipRows","skipEmpty","useColumnNames","isCSV","getDelimiterFromData","separators_1","separators_1_1","sep","columns","lineColums","csv","col","CSVToArray","empty","emptyAs","numbers","parsableNumbers","parsableDates","cols","dataPoint","maybeToEmpty","maybeToNumber","maybeToDate","objPattern","arrData","arrMatches","strMatchedDelimiter","strMatchedValue","DataParser","__WEBPACK_IMPORTED_MODULE_0__formatters_DateFormatter__","numberFields","dateFields","dateFormat","JSONParser","__WEBPACK_IMPORTED_MODULE_2__utils_Object__","isJSON","WavedRectangle","__WEBPACK_IMPORTED_MODULE_1__Rectangle__","__WEBPACK_IMPORTED_MODULE_2__rendering_Smoothing__","_twaved","_rwaved","_bwaved","_lwaved","td","rd","bd","ld","AxisDataItem","Axis","AxisItemLocation","__WEBPACK_IMPORTED_MODULE_3__core_DataItem__","__WEBPACK_IMPORTED_MODULE_4__AxisBreak__","__WEBPACK_IMPORTED_MODULE_5__core_elements_Label__","__WEBPACK_IMPORTED_MODULE_6__core_elements_Tooltip__","__WEBPACK_IMPORTED_MODULE_7__core_utils_SortedList__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_10__core_Registry__","__WEBPACK_IMPORTED_MODULE_12__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_13__core_utils_Math__","__WEBPACK_IMPORTED_MODULE_14__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_15__core_utils_Number__","__WEBPACK_IMPORTED_MODULE_16__core_utils_Array__","__WEBPACK_IMPORTED_MODULE_17__core_utils_Type__","component_1","grid_1","component_2","component_3","_axisFill","component_4","axisFill_1","_text","_contents","_axisBreak","appendChildren","cursorTooltipEnabled","_prevLength","initRenderer","validateAxisRanges","validateBreaks","processBreak","_renderer","_cursorTooltipEnabled","toAxisPosition","getCellStartPosition","getCellEndPosition","currentItemStartPoint","currentItemEndPoint","boundingRectangle","roundPosition","_axisRanges","_axisBreaks","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","dataItemsIterator","getSeriesDataItem","intersection","firstAxisBreak","previousEndValue_1","createSeriesRange","ValueAxisBreak","__WEBPACK_IMPORTED_MODULE_1__AxisBreak__","ResizeButton","__WEBPACK_IMPORTED_MODULE_1__Button__","DesaturateFilter","__WEBPACK_IMPORTED_MODULE_1__Filter__","feColorMatrix","LightenFilter","FlowDiagramDataItem","FlowDiagram","__WEBPACK_IMPORTED_MODULE_3__core_utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_4__core_Container__","__WEBPACK_IMPORTED_MODULE_6__elements_FlowDiagramNode__","__WEBPACK_IMPORTED_MODULE_7__elements_FlowDiagramLink__","__WEBPACK_IMPORTED_MODULE_8__core_rendering_fills_LinearGradientModifier__","__WEBPACK_IMPORTED_MODULE_9__core_utils_ColorSet__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Color__","__WEBPACK_IMPORTED_MODULE_13__core_utils_Number__","__WEBPACK_IMPORTED_MODULE_14__core_utils_Order__","__WEBPACK_IMPORTED_MODULE_15__core_utils_Disposer__","toName","_link","link_1","links","nodePadding","minNodeSize","linksContainer","nodesContainer","nodes","sortNodes","opacities","strNode","getNodeValue","_sorted","incomingTotal","outgoingTotal","totalIncoming","totalOutgoing","changeSorting","_nodes","createNode","_links","createLink","LinearGradientModifier","__WEBPACK_IMPORTED_MODULE_1__LinearGradient__","__WEBPACK_IMPORTED_MODULE_2__GradientModifier__","Column3D","__WEBPACK_IMPORTED_MODULE_1__Column__","__WEBPACK_IMPORTED_MODULE_2__core_elements_3d_Rectangle3D__","column3D","FunnelSeriesDataItem","FunnelSeries","__WEBPACK_IMPORTED_MODULE_1__PercentSeries__","__WEBPACK_IMPORTED_MODULE_2__elements_FunnelSlice__","__WEBPACK_IMPORTED_MODULE_3__elements_FunnelTick__","__WEBPACK_IMPORTED_MODULE_9__core_utils_Percent__","_sliceLink","sliceLink_1","sliceLinks","_nextY","bottomRatio","expandDistance","labelTemplate","dItem","_total","_count","getNextValue","nextValue","formDataElement","sliceLink","decorateSlice","linkHeight","topWidth","bottomWidth","linkWidth","lastLabel","lastY","lastX","_sliceLinks","FunnelSlice","__WEBPACK_IMPORTED_MODULE_5__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_6__core_rendering_Path__","pt","pb","pr","pl","ed","tw","bw","cpr","cpl","qp1","qp2","tickPoint","tt","tb","bt","bb","getPoint","mlx","mty","is","wksExt","$Symbol","documentElement","check","buggy","sign","$expm1","expm1","TO_STRING","pos","charCodeAt","$iterCreate","BUGGY","returnThis","DEFAULT","IS_SET","IteratorPrototype","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","descriptor","searchString","re","$defineProperty","getIteratorMethod","original","endPos","addToUnscopables","iterated","_k","Arguments","defer","channel","invoke","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","queue","run","nextTick","port2","port1","onmessage","postMessage","importScripts","macrotask","Observer","MutationObserver","WebKitMutationObserver","isNode","notify","flush","exit","enter","navigator","standalone","toggle","characterData","task","$$resolve","$$reject","PROTOTYPE","WRONG_INDEX","BaseBuffer","LN2","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","intIndex","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","userAgent","Preloader","__WEBPACK_IMPORTED_MODULE_2__core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_3__Slice__","__WEBPACK_IMPORTED_MODULE_4__Label__","sliceContainer","backgroundSlice","progressSlice","_started","Group","childNode","SVGDefaults","__WEBPACK_IMPORTED_MODULE_0__utils_Color__","SpriteEventDispatcher","_interactionEvents","_dispatchSpriteEvent","_dispatchSpritePointEvent","_addInteractionObjectEvent","__WEBPACK_IMPORTED_MODULE_2__utils_EventDispatcher__","InteractionObject","__WEBPACK_IMPORTED_MODULE_1__InteractionObjectEvents__","__WEBPACK_IMPORTED_MODULE_5__Interaction__","_clickable","_hoverable","_trackable","_swipeable","_resizable","_wheelable","_inert","_isHover","_isHoverByTouch","_isDown","_isFocused","defaultStyle","isHoverByTouch","_overPointers","_downPointers","_focusable","_originalPosition","_originalScale","_originalAngle","InteractionObjectEventDispatcher","_domEvents","_addDOMEvent","callback_1","__WEBPACK_IMPORTED_MODULE_2__utils_Disposer__","_dispatchKeyboardEvent","__WEBPACK_IMPORTED_MODULE_1__utils_EventDispatcher__","InteractionKeyboardObject","__WEBPACK_IMPORTED_MODULE_0__Interaction__","__WEBPACK_IMPORTED_MODULE_1__utils_Animation__","keyboardEvent","_startedOn","ms","accelleratedMs","accellerationFactor","Inertia","__WEBPACK_IMPORTED_MODULE_2__Interaction__","handleMove","NumberFormatter","_negativeBase","_numberFormat","details","zero","thousands","active","interval","partFormat","modSpacing","prefix","suffix","a_1","applyPrefix","bytePrefixes","a_2","smallNumberPrefixes","bigNumberPrefixes","toExponential","ints","ip","intsr","decs","prefixes","newvalue","_bigNumberPrefixes","_smallNumberPrefixes","_bytePrefixes","outputFormat","__WEBPACK_IMPORTED_MODULE_0__internal_git_amcharts4_lang_src_en__","DurationFormatter","_baseUnit","_unitValues","_unitAliases","Y","H","k","baseUnit","durationFormat","getFormat","absolute","dirs","tstamp","toTimeStamp","toTimeUnit","code","maxUnit","getValueUnit","durationFormats","currentUnit","_durationFormat","_durationFormats","Export","__WEBPACK_IMPORTED_MODULE_1__ExportMenu__","__WEBPACK_IMPORTED_MODULE_3__elements_Modal__","__WEBPACK_IMPORTED_MODULE_6__formatters_DateFormatter__","__WEBPACK_IMPORTED_MODULE_7__utils_Language__","__WEBPACK_IMPORTED_MODULE_8__utils_Validatable__","__WEBPACK_IMPORTED_MODULE_9__utils_Color__","__WEBPACK_IMPORTED_MODULE_11__Options__","__WEBPACK_IMPORTED_MODULE_12__utils_DOM__","__WEBPACK_IMPORTED_MODULE_13__utils_Object__","__WEBPACK_IMPORTED_MODULE_14__utils_Net__","__WEBPACK_IMPORTED_MODULE_15__utils_Type__","__WEBPACK_IMPORTED_MODULE_16__utils_Utils__","__WEBPACK_IMPORTED_MODULE_17__utils_Array__","fontFamilySrcRegexp","loadStylesheet","response","eachStylesheet","topUrl","promises","CSSRule","IMPORT_RULE","url_1","all","_formatOptions","_removedObjects","_filePrefix","useWebFonts","useRetina","timeoutDelay","quality","fontSize","imageFormat","addURL","indent","useLocale","addColumnNames","printMethod","formatOptions","_menu","menu","branch","unsupported","typeSupported","export","_disablePointers","_releasePointers","obj","supported","downloadSupport","print","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getPrint","handleCustom","showPreloader","hideTimeout","_timeoutTimeout","showTimeout","func","hidePreloader","download","filePrefix","getFontFamilies","DOMURL","getDOMURL","blobs","styleSheets","eachStylesheets","FONT_FACE_RULE","cssText_1","cssText","urls","after","fullUrl","responseType","msSaveOrOpenBlob","url_2","createObjectURL","blob","FileReader","readAsDataURL","e_1","simplifiedImageExport","backgroundColor","findBackgroundColor","DOMURL_1","blobs_1","font","findFont","findFontSize","canvas","getDisposableCanvas","getPixelRatio","getContext","setTransform","fillStyle","fillRect","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","Blob","loadNewImage","img","drawImage","uri","toDataURL","getContentType","disposeCanvas","getImageAdvanced","revokeObjectURL","restoreRemovedObjects","canvg","useCORS","ignoreDimensions","scaleWidth","scaleHeight","images","querySelectorAll","image","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","keepTainted","btoa","placeholder","crossOrigin","success","currentHref","Image","onabort","URL","webkitURL","dimParams","styleParams","XMLSerializer","serializeToString","pdfmake","defaultMargins","doc","pageSize","pageOrientation","pageMargins","bold","fit","getPageSizeFit","createPdf","getDataUrl","margins","newMargins","fitSize","4A0","2A0","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","xlsx","XLSX","wbOptions","bookType","bookSST","sheetName","normalizeExcelSheetName","wb","SheetNames","Sheets","getExcelRow","utils","aoa_to_sheet","items","convertDateValue","getCSVRow","forceQuotes","search","json","isDateField","useTimestamps","fileName","linkDownloadSupport","blobDownloadSupport","click","msSaveBlob","decodeURIComponent","decoded","atob","charCode","legacyIE","showModal","idoc","contentDocument","execCommand","printViaCSS","printViaIframe","scroll","scrollTop","clipPath","originalTitle","MSStream","currentStyle","getComputedStyle","defaultView","parent_2","parent_3","parent_4","_dataFields","generateDataFields","_dateFields","_backgroundColor","hideModal","_canvg","_pdfmake","vfs_fonts","pdfMake","vfs","_xlsx","setFormatOptions","getFormatOptions","ExportMenu","__WEBPACK_IMPORTED_MODULE_1__ExportCSS__","__WEBPACK_IMPORTED_MODULE_6__utils_Language__","__WEBPACK_IMPORTED_MODULE_7__utils_Validatable__","__WEBPACK_IMPORTED_MODULE_11__utils_DOM__","closeDelay","_menuTag","_itemTag","_labelTag","_ignoreNextClose","_items","getMenuItemClass","createMenuElement","drawBranch","menuElement","moveSelection","level","ascendants","createItemElement","createLabelElement","readerLabel","getReaderLabel","typeClickable","submenu_1","getSubMenu","selectBranch","setFocus","delayUnselectBranch","local_level","submenu","menuTag","itemTag","labelTag","hasSubMenu","_currentSelection","setBlur","closeTimeout","ascendant","unselectBranch","simple","newSelection","getPrevSibling","getNextSibling","getParentItem","getSiblings","siblings","isBlob","xhr","XMLHttpRequest","responseText","getResponseHeader","withCredentials","requestHeaders","header","setRequestHeader","send","DataSource","parser","_requestOptions","_incremental","_incrementalParams","_keepCount","__WEBPACK_IMPORTED_MODULE_1__DataLoader__","getParserByType","processData","getParserByData","lastLoad","disableCache","timestampUrl","_url","addUrlParams","incrementalParams","_parser","__WEBPACK_IMPORTED_MODULE_2__JSONParser__","_reloadFrequency","_reloadDisposer","_reloadTimeout","reloadFrequency","__WEBPACK_IMPORTED_MODULE_7__formatters_DateFormatter__","__WEBPACK_IMPORTED_MODULE_10__utils_Object__","__WEBPACK_IMPORTED_MODULE_3__CSVParser__","__WEBPACK_IMPORTED_MODULE_4__Base__","DataLoader","dataLoader","__WEBPACK_IMPORTED_MODULE_0__CSVParser__","__WEBPACK_IMPORTED_MODULE_1__JSONParser__","__WEBPACK_IMPORTED_MODULE_3__utils_Net__","sources","requestOptions","source_1","catch","Responsive","_rules","_defaultRules","_appliedRules","_useDefault","_noStates","rules","checkRules","_component","_sizeEventDisposer","enabled","applyRules","useDefault","defaultRules","isApplied","ruleId","loadDefaultRules","allRules","rulesChanged","relevant","newTarget","defaultStateApplied","getState","stateId","tmpId","AxisLine","AxisTick","__WEBPACK_IMPORTED_MODULE_1__elements_Tick__","PointedRectangle","__WEBPACK_IMPORTED_MODULE_1__PointedShape__","__WEBPACK_IMPORTED_MODULE_2__utils_Math__","cr","stemX","stemY","bwh","lineT","lineR","lineB","lineL","d2","arcTR","arcBR","arcBL","arcTL","PointedShape","DropShadowFilter","__WEBPACK_IMPORTED_MODULE_2__utils_InterfaceColorSet__","feGaussianBlur","in","feOffset","feFlood","feComposite","in2","operator","feMerge","flood-color","flood-opacity","stdDeviation","ZoomOutButton","__WEBPACK_IMPORTED_MODULE_6__core_utils_Type__","WavedCircle","__WEBPACK_IMPORTED_MODULE_1__Circle__","__WEBPACK_IMPORTED_MODULE_5__utils_Utils__","__WEBPACK_IMPORTED_MODULE_6__core_rendering_Smoothing__","getPoints","circleLength","halfWaveHeight","halfWaveLength","angle1","angle2","Trapezoid","__WEBPACK_IMPORTED_MODULE_2__core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_6__rendering_Path__","topSide","bottomSide","leftSide","rightSide","ts","bs","ls","rs","mt","mr","mb","ml","horizontalNeck","hn","verticalNeck","vn","Slice3D","__WEBPACK_IMPORTED_MODULE_1__Slice__","__WEBPACK_IMPORTED_MODULE_3__Container__","__WEBPACK_IMPORTED_MODULE_4__rendering_filters_LightenFilter__","edge","lightenFilter","sideA","lightenFilterA","sideB","lightenFilterB","ah","bh","ch","dh","GradientModifier","lightnesses","brightnesses","offsets","_lightnesses","_brightnesses","_opacities","_offsets","brightness","__WEBPACK_IMPORTED_MODULE_1__ColorModifier__","ColorModifier","SankeyDiagramDataItem","SankeyDiagram","__WEBPACK_IMPORTED_MODULE_1__FlowDiagram__","__WEBPACK_IMPORTED_MODULE_4__elements_SankeyNode__","__WEBPACK_IMPORTED_MODULE_5__elements_SankeyLink__","__WEBPACK_IMPORTED_MODULE_6__core_utils_Animation__","__WEBPACK_IMPORTED_MODULE_8__core_utils_Math__","nodeAlign","_levelCount","getNodeLevel","levels","calculateValueHeight","_levelSum","_levelNodesCount","maxSum","maxSumLevel","_maxSumLevel","maxSumLevelNodeCount","valueHeight","finalHeight","_heightAnimation","nextCoordinate","levelCoordinate","nodeCount","container_1","i_1","nodeHeight","nameLabel","_valueHeight","SankeyNode","__WEBPACK_IMPORTED_MODULE_1__FlowDiagramNode__","__WEBPACK_IMPORTED_MODULE_2__LabelBullet__","__WEBPACK_IMPORTED_MODULE_5__core_utils_Iterator__","nextInCoord","nextOutCoord","orientation_1","endX","endY","startX","startY","LabelBullet","__WEBPACK_IMPORTED_MODULE_1__Bullet__","__WEBPACK_IMPORTED_MODULE_2__core_elements_Label__","__WEBPACK_IMPORTED_MODULE_4__core_utils_Color__","SankeyLink","__WEBPACK_IMPORTED_MODULE_1__FlowDiagramLink__","__WEBPACK_IMPORTED_MODULE_3__core_elements_Polyspline__","__WEBPACK_IMPORTED_MODULE_7__core_rendering_Smoothing__","__WEBPACK_IMPORTED_MODULE_8__core_rendering_Path__","controlPointDistance","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","Rectangle3D","__WEBPACK_IMPORTED_MODULE_3__rendering_filters_LightenFilter__","sideBack","lightenFilterBack","sideBottom","lightenFilterBottom","sideLeft","lightenFilterLeft","sideRight","lightenFilterRight","sideTop","lightenFilterTop","sideFront","HeatLegend","__WEBPACK_IMPORTED_MODULE_2__core_rendering_fills_LinearGradient__","__WEBPACK_IMPORTED_MODULE_7__charts_axes_ValueAxis__","__WEBPACK_IMPORTED_MODULE_8__charts_axes_AxisRendererX__","__WEBPACK_IMPORTED_MODULE_9__charts_axes_AxisRendererY__","__WEBPACK_IMPORTED_MODULE_10__core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_11__core_utils_Type__","__WEBPACK_IMPORTED_MODULE_12__core_utils_Colors__","__WEBPACK_IMPORTED_MODULE_13__core_elements_RoundedRectangle__","markerContainer","markerCount","getMinFromRules","minValue_1","getMaxFromRules","maxValue_1","minColor","maxColor","seriesFill","minOpacity","maxOpacity","minStrokeOpacity","maxStrokeOpacity","minStroke","maxStroke","strokeGradient","opacity_1","valueAxis","_valueAxis","dataFieldDefined","updateMinMax","seriesId_1","disposer_1","Cone","__WEBPACK_IMPORTED_MODULE_3__elements_Ellipse__","__WEBPACK_IMPORTED_MODULE_4__rendering_fills_LinearGradientModifier__","__WEBPACK_IMPORTED_MODULE_7__rendering_Path__","topRadius","bodyFillModifier","radiusBase","Ellipse","rx","ry","TextLink","__WEBPACK_IMPORTED_MODULE_2__core_interaction_Mouse__","names","getKeys","defineProperties","windowNames","getWindowNames","gOPS","$assign","getSymbols","isEnum","factories","partArgs","bound","construct","un","$parseInt","$trim","ws","radix","$parseFloat","isFinite","log1p","EPSILON","EPSILON32","MAX32","MIN32","fround","$abs","$sign","ret","memo","isRight","inc","flags","newPromiseCapability","promiseCapability","strong","getEntry","$iterDefine","SIZE","_f","_l","delete","InternalMap","weak","uncaughtFrozenStore","ufstore","tmp","$WeakMap","freeze","$has","UncaughtFrozenStore","findUncaughtFrozen","Reflect","ownKeys","IS_CONCAT_SPREADABLE","flattenIntoArray","sourceLen","mapper","spreadable","targetIndex","sourceIndex","repeat","maxLength","fillString","stringLength","fillStr","intMaxLength","fillLen","stringFiller","isEntries","inLow","inHigh","outLow","outHigh","Polyarc","controlPointPosition","distanceAB","cpDistance","controlPoint1","controlPoint2","Polygon","__WEBPACK_IMPORTED_MODULE_2__utils_Morpher__","_currentPoints","surface","hole","hlen","_morpher","Morpher","__WEBPACK_IMPORTED_MODULE_2__utils_Animation__","__WEBPACK_IMPORTED_MODULE_4__utils_Ease__","morphable","_bboxes","morphDuration","morphEasing","morphToSingle","scaleRatio","morphToPolygon","toPoints","currentPoints","sortPoints","_morphFromPointsReal","_morphToPointsReal","normalizePoints","pointsA","pointsB","surfaceA","holeA","bboxA","middleX","middleY","addPoints","splitAt","newDistance","partA","partB","bbox1","bbox2","bboxes","morphToCircle","commonBBox","fromPoints","realRadius","realAngle","pointOnCircle","mustHaveCount","addToSegmentCount","newPoints","point0","extraPoint","lastPoint","morphToRectangle","realWidth","realHeight","i_2","i_3","_morphProgress","currentArea","surfaceFrom","holeFrom","surfaceTo","holeTo","currentSurface","i_4","slen","currentPoint","currentHole","i_5","morphBack","FocusFilter","feMorphology","feBlend","mode","outline","classError","__WEBPACK_IMPORTED_MODULE_13__Type__","__WEBPACK_IMPORTED_MODULE_1__Registry__","finalType","__WEBPACK_IMPORTED_MODULE_2__Container__","__WEBPACK_IMPORTED_MODULE_12__Array__","__WEBPACK_IMPORTED_MODULE_0__System__","__WEBPACK_IMPORTED_MODULE_3__rendering_Paper__","__WEBPACK_IMPORTED_MODULE_4__rendering_SVGContainer__","__WEBPACK_IMPORTED_MODULE_5__rendering_filters_FocusFilter__","__WEBPACK_IMPORTED_MODULE_6__elements_Preloader__","__WEBPACK_IMPORTED_MODULE_7__elements_AmChartsLogo__","__WEBPACK_IMPORTED_MODULE_8__elements_Tooltip__","__WEBPACK_IMPORTED_MODULE_9__utils_Disposer__","__WEBPACK_IMPORTED_MODULE_10__Percent__","__WEBPACK_IMPORTED_MODULE_14__DOM__","svgDiv_1","tooltipContainer_1","preloader_1","logo_1","logo","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","mozRequestAnimationFrame","webkitRequestAnimationFrame","forEachElement","elementsType","isCollectionTyped","jQuery","Elements","getElementSize","ResizeSensor","attachResizeEvent","resized","resizedAttached","sizeInfo","newQueue","styleChild","computedStyle","dirty","rafId","expand","expandChild","shrink","size","lastWidth","lastHeight","initialHiddenCheck","lastAnimationFrame","scrollLeft","resetSensor","onResized","onScroll","addEvent","attachEvent","elem","observer","mutations","addedNodes","childList","subtree","z-index","background-color","max-width","max-height","background-size","cursor","_decimalSeparator","_thousandSeparator","_big_number_suffix_3","_big_number_suffix_6","_big_number_suffix_9","_big_number_suffix_12","_big_number_suffix_15","_big_number_suffix_18","_big_number_suffix_21","_big_number_suffix_24","_small_number_suffix_3","_small_number_suffix_6","_small_number_suffix_9","_small_number_suffix_12","_small_number_suffix_15","_small_number_suffix_18","_small_number_suffix_21","_small_number_suffix_24","_byte_suffix_B","_byte_suffix_KB","_byte_suffix_MB","_byte_suffix_GB","_byte_suffix_TB","_byte_suffix_PB","_date_millisecond","_date_second","_date_minute","_date_hour","_date_day","_date_week","_date_month","_date_year","_duration_millisecond","_duration_millisecond_second","_duration_millisecond_minute","_duration_millisecond_hour","_duration_millisecond_day","_duration_millisecond_week","_duration_millisecond_month","_duration_millisecond_year","_duration_second","_duration_second_minute","_duration_second_hour","_duration_second_day","_duration_second_week","_duration_second_month","_duration_second_year","_duration_minute","_duration_minute_hour","_duration_minute_day","_duration_minute_week","_duration_minute_month","_duration_minute_year","_duration_hour","_duration_hour_day","_duration_hour_week","_duration_hour_month","_duration_hour_year","_duration_day","_duration_day_week","_duration_day_month","_duration_day_year","_duration_week","_duration_week_month","_duration_week_year","_duration_month","_duration_month_year","_duration_year","_era_ad","_era_bc","AM","PM","A.M.","P.M.","January","February","March","April","May","June","July","August","September","October","November","December","Jan","Feb","Mar","Apr","May(short)","Jun","Jul","Aug","Sep","Oct","Nov","Dec","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sun","Mon","Tue","Wed","Thu","Fri","Sat","_dateOrd","Zoom Out","Play","Stop","Click, tap or press ENTER to toggle","Loading","Home","Serial chart","X/Y chart","Pie chart","Gauge chart","Radar chart","Sankey diagram","Flow diagram","Chord diagram","TreeMap chart","Sliced chart","Candlestick Series","OHLC Series","Column Series","Line Series","Pie Slice Series","Funnel Series","Pyramid Series","X/Y Series","Press ENTER to zoom in","Press ENTER to zoom out","Use arrow keys to zoom in and out","Use plus and minus keys on your keyboard to zoom in and out","Data","Print","Click, tap or press ENTER to open","Click, tap or press ENTER to print.","Click, tap or press ENTER to export as %1.","To save the image, right-click this link and choose \"Save picture as...\"","To save the image, right-click thumbnail on the left and choose \"Save picture as...\"","(Press ESC to close this message)","Image Export Complete","Export operation took longer than expected. Something might have gone wrong.","Saved from","PNG","JPG","GIF","SVG","PDF","CSV","Use TAB to select grip buttons or left and right arrows to change selection","Use left and right arrows to move selection","Use left and right arrows to move left selection","Use left and right arrows to move right selection","Use TAB select grip buttons or up and down arrows to change selection","Use up and down arrows to move selection","Use up and down arrows to move lower selection","Use up and down arrows to move upper selection","From %1 to %2","From %1","To %1","No parser available for file: %1","Error parsing file: %1","Unable to load file: %1","Invalid date","__WEBPACK_IMPORTED_MODULE_1__utils_InterfaceColorSet__","newPrefix","colorSet","text-align","border-radius","margin-right","margin-left","list-style","FunnelTick","__WEBPACK_IMPORTED_MODULE_4__core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_5__core_rendering_Path__","$fails","wksDefine","enumKeys","gOPNExt","$JSON","_stringify","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","findChild","setSymbolDesc","protoDesc","sym","isSymbol","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","symbols","$getPrototypeOf","$freeze","$seal","$preventExtensions","$isFrozen","$isSealed","$isExtensible","FProto","nameRE","HAS_INSTANCE","FunctionProto","$Number","BROKEN_COF","TRIM","argument","third","maxCode","aNumberValue","$toFixed","toFixed","ERROR","multiply","c2","divide","numToString","acc","fractionDigits","z","$toPrecision","toPrecision","_isFinite","isInteger","isSafeInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","$acosh","acosh","$asinh","asinh","$atanh","atanh","cbrt","clz32","LOG2E","cosh","hypot","value1","value2","larg","$imul","imul","xn","yn","xl","yl","log10","log2","sinh","tanh","trunc","fromCharCode","$fromCodePoint","fromCodePoint","raw","callSite","tpl","$at","codePointAt","$endsWith","endsWith","$startsWith","startsWith","toJSON","pv","$toISOString","lz","DateProto","hint","createProperty","upTo","cloned","$sort","$forEach","STRICT","$filter","$some","$every","$reduce","$indexOf","NEGATIVE_ZERO","$find","forced","$flags","$RegExp","re1","re2","CORRECT_NEW","tiRE","piRE","fiU","proxy","define","$match","regexp","REPLACE","$replace","searchValue","replaceValue","SEARCH","$search","SPLIT","$split","_split","$push","NPCG","limit","separator2","lastIndex","lastLength","lastLastIndex","splitLimit","separatorCopy","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","FakePromise","PromiseRejectionEvent","isThenable","isReject","_n","chain","_v","ok","_s","reaction","exited","handler","fail","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","reason","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","capability","remaining","$index","alreadyCalled","race","$isView","isView","final","viewS","viewT","rApply","fApply","thisArgument","argumentsList","rConstruct","NEW_TARGET_BUG","ARGS_BUG","Target","$args","propertyKey","deleteProperty","Enumerate","enumerate","receiver","getProto","V","existingDescriptor","ownDesc","setProto","$includes","arraySpeciesCreate","flatMap","flatten","depthArg","at","$pad","padStart","padEnd","getFlags","RegExpProto","$RegExpStringIterator","_r","matchAll","getOwnPropertyDescriptors","getDesc","$values","__defineGetter__","__lookupGetter__","__lookupSetter__","isError","clamp","lower","upper","DEG_PER_RAD","RAD_PER_DEG","degrees","radians","fscale","iaddh","$x0","$y0","isubh","imulh","u","$u","$v","u0","v0","u1","v1","umulh","signbit","finally","onFinally","try","metadata","toMetaKey","ordinaryDefineOwnMetadata","defineMetadata","metadataKey","metadataValue","deleteMetadata","ordinaryHasOwnMetadata","ordinaryGetOwnMetadata","ordinaryGetMetadata","getMetadata","Set","ordinaryOwnMetadataKeys","ordinaryMetadataKeys","oKeys","pKeys","getMetadataKeys","getOwnMetadata","getOwnMetadataKeys","ordinaryHasMetadata","hasMetadata","hasOwnMetadata","$metadata","asap","OBSERVABLE","cleanupSubscription","subscription","cleanup","subscriptionClosed","_o","closeSubscription","Subscription","subscriber","SubscriptionObserver","unsubscribe","complete","$Observable","subscribe","observable","Observable","MSIE","boundArgs","setInterval","$task","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","__WEBPACK_IMPORTED_MODULE_0__es2015_core__","am4core","currentScript","scripts","getCurrentScript","__WEBPACK_IMPORTED_MODULE_0__internal_core_System__","__WEBPACK_IMPORTED_MODULE_1__internal_core_Base__","__WEBPACK_IMPORTED_MODULE_2__internal_core_Component__","__WEBPACK_IMPORTED_MODULE_3__internal_core_Container__","__WEBPACK_IMPORTED_MODULE_4__internal_core_DataItem__","__WEBPACK_IMPORTED_MODULE_5__internal_core_Sprite__","__WEBPACK_IMPORTED_MODULE_6__internal_core_SpriteEvents__","__WEBPACK_IMPORTED_MODULE_7__internal_core_SpriteState__","__WEBPACK_IMPORTED_MODULE_8__internal_core_Registry__","__WEBPACK_IMPORTED_MODULE_9__internal_core_Options__","__WEBPACK_IMPORTED_MODULE_10__internal_core_data_CSVParser__","__WEBPACK_IMPORTED_MODULE_11__internal_core_data_DataLoader__","__WEBPACK_IMPORTED_MODULE_12__internal_core_data_DataParser__","__WEBPACK_IMPORTED_MODULE_13__internal_core_data_DataSource__","__WEBPACK_IMPORTED_MODULE_14__internal_core_data_JSONParser__","__WEBPACK_IMPORTED_MODULE_15__internal_core_defs_SVGDefaults__","__WEBPACK_IMPORTED_MODULE_16__internal_core_elements_Button__","__WEBPACK_IMPORTED_MODULE_17__internal_core_elements_Circle__","__WEBPACK_IMPORTED_MODULE_18__internal_core_elements_Ellipse__","__WEBPACK_IMPORTED_MODULE_19__internal_core_elements_Image__","__WEBPACK_IMPORTED_MODULE_20__internal_core_elements_Label__","__WEBPACK_IMPORTED_MODULE_21__internal_core_elements_Line__","__WEBPACK_IMPORTED_MODULE_22__internal_core_elements_Popup__","__WEBPACK_IMPORTED_MODULE_23__internal_core_elements_Modal__","__WEBPACK_IMPORTED_MODULE_24__internal_core_elements_PointedRectangle__","__WEBPACK_IMPORTED_MODULE_25__internal_core_elements_PointedShape__","__WEBPACK_IMPORTED_MODULE_26__internal_core_elements_Polyarc__","__WEBPACK_IMPORTED_MODULE_27__internal_core_elements_Polygon__","__WEBPACK_IMPORTED_MODULE_28__internal_core_elements_Polyline__","__WEBPACK_IMPORTED_MODULE_29__internal_core_elements_Polyspline__","__WEBPACK_IMPORTED_MODULE_30__internal_core_elements_Preloader__","__WEBPACK_IMPORTED_MODULE_31__internal_core_elements_Rectangle__","__WEBPACK_IMPORTED_MODULE_32__internal_core_elements_ResizeButton__","__WEBPACK_IMPORTED_MODULE_33__internal_core_elements_RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_34__internal_core_elements_Scrollbar__","__WEBPACK_IMPORTED_MODULE_35__internal_core_elements_Slider__","__WEBPACK_IMPORTED_MODULE_36__internal_core_elements_Slice__","__WEBPACK_IMPORTED_MODULE_37__internal_core_elements_TextLink__","__WEBPACK_IMPORTED_MODULE_38__internal_core_elements_Tooltip__","__WEBPACK_IMPORTED_MODULE_39__internal_core_elements_Trapezoid__","__WEBPACK_IMPORTED_MODULE_40__internal_core_elements_Triangle__","__WEBPACK_IMPORTED_MODULE_41__internal_core_elements_WavedCircle__","__WEBPACK_IMPORTED_MODULE_42__internal_core_elements_WavedLine__","__WEBPACK_IMPORTED_MODULE_43__internal_core_elements_WavedRectangle__","__WEBPACK_IMPORTED_MODULE_44__internal_core_elements_ZoomOutButton__","__WEBPACK_IMPORTED_MODULE_45__internal_core_elements_PlayButton__","__WEBPACK_IMPORTED_MODULE_46__internal_core_elements_3d_Cone__","__WEBPACK_IMPORTED_MODULE_47__internal_core_elements_3d_Rectangle3D__","__WEBPACK_IMPORTED_MODULE_48__internal_core_elements_3d_Slice3D__","__WEBPACK_IMPORTED_MODULE_49__internal_core_export_Export__","__WEBPACK_IMPORTED_MODULE_50__internal_core_export_ExportMenu__","__WEBPACK_IMPORTED_MODULE_51__internal_core_formatters_DateFormatter__","__WEBPACK_IMPORTED_MODULE_52__internal_core_formatters_DurationFormatter__","__WEBPACK_IMPORTED_MODULE_53__internal_core_formatters_NumberFormatter__","__WEBPACK_IMPORTED_MODULE_54__internal_core_formatters_TextFormatter__","__WEBPACK_IMPORTED_MODULE_55__internal_core_interaction_Inertia__","__WEBPACK_IMPORTED_MODULE_56__internal_core_interaction_Interaction__","__WEBPACK_IMPORTED_MODULE_57__internal_core_interaction_InteractionKeyboardObject__","__WEBPACK_IMPORTED_MODULE_58__internal_core_interaction_InteractionObject__","__WEBPACK_IMPORTED_MODULE_59__internal_core_interaction_InteractionObjectEvents__","__WEBPACK_IMPORTED_MODULE_60__internal_core_interaction_Mouse__","__WEBPACK_IMPORTED_MODULE_61__internal_core_rendering_AMElement__","__WEBPACK_IMPORTED_MODULE_62__internal_core_rendering_Group__","__WEBPACK_IMPORTED_MODULE_63__internal_core_rendering_Paper__","__WEBPACK_IMPORTED_MODULE_64__internal_core_rendering_Smoothing__","__WEBPACK_IMPORTED_MODULE_65__internal_core_rendering_SVGContainer__","__WEBPACK_IMPORTED_MODULE_66__internal_core_rendering_fills_ColorModifier__","__WEBPACK_IMPORTED_MODULE_67__internal_core_rendering_fills_LinearGradient__","__WEBPACK_IMPORTED_MODULE_68__internal_core_rendering_fills_LinearGradientModifier__","__WEBPACK_IMPORTED_MODULE_69__internal_core_rendering_fills_RadialGradientModifier__","__WEBPACK_IMPORTED_MODULE_70__internal_core_rendering_fills_LinePattern__","__WEBPACK_IMPORTED_MODULE_71__internal_core_rendering_fills_Pattern__","__WEBPACK_IMPORTED_MODULE_72__internal_core_rendering_fills_RadialGradient__","__WEBPACK_IMPORTED_MODULE_73__internal_core_rendering_fills_RectPattern__","__WEBPACK_IMPORTED_MODULE_74__internal_core_rendering_filters_ColorizeFilter__","__WEBPACK_IMPORTED_MODULE_75__internal_core_rendering_filters_DesaturateFilter__","__WEBPACK_IMPORTED_MODULE_76__internal_core_rendering_filters_DropShadowFilter__","__WEBPACK_IMPORTED_MODULE_77__internal_core_rendering_filters_BlurFilter__","__WEBPACK_IMPORTED_MODULE_78__internal_core_rendering_filters_Filter__","__WEBPACK_IMPORTED_MODULE_79__internal_core_rendering_filters_FocusFilter__","__WEBPACK_IMPORTED_MODULE_80__internal_core_rendering_filters_LightenFilter__","__WEBPACK_IMPORTED_MODULE_81__internal_core_responsive_Responsive__","__WEBPACK_IMPORTED_MODULE_82__internal_core_utils_Adapter__","__WEBPACK_IMPORTED_MODULE_83__internal_core_utils_Animation__","__WEBPACK_IMPORTED_MODULE_84__internal_core_utils_AsyncPending__","__WEBPACK_IMPORTED_MODULE_85__internal_core_utils_Cache__","__WEBPACK_IMPORTED_MODULE_86__internal_core_utils_Color__","__WEBPACK_IMPORTED_MODULE_87__internal_core_utils_ColorSet__","__WEBPACK_IMPORTED_MODULE_88__internal_core_utils_InterfaceColorSet__","__WEBPACK_IMPORTED_MODULE_89__internal_core_utils_Dictionary__","__WEBPACK_IMPORTED_MODULE_90__internal_core_utils_Disposer__","__WEBPACK_IMPORTED_MODULE_91__internal_core_utils_DOM__","__WEBPACK_IMPORTED_MODULE_92__internal_core_utils_EventDispatcher__","__WEBPACK_IMPORTED_MODULE_93__internal_core_utils_Iterator__","__WEBPACK_IMPORTED_MODULE_94__internal_core_utils_Keyboard__","__WEBPACK_IMPORTED_MODULE_95__internal_core_utils_Language__","__WEBPACK_IMPORTED_MODULE_96__internal_core_utils_List__","__WEBPACK_IMPORTED_MODULE_97__internal_core_utils_Morpher__","__WEBPACK_IMPORTED_MODULE_98__internal_core_utils_Order__","__WEBPACK_IMPORTED_MODULE_99__internal_core_utils_Percent__","__WEBPACK_IMPORTED_MODULE_100__internal_core_utils_SortedList__","__WEBPACK_IMPORTED_MODULE_101__internal_core_utils_Strings__","__WEBPACK_IMPORTED_MODULE_102__internal_core_utils_Type__","__WEBPACK_IMPORTED_MODULE_103__internal_core_utils_Validatable__","__WEBPACK_IMPORTED_MODULE_104__internal_core_rendering_Path__","__WEBPACK_IMPORTED_MODULE_105__internal_core_utils_Colors__","__WEBPACK_IMPORTED_MODULE_106__internal_core_utils_Ease__","__WEBPACK_IMPORTED_MODULE_107__internal_core_utils_Math__","__WEBPACK_IMPORTED_MODULE_108__internal_core_utils_Number__","__WEBPACK_IMPORTED_MODULE_109__internal_core_utils_Object__","__WEBPACK_IMPORTED_MODULE_110__internal_core_utils_String__","__WEBPACK_IMPORTED_MODULE_111__internal_core_utils_Time__","__WEBPACK_IMPORTED_MODULE_112__internal_core_utils_Utils__","__WEBPACK_IMPORTED_MODULE_113__internal_core_utils_Instance__","widthRatio","heightRatio","Slider","__WEBPACK_IMPORTED_MODULE_1__core_elements_Scrollbar__","PlayButton","__WEBPACK_IMPORTED_MODULE_2__RoundedRectangle__","__WEBPACK_IMPORTED_MODULE_5__Triangle__","playIcon","stopIcon","RadialGradientModifier","__WEBPACK_IMPORTED_MODULE_1__RadialGradient__","LinePattern","_line","__WEBPACK_IMPORTED_MODULE_1__Pattern__","RectPattern","rectHeight","rectWidth","_rect","ColorizeFilter","intensity","applyFilter","ii","BlurFilter","AmChartsLogo","__WEBPACK_IMPORTED_MODULE_3__Polyspline__","__WEBPACK_IMPORTED_MODULE_5__rendering_fills_LinearGradient__","__WEBPACK_IMPORTED_MODULE_6__rendering_filters_DesaturateFilter__","aColor","aGradient","aStroke","desaturateFilter","desaturateFilterHover"],"mappings":"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","file":"core.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n \t\tif(executeModules) {\n \t\t\tfor(i=0; i < executeModules.length; i++) {\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = executeModules[i]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t302: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = \"text/javascript\";\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"deps/\" + ({\"0\":\"pdfmake\",\"1\":\"xlsx\",\"2\":\"responsivedefaults\",\"3\":\"canvg\"}[chunkId]||chunkId) + \".js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 343);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c105542061ddb18f31b1","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 302","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Container } from \"./Container\";\r\nimport { Component } from \"./Component\";\r\nimport { cache } from \"./utils/Cache\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $string from \"./utils/String\";\r\nimport * as $array from \"./utils/Array\";\r\n\r\n\r\n/**\r\n * Define events available for [[Registry]]\r\n */\r\nexport interface IRegistryEvents {\r\n\r\n\t/**\r\n\t * Invoked when update cycle starts. Before invalid elements are re-validated.\r\n\t */\r\n\tenterframe: {};\r\n\r\n\t/**\r\n\t * Invoked when udpate cycle ends. After invalid elements have been\r\n\t * re-validated.\r\n\t */\r\n\texitframe: {};\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Registry is used to store miscellaneous system-wide information, like ids,\r\n * maps, themes, and registered classes.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Registry {\r\n\r\n\t/**\r\n\t * Unique ID of the object.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic uid: string;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t *\r\n\t * @type {EventDispatcher}\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<Registry, IRegistryEvents>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Holds a universal mapping collection, so that elements and their children\r\n\t * can create and look up all kinds of relations between id and object.\r\n\t *\r\n\t * @type {Dictionary<string, any>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _map: $type.Optional<Dictionary<string, any>>;\r\n\r\n\t/**\r\n\t * All currently applied themes. All new chart instances created will\r\n\t * automatically inherit and retain System's themes.\r\n\t *\r\n\t * @type {ITheme}\r\n\t */\r\n\tpublic themes: ITheme[] = [];\r\n\r\n\t/**\r\n\t * List of all loaded available themes.\r\n\t *\r\n\t * Whenever a theme loads, it registers itself in System's `loadedThemes`\r\n\t * collection.\r\n\t */\r\n\tpublic loadedThemes: { [index: string]: ITheme } = {};\r\n\r\n\t/**\r\n\t * An indeternal counter used to generate unique IDs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _uidCount: number = 0;\r\n\r\n\t/**\r\n\t * Keeps register of class references so that they can be instnatiated using\r\n\t * string key.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic registeredClasses: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * Holds all generated placeholders.\r\n\t */\r\n\tprotected _placeholders: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * Number of times per second charts will be updated.\r\n\t *\r\n\t * This means that each time an element is invalidated it will wait for the\r\n\t * next cycle to be re-validated, and possibly redrawn.\r\n\t *\r\n\t * This happens every `1000 / frameRate` milliseconds.\r\n\t *\r\n\t * Reducing this number may reduce the load on the CPU, but might slightly\r\n\t * reduce smoothness of the animations.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic frameRate: number = 60;\r\n\r\n\t/**\r\n * A list of invalid(ated) [[Sprite]] objects that need to be re-validated\r\n * during next cycle.\r\n *\r\n * @ignore Exclude from docs\r\n * @type { [index: string]: Array<Sprite> }\r\n */\r\n\tpublic invalidSprites: { [index: string]: Array<Sprite> } = {};\r\n\r\n\t/**\r\n\t * Components are added to this list when their data provider changes to\r\n\t * a new one or data is added/removed from their data provider.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type { [index: string]: Array<Component> }\r\n\t */\r\n\tpublic invalidDatas: { [index: string]: Array<Component> } = {};\r\n\r\n\t/**\r\n\t * Components are added to this list when values of their raw data change.\r\n\t * Used when we want a smooth animation from one set of values to another.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<Component>}\r\n\t */\r\n\tpublic invalidRawDatas: Array<Component> = [];\r\n\r\n\t/**\r\n\t * Components are added to this list when values of their data changes\r\n\t * (but not data provider itself).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<Component>}\r\n\t */\r\n\tpublic invalidDataItems: Array<Component> = [];\r\n\r\n\t/**\r\n\t * Components are added to this list when their data range (selection) is\r\n\t * changed, e.g. zoomed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<Component>}\r\n\t */\r\n\tpublic invalidDataRange: Array<Component> = [];\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] objects that have invalid(ated) positions, that need\r\n\t * to be recalculated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type { [index: string]: Array<Sprite>}\r\n\t */\r\n\tpublic invalidPositions: { [index: string]: Array<Sprite> } = {};\r\n\r\n\t/**\r\n\t * A list of [[Container]] objects with invalid(ated) layouts.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type { [index: string]: Array<Container>}\r\n\t */\r\n\tpublic invalidLayouts: { [index: string]: Array<Container> } = {};\r\n\r\n\t/**\r\n\t * An array holding all active (non-disposed) top level elemens.\r\n\t *\r\n\t * When, for example, a new chart is created, its instance will be added to\r\n\t * this array, and will be removed when the chart is disposed.\r\n\t *\r\n\t * @type {Array<Sprite>}\r\n\t */\r\n\tpublic baseSprites: Array<Sprite> = [];\r\n\r\n\tpublic baseSpritesByUid: { [index: string]: Sprite } = {};\r\n\r\n\tconstructor() {\r\n\t\tthis.uid = this.getUniqueId();\r\n\r\n\t\tthis.invalidSprites.noBase = [];\r\n\t\tthis.invalidDatas.noBase = [];\r\n\t\tthis.invalidLayouts.noBase = [];\r\n\t\tthis.invalidPositions.noBase = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a unique chart system-wide ID.\r\n\t *\r\n\t * @return {string} Generated ID\r\n\t */\r\n\tpublic getUniqueId(): string {\r\n\t\tlet uid = this._uidCount;\r\n\t\tthis._uidCount += 1;\r\n\t\treturn \"id-\" + uid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a universal collection for mapping ids with objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Dictionary<string, any>} Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tif (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * Caches value in object's cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  key    Key\r\n\t * @param {any}     value  Value\r\n\t * @param {number}  ttl    TTL in seconds\r\n\t */\r\n\tpublic setCache(key: string, value: any, ttl?: number): void {\r\n\t\tcache.set(this.uid, key, value, ttl);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves cached value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  key    Key\r\n\t * @param  {any}     value  Value to return if cache is not available\r\n\t * @return {any}            Value\r\n\t */\r\n\tpublic getCache(key: string, value: any = undefined): any {\r\n\t\treturn cache.get(this.uid, key, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event using own event dispatcher. Will automatically\r\n\t * populate event data object with event type and target (this element).\r\n\t * It also checks if there are any handlers registered for this sepecific\r\n\t * event.\r\n\t *\r\n\t * @param {Key} eventType Event type (name)\r\n\t * @param {any}    data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatch<Key extends keyof IRegistryEvents>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Works like `dispatch`, except event is triggered immediately, without\r\n\t * waiting for the next frame cycle.\r\n\t *\r\n\t * @param {Key} eventType Event type (name)\r\n\t * @param {any}    data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof IRegistryEvents>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, data);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a unique placeholder suitable for the key.\r\n\t * \r\n\t * @param  {string}  key  Key\r\n\t * @return {string}       Random string to be used as placeholder\r\n\t */\r\n\tpublic getPlaceholder(key: string): string {\r\n\t\tif ($type.hasValue(this._placeholders[key])) {\r\n\t\t\treturn this._placeholders[key];\r\n\t\t}\r\n\t\tthis._placeholders[key] = \"__amcharts_\" + key + \"_\" + $string.random(8) + \"__\";\r\n\t\treturn this._placeholders[key];\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidComponents(component: Component) {\r\n\t\tif (component.baseId) {\r\n\t\t\t$array.move(this.invalidDatas[component.baseId], component);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.move(this.invalidDatas[\"noBase\"], component);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidComponents(component: Component) {\r\n\t\tif (component.baseId) {\r\n\t\t\t$array.remove(this.invalidDatas[component.baseId], component);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidDatas[\"noBase\"], component);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidSprites(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidSprites[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidSprites[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidSprites(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidSprites[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidSprites[\"noBase\"], sprite);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidPositions(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidPositions[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidPositions[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidPositions(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidPositions[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidPositions[\"noBase\"], sprite);\r\n\t}\t\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidLayouts(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidLayouts[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidLayouts[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidLayouts(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidLayouts[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidLayouts[\"noBase\"], sprite);\r\n\t}\t\t\r\n}\r\n\r\n/**\r\n * A singleton global instance of [[Registry]].\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let registry = new Registry();\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Registry.ts","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_export.js\n// module id = 2\n// module chunks = 302","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @todo Review unused functions for removal\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { percent, Percent, isPercent } from \"./Percent\";\r\n\r\n/**\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n */\r\nexport type Public<T> = {[P in keyof T]: T[P]};\r\n\r\n\r\n/**\r\n * `Keyof<T>` is the same as `keyof T` except it only accepts string keys, not numbers or symbols.\r\n *\r\n * @type {[type]}\r\n */\r\nexport type Keyof<T> = Extract<keyof T, string>;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param  {number}  value Input value\r\n * @return {boolean}       Is NaN?\r\n * @deprecated Is not used anywhere. JS built-in isNaN is used everywhere. Maybe we don't need this, or if we do, then we should use it everywhere\r\n */\r\nexport function isNaN(value: number): boolean {\r\n\treturn Number(value) !== value;\r\n}\r\n\r\n/**\r\n * Represents a type for all available JavaScript variable types.\r\n *\r\n * @type {[type]}\r\n */\r\nexport type Type\r\n\t= \"[object Object]\"\r\n\t| \"[object Array]\"\r\n\t| \"[object String]\"\r\n\t| \"[object Number]\"\r\n\t| \"[object Boolean]\"\r\n\t| \"[object Date]\";\r\n\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param  {any}   value  Input value\r\n * @return {Type}         Type of the value\r\n */\r\nexport function getType<A>(value: A): Type {\r\n\treturn ({}).toString.call(value);\r\n}\r\n\r\n/**\r\n * Returns a default value if the passed in value is empty.\r\n *\r\n * @param  {any}   value     Input value\r\n * @param  {any}   optional  Default value\r\n * @return {any}             Value or default value whichever is available\r\n * @deprecated Not used anywhere\r\n */\r\nexport function getDefault<A>(value: null | undefined | A, optional: A): A {\r\n\treturn value || optional;\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a string.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is string?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkString(value: any): value is string {\r\n\tif (typeof value === \"string\") {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a string but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a boolean.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is boolean?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkBoolean(value: any): value is boolean {\r\n\tif (typeof value === \"boolean\") {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a boolean but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a number.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is number?\r\n * @throws {Error}\r\n */\r\nexport function checkNumber(value: any): value is number {\r\n\tif (typeof value === \"number\") {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tthrow new Error(\"Expected a number but got NaN\");\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a number but got \" + getType(value));\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is an object.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is object?\r\n * @throws {Error}\r\n * @todo Is the input type correct?\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkObject(value: {}): value is {} {\r\n\tconst t = getType(value);\r\n\r\n\tif (t === \"[object Object]\") {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected an object but got \" + t);\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is an array.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is array?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkArray<A>(value: Array<A>): value is Array<A> {\r\n\tif (Array.isArray(value)) {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected an array but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a Date object.\r\n *\r\n * @param  {any}   value  Value\r\n * @return {value}        Is Date object?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkDate(value: Date): value is Date {\r\n\tconst t = getType(value);\r\n\r\n\tif (t === \"[object Date]\") {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a date but got \" + t);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CASTING\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Casts string or a number into string.\r\n *\r\n * @param  {string | number}  value  Input\r\n * @return {string}                  String value\r\n * @deprecated Not used anywhere\r\n */\r\nexport function castString(value: string | number): string {\r\n\tif (typeof value === \"string\") {\r\n\t\treturn value;\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\treturn \"\" + value;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a string or number but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Casts string or a number into a number.\r\n *\r\n * @param  {string | number | Date}  value   Input value\r\n * @return {number}                  Number  value\r\n * @throws {Error}\r\n */\r\nexport function castNumber(value: string | number | Date): number {\r\n\tif (typeof value === \"string\") {\r\n\t\tconst number = +value;\r\n\r\n\t\tif (isNaN(number)) {\r\n\t\t\tthrow new Error(\"Cannot cast string \" + JSON.stringify(value) + \" to a number\");\r\n\r\n\t\t} else {\r\n\t\t\treturn number;\r\n\t\t}\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tthrow new Error(\"Expected a number but got NaN\");\r\n\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tconst t = getType(value);\r\n\r\n\t\tif (t === \"[object Date]\") {\r\n\t\t\treturn value.getTime();\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Expected a string, number, or date but got \" + t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Casts number, string or Date into a Date object.\r\n *\r\n * @param  {string | number | Date}   value  Input value\r\n * @return {Date}                            Date object\r\n * @deprecated Not used anywhere\r\n * @throws {Error}\r\n * @hidden\r\n * @deprecated\r\n */\r\n/*export function castDate(value: string | number | Date, formatter?: DateFormatter): Date {\r\n\tif (typeof value === \"string\") {\r\n\t\tif (formatter) {\r\n\t\t\treturn formatter.parse(value);\r\n\t\t}\r\n\t\treturn new Date(value);\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\treturn new Date(value);\r\n\r\n\t} else {\r\n\t\tconst t = getType(value);\r\n\r\n\t\tif (t === \"[object Date]\") {\r\n\t\t\treturn value;\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Expected a string, number, or date but got \" + t);\r\n\t\t}\r\n\t}\r\n}*/\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * Converts any value into `boolean`.\r\n *\r\n * @param  {any}      value  Source value\r\n * @return {boolean}         `true` or `false`\r\n */\r\nexport function toBoolean(value: any): boolean {\r\n\treturn value ? true : false;\r\n}\r\n\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param  {any}     value  Source value\r\n * @return {number}         Number representation of value\r\n */\r\nexport function toNumber(value: any): number {\r\n\tif (hasValue(value) && !isNumber(value)) {\r\n\t\tlet converted = Number(value);\r\n\t\tif (isNaN(converted) && isString(value) && value != \"\") {\r\n\t\t\treturn toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n\t\t}\r\n\t\treturn converted;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Converts any value into a string (text).\r\n *\r\n * @param  {any}     value  Source value\r\n * @return {string}         String representation of the input\r\n */\r\nexport function toText(value: any): string {\r\n\tif (hasValue(value) && !isString(value)) {\r\n\t\treturn castString(value);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Converts any value to a number or [[Percent]].\r\n *\r\n * If the parameter is a string and contains \"%\", it will\r\n * convert it into a [[Percent]].\r\n *\r\n * Otherwise, it will convert into a number.\r\n *\r\n * @param {number | Percent}   value  Number or percent\r\n * @return {number | Percent}         Percent object\r\n */\r\nexport function toNumberOrPercent(value: any): number | Percent {\r\n\tif (!hasValue(value) || isNumber(value) || isPercent(value)) {\r\n\t\treturn value;\r\n\t}\r\n\tif (isString(value) && value.indexOf(\"%\") != -1) {\r\n\t\treturn percent(toNumber(value));\r\n\t}\r\n\treturn toNumber(value);\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * VALUE PRESENCE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an optional value that can be of any type or `undefined`.\r\n *\r\n * @type {[type]}\r\n */\r\nexport type Optional<A> = A | undefined;\r\n\r\n/**\r\n * Checks if a variable has a value.\r\n *\r\n * @param {Optional<A> | null}  a  Input value\r\n * @returns                        Has value?\r\n */\r\nexport function hasValue<A>(a: Optional<A> | null): a is A {\r\n\treturn a != null;\r\n}\r\n\r\n/**\r\n * Returns a value or throws an {Error} exception if the variable has not\r\n * value.\r\n *\r\n * @param {Optional<A> | null}  a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValue<A>(a: Optional<A> | null): A {\r\n\tif (hasValue(a)) {\r\n\t\treturn a;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Value doesn't exist\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a value, or returns the default value if it doesn't have a value.\r\n *\r\n * @param {Optional<A> | null}  a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValueDefault<A>(a: Optional<A> | null, defaultValue: A): A {\r\n\tif (hasValue(a)) {\r\n\t\treturn a;\r\n\r\n\t} else {\r\n\t\treturn defaultValue;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {value}         Is Date?\r\n */\r\nexport function isDate(value: any): value is Date {\r\n\treturn getType(value) === \"[object Date]\";\r\n}\r\n\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {value}         Is string?\r\n */\r\nexport function isString(value: any): value is string {\r\n\treturn typeof value === \"string\";\r\n}\r\n\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {value}         Is number?\r\n */\r\nexport function isNumber(value: any): value is number {\r\n\treturn typeof value === \"number\" && !isNaN(value);\r\n}\r\n\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {value}         Is object?\r\n */\r\nexport function isObject(value: any): value is number {\r\n\treturn typeof value === \"object\";\r\n}\r\n\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {value}         Is Array?\r\n */\r\nexport function isArray(value: any): value is Array<any> {\r\n\treturn Array.isArray(value);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Type.ts","/**\r\n * A collection of Math-related functions\r\n *\r\n * @todo Comment trigonometric functions?\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IRange } from \"../defs/IRange\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n\r\n/**\r\n * Converts any value and fits it into a specific value range.\r\n *\r\n * @param  {any}     value  Source value\r\n * @param  {number}  min    Minimum allowable value\r\n * @param  {number}  max    Maximum allowable value\r\n * @return {number}         Number\r\n */\r\nexport function toNumberRange(value: any, min: number, max: number): number {\r\n\tif ($type.hasValue(value)) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\treturn fitToRange(value, min, max);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param  {number} value      Value\r\n * @param  {number} precision  Precision (number of decimal points)\r\n * @param  {boolean} floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return {number}            Rounded value\r\n */\r\nexport function round(value: number, precision?: number, floor?:boolean): number {\r\n\tif (!$type.isNumber(precision) || precision <= 0) {\r\n\r\n\t\tlet rounded = Math.round(value);\t\t\r\n\t\tif(floor){\r\n\t\t\tif(rounded - value == 0.5){\r\n\t\t\t\trounded--;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rounded;\r\n\t}\r\n\telse {\r\n\t\tlet d: number = Math.pow(10, precision);\r\n\t\treturn Math.round(value * d) / d;\r\n\t}\r\n}\r\n\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param  {number} value      Value\r\n * @param  {number} precision  Precision (number of decimal points)\r\n * @return {number}            Rounded value\r\n */\r\nexport function ceil(value: number, precision?: number): number {\r\n\tif (!$type.isNumber(precision) || precision <= 0) {\r\n\t\treturn Math.ceil(value);\r\n\t}\r\n\telse {\r\n\t\tlet d: number = Math.pow(10, precision);\r\n\t\treturn Math.ceil(value * d) / d;\r\n\t}\r\n}\r\n\r\n/**\r\n * Stretches `t` so that it will always be between `from` and `to`.\r\n *\r\n * @param  {number} t     Number from 0 to 1\r\n * @param  {number} from  Lowest possible value\r\n * @param  {number} to    Highest possible value\r\n * @return {number}       Adjusted value\r\n */\r\nexport function stretch(t: number, from: number, to: number): number {\r\n\treturn (t * (to - from)) + from;\r\n}\r\n\r\n\r\n/**\r\n * Adjust numeric value so it fits to specific value range.\r\n *\r\n * @param  {number} value     Value\r\n * @param  {Optional<number>} minValue  Lowest possible value\r\n * @param  {Optional<number>} maxValue  Highest possible value\r\n * @return {number}                     Adjusted value\r\n */\r\nexport function fitToRange(value: number, minValue: $type.Optional<number>, maxValue: $type.Optional<number>): number {\r\n\tif ($type.isNumber(minValue)) {\r\n\t\tif ($type.isNumber(maxValue) && maxValue < minValue) {\r\n\t\t\tlet temp = maxValue;\r\n\t\t\tmaxValue = minValue;\r\n\t\t\tminValue = temp;\r\n\t\t}\r\n\r\n\t\tif (value < minValue) {\r\n\t\t\tvalue = minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tif ($type.isNumber(maxValue)) {\r\n\t\tif (value > maxValue) {\r\n\t\t\tvalue = maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Returns sine of a number.\r\n *\r\n * @param  {number} value  Value\r\n * @return {number}        Sine\r\n */\r\nexport function sin(value: number): number {\r\n\treturn round(Math.sin(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns tan of a number.\r\n *\r\n * @param  {number} value  Value\r\n * @return {number}        Sine\r\n */\r\nexport function tan(value: number): number {\r\n\treturn round(Math.tan(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns cosine of a number.\r\n *\r\n * @param  {number} value  Value\r\n * @return {number}        Cosine\r\n */\r\nexport function cos(value: number): number {\r\n\treturn round(Math.cos(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns biggest value out of passed in numeric values.\r\n *\r\n * @param  {number}  left   Numeric value\r\n * @param  {number}  right  Numeric value\r\n * @return {number}         Biggest value\r\n */\r\nexport function max(left: number, right: number): number;\r\nexport function max(left: number, right: $type.Optional<number>): number;\r\nexport function max(left: $type.Optional<number>, right: number): number;\r\nexport function max(left: $type.Optional<number>, right: $type.Optional<number>): $type.Optional<number>;\r\nexport function max(left: any, right: any): any {\r\n\tif ($type.isNumber(left)) {\r\n\t\tif ($type.isNumber(right)) {\r\n\t\t\tif (right > left) {\r\n\t\t\t\treturn right;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn left;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\treturn left;\r\n\t\t}\r\n\r\n\t} else if ($type.isNumber(right)) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns smallest value out of passed in numeric values.\r\n *\r\n * @param  {number}  left   Numeric value\r\n * @param  {number}  right  Numeric value\r\n * @return {number}         Smallest value\r\n */\r\nexport function min(left: number, right: number): number;\r\nexport function min(left: number, right: $type.Optional<number>): number;\r\nexport function min(left: $type.Optional<number>, right: number): number;\r\nexport function min(left: $type.Optional<number>, right: $type.Optional<number>): $type.Optional<number>;\r\nexport function min(left: any, right: any): any {\r\n\tif ($type.isNumber(left)) {\r\n\t\tif ($type.isNumber(right)) {\r\n\t\t\tif (right < left) {\r\n\t\t\t\treturn right;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn left;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\treturn left;\r\n\t\t}\r\n\r\n\t} else if ($type.isNumber(right)) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param  {number[]}  values  Array of values\r\n * @param  {number}    value   Reference value\r\n * @return {number}            Closes value from the array\r\n */\r\nexport function closest(values: number[], referenceValue: number): number {\r\n\treturn values.reduce(function(prev, curr) {\r\n\t\treturn (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks whether two ranges of values intersect.\r\n *\r\n * @param {IRange}    range1  Range 1\r\n * @param {IRange}    range2  Range 2\r\n * @return {boolean}          Any intersecting numbers?\r\n */\r\nexport function intersect(range1: IRange, range2: IRange): boolean {\r\n\tlet start1: number = $type.getValue(range1.start);\r\n\tlet start2: number = $type.getValue(range2.start);\r\n\tlet end1: number = $type.getValue(range1.end);\r\n\tlet end2: number = $type.getValue(range2.end);\r\n\r\n\treturn Math.max(start1, start2) <= Math.min(end1, end2);\r\n}\r\n\r\n/**\r\n * Inverts the range of values.\r\n *\r\n * @param {IRange}  range  Range\r\n */\r\nexport function invertRange(range: IRange) {\r\n\tlet start: number = $type.getValue(range.start);\r\n\tlet end: number = $type.getValue(range.end);\r\n\treturn { start: 1 - end, end: 1 - start };\r\n}\r\n\r\n/**\r\n * Returns an intersection range between two ranges of values.\r\n *\r\n * @param  {IRange}  range1  Range 1\r\n * @param  {IRange}  range2  Range 2\r\n * @return {IRange}          Intersecting value range\r\n */\r\nexport function intersection(range1: IRange, range2: IRange): $type.Optional<IRange> {\r\n\tlet start1: number = $type.getValue(range1.start);\r\n\tlet start2: number = $type.getValue(range2.start);\r\n\tlet end1: number = $type.getValue(range1.end);\r\n\tlet end2: number = $type.getValue(range2.end);\r\n\tlet startMax: number = Math.max(start1, start2);\r\n\tlet endMin: number = Math.min(end1, end2);\r\n\r\n\tif (endMin < startMax) {\r\n\t\treturn undefined;\r\n\t}\r\n\telse {\r\n\t\treturn { start: startMax, end: endMin };\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns pixel \"distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param  {IPoint}  point1  Point 1\r\n * @param  {IPoint}  point2  Point 2\r\n * @return {number}          Distance in relative pixels\r\n */\r\nexport function getDistance(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: 0, y: 0 };\r\n\t}\r\n\treturn Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\r\n}\r\n\r\n/**\r\n * Returns scale based on original and end position of the two points.\r\n *\r\n * @param  {IPoint}  point1       Current position of point 1\r\n * @param  {IPoint}  startPoint1  Start position of point 1\r\n * @param  {IPoint}  point2       Current position of point 1\r\n * @param  {IPoint}  startPoint2  Start position of point 2\r\n * @return {number}  Scale        Calculated scale\r\n */\r\nexport function getScale(point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): number {\r\n\tlet initialDistance: number = getDistance(startPoint1, startPoint2);\r\n\tlet currentDistance: number = getDistance(point1, point2);\r\n\r\n\treturn Math.abs(currentDistance / initialDistance);\r\n}\r\n\r\n/**\r\n * Returns an exact mid point between two points.\r\n *\r\n * @param  {IPoint}  point1     Position of point 1\r\n * @param  {IPoint}  point2     Position of point 2\r\n * @return {IPoint}  Mid point  Position of mid-point\r\n */\r\nexport function getMidPoint(point1: IPoint, point2: IPoint, position?: number): IPoint {\r\n\tif (!$type.isNumber(position)) {\r\n\t\tposition = 0.5;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"x\": (point1.x + (point2.x - point1.x) * position),\r\n\t\t\"y\": (point1.y + (point2.y - point1.y) * position)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns difference in angles between starting and ending position of two\r\n * vectors.\r\n *\r\n * @param  {IPoint}  point1       Current position of point 1\r\n * @param  {IPoint}  startPoint1  Start position of point 1\r\n * @param  {IPoint}  point2       Current position of point 1\r\n * @param  {IPoint}  startPoint2  Start position of point 2\r\n * @return {number}               Angle difference in degrees\r\n */\r\nexport function getRotation(point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): number {\r\n\r\n\t// Get start and end angles\r\n\tlet startAngle: number = getAngle(startPoint1, startPoint2);\r\n\tlet angle: number = getAngle(point1, point2);\r\n\r\n\t// Calculate angle\r\n\tlet diff: number = startAngle - angle;\r\n\tif (diff < 0) {\r\n\t\tdiff += 360;\r\n\t}\r\n\r\n\treturn diff;\r\n}\r\n\r\n/**\r\n * Calculates angle of the vector based on two or one point.\r\n *\r\n * @param  {IPoint}  point1  Point 1\r\n * @param  {IPoint}  point2  Point 2\r\n * @return {number}          Angle in degrees\r\n */\r\nexport function getAngle(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: point1.x * 2, y: point1.y * 2 };\r\n\t}\r\n\tlet diffX: number = point2.x - point1.x;\r\n\tlet diffY: number = point2.y - point1.y;\r\n\tlet angle: number = Math.atan2(diffY, diffX) * DEGREES;\r\n\tif (angle < 0) {\r\n\t\tangle += 360;\r\n\t}\r\n\treturn normalizeAngle(angle);\r\n}\r\n\r\n/**\r\n * Returns the shift in coordinates of the center when item is rotated, moved\r\n * and scaled at the same time.\r\n *\r\n * @param  {IPoint}  center       Current center\r\n * @param  {IPoint}  point1       Frst reference point\r\n * @param  {IPoint}  startPoint1  Original position of the first reference point\r\n * @param  {IPoint}  point2       Second reference point\r\n * @param  {IPoint}  startPoint2  Original position of the first reference point\r\n * @return {IPoint}               Shift in center point coordinates\r\n */\r\nexport function getCenterShift(center: IPoint, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): IPoint {\r\n\r\n\t// Get angle\r\n\tlet angle: number = getRotation(point1, startPoint1, point2, startPoint2) - 90;\r\n\tif (angle < 0) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\t// Get distance between new position\r\n\tlet distance: number = getDistance(point1, point2);\r\n\r\n\t// Calculate new X\r\n\tlet x: number = Math.cos(angle) / distance + point1.x;\r\n\tlet y: number = Math.cos(angle) / distance + point1.y;\r\n\r\n\tlet shift: IPoint = {\r\n\t\t\"x\": x - center.x,\r\n\t\t\"y\": y - center.y\r\n\t}\r\n\treturn shift;\r\n}\r\n\r\n/**\r\n * Converts an array of points into a bounding box rectangle.\r\n *\r\n * Array can contain any number of points.\r\n *\r\n * @param  {IPoint[]}              points  Points\r\n * @return {Optional<IRectangle>}          Bounding box rectangle\r\n */\r\nexport function getBBox(points: IPoint[]): $type.Optional<IRectangle> {\r\n\tif (points) {\r\n\t\tlet length = points.length;\r\n\r\n\t\tif (length !== 0) {\r\n\t\t\tlet left!: number;\r\n\t\t\tlet right!: number;\r\n\t\t\tlet top!: number;\r\n\t\t\tlet bottom!: number;\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tlet point: IPoint = points[i];\r\n\r\n\t\t\t\tif (!$type.isNumber(right) || (point.x > right)) {\r\n\t\t\t\t\tright = point.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(left) || (point.x < left)) {\r\n\t\t\t\t\tleft = point.x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.isNumber(top) || (point.y < top)) {\r\n\t\t\t\t\ttop = point.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(bottom) || (point.y > bottom)) {\r\n\t\t\t\t\tbottom = point.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { x: left, y: top, width: right - left, height: bottom - top };\r\n\t\t}\r\n\t}\r\n\r\n\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n}\r\n\r\n/**\r\n * Returns a [[IRectangle]] object representing a common rectangle that fits\r\n * all passed in rectangles in it.\r\n *\r\n * @param {IRectangle[]}           rectangles  An array of rectangles\r\n * @return {Optional<IRectangle>}              Common rectangle\r\n */\r\nexport function getCommonRectangle(rectangles: IRectangle[]): $type.Optional<IRectangle> {\r\n\tlet length = rectangles.length;\r\n\r\n\tif (length !== 0) {\r\n\t\tlet minX!: number;\r\n\t\tlet minY!: number;\r\n\t\tlet maxX!: number;\r\n\t\tlet maxY!: number;\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tlet rectangle = rectangles[i];\r\n\t\t\tminX = min(rectangle.x, minX);\r\n\t\t\tminY = min(rectangle.y, minY);\r\n\t\t\tmaxX = max(rectangle.x + rectangle.width, maxX);\r\n\t\t\tmaxY = max(rectangle.y + rectangle.height, maxY);\r\n\t\t}\r\n\r\n\t\treturn { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\r\n\t}\r\n}\r\n\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {IPoint}  pointA        [description]\r\n * @param  {IPoint}  pointB        [description]\r\n * @param  {IPoint}  controlPoint  [description]\r\n * @param  {number}  position      [description]\r\n * @return {IPoint}                [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA: IPoint, pointB: IPoint, controlPoint: IPoint, position: number): IPoint {\r\n\tlet x: number = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n\tlet y: number = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n/**\r\n * [getPointOnCubicCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {IPoint}  pointA         [description]\r\n * @param  {IPoint}  pointB         [description]\r\n * @param  {IPoint}  controlPointA  [description]\r\n * @param  {IPoint}  controlPointB  [description]\r\n * @param  {number}  position       [description]\r\n * @return {IPoint}                 [description]\r\n */\r\nexport function getPointOnCubicCurve(pointA: IPoint, pointB: IPoint, controlPointA: IPoint, controlPointB: IPoint, position: number): IPoint {\r\n\tlet point: IPoint = { x: 0, y: 0 };\r\n\tlet mt1: number = 1 - position;\r\n\tlet mt2: number = mt1 * mt1;\r\n\tlet mt3: number = mt2 * mt1;\r\n\r\n\tpoint.x = pointA.x * mt3 + controlPointA.x * 3 * mt2 * position + controlPointB.x * 3 * mt1 * position * position + pointB.x * position * position * position;\r\n\tpoint.y = pointA.y * mt3 + controlPointA.y * 3 * mt2 * position + controlPointB.y * 3 * mt1 * position * position + pointB.y * position * position * position;\r\n\r\n\treturn point;\r\n}\r\n\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {IPoint}  p0        [description]\r\n * @param  {IPoint}  p1        [description]\r\n * @param  {IPoint}  p2        [description]\r\n * @param  {IPoint}  p3        [description]\r\n * @param  {number}  tensionX  [description]\r\n * @param  {number}  tensionY  [description]\r\n * @return {IPoint}            [description]\r\n */\r\nexport function getCubicControlPointA(p0: IPoint, p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\r\n\ttensionX = adjustTension(tensionX);\r\n\ttensionY = adjustTension(tensionY);\r\n\treturn { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {IPoint}  p0        [description]\r\n * @param  {IPoint}  p1        [description]\r\n * @param  {IPoint}  p2        [description]\r\n * @param  {IPoint}  p3        [description]\r\n * @param  {number}  tensionX  [description]\r\n * @param  {number}  tensionY  [description]\r\n * @return {IPoint}            [description]\r\n */\r\nexport function getCubicControlPointB(p0: IPoint, p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\r\n\ttensionX = adjustTension(tensionX);\r\n\ttensionY = adjustTension(tensionY);\r\n\treturn { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\n\r\n/**\r\n * [adjustTension description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number}  tension  [description]\r\n * @return {number}           [description]\r\n */\r\nexport function adjustTension(tension: number): number {\r\n\treturn 1 - tension + 0.00001;\r\n}\r\n\r\n/**\r\n * [normalizeAngle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number}  value  [description]\r\n * @return {number}         [description]\r\n */\r\nexport function normalizeAngle(value: number): number {\r\n\tif (value == 360) {\r\n\t\treturn 360;\r\n\t}\r\n\treturn value % 360;\r\n}\r\n\r\n\r\n\r\n/**\r\n * [normalizeAngleToRange description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo review this with various angles, can be tested on radar chart with custom start/end angles\r\n * @param {number}   value       [description]\r\n * @param {number}   startAngle  [description]\r\n * @param {number}   endAngle    [description]\r\n * @return {number}              [description]\r\n */\r\nexport function fitAngleToRange(value: number, startAngle: number, endAngle: number): number {\r\n\r\n\tif (startAngle > endAngle) {\r\n\t\tlet temp: number = startAngle;\r\n\t\tstartAngle = endAngle;\r\n\t\tendAngle = temp;\r\n\t}\r\n\r\n\tvalue = normalizeAngle(value);\r\n\r\n\tlet count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n\r\n\tif (value < startAngle) {\r\n\t\tvalue += 360 * (count + 1);\r\n\t}\r\n\r\n\tlet maxEnd: number = startAngle + (endAngle - startAngle) / 2 + 180;\r\n\tlet maxStart: number = startAngle + (endAngle - startAngle) / 2 - 180;\r\n\r\n\tif (value > endAngle) {\r\n\r\n\t\tif (value - 360 > startAngle) {\r\n\t\t\tvalue -= 360;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (value < maxEnd) {\r\n\t\t\t\tvalue = endAngle;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = startAngle;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (value < startAngle) {\r\n\t\tif (value > maxStart) {\r\n\t\t\tvalue = startAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalue = endAngle;\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n\r\n/**\r\n * Returns [[IRectangle]] of an arc in relative values, assuming that the\r\n * center is at the circle center.\r\n *\r\n * Used to find out max radius of an arc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {number}      startAngle  Start angle\r\n * @param  {number}      endAngle    End angle\r\n * @param  {number}      radius    \t Relative radius\r\n * @return {IRectangle}              Rectangle\r\n */\r\nexport function getArcRect(startAngle: number, endAngle: number, radius?: number): IRectangle {\r\n\t// do not normalize here!\r\n\t//startAngle = normalizeAngle(startAngle);\r\n\t//endAngle = normalizeAngle(endAngle);\r\n\r\n\tif (!$type.isNumber(radius)) {\r\n\t\tradius = 1;\r\n\t}\r\n\r\n\tif (startAngle == endAngle) {\r\n\t\tendAngle += 360;\r\n\t}\r\n\r\n\tif (startAngle > endAngle) {\r\n\t\tlet temp = endAngle;\r\n\t\tendAngle = startAngle;\r\n\t\tstartAngle = temp;\r\n\t}\r\n\r\n\tlet minX!: number;\r\n\tlet maxX!: number;\r\n\tlet minY!: number;\r\n\tlet maxY!: number;\r\n\r\n\tfor (let angle = startAngle; angle < endAngle; angle += 0.2) {\r\n\t\tminX = min(cos(angle) * radius, minX);\r\n\t\tmaxX = max(cos(angle) * radius, maxX);\r\n\t\tminY = min(sin(angle) * radius, minY);\r\n\t\tmaxY = max(sin(angle) * radius, maxY);\r\n\t}\r\n\r\n\treturn { x: minX, y: minY, width: (maxX - minX), height: (maxY - minY) };\r\n}\r\n\r\n/**\r\n * Returns true if a point is within rectangle\r\n *\r\n * @param  {IPoint}      point\r\n * @param  {IRectangle}  rectangle\r\n * @return {boolean}\r\n */\r\nexport function isInRectangle(point: IPoint, rectangle: IRectangle): boolean {\r\n\tif (point.x >= rectangle.x && point.x <= rectangle.x + rectangle.width && point.y > rectangle.y && point.y < rectangle.y + rectangle.height) {\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n\r\nexport function getLineIntersection(pointA1: IPoint, pointA2: IPoint, pointB1: IPoint, pointB2: IPoint) {\r\n\tlet x = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.x - pointB2.x) - (pointA1.x - pointA2.x) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n\tlet y = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n\treturn { x: x, y: y };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Math.ts","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { IClone } from \"./Clone\";\nimport { Ordering } from \"./Order\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface Iterator<A> {\n\t(push: (value: A) => boolean): void;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface Iterable<A> {\n\titerator(): Iterator<A>;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function fromArray<A>(array: Array<A>): Iterator<A> {\n\treturn (push) => {\n\t\tconst length = array.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tif (!push(array[i])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function length<A>(iter: Iterator<A>): number {\n\tlet sum = 0;\n\n\titer((_) => {\n\t\t++sum;\n\t\treturn true;\n\t});\n\n\treturn sum;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function toArray<A>(iter: Iterator<A>): Array<A> {\n\tconst output: Array<A> = [];\n\n\titer((value) => {\n\t\toutput.push(value);\n\t\treturn true;\n\t});\n\n\treturn output;\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function eachContinue<A>(iter: Iterator<A>, fn: (value: A) => boolean): void {\n\treturn iter(fn);\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function each<A>(iter: Iterator<A>, fn: (value: A) => void): void {\n\treturn iter((value) => {\n\t\tfn(value);\n\t\treturn true;\n\t});\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function sort<A>(iter: Iterator<A>, fn: (left: A, right: A) => Ordering): Iterator<A> {\n\treturn fromArray(toArray(iter).sort(fn));\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {[type]}\n */\nexport function map<A, B>(iter: Iterator<A>, fn: (value: A) => B): Iterator<B> {\n\treturn (push) => iter((value) => push(fn(value)));\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function filter<A>(iter: Iterator<A>, fn: (value: A) => boolean): Iterator<A> {\n\treturn (push) => iter((value) => {\n\t\tif (fn(value)) {\n\t\t\treturn push(value);\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function concat<A>(...args: Array<Iterator<A>>): Iterator<A> {\n\treturn (push) => {\n\t\tlet go = true;\n\n\t\tconst push2 = (value: A) => (go = push(value));\n\n\t\tconst length = args.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\targs[i](push2);\n\n\t\t\tif (!go) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function flatten<A>(iter: Iterator<Iterator<A>>): Iterator<A> {\n\treturn (push) => {\n\t\tlet go = true;\n\n\t\tconst push2 = (value: A) => (go = push(value));\n\n\t\treturn iter((value) => {\n\t\t\tvalue(push2);\n\t\t\treturn go;\n\t\t});\n\t};\n}\n\n/**\n * [number description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {[type]}\n */\nexport function indexed<A>(iter: Iterator<A>): Iterator<[number, A]> {\n\treturn (push) => {\n\t\tlet index = 0;\n\n\t\treturn iter((value) => push([index++, value]));\n\t};\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function findIndex<A>(iter: Iterator<A>, matches: (value: A) => boolean): number {\n\tlet found = false;\n\tlet i = 0;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\tfound = true;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\t++i;\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn (found ? i : -1);\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function find<A>(iter: Iterator<A>, matches: (value: A) => boolean): A | undefined {\n\tlet output;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\toutput = value;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {[type]}\n */\nexport function findMap<A, B>(iter: Iterator<A>, matches: (value: A) => B | null): B | undefined {\n\tlet output;\n\n\titer((value) => {\n\t\tconst v = matches(value);\n\n\t\tif (v !== null) {\n\t\t\toutput = v;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Iterator<A>}\n */\nexport function contains<A>(iter: Iterator<A>, matches: (value: A) => boolean): boolean {\n\tlet output = false;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\toutput = true;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {[type]}\n */\nexport function foldl<A, B>(iter: Iterator<A>, init: B, fn: (state: B, value: A) => B): B {\n\titer((value) => {\n\t\tinit = fn(init, value);\n\t\treturn true;\n\t});\n\n\treturn init;\n}\n\n/**\n * [min2 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {number |     null}        left [description]\n * @param  {number}    right [description]\n * @return {number}          [description]\n */\nfunction min2(left: number | null, right: number): number {\n\tif (left == null || right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * [min description]\n *\n * @ignore Exclude from docs\n * @todo Verify that this works correctly\n * @todo Description\n * @param  {Iterator<number>} a [description]\n * @return {number}             [description]\n */\nexport function min(a: Iterator<number>): number | null {\n\treturn foldl(a, null, min2);\n}\n\n/**\n * [max2 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {number |     null}        left [description]\n * @param  {number}    right [description]\n * @return {number}          [description]\n */\nfunction max2(left: number | null, right: number): number {\n\tif (left == null || right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * [max description]\n *\n * @ignore Exclude from docs\n * @todo Verify that this works correctly\n * @todo Description\n * @param  {Iterator<number>} a [description]\n * @return {number}             [description]\n */\nexport function max(a: Iterator<number>): number | null {\n\treturn foldl(a, null, max2);\n}\n\n\n/**\n * [join description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {Iterator<string>} iter [description]\n * @param  {string        =    \"\"}          separator [description]\n * @return {string}                [description]\n */\nexport function join(iter: Iterator<string>, separator: string = \"\"): string {\n\tlet first = true;\n\tlet init = \"\";\n\n\titer((value) => {\n\t\tif (first) {\n\t\t\tfirst = false;\n\n\t\t} else {\n\t\t\tinit += separator;\n\t\t}\n\n\t\tinit += value;\n\n\t\treturn true;\n\t});\n\n\treturn init;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class ListIterator<T extends IClone<T>> {\n\tprivate _listCopy!: Array<T>;\n\tprivate _create: () => T;\n\n\tpublic list: Iterable<T>;\n\n\t// flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list\n\tpublic createNewItems: boolean = false;\n\n\t/**\n\t * Constructor\n\t * \n\t * @param {Iterable<T>} list [description]\n\t * @param {()       =>   T}           create [description]\n\t */\n\tconstructor(list: Iterable<T>, create: () => T) {\n\t\tthis.list = list;\n\t\tthis._create = create;\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis._listCopy = toArray(this.list.iterator());\n\t}\n\n\tclear() {\n\t\tthis._listCopy.length = 0;\n\t}\n\n\tgetFirst(): $type.Optional<T> {\n\t\treturn this.returnItem(0);\n\t}\n\n\tgetLast(): $type.Optional<T> {\n\t\treturn this.returnItem(this._listCopy.length - 1);\n\t}\n\n\tfind(fn: (value: T) => boolean): $type.Optional<T> {\n\t\tlet index: number = $array.findIndex(this._listCopy, fn);\n\n\t\tif (index !== -1) {\n\t\t\tlet item = this._listCopy[index];\n\t\t\t// TODO use removeIndex instead ?\n\t\t\t$array.remove(this._listCopy, item);\n\t\t\treturn item;\n\n\t\t} else {\n\t\t\treturn this.getLast();\n\t\t}\n\t}\n\n\tremoveItem(item: T): boolean {\n\t\treturn $array.remove(this._listCopy, item);\n\t}\n\n\tprotected returnItem(index: number): $type.Optional<T> {\n\t\tif (index >= 0 && index < this._listCopy.length) {\n\t\t\tlet item = this._listCopy[index];\n\t\t\t// TODO use removeIndex instead ?\n\t\t\t$array.remove(this._listCopy, item);\n\t\t\treturn item;\n\n\t\t} else if (this.createNewItems) {\n\t\t\treturn this._create();\n\t\t}\n\t}\n\n\titerator() {\n\t\treturn fromArray(this._listCopy);\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Iterator.ts","/**\r\n * A collection of universal utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { Percent } from \"./Percent\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $string from \"./String\";\r\nimport * as $strings from \"./Strings\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MISC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined.\r\n *\r\n * @param  {Object}   fromObject  Source object\r\n * @param  {Object}   toObject    Target object\r\n * @return {Object}               Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function copyProperties(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t// only if value is set\r\n\t\tif ($type.hasValue(value)) {\r\n\t\t\t(<any>target)[key] = value;\r\n\t\t}\r\n\t});\r\n\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param  {Object}   fromObject  Source object\r\n * @param  {Object}   toObject    Target object\r\n * @return {Object}               Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t// only if value is set\r\n\t\tif ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n\t\t\t(<any>target)[key] = value;\r\n\t\t}\r\n\t});\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Copies all properties of one object to the other.\r\n *\r\n * @param  {Object}  source     Source object\r\n * @param  {Object}  recipient  Target object\r\n * @return {Object}             Updated target object\r\n */\r\nexport function copy(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t(<any>target)[key] = value;\r\n\t});\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Checks if value is not empty (undefined or zero-length string).\r\n *\r\n * @param  {Optional<string>}  value  Value to check\r\n * @return {boolean}                  `true` if value is not \"empty\"\r\n */\r\nexport function isNotEmpty(value: $type.Optional<string>): value is string {\r\n\treturn $type.hasValue(value) && (value.toString() !== \"\");\r\n}\r\n\r\n/**\r\n * [relativeToValue description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {$type.Optional<number | Percent>}  percent  [description]\r\n * @param  {number}                            full     [description]\r\n * @return {number}                                     [description]\r\n */\r\nexport function relativeToValue(percent: $type.Optional<number | Percent>, full: number): number {\r\n\tif ($type.isNumber(percent)) {\r\n\t\treturn percent;\r\n\t} else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n\t\treturn full * percent.value;\r\n\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * [relativeRadiusToValue description]\r\n *\r\n * Differs from relativeToValue so that if a value is negative, it subtracts\r\n * it from full value.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {$type.Optional<number | Percent>}  percent             [description]\r\n * @param  {number}                            full                [description]\r\n * @param  {boolean}                           subtractIfNegative  [description]\r\n * @return {number}                                                [description]\r\n */\r\nexport function relativeRadiusToValue(percent: $type.Optional<number | Percent>, full: number, subtractIfNegative?: boolean): $type.Optional<number> {\r\n\tlet value: $type.Optional<number>;\r\n\r\n\tif ($type.isNumber(percent)) {\r\n\t\tvalue = percent;\r\n\r\n\t\tif (value < 0) {\r\n\t\t\tif (subtractIfNegative) {\r\n\t\t\t\tvalue = full + value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = full - value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else if (percent != null && $type.isNumber(percent.value)) {\r\n\t\tvalue = full * percent.value;\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * [valueToRelative description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number | Percent}  value  [description]\r\n * @param  {number}            full   [description]\r\n * @return {number}                   [description]\r\n */\r\nexport function valueToRelative(value: number | Percent, full: number): number {\r\n\tif (value instanceof Percent) {\r\n\t\treturn value.value;\r\n\t}\r\n\telse {\r\n\t\treturn value / full;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns pixel ratio of the current screen (used on retina displays).\r\n * \r\n * @return {number} Pixel ratio\r\n */\r\nexport function getPixelRatio(): number {\r\n\tlet ratio = window.devicePixelRatio || 1;\r\n\treturn ratio;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts camelCased text to dashed version:\r\n * (\"thisIsString\" > \"this-is-string\")\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function camelToDashed(str: string): string {\r\n\treturn str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\n/**\r\n * Converts tring to uppercase.\r\n *\r\n * @param  {string}  str  String to convert\r\n * @return {string}       uppercased string\r\n * @todo Maybe make it better\r\n */\r\nexport function capitalize(str: string): string {\r\n\tlet arr: string[] = str.split(\"\");\r\n\tarr[0] = arr[0].toUpperCase();\r\n\treturn arr.join(\"\");\r\n}\r\n\r\n/**\r\n * Converts any value into its string representation.\r\n *\r\n * @param  {any}     value  Value\r\n * @return {string}         String represantation of the value\r\n */\r\nexport function stringify(value: any): string {\r\n\treturn JSON.stringify(value);\r\n}\r\n\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n * \r\n * @param  {string}  value  Unsescaped string\r\n * @return {string}         Escaped string\r\n */\r\nexport function escapeForRgex(value: string): string {\r\n\treturn value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Splits the text into multiple lines, respecting maximum character count.\r\n * Prioretizes splitting on spaces and punctuation. Falls back on splitting\r\n * mid-word if there's no other option.\r\n *\r\n * @param  {string}    text      Text\r\n * @param  {number}    maxChars  Maximum number of characters per line\r\n * @return {string[]}            An array of split text\r\n */\r\nexport function splitTextByCharCount(text: string, maxChars: number, fullWords?: boolean, rtl?: boolean): string[] {\r\n\r\n\t// Maybe the text fits?\r\n\tif (text.length <= maxChars) {\r\n\t\treturn [text];\r\n\t}\r\n\r\n\t// Init result\r\n\tlet res: string[] = [];\r\n\r\n\t// Split by words or by charts\r\n\tif (fullWords) {\r\n\r\n\t\t// Split by words first\r\n\r\n\t\t// Split by spacing\r\n\t\tlet currentIndex: number = -1;\r\n\t\tlet tmpText = text.replace(/([,;:!?\\\\\\/\\.\\s]+)/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n\t\tlet words = tmpText.split($strings.PLACEHOLDER);\r\n\r\n\t\t// Process each word\r\n\t\tfor (let i = 0; i < words.length; i++) {\r\n\r\n\t\t\t// Get word and symbol count\r\n\t\t\tlet word: string = words[i];\r\n\t\t\tlet wordLength: number = word.length;\r\n\r\n\t\t\t// Ignore empty words\r\n\t\t\tif (wordLength === 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Check word length\r\n\t\t\t//if ((wordLength > maxChars) && fullWords !== true) {\r\n\t\t\tif (wordLength > maxChars) {\r\n\t\t\t\t// A single word is longer than allowed symbol count\r\n\t\t\t\t// Break it up\r\n\t\t\t\tif (rtl) {\r\n\t\t\t\t\tword = reverseString(word);\r\n\t\t\t\t}\r\n\t\t\t\tlet parts: RegExpMatchArray | null = word.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t\tif (parts) {\r\n\t\t\t\t\tif (rtl) {\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tparts[x] = reverseString(parts[x]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//parts.reverse();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres = res.concat(parts);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Init current line\r\n\t\t\t\tif (currentIndex === -1) {\r\n\t\t\t\t\tres.push(\"\");\r\n\t\t\t\t\tcurrentIndex = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if we need to break into another line\r\n\t\t\t\tif (((res[currentIndex].length + wordLength + 1) > maxChars) && res[currentIndex] !== \"\") {\r\n\t\t\t\t\tres.push(\"\");\r\n\t\t\t\t\tcurrentIndex++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add word\r\n\t\t\t\tres[currentIndex] += word;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Update index\r\n\t\t\tcurrentIndex = res.length - 1;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\r\n\t\t// Splitting by anywhere (living la vida facil)\r\n\t\tlet parts: RegExpMatchArray | null = text.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n\r\n\t\tif (parts) {\r\n\t\t\tif (rtl) {\r\n\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\tparts[x] = reverseString(parts[x]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres = parts;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Do we have only one word that does not fit?\r\n\t// Since fullWords is set and we can't split the word, we end up with empty\r\n\t// set.\r\n\tif (res.length == 1 && fullWords && (res[0].length > maxChars)) {\r\n\t\tres = [];\r\n\t}\r\n\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * Truncates the text to certain character count.\r\n *\r\n * Will add ellipsis if the string is truncated. Optionally, can truncate on\r\n * full words only.\r\n *\r\n * For RTL support, pass in the fifth parameter as `true`.\r\n *\r\n * @param  {string}   text       Input text\r\n * @param  {number}   maxChars   Maximum character count of output\r\n * @param  {string}   ellipsis   Ellipsis string, i.e. \"...\"\r\n * @param  {boolean}  fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`\r\n * @param  {boolean}  rtl        Is this an RTL text?\r\n * @return {string}              Truncated text\r\n */\r\nexport function truncateWithEllipsis(text: string, maxChars: number, ellipsis: string, fullWords?: boolean, rtl?: boolean): string {\r\n\r\n\tif (text.length <= maxChars) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\t// Calc max chars\r\n\tmaxChars -= ellipsis.length;\r\n\tif (maxChars < 1) {\r\n\t\tmaxChars = 1;\r\n\t\t//ellipsis = \"\";\r\n\t}\r\n\r\n\t// Get lines\r\n\tlet lines = splitTextByCharCount(text, maxChars, fullWords, rtl);\r\n\r\n\t// Use first line\r\n\treturn (lines[0] || \"\") + ellipsis;\r\n}\r\n\r\n/**\r\n * Removes whitespace from beginning and end of the string.\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function trim(str: string): string {\r\n\treturn str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n};\r\n\r\n/**\r\n * Removes whitespace from end of the string.\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function rtrim(str: string): string {\r\n\treturn str.replace(/[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n};\r\n\r\n/**\r\n * Removes whitespace from beginning of the string.\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function ltrim(str: string): string {\r\n\treturn str.replace(/^[\\s\\uFEFF\\xA0]+/g, \"\");\r\n};\r\n\r\n/**\r\n * Reverses string.\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function reverseString(str: string): string {\r\n\treturn str.split(\"\").reverse().join(\"\");\r\n}\r\n\r\n/**\r\n * Removes quotes from the string.\r\n *\r\n * @param  {string}  str  Input\r\n * @return {string}       Output\r\n */\r\nexport function unquote(str: string): string {\r\n\tlet res = str.trim();\r\n\tres = str.replace(/^'(.*)'$/, \"$1\");\r\n\tif (res == str) {\r\n\t\tres = str.replace(/^\"(.*)\"$/, \"$1\");\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param  {any}            value  A numeric value\r\n * @param  {number = 0}     len    Result string length in characters\r\n * @param  {string = \"0\"}   char   A character to use for padding\r\n * @return {string}                Padded value as string\r\n */\r\nexport function padString(value: any, len: number = 0, char: string = \"0\"): string {\r\n\tif (typeof value !== \"string\")\r\n\t\tvalue = value.toString();\r\n\treturn len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\n\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param {string}   format  Format string\r\n * @return {string}          Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format: string): string {\r\n\r\n\t// Undefined?\r\n\tif (typeof format === \"undefined\")\r\n\t\treturn $strings.STRING;\r\n\r\n\t// Cleanup and lowercase format\r\n\tformat = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n\r\n\t// Remove style tags\r\n\tformat = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n\r\n\t// Trim\r\n\tformat = format.trim();\r\n\r\n\t// Check for any explicit format hints (i.e. /Date)\r\n\tlet hints: RegExpMatchArray | null = format.match(/\\/(date|number|duration)$/);\r\n\r\n\tif (hints) {\r\n\t\treturn hints[1];\r\n\t}\r\n\r\n\t// Check for explicit hints\r\n\tif (format === $strings.NUMBER) {\r\n\t\treturn $strings.NUMBER;\r\n\t}\r\n\r\n\tif (format === $strings.DATE) {\r\n\t\treturn $strings.DATE;\r\n\t}\r\n\r\n\tif (format === $strings.DURATION) {\r\n\t\treturn $strings.DURATION;\r\n\t}\r\n\r\n\t// Detect number formatting symbols\r\n\tif (format.match(/[#0]/)) {\r\n\t\treturn $strings.NUMBER;\r\n\t}\r\n\r\n\t// Detect date formatting symbols\r\n\tif (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n\t\treturn $strings.DATE;\r\n\t}\r\n\r\n\t// Nothing? Let's display as string\r\n\treturn $strings.STRING;\r\n}\r\n\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  format  Format\r\n * @return {string}          Cleaned format\r\n */\r\nexport function cleanFormat(format: string): string {\r\n\treturn format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param  {string}  text  Source string\r\n * @return {string}        String without tags\r\n */\r\nexport function stripTags(text: string): string {\r\n\treturn text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param  {string}  text  String to conver\r\n * @return {string}        Converted string\r\n */\r\nexport function plainText(text: string): string {\r\n\treturn text ? stripTags(text.replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CONVERSION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param  {number}  value  Numeric value\r\n * @return {string}         Numeric value as string\r\n */\r\nexport function numberToString(value: number): string {\r\n\t// TODO handle Infinity and -Infinity\r\n\tif ($type.isNaN(value)) {\r\n\t\treturn \"NaN\";\r\n\t}\r\n\r\n\tif (value === Infinity) {\r\n\t\treturn \"Infinity\";\r\n\t}\r\n\r\n\tif (value === -Infinity) {\r\n\t\treturn \"-Infinity\";\r\n\t}\r\n\r\n\t// Negative 0\r\n\tif ((value === 0) && (1 / value === -Infinity)) {\r\n\t\treturn \"-0\";\r\n\t}\r\n\r\n\t// Preserve negative and deal with absoute values\r\n\tlet negative = value < 0;\r\n\r\n\tvalue = Math.abs(value);\r\n\r\n\t// TODO test this\r\n\tlet parsed = $type.getValue(/^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value));\r\n\tlet digits = parsed[1];\r\n\tlet decimals = parsed[2] || \"\";\r\n\r\n\tlet res: string;\r\n\r\n\t// Leave the nummber as it is if it does not use exponents\r\n\tif (parsed[3] == null) {\r\n\t\tres = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n\r\n\t} else {\r\n\t\tlet exponent = +parsed[3];\r\n\r\n\t\t// Deal with decimals\r\n\t\tif (value < 1) {\r\n\t\t\tlet zeros = exponent - 1;\r\n\r\n\t\t\tres = \"0.\" + $string.repeat(\"0\", zeros) + digits + decimals;\r\n\r\n\t\t\t// Deal with integers\r\n\t\t} else {\r\n\t\t\tlet zeros = exponent - decimals.length;\r\n\r\n\t\t\tif (zeros === 0) {\r\n\t\t\t\tres = digits + decimals;\r\n\r\n\t\t\t} else if (zeros < 0) {\r\n\t\t\t\tres = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tres = digits + decimals + $string.repeat(\"0\", zeros);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn negative ? \"-\" + res : res;\r\n}\r\n\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param  {Date | number | string}  value  A value of any type\r\n * @return {Date}                           Date object representing a value\r\n */\r\nexport function anyToDate(value: Date | number | string): Date {\r\n\tif ($type.isDate(value)) {\r\n\t\t// TODO maybe don't create a new Date ?\r\n\t\treturn new Date(value);\r\n\t}\r\n\r\n\telse if ($type.isNumber(value)) {\r\n\t\treturn new Date(value);\r\n\t}\r\n\r\n\telse {\r\n\t\t// Try converting to number (assuming timestamp)\r\n\t\tlet num = Number(value);\r\n\r\n\t\tif (!$type.isNumber(num)) {\r\n\t\t\treturn new Date(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new Date(num);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Tries converting any value to a number.\r\n *\r\n * @param  {any}     value  Source value\r\n * @return {number}         Number\r\n */\r\nexport function anyToNumber(value: Date | number | string): $type.Optional<number> {\r\n\tif ($type.isDate(value)) {\r\n\t\treturn value.getTime();\r\n\t}\r\n\r\n\telse if ($type.isNumber(value)) {\r\n\t\treturn value;\r\n\t}\r\n\r\n\telse if ($type.isString(value)) {\r\n\t\t// Try converting to number (assuming timestamp)\r\n\t\tlet num = Number(value);\r\n\r\n\t\tif (!$type.isNumber(num)) {\r\n\t\t\t// Failing\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param  {Date}     date  Date\r\n * @param  {boolean}  utc   Assume UTC dates?\r\n * @return {number}         Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date: Date, utc: boolean = false): number {\r\n\tlet first = new Date(date.getFullYear(), 0, 1, 0, 0, 0, 0);\r\n\treturn Math.floor((date.getTime() - first.getTime()) / 86400000) + 1;\r\n}\r\n\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param  {Date}     date  Date\r\n * @param  {boolean}  utc   Assume UTC dates?\r\n * @return {number}         Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date: Date, utc: boolean = false): number {\r\n\tlet day = getYearDay(date, utc) - 1;\r\n\tlet week = Math.floor((day - (date.getDay() || 7) + 10) / 7);\r\n\tif (week === 0) {\r\n\t\tweek = 53;\r\n\t}\r\n\telse if (week === 53) {\r\n\t\tweek = 1;\r\n\t}\r\n\treturn week;\r\n}\r\n\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param  {Date}     date  Source Date\r\n * @param  {boolean}  utc   Assume UTC dates?\r\n * @return {number}         Week number in month\r\n */\r\nexport function getMonthWeek(date: Date, utc: boolean = false): number {\r\n\tlet firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n\tlet currentWeek = getWeek(date, utc);\r\n\tif (currentWeek == 1) {\r\n\t\tcurrentWeek = 53;\r\n\t}\r\n\treturn currentWeek - firstWeek + 1;\r\n}\r\n\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param  {number}   week     Week\r\n * @param  {number}   year     Year\r\n * @param  {number}   weekday  Weekday\r\n * @param  {boolean}  utc      Assume UTC dates\r\n * @return {number}            Day in a year\r\n */\r\nexport function getDayFromWeek(week: number, year: number, weekday: number = 1, utc: boolean = false): number {\r\n\tlet date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n\tif (utc) {\r\n\t\tdate.setUTCFullYear(year);\r\n\t}\r\n\tlet day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n\treturn day;\r\n}\r\n\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param  {number}  hours  24-hour number\r\n * @return {number}         12-hour number\r\n */\r\nexport function get12Hours(hours: number, base?: number): number {\r\n\tif (hours > 12) {\r\n\t\thours -= 12;\r\n\t}\r\n\telse if (hours === 0) {\r\n\t\thours = 12;\r\n\t}\r\n\treturn $type.hasValue(base) ? hours + (base - 1) : hours;\r\n}\r\n\r\n/**\r\n * Returns a string name of the tome zone.\r\n *\r\n * @param  {Date}     date     Date object\r\n * @param  {boolean}  long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param  {boolean}  savings  Include information if it's in daylight savings mode\r\n * @param  {boolean}  utc      Assume UTC dates\r\n * @return {string}            Time zone name\r\n */\r\nexport function getTimeZone(date: Date, long: boolean = false, savings: boolean = false, utc: boolean = false): string {\r\n\tif (utc) {\r\n\t\treturn long ? \"Coordinated Universal Time\" : \"UTC\";\r\n\t}\r\n\tlet wotz = date.toLocaleString(\"UTC\");\r\n\tlet wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n\t//wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n\tif (savings === false) {\r\n\t\twtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n\t}\r\n\treturn wtz;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * NUMBER-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns a random number between `from` and `to`.\r\n *\r\n * @param  {number}  from  From number\r\n * @param  {number}  to    To number\r\n * @return {number}        Random number\r\n */\r\nexport function random(from: number, to: number): number {\r\n\treturn Math.floor(Math.random() * to) + from;\r\n}\r\n\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * @param  {number}  value  Input value\r\n * @param  {number}  min    Minimum value\r\n * @param  {number}  max    Maximum value\r\n * @return {number}         Possibly adjusted value\r\n */\r\nexport function fitNumber(value: number, min: number, max: number): number {\r\n\tif (value > max) {\r\n\t\treturn max;\r\n\t}\r\n\telse if (value < min) {\r\n\t\treturn min;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * If the value is does not fit withing specified range, it \"wraps\" around the\r\n * values.\r\n *\r\n * For example, if we have input value 10 with min set at 1 and max set at 8,\r\n * the value will not fit. The remainder that does not fit (2) will be added\r\n * to `min`, resulting in 3.\r\n *\r\n * The output of regular `fitNumber()` would return 8 instead.\r\n *\r\n * @param  {number}  value  Input value\r\n * @param  {number}  min    Minimum value\r\n * @param  {number}  max    Maximum value\r\n * @return {number}         Possibly adjusted value\r\n */\r\nexport function fitNumberRelative(value: number, min: number, max: number): number {\r\n\tlet gap = max - min;\r\n\tif (value > max) {\r\n\t\tvalue = min + (value - gap * Math.floor(value / gap));\r\n\t}\r\n\telse if (value < min) {\r\n\t\tvalue = min + (value - gap * Math.floor(value / gap));\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * SPRITE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts SVG element coordinates to coordinates within specific [[Sprite]].\r\n *\r\n * @param  {IPoint}  point   SVG coordinates\r\n * @param  {Sprite}  sprite  Sprite\r\n * @return {IPoint}         Sprite coordinates\r\n */\r\nexport function svgPointToSprite(point: IPoint, sprite: Sprite): IPoint {\r\n\tlet x: number = point.x;\r\n\tlet y: number = point.y;\r\n\tlet sprites: Sprite[] = [];\r\n\tif (sprite) {\r\n\t\twhile ($type.hasValue(sprite.parent)) {\r\n\t\t\tsprites.push(sprite);\r\n\t\t\tsprite = sprite.parent as any;\r\n\t\t}\r\n\r\n\t\tsprites.reverse();\r\n\r\n\t\tfor (var i = 0; i < sprites.length; i++) {\r\n\t\t\tlet sprite: Sprite = sprites[i];\r\n\t\t\tlet angle: number = sprite.rotation;\r\n\r\n\t\t\tlet relativeX = x - sprite.pixelX - sprite.ex;\r\n\t\t\tlet relativeY = y - sprite.pixelY - sprite.ey;\r\n\r\n\t\t\tif (sprite.dx) {\r\n\t\t\t\tx -= sprite.dx;\r\n\t\t\t}\r\n\t\t\tif (sprite.dy) {\r\n\t\t\t\ty -= sprite.dy;\r\n\t\t\t}\r\n\r\n\t\t\tx = ($math.cos(-angle) * relativeX - $math.sin(-angle) * relativeY) / sprite.scale - sprite.pixelPaddingLeft;\r\n\t\t\ty = ($math.cos(-angle) * relativeY + $math.sin(-angle) * relativeX) / sprite.scale - sprite.pixelPaddingTop;\r\n\t\t}\r\n\t}\r\n\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n/**\r\n * Converts coordinates within [[Sprite]] to coordinates relative to the whole\r\n * SVG element.\r\n *\r\n * @param  {IPoint}  point   Sprite coordinates\r\n * @param  {Sprite}  sprite  Sprite\r\n * @return {IPoint}          SVG coordinates\r\n */\r\nexport function spritePointToSvg(point: IPoint, sprite: Sprite): IPoint {\r\n\tlet x: number = point.x;\r\n\tlet y: number = point.y;\r\n\r\n\tif (sprite) {\r\n\t\twhile ($type.hasValue(sprite.parent)) {\r\n\t\t\tlet angle: number = sprite.rotation;\r\n\r\n\t\t\tx += sprite.pixelPaddingLeft + sprite.ex;\r\n\t\t\ty += sprite.pixelPaddingTop + sprite.ey;\r\n\r\n\t\t\tif (sprite.dx) {\r\n\t\t\t\tx += sprite.dx;\r\n\t\t\t}\r\n\t\t\tif (sprite.dy) {\r\n\t\t\t\ty += sprite.dy;\r\n\t\t\t}\r\n\r\n\t\t\tlet relativeX = sprite.pixelX + ((x * $math.cos(angle) - y * $math.sin(angle))) * sprite.scale;\r\n\t\t\tlet relativeY = sprite.pixelY + ((x * $math.sin(angle) + y * $math.cos(angle))) * sprite.scale;\r\n\r\n\t\t\tx = relativeX;\r\n\t\t\ty = relativeY;\r\n\r\n\t\t\tsprite = sprite.parent as any;\r\n\t\t}\r\n\t}\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n\r\n/**\r\n * Converts coordinates of one sprite to another.\r\n *\r\n * @param  {IPoint}  point   Sprite coordinates\r\n * @param  {Sprite}  sprite  Sprite\r\n * @param  {Sprite}  toSprite  Sprite\r\n * @return {IPoint}  converted coordinates\r\n */\r\nexport function spritePointToSprite(point: IPoint, sprite: Sprite, toSprite: Sprite): IPoint {\r\n\treturn svgPointToSprite(spritePointToSvg(point, sprite), toSprite);\r\n}\r\n\r\n\r\n/**\r\n * Converts a rectangle expressed in SVG element coordinates to coordinates\r\n * within specific [[Sprite]].\r\n *\r\n * @param  {IRectangle}  rect    SVG rectangle\r\n * @param  {Sprite}      sprite  Sprite\r\n * @return {IRectangle}          Sprite rectangle\r\n */\r\nexport function svgRectToSprite(rect: IRectangle, sprite: Sprite): IRectangle {\r\n\tlet p1: IPoint = svgPointToSprite(rect, sprite);\r\n\tlet p2: IPoint = svgPointToSprite({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n\treturn { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n\r\n/**\r\n * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.\r\n *\r\n * @param  {IRectangle}  rect    Sprite rectangle\r\n * @param  {Sprite}      sprite  Sprite\r\n * @return {IRectangle}          SVG rectangle\r\n */\r\nexport function spriteRectToSvg(rect: IRectangle, sprite: Sprite): IRectangle {\r\n\tlet p1: IPoint = spritePointToSvg(rect, sprite);\r\n\tlet p2: IPoint = spritePointToSvg({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n\treturn { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n\r\n/**\r\n * Converts global document-wide coordinates to coordinates within SVG element.\r\n *\r\n * @param  {IPoint}       point         Global coordinates\r\n * @param  {HTMLElement}  svgContainer  SVG element\r\n * @return {IPoint}                     SVG coordinates\r\n */\r\nexport function documentPointToSvg(point: IPoint, svgContainer: HTMLElement): IPoint {\r\n\tlet bbox = svgContainer.getBoundingClientRect();\r\n\r\n\treturn {\r\n\t\t\"x\": point.x - bbox.left,\r\n\t\t\"y\": point.y - bbox.top\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts SVG coordinates to global document-wide coordinates.\r\n *\r\n * @param  {IPoint}       point         SVG coordinates\r\n * @param  {HTMLElement}  svgContainer  SVG element\r\n * @return {IPoint}                     Global coordinates\r\n */\r\nexport function svgPointToDocument(point: IPoint, svgContainer: HTMLElement): IPoint {\r\n\tlet bbox = svgContainer.getBoundingClientRect();\r\n\r\n\treturn {\r\n\t\t\"x\": point.x + bbox.left,\r\n\t\t\"y\": point.y + bbox.top\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts document-wide global coordinates to coordinates within specific\r\n * [[Sprite]].\r\n *\r\n * @param  {IPoint}  point   Global coordinates\r\n * @param  {Sprite}  sprite  Sprite\r\n * @return {IPoint}          Sprite coordinates\r\n */\r\nexport function documentPointToSprite(point: IPoint, sprite: Sprite): IPoint {\r\n\tif (sprite) {\r\n\t\tlet svgPoint: IPoint = documentPointToSvg(point, $type.getValue(sprite.htmlContainer));\r\n\t\treturn svgPointToSprite(svgPoint, sprite);\r\n\t}\r\n\telse {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts coordinates within [[Sprite]] to global document coordinates.\r\n *\r\n * @param  {IPoint}  point   Sprite coordinates\r\n * @param  {Sprite}  sprite  Sprite\r\n * @return {IPoint}          Global coordinates\r\n */\r\nexport function spritePointToDocument(point: IPoint, sprite: Sprite): IPoint {\r\n\tif (sprite) {\r\n\t\tlet svgPoint: IPoint = spritePointToSvg(point, sprite);\r\n\t\treturn svgPointToDocument(svgPoint, $type.getValue(sprite.htmlContainer));\r\n\t}\r\n\telse {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DEPRECATED FUNCTIONS\r\n * @todo Review and remove\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns element's width.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {HTMLElement}  element  Element\r\n * @return {number}                Width (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function width(element: HTMLElement): number {\r\n\treturn element.clientWidth;\r\n}\r\n\r\n/**\r\n * Returns element's height.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {HTMLElement}  element  Element\r\n * @return {number}                Height (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function height(element: HTMLElement): number {\r\n\treturn element.clientHeight;\r\n}\r\n\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {number}  number  Input number\r\n * @return {number}          Number of decimals\r\n */\r\nexport function decimalPlaces(number: number): number {\r\n\tvar match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n\tif (!match) { return 0; }\r\n\treturn Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n\r\n\r\n/**\r\n * A parsed URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface Url {\r\n\tprotocol: string;\r\n\tseparator: string;\r\n\tauthority: string;\r\n\tdomain: string;\r\n\tport: string;\r\n\tpath: string;\r\n\tquery: string;\r\n\thash: string;\r\n}\r\n\r\nconst urlRegexp = /^([a-zA-Z][a-zA-Z0-9\\+\\.\\-]*:)?(?:(\\/\\/)([^\\@]+\\@)?([^\\/\\?\\#\\:]*)(\\:[0-9]+)?)?([^\\?\\#]*)(\\?[^\\#]*)?(\\#.*)?$/;\r\n\r\n/**\r\n * Parses a URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function parseUrl(url: string): Url {\r\n\tconst match = urlRegexp.exec(url);\r\n\r\n\treturn {\r\n\t\tprotocol: (match && match[1]) || \"\",\r\n\t\tseparator: (match && match[2]) || \"\",\r\n\t\tauthority: (match && match[3]) || \"\",\r\n\t\tdomain: (match && match[4]) || \"\",\r\n\t\tport: (match && match[5]) || \"\",\r\n\t\tpath: (match && match[6]) || \"\",\r\n\t\tquery: (match && match[7]) || \"\",\r\n\t\thash: (match && match[8]) || \"\"\r\n\t};\r\n}\r\n\r\n/**\r\n * Serializes a Url into a string\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function serializeUrl(url: Url): string {\r\n\treturn url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;\r\n}\r\n\r\n/**\r\n * Checks whether a Url is relative or not\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO is this correct ?\r\nfunction isRelativeUrl(url: Url): boolean {\r\n\treturn url.protocol === \"\" &&\r\n\t\turl.separator === \"\" &&\r\n\t\turl.authority === \"\" &&\r\n\t\turl.domain === \"\" &&\r\n\t\turl.port === \"\";\r\n}\r\n\r\n/**\r\n * Joins together two URLs, resolving relative URLs correctly\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function joinUrl(left: string, right: string): string {\r\n\tconst parsedLeft = parseUrl(left);\r\n\tconst parsedRight = parseUrl(right);\r\n\r\n\tif (isRelativeUrl(parsedLeft)) {\r\n\t\tthrow new Error(\"Left URL is not absolute\");\r\n\t}\r\n\r\n\tif (isRelativeUrl(parsedRight)) {\r\n\t\t// TODO is this correct ?\r\n\t\tif (parsedRight.path !== \"\") {\r\n\t\t\tif (parsedRight.path[0] === \"/\") {\r\n\t\t\t\tparsedLeft.path = parsedRight.path;\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t} else {\r\n\t\t\t\tconst leftPath = parsedLeft.path.split(/\\//);\r\n\t\t\t\tconst rightPath = parsedRight.path.split(/\\//);\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t\tif (leftPath.length === 0) {\r\n\t\t\t\t\tif (rightPath.length !== 0) {\r\n\t\t\t\t\t\tleftPath.push(\"\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (leftPath.length > 1) {\r\n\t\t\t\t\tleftPath.pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.pushAll(leftPath, rightPath);\r\n\r\n\t\t\t\tparsedLeft.path = leftPath.join(\"/\");\r\n\r\n\t\t\t\tif (parsedLeft.path !== \"\" && parsedLeft.path[0] !== \"/\") {\r\n\t\t\t\t\tthrow new Error(\"URL path must start with /\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO is this correct ?\r\n\t\tparsedLeft.query = parsedRight.query;\r\n\t\tparsedLeft.hash = parsedRight.hash;\r\n\r\n\t\treturn serializeUrl(parsedLeft);\r\n\r\n\t} else {\r\n\t\treturn serializeUrl(parsedRight);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Utils.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport { Optional } from \"./Type\";\r\n\r\n/**\r\n * Defines interface for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IDisposer {\r\n\tisDisposed(): boolean;\r\n\tdispose(): void;\r\n}\r\n\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer implements IDisposer {\r\n\r\n\t/**\r\n\t * Is object disposed?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _disposed: boolean;\r\n\r\n\t/**\r\n\t * Method that disposes the object.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tprivate _dispose: () => void;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {function}  dispose  Function that disposes object\r\n\t */\r\n\tconstructor(dispose: () => void) {\r\n\t\tthis._disposed = false;\r\n\t\tthis._dispose = dispose;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if object is disposed.\r\n\t *\r\n\t * @return {boolean} Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\t\t\tthis._dispose();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends Disposer {\r\n\tconstructor(disposers: Array<IDisposer>) {\r\n\t\tsuper(() => {\r\n\t\t\t$array.each(disposers, (x) => {\r\n\t\t\t\tx.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer<T extends IDisposer> extends Disposer {\r\n\r\n\t/**\r\n\t * Current disposer.\r\n\t *\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprivate _disposer: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Current value.\r\n\t *\r\n\t * @type {Optional<T>}\r\n\t */\r\n\tprivate _value: Optional<T>;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper(() => {\r\n\t\t\tif ($type.hasValue(this._disposer)) {\r\n\t\t\t\tthis._disposer.dispose();\r\n\t\t\t\tthis._disposer = undefined;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current value.\r\n\t *\r\n\t * @return {Optional<T>} Value\r\n\t */\r\n\tpublic get(): Optional<T> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets value and disposes previous disposer if it was set.\r\n\t *\r\n\t * @param {Optional<T>}          value     New value\r\n\t * @param {Optional<IDisposer>}  disposer  Disposer\r\n\t */\r\n\tpublic set(value: Optional<T>, disposer: Optional<IDisposer>): void {\r\n\t\tif ($type.hasValue(this._disposer)) {\r\n\t\t\tthis._disposer.dispose();\r\n\t\t}\r\n\r\n\t\tthis._disposer = disposer;\r\n\t\tthis._value = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the disposer value.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.set(undefined, undefined);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n\r\n\t/**\r\n\t * [_counter description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprivate _counter: number = 0;\r\n\r\n\t/**\r\n\t * [increment description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic increment() {\r\n\t\t// TODO throw an error if it is disposed\r\n\t\t++this._counter;\r\n\r\n\t\t// TODO make this more efficient\r\n\t\treturn new Disposer(() => {\r\n\t\t\t--this._counter;\r\n\r\n\t\t\tif (this._counter === 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Disposer.ts","/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Represents a relative value. (percent)\n */\nexport class Percent {\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @type {number}\n\t */\n\tprotected _value: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param {number}  percent  Percent value\n\t */\n\tconstructor(percent: number) {\n\t\tthis._value = percent;\n\t}\n\n\t/**\n\t * Relative value.\n\t *\n\t * E.g. 100% is 1, 50% is 0.5, etc.\n\t *\n\t * This is useful to apply transformations to other values. E.g.:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = new am4core.Percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = new am4core.Percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * @readonly\n\t * @return {number} Relative value\n\t */\n\tpublic get value(): number {\n\t\treturn this._value / 100;\n\t}\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @return {number} Percent\n\t */\n\tpublic get percent(): number {\n\t\treturn this._value;\n\t}\n\n\t/*public toString(): string {\n\t\treturn \"\" + this._value + \"%\";\n\t}\n\n\tpublic toNumber(): number {\n\t\treturn this.percent;\n\t}*/\n\n}\n\n\n/**\n * Converts numeric percent value to a proper [[Percent]] object.\n *\n * ```TypeScript\n * pieSeries.radius = am4core.percent(80);\n * ```\n * ```JavaScript\n * pieSeries.radius = am4core.percent(80);\n * ```\n *\n * @param  {number}   value  Percent\n * @return {Percent}         Percent object\n */\nexport function percent(value: number): Percent {\n\treturn new Percent(value);\n}\n\n\n/**\n * Checks if value is a [[Percent]] object.\n *\n * @ignore Exclude from docs\n * @param  {any}      value  Input value\n * @return {boolean}         Is percent?\n */\nexport function isPercent(value: any): boolean {\n\treturn value instanceof Percent;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Percent.ts","/**\r\n * Container module\r\n * @todo Needs description\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"./Sprite\";\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { Animation } from \"./utils/Animation\";\r\nimport { List, IListEvents, ListGrouper } from \"./utils/List\";\r\nimport { VerticalAlign } from \"./defs/VerticalAlign\";\r\nimport { IDisposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport { Dictionary, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { Align } from \"./defs/Align\";\r\nimport { Group } from \"./rendering/Group\";\r\nimport { Rectangle } from \"./elements/Rectangle\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport { Percent } from \"./utils/Percent\";\r\nimport { registry } from \"./Registry\";\r\nimport { Preloader } from \"./elements/Preloader\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { Optional } from \"./utils/Type\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Paper } from \"./rendering/Paper\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $type from \"./utils/Type\";\r\nimport { IRectangle } from \"./defs/IRectangle\";\r\nimport { system } from \"./System\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available font weights.\r\n *\r\n * @type {string}\r\n */\r\nexport type FontWeight = \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\r\n\r\n/**\r\n * Defines available text decorations.\r\n *\r\n * @type {string}\r\n */\r\nexport type TextDecoration = \"none\" | \"underline\" | \"overline\" | \"line-through\" | \"blink\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n// Defined in DataItem.ts\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available [[Container]] layout types\r\n * @type {string}\r\n */\r\nexport type ContainerLayout = \"absolute\" | \"vertical\" | \"horizontal\" | \"grid\" | \"none\";\r\n\r\n/**\r\n * Defines properties for [[Container]]\r\n */\r\nexport interface IContainerProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", or \"grid\".\r\n\t *\r\n\t * @default \"absolute\"\r\n\t * @type {ContainerLayout}\r\n\t */\r\n\tlayout?: ContainerLayout;\r\n\r\n\t/**\r\n\t * Default font weight.\r\n\t *\r\n\t * @default \"normal\"\r\n\t * @type {FontWeight}\r\n\t */\r\n\tfontWeight?: FontWeight;\r\n\r\n\t/**\r\n\t * Font size for the text.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * Font family for the text.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tfontFamily?: string;\r\n\r\n\t/**\r\n\t * Default font decoration.\r\n\t *\r\n\t * @default \"none\"\r\n\t * @type {TextDecoration}\r\n\t */\r\n\ttextDecoration?: TextDecoration;\r\n\r\n\t/**\r\n\t * Horizontal alignment of Container's items\r\n\t * @type {Optional<Align>}\r\n\t */\r\n\tcontentAlign?: Align;\r\n\r\n\t/**\r\n\t * Vertical alignment of Container's items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<VerticalAlign>}\r\n\t */\r\n\tcontentValign?: VerticalAlign;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tfixedWidthGrid?: boolean;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tmaxColumns?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for the [[Container]]\r\n */\r\nexport interface IContainerEvents extends ISpriteEvents {\r\n\r\n\t/**\r\n\t * Invoked when a child Sprite is added to Container.\r\n\t */\r\n\tchildadded: {\r\n\t\tnewValue: Sprite;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a child Sprite is removed from\r\n\t */\r\n\tchildremoved: {\r\n\t\toldValue: Sprite;\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IContainerAdapters extends ISpriteAdapters, IContainerProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Container can contain multiple sprites and arrange them in various layouts.\r\n *\r\n * @see {@link IContainerEvents} for a list of available events\r\n * @see {@link IContainerAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IContainerProperties}\r\n\t */\r\n\tpublic _properties!: IContainerProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IContainerAdapters}\r\n\t */\r\n\tpublic _adapter!: IContainerAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IContainerEvents}\r\n\t */\r\n\tpublic _events!: IContainerEvents;\r\n\r\n\t/**\r\n\t * Container children. (sorted by layout)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<Sprite>}\r\n\t */\r\n\tprotected _childrenByLayout: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Available width (px).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _availableWidth: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Available height (px).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _availableHeight: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Container's child elements. (sorded by their `zIndex`)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<List<Sprite>>}\r\n\t */\r\n\tprotected _children: $type.Optional<List<Sprite>>;\r\n\r\n\t/**\r\n\t * Container's disposers for its child elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, IDisposer>}\r\n\t */\r\n\tprotected _childrenDisposers: Dictionary<string, IDisposer> = new Dictionary();\r\n\r\n\r\n\t/**\r\n\t * A [[Sprite]] instance to use as Container's background.\r\n\t *\r\n\t * @todo Make it protected\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic _background: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a [[Preloader]] element to show when Container is building\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Preloader>}\r\n\t */\r\n\tprotected _preloader: $type.Optional<Preloader>;\r\n\r\n\t/**\r\n\t * Indicates if this container contains any focused elements, including\r\n\t * itself.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic hasFocused: boolean = false;\r\n\r\n\t/**\r\n\t * Specifies if, when state is applied on this container, the same state\r\n\t * should be applied to container's children as well as `background`.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic setStateOnChildren: boolean = false;\r\n\r\n\t/**\r\n\t * An array of references to elements the state should be set, when it is set\r\n\t * on this element.\r\n\t *\r\n\t * @type {Sprite[]}\r\n\t */\r\n\tpublic setStateOnSprites: Sprite[] = [];\r\n\r\n\t/*\r\n\t * @ignore\r\n\t */\r\n\tpublic layoutInvalid: boolean = false;\r\n\r\n\tprotected _absoluteWidth: number = 0;\r\n\r\n\tprotected _absoluteHeight: number = 0;\r\n\r\n\t/**\r\n\t * Width (in pixels) of the actual content in the Container.\r\n\t *\r\n\t * Please note that it might be bigger than width of the Container.\r\n\t *\r\n\t * @readonly\r\n\t * @type {number}\r\n\t */\r\n\tpublic contentWidth: number;\r\n\r\n\t/**\r\n\t * Height (in pixels) of the actual content in the Container.\r\n\t *\r\n\t * Please note that it might be bigger than height of the Container.\r\n\t *\r\n\t * @readonly\r\n\t * @type {number}\r\n\t */\r\n\tpublic contentHeight: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Container\";\r\n\r\n\t\tthis._element = this.paper.addGroup(\"g\");\r\n\t\tthis.group.add(this.element);\r\n\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", false);\r\n\t\tthis.setPropertyValue(\"layout\", \"absolute\");\r\n\t\tthis.setPropertyValue(\"fixedWidthGrid\", false);\r\n\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\r\n\t\tthis._positionPrecision = 4;\r\n\r\n\t\tthis._disposers.push(new DictionaryDisposer(this._childrenDisposers));\r\n\r\n\t\tthis.children.events.on(\"inserted\", this.handleChildAdded, this);\r\n\t\tthis.children.events.on(\"removed\", this.handleChildRemoved, this);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles adding of a new child into `children`. Adding new children might\r\n\t * affect the whole layout so it needs to be revalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<Sprite>[\"inserted\"]} event Event object\r\n\t * @todo Throw an exception on adding a disposed object. Of course it's better NOT TO add disposed objects, so that what we should focus on.\r\n\t */\r\n\tpublic handleChildAdded(event: IListEvents<Sprite>[\"inserted\"]): void {\r\n\t\tthis.processChild(event.newValue);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic processChild(child: Sprite) {\r\n\t\t// try solves the problem when somedy adds child directly to children\r\n\t\ttry {\r\n\t\t\tthis._childrenDisposers.insertKey(child.uid, new MultiDisposer([\r\n\t\t\t\t// it's not enough to listen to POSITION_CHANGED only, as some extra redrawals will happen.\r\n\t\t\t\tchild.events.on(\"transformed\", this.handleChildTransform, this),\r\n\t\t\t\tchild.events.on(\"zIndexChanged\", this.sortAndAdd, this)\r\n\t\t\t]));\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tif (this.element) {\r\n\t\t\tlet group = <Group>this.element;\r\n\t\t\tgroup.add(child.group);\r\n\t\t}\r\n\r\n\t\tchild.parent = this;\r\n\t\tchild.paper = this.paper;\r\n\r\n\t\tthis.dispatchImmediately(\"childadded\", { type: \"childadded\", newValue: child });\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected sortAndAdd() {\r\n\t\tthis.sortChildren();\r\n\t\tthis.addChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child removal. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<Sprite>[\"removed\"]} event Event object\r\n\t */\r\n\tpublic handleChildRemoved(event: IListEvents<Sprite>[\"removed\"]): void {\r\n\t\tlet child: Sprite = event.oldValue;\r\n\r\n\t\t// TODO figure out why the key sometimes doesn't exist\r\n\t\tthis._childrenDisposers.removeKey(child.uid);\r\n\r\n\t\tif (this.element) {\r\n\t\t\tlet group = <Group>this.element;\r\n\t\t\tgroup.removeElement(child.group);\r\n\t\t}\r\n\r\n\t\tif (child.isMeasured) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\r\n\t\tthis.dispatchImmediately(\"childremoved\", { type: \"childremoved\", oldValue: child });\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child transformation. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"transformed\"]} event Event object\r\n\t */\r\n\tpublic handleChildTransform(event: AMEvent<Sprite, ISpriteEvents>[\"transformed\"] | AMEvent<Sprite, ISpriteEvents>[\"sizechanged\"]): void {\r\n\t\tlet child: Sprite = event.target;\r\n\t\tif (child.isMeasured) {// && this.layout != \"none\" && this.layout != \"absolute\") {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates Container's layout, causing it to be re-evaluated again.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tif (this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.layoutInvalid) {\r\n\t\t\tthis.layoutInvalid = true;\r\n\t\t\tregistry.addToInvalidLayouts(this);\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element.\r\n\t *\r\n\t * Object will be redrawn during the next update cycle.\r\n\t *\r\n\t * Please note that in most cases elements will auto-invalidate when needed. If\r\n\t * everything works, DO NOT use this method. Use it only if some changes do\r\n\t * not take otherwise.\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tsuper.invalidate();\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including layout AND all its child\r\n\t * elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic deepInvalidate(): void {\r\n\t\tsuper.invalidate();\r\n\t\t//this.sortChildren();\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child instanceof Container) {\r\n\t\t\t\tchild.deepInvalidate();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.invalidate();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of the child [[Sprite]] elements contained in this\r\n\t * Container.\r\n\t *\r\n\t * @return {List<Sprite>} List of child elements (Sprites)\r\n\t */\r\n\tpublic get children(): List<Sprite> {\r\n\t\t// @todo Review if we can add all children to disposers\r\n\t\tif (!this._children) {\r\n\t\t\tthis._children = new List<Sprite>();\r\n\t\t\t//this._disposers.push(new ListDisposer(this._children));\r\n\t\t}\r\n\t\treturn this._children;\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum width (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t *\r\n\t * @param {Optional<number>}  value  Width (px)\r\n\t */\r\n\tpublic set minWidth(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minWidth\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<number>} Width (px)\r\n\t */\r\n\tpublic get minWidth(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum height (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t *\r\n\t * @param {Optional<number>}  value  Height (px)\r\n\t */\r\n\tpublic set minHeight(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minHeight\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<number>} Height (px)\r\n\t */\r\n\tpublic get minHeight(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides the original `removeElement` so that Container's actual element\r\n\t * is not removed. We do not need to remove element of a Container.\r\n\t *\r\n\t * We do this because remove element each time will fail the `getBBox`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts Container's children: the ones with variable width and height are\r\n\t * put at the end of the list (depending on layout type), so that fixed-width\r\n\t * ones can be drawn first.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sortChildren(): void {\r\n\r\n\t\tthis._childrenByLayout = [];\r\n\r\n\t\tif (this.layout == \"none\" || this.layout == \"absolute\" || !this.layout) {\r\n\t\t\t//$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t//\tthis._childrenByLayout.push(child);\r\n\t\t\t//});\r\n\t\t\tthis._childrenByLayout = this.children.values;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Assemble fixed-size and relative lists\r\n\t\t\tlet fixed: Sprite[] = [];\r\n\t\t\tlet relative: Sprite[] = [];\r\n\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tif (this.layout == \"horizontal\" || this.layout == \"grid\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.layout == \"vertical\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Concat everything into list\r\n\t\t\tthis._childrenByLayout = fixed.concat(relative);\r\n\t\t}\r\n\r\n\t\tthis.calculateRelativeSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates relative sizes for all Container's children.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic calculateRelativeSize(): void {\r\n\t\tlet totalRelativeWidth: number = 0;\r\n\t\tlet totalRelativeHeight: number = 0;\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t// if child is not measured, we do not care about it at all.\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\ttotalRelativeWidth += child.percentWidth;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\ttotalRelativeHeight += child.percentHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / totalRelativeWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / totalRelativeHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.layout == \"absolute\" || !child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds all children to Container's SVG element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected addChildren(): void {\r\n\t\t/*\r\n\t\t  Need this check because a child might be assigned to parent even before element is created, for example a theme\r\n\t\t  access scrollbar.thumb\r\n\t\t*/\r\n\t\tif (this.element) {\r\n\t\t\tlet zindexed = $array.copy(this.children.values); // not children by layout!\r\n\r\n\t\t\tlet sortArray = zindexed.map(function(data, idx) {\r\n\t\t\t\treturn { idx: idx, data: data }\r\n\t\t\t});\r\n\r\n\t\t\tsortArray.sort(function(a: any, b: any) {\r\n\t\t\t\tconst ai = (a.data.zIndex || 0);\r\n\t\t\t\tconst bi = (b.data.zIndex || 0);\r\n\t\t\t\tif (ai < bi) return -1;\r\n\t\t\t\tif (ai > bi) return 1;\r\n\t\t\t\treturn a.idx - b.idx\r\n\t\t\t});\r\n\r\n\t\t\tzindexed = sortArray.map(function(val) {\r\n\t\t\t\treturn val.data;\r\n\t\t\t});\r\n\r\n\t\t\tlet group = <Group>this.element;\r\n\r\n\t\t\t// check, maybe the order is good already\r\n\t\t\tlet isCorrect = true;\r\n\r\n\t\t\tif (group.node && group.node.childNodes) {\r\n\t\t\t\tfor (let i = 0, len = group.node.childNodes.length; i < len; i++) {\r\n\t\t\t\t\tif (group.node.childNodes[i] != zindexed[i].group.node) {\r\n\t\t\t\t\t\tisCorrect = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!isCorrect) {\r\n\t\t\t\t$array.each(zindexed, (child) => {\r\n\t\t\t\t\tif (child.group) {\r\n\t\t\t\t\t\tgroup.add(child.group);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tif (this._background) {\r\n\t\t\t\t\tthis.group.addToBack(this._background.group);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.invalidateLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new element of specific type and assigns as a child to the\r\n\t * Container.\r\n\t *\r\n\t * @param  {T extends Sprite}  Class type for the new element\r\n\t * @return {T}                 New element\r\n\t */\r\n\tpublic createChild<T extends Sprite>(classType: { new(): T; }): T {\r\n\t\tlet sprite = new classType();\r\n\t\tsprite.parent = this;\r\n\t\treturn sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all Container's children without actually destroying them.\r\n\t *\r\n\t * To destroy children use `disposeChildren()` instead.\r\n\t */\r\n\tpublic removeChildren(): void {\r\n\t\t// remove all children\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tlet child = <Sprite>this.children.getIndex(0);\r\n\t\t\tchild.parent = undefined;\r\n\t\t\tthis.children.removeValue(child);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes and destroys all Container's children.\r\n\t *\r\n\t * To remove children from Container without destroying them, use\r\n\t * `removeChildren()`.\r\n\t */\r\n\tpublic disposeChildren(): void {\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tlet child = <Sprite>this.children.getIndex(0);\r\n\t\t\tchild.dispose();\r\n\t\t\tthis.children.removeValue(child);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element to use as container background.\r\n\t *\r\n\t * @param {Sprite}  background  Background element\r\n\t */\r\n\tpublic set background(background: this[\"_background\"]) {\r\n\t\tif (this._background && this.background != background) {\r\n\t\t\tthis.removeDispose(this._background);\r\n\t\t}\r\n\r\n\t\tif (background) {\r\n\t\t\tthis._background = background;\r\n\t\t\tthis._disposers.push(background);\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the situation where parent element is resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleGlobalScale(): void {\r\n\t\tsuper.handleGlobalScale();\r\n\t\tthis.children.each((child) => {\r\n\t\t\tchild.handleGlobalScale();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a [[Rectangle]] to use as a background for Container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {this} Background Rectangle element\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn <any>new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Sprite} Background element\r\n\t */\r\n\tpublic get background(): this[\"_background\"] {\r\n\t\tif (!this._background) {\r\n\t\t\tthis._background = this.createBackground();\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\r\n\t\treturn this._background;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates background element with required properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processBackground(): void {\r\n\t\tlet background = this._background;\r\n\t\tif (background) {\r\n\t\t\tbackground.isMeasured = false;\r\n\t\t\tthis._background.fill = new InterfaceColorSet().getFor(\"background\");\r\n\t\t\tbackground.parent = this;\r\n\t\t\tbackground.isMeasured = false;\r\n\t\t\tthis.children.removeValue(background);\r\n\t\t\tthis._disposers.push(background);\r\n\t\t\tthis.group.addToBack(this._background.group);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the size of container and informs its children of how much size\r\n\t * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n\t * properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tregistry.removeFromInvalidLayouts(this);\r\n\r\n\t\tthis.layoutInvalid = false;\r\n\r\n\t\t// prevents from drawing if topparent is 0x0\r\n\t\t/*\r\n\t\tlet topParent = this.topParent;\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\tthis._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidateLayout, this));\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\tthis._availableWidth = this.innerWidth;\r\n\t\tthis._availableHeight = this.innerHeight;\r\n\r\n\t\tlet measuredWidth = 0;\r\n\t\tlet measuredHeight = 0;\r\n\r\n\t\tlet allValid = true;\r\n\r\n\t\tif (this.children) {\r\n\r\n\t\t\tthis.sortChildren();\r\n\r\n\t\t\t// we itterate through list of children, sorted by layout priority. sprites which width non-relative width/height will go first, so we will reduce available width before proceeding to sprites with relative width/height\r\n\t\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t\tlet maxWidth: number;\r\n\t\t\t\tlet maxHeight: number;\r\n\r\n\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\tmaxWidth = $math.round(this._availableWidth * child.relativeWidth, 2);\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {// || this.layout == \"absolute\") {\r\n\t\t\t\t\t\tmaxWidth -= child.pixelMarginRight + child.pixelMarginLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\tmaxHeight = $math.round(this._availableHeight * child.relativeHeight, 2);\r\n\t\t\t\t\tif (this.layout == \"vertical\") {//  || this.layout == \"absolute\") {\r\n\t\t\t\t\t\tmaxHeight -= child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if child is valid\r\n\t\t\t\tif (child.invalid == false) {\r\n\r\n\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\t// reduce available width if this is horizontal layout\r\n\t\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredWidth > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableWidth -= child.measuredWidth + child.pixelMarginLeft + child.pixelMarginRight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// reduce available height if this is vertical layout\r\n\t\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredHeight > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableHeight -= child.measuredHeight + child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet childMeasuredWidth = child.measuredWidth;\r\n\t\t\t\t\t\tlet childMeasuredHeight = child.measuredHeight;\r\n\r\n\t\t\t\t\t\tif (child.align != \"none\") {\r\n\t\t\t\t\t\t\tchildMeasuredWidth += child.pixelMarginLeft + child.pixelMarginRight;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child.valign != \"none\") {\r\n\t\t\t\t\t\t\tchildMeasuredHeight += child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmeasuredWidth = Math.max(measuredWidth, childMeasuredWidth);\r\n\t\t\t\t\t\tmeasuredHeight = Math.max(measuredHeight, childMeasuredHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if child is not valid\r\n\t\t\t\telse {\r\n\t\t\t\t\t// tell child what maximum width/ height it can occupy\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\t\tif (child.maxWidth != maxWidth) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\tif (child.maxHeight != maxHeight) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._absoluteWidth = measuredWidth;\r\n\t\tthis._absoluteHeight = measuredHeight;\r\n\r\n\t\t// arrange after measuring, only if all children are valid already\r\n\t\tif (allValid) {\r\n\t\t\tthis.arrange();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Arranges children according to layout specs and available space / child\r\n\t * sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic arrange(): void {\r\n\t\tlet children = this.children;\r\n\t\t/*\r\n\t\t   in this method we not only arrange children but also find out the size of the container\r\n\t\t   it might seem it would be easier to get container size using sprite's measure method,\r\n\t\t   however it would return only actual size of the bbox. However as each child meight have\r\n\t\t   margins set, we need to check each child - we do it here.\r\n\r\n\t\t   This method doesn't do anything with DOM, so it's not expensive\r\n\t\t*/\r\n\t\tlet measuredWidth: number = 0;\r\n\t\tlet measuredHeight: number = 0;\r\n\r\n\t\t//let innerWidth: number = this.innerWidth; //$math.max(this.innerWidth, this._measuredWidth - paddingLeft - paddingRight);\r\n\t\t//let innerHeight: number = this.innerHeight; //$math.max(this.innerHeight, this._measuredHeight - paddingTop - paddingBottom);\r\n\t\t// above is wrong, as if a w/h is not specified, it is 0 and alignment doesn't work at all.\r\n\t\tlet innerWidth: number = $math.max(this.innerWidth, this._absoluteWidth);\r\n\t\tlet innerHeight: number = $math.max(this.innerHeight, this._absoluteHeight);\r\n\r\n\t\tlet left: $type.Optional<number>;// = 0;\r\n\t\tlet right: $type.Optional<number>;// = innerWidth;\r\n\t\tlet top: $type.Optional<number>;// = 0;\r\n\t\tlet bottom: $type.Optional<number>;// = innerHeight;\r\n\r\n\t\tlet paddingLeft: number = this.pixelPaddingLeft;\r\n\t\tlet paddingRight: number = this.pixelPaddingRight;\r\n\t\tlet paddingTop: number = this.pixelPaddingTop;\r\n\t\tlet paddingBottom: number = this.pixelPaddingBottom;\r\n\r\n\t\tlet nextX: number = 0;\r\n\t\tlet nextY: number = 0;\r\n\t\tlet row: number = 0;\r\n\t\tlet column: number = 0;\r\n\r\n\t\tlet columnWidth: number[] = [];\r\n\t\tlet rowHeight: number[] = [];\r\n\r\n\t\tlet maxCellWidth: $type.Optional<number>;\r\n\t\tlet minCellWidth: $type.Optional<number>;\r\n\t\tlet columnCount: $type.Optional<number>;\r\n\r\n\t\tlet maxWidth = this.maxWidth;\r\n\t\tlet maxHeight = this.maxHeight;\r\n\t\tlet minWidth = this.minWidth;\r\n\t\tlet minHeight = this.minHeight;\r\n\r\n\t\t// GRID PRECALCULATIONS\r\n\t\tif (this.layout == \"grid\") {\r\n\r\n\t\t\tminCellWidth = maxWidth;\r\n\t\t\tmaxCellWidth = 1;\r\n\r\n\t\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\t\t\t\tlet child = children.getIndex(i);\r\n\t\t\t\tif (child.isMeasured && !child.disabled && !child.__disabled) {\r\n\t\t\t\t\tlet childMeasuredWidth = child.measuredWidth;\r\n\t\t\t\t\tif (childMeasuredWidth < minCellWidth) {\r\n\t\t\t\t\t\tminCellWidth = childMeasuredWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (childMeasuredWidth > maxCellWidth) {\r\n\t\t\t\t\t\tmaxCellWidth = childMeasuredWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tminCellWidth = $math.fitToRange(minCellWidth, 1, maxWidth);\r\n\t\t\tmaxCellWidth = $math.fitToRange(maxCellWidth, 1, maxWidth);\r\n\r\n\r\n\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\tcolumnCount = maxWidth / maxCellWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumnCount = maxWidth / minCellWidth; // predicted number of columns, yes it is usually much more than real number, but we fix that later\r\n\t\t\t}\r\n\r\n\t\t\tcolumnCount = $math.max(1, Math.floor(columnCount));\r\n\t\t\tcolumnCount = $math.min(this.maxColumns, columnCount);\r\n\t\t\tcolumnWidth = this.getColumnWidth(columnCount, maxCellWidth);\r\n\t\t}\r\n\r\n\t\tlet contentLeft: $type.Optional<number>;\r\n\t\tlet contentRight: $type.Optional<number>;\r\n\t\tlet contentTop: $type.Optional<number>;\r\n\t\tlet contentBottom: $type.Optional<number>;\r\n\r\n\t\t// we itterate through array of children\r\n\t\t// TODO use iterator instead\r\n\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\t\t\tlet child = children.getIndex(i);\r\n\r\n\t\t\tif (child.isMeasured && !child.disabled && !child.__disabled) {\r\n\r\n\t\t\t\tlet x: $type.Optional<number> = undefined;//child.pixelX; // must reset\r\n\t\t\t\tlet y: $type.Optional<number> = undefined;//child.pixelY; // must reset\r\n\r\n\t\t\t\tlet childMarginLeft: number = child.pixelMarginLeft;\r\n\t\t\t\tlet childMarginRight: number = child.pixelMarginRight;\r\n\t\t\t\tlet childMarginTop: number = child.pixelMarginTop;\r\n\t\t\t\tlet childMarginBottom: number = child.pixelMarginBottom;\r\n\r\n\t\t\t\tlet childWidth: number = child.measuredWidth;\r\n\t\t\t\tlet childHeight: number = child.measuredHeight;\r\n\r\n\t\t\t\tlet childLeft: $type.Optional<number>;\r\n\t\t\t\tlet childRight: $type.Optional<number>;\r\n\t\t\t\tlet childTop: $type.Optional<number>;\r\n\t\t\t\tlet childBottom: $type.Optional<number>;\r\n\r\n\t\t\t\tswitch (this.layout) {\r\n\t\t\t\t\tcase \"none\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// absolute layout\r\n\t\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\t\t// horizontal alignment\r\n\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\tx = childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\tx = innerWidth - childMarginRight - child.maxRight;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif (!(child.x instanceof Percent)) {\r\n\t\t\t\t\t\t\t\t\tx = child.pixelX;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// vertical alignment\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif (!(child.y instanceof Percent)) {\r\n\t\t\t\t\t\t\t\t\ty = child.pixelY;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// vertical layout\r\n\t\t\t\t\tcase \"vertical\":\r\n\t\t\t\t\t\t//if ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t//\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\tx = childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\tx = innerWidth - childMarginRight - child.maxRight;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tx = child.pixelX;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ty = nextY + childMarginTop - child.maxTop;\r\n\t\t\t\t\t\tnextY = y + child.maxBottom + childMarginBottom;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// horizontal layout\r\n\t\t\t\t\tcase \"horizontal\":\r\n\r\n\t\t\t\t\t\t//if ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t//\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\ty = child.pixelY;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tx = nextX + childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\tnextX = x + child.maxRight + childMarginRight;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"grid\":\r\n\t\t\t\t\t\tx = nextX + childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = nextY + childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = nextY + (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = nextY + innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\ty = nextY - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextX += columnWidth[column];\r\n\r\n\t\t\t\t\t\trowHeight[row] = $math.max(rowHeight[row], childHeight);\r\n\t\t\t\t\t\tcolumn++;\r\n\r\n\t\t\t\t\t\tlet nextColumnWidth = columnWidth[column];\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(nextColumnWidth)) {\r\n\t\t\t\t\t\t\tnextColumnWidth = maxCellWidth;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (nextX > $math.min(this.innerWidth, maxWidth) - nextColumnWidth + 1 && column < columnCount) {\r\n\t\t\t\t\t\t\tcolumnCount = column;\r\n\r\n\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t\tnextY = 0;\r\n\r\n\t\t\t\t\t\t\trow = 0;\r\n\t\t\t\t\t\t\tcolumn = 0;\r\n\r\n\t\t\t\t\t\t\tcolumnWidth = this.getColumnWidth(columnCount, maxCellWidth);\r\n\t\t\t\t\t\t\trowHeight = [];\r\n\r\n\t\t\t\t\t\t\ti = -1;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (column >= columnCount) {\r\n\t\t\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t\t\t\tnextY += rowHeight[row];\r\n\t\t\t\t\t\t\trow++;\r\n\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.layout !== \"none\") {\r\n\t\t\t\t\tchild.moveTo({ x: x, y: y }); // must use moveTo, otherwise x/y set in percent won't work\r\n\r\n\t\t\t\t\tchildLeft = x + child.maxLeft - childMarginLeft;\r\n\t\t\t\t\tchildRight = x + child.maxRight + childMarginRight;\r\n\t\t\t\t\tchildTop = y + child.maxTop - childMarginTop;\r\n\t\t\t\t\tchildBottom = y + child.maxBottom + childMarginBottom;\r\n\r\n\t\t\t\t\tif (childRight > right || !$type.isNumber(right)) {\r\n\t\t\t\t\t\tright = childRight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childLeft < left || !$type.isNumber(left)) {\r\n\t\t\t\t\t\tleft = childLeft;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childTop < top || !$type.isNumber(top)) {\r\n\t\t\t\t\t\ttop = childTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childBottom > bottom || !$type.isNumber(bottom)) {\r\n\t\t\t\t\t\tbottom = childBottom;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childRight > contentRight || !$type.isNumber(contentRight)) {\r\n\t\t\t\t\t\tcontentRight = childRight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childLeft < contentLeft || !$type.isNumber(contentLeft)) {\r\n\t\t\t\t\t\tcontentLeft = childLeft;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childTop < contentTop || !$type.isNumber(contentTop)) {\r\n\t\t\t\t\t\tcontentTop = childTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childBottom > contentBottom || !$type.isNumber(contentBottom)) {\r\n\t\t\t\t\t\tcontentBottom = contentBottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.validatePosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(left)) {\r\n\t\t\tleft = 0;\r\n\t\t\tcontentLeft = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(right)) {\r\n\t\t\tright = this._availableWidth;\r\n\t\t\tcontentRight = right;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(top)) {\r\n\t\t\ttop = 0;\r\n\t\t\tcontentTop = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(bottom)) {\r\n\t\t\tbottom = this._availableHeight;\r\n\t\t\tcontentBottom = bottom;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentTop)) {\r\n\t\t\tcontentTop = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentBottom)) {\r\n\t\t\tcontentBottom = contentTop;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentLeft)) {\r\n\t\t\tcontentLeft = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentRight)) {\r\n\t\t\tcontentRight = contentLeft;\r\n\t\t}\r\n\r\n\t\tmeasuredWidth = right - left;\r\n\t\tmeasuredHeight = bottom - top;\r\n\r\n\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\tmeasuredWidth = maxWidth - this.pixelPaddingLeft - this.pixelPaddingRight;\r\n\t\t\tleft = 0;\r\n\t\t\tright = measuredWidth;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\tmeasuredHeight = maxHeight - this.pixelPaddingTop - this.pixelPaddingBottom;\r\n\t\t\ttop = 0;\r\n\t\t\tbottom = measuredHeight;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._pixelWidth)) {\r\n\t\t\tleft = 0;\r\n\t\t\tmeasuredWidth = this._pixelWidth;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(minWidth) && measuredWidth < minWidth) {\r\n\t\t\tleft = 0;\r\n\t\t\tmeasuredWidth = this.minWidth;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._pixelHeight)) {\r\n\t\t\ttop = 0;\r\n\t\t\tmeasuredHeight = this._pixelHeight;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(minHeight) && measuredHeight < minHeight) {\r\n\t\t\ttop = 0;\r\n\t\t\tmeasuredHeight = minHeight;\r\n\t\t}\r\n\r\n\t\tlet measuredContentWidth = contentRight - contentLeft;\r\n\t\tlet measuredContentHeight = contentBottom - contentTop;\r\n\r\n\t\t/// handle content alignment\r\n\t\tif (this.layout != \"none\") {\r\n\t\t\tlet dx: $type.Optional<number>;\r\n\t\t\tlet dy: $type.Optional<number>;\r\n\r\n\t\t\tlet mwa = measuredWidth;\r\n\t\t\tlet mha = measuredHeight;\r\n\t\t\tif (mwa < measuredContentWidth) {\r\n\t\t\t\tmwa = measuredContentWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif (mha < measuredContentHeight) {\r\n\t\t\t\tmha = measuredContentHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.contentAlign == \"center\") {\r\n\t\t\t\tdx = (mwa - measuredContentWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentAlign == \"right\") {\r\n\t\t\t\tdx = mwa - measuredContentWidth;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"middle\") {\r\n\t\t\t\tdy = (mha - measuredContentHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"bottom\") {\r\n\t\t\t\tdy = mha - measuredContentHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(dx)) {\r\n\t\t\t\t$iter.each(children.iterator(), (child) => {\r\n\t\t\t\t\tlet childLeft: number = child.maxLeft;\r\n\r\n\t\t\t\t\tlet ddx: number = dx;\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childLeft;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childLeft;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(dy)) {\r\n\t\t\t\t$iter.each(children.iterator(), (child) => {\r\n\t\t\t\t\tlet childTop: number = child.maxTop;\r\n\r\n\t\t\t\t\tlet ddy: number = dy;\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tchild.y = child.pixelY + ddy;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet oldBBox = this.bbox;\r\n\r\n\r\n\t\t// this will mess up maxw/maxh set by container layout, we need a separate min/maxwidth for users\r\n\t\t// this prevents invalidating layout in such cases as scrolling category axis, when labels go outside bounds and results transformed event\r\n\t\t// todo: need to check if this doesn't cause other problems.\r\n\t\t//if (this.maxWidth > 0) {\r\n\t\t//measuredWidth = $math.min(measuredWidth, this.maxWidth);\r\n\t\t//measuredWidth = $math.max(measuredWidth, this.minWidth);\r\n\t\t//}\r\n\r\n\t\t//if (this.maxHeight > 0) {\r\n\t\t//measuredHeight = $math.min(measuredHeight, this.maxHeight);\r\n\t\t//measuredHeight = $math.max(measuredHeight, this.minHeight);\r\n\t\t//}\r\n\r\n\t\tmeasuredWidth = $math.max(measuredWidth, minWidth);\r\n\t\tmeasuredHeight = $math.max(measuredHeight, minHeight);\r\n\r\n\t\tthis.contentWidth = measuredWidth;\r\n\t\tthis.contentHeight = measuredHeight;\r\n\t\t// new\r\n\t\tmeasuredWidth = $math.min(measuredWidth, maxWidth);\r\n\t\tmeasuredHeight = $math.min(measuredHeight, maxHeight);\r\n\r\n\t\tthis._bbox = { x: left, y: top, width: measuredWidth, height: measuredHeight };\r\n\r\n\t\tlet prevLeft = this.maxLeft;\r\n\t\tlet prevTop = this.maxTop;\r\n\t\tlet prevBotttom = this.maxBottom;\r\n\t\tlet prevRight = this.maxRight;\r\n\r\n\t\tthis.measure();\r\n\r\n\t\tif (prevLeft != this.maxLeft || prevRight != this.maxRight || prevTop != this.maxTop || prevBotttom != this.maxBottom) {\r\n\t\t\tif (this.events.isEnabled(\"transformed\")) {\r\n\t\t\t\tlet event: AMEvent<this, IContainerEvents>[\"transformed\"] = {\r\n\t\t\t\t\ttype: \"transformed\",\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t};\r\n\t\t\t\tif (oldBBox) {\r\n\t\t\t\t\tevent.dummyData = oldBBox.width + \" \" + measuredWidth + \"  \" + oldBBox.height + \" \" + measuredHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.events.dispatchImmediately(\"transformed\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions element according its center settings.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateCenter() {\r\n\t\tsuper.updateCenter();\r\n\t\tthis.updateBackground();\r\n\t}\r\n\r\n\t/**\r\n\t * Update the background to fit into specific dimensions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\tlet background: Sprite = this._background; // accessing protected, as getter creates instance if it doesn't exist\r\n\t\tif (background) {\r\n\t\t\tbackground.x = this.maxLeft;\r\n\t\t\tbackground.y = this.maxTop;\r\n\t\t\tbackground.width = this.maxRight - this.maxLeft;\r\n\t\t\tbackground.height = this.maxBottom - this.maxTop;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns widths of all columns in a horizontal Container layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}    columnCount   Number of columns\r\n\t * @param  {number}    maxCellWidth  Maximum width of one grid cell\r\n\t * @return {number[]}                An array of column widths\r\n\t */\r\n\tpublic getColumnWidth(columnCount: number, maxCellWidth: number): number[] {\r\n\t\tlet columnWidth: number[] = [];\r\n\t\tlet column: number = 0;\r\n\r\n\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\t\tcolumnWidth[column] = maxCellWidth;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnWidth[column] = $math.max(columnWidth[column], child.measuredWidth + child.pixelMarginRight + child.pixelMarginLeft);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumn++;\r\n\r\n\t\t\t\tif (column == columnCount) {\r\n\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn columnWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", \"grid\", \"none\". \"none\" is quite the same as \"absolute\" - the objects will\r\n\t * be positioned at their x, y coordinates, the difference is that with \"absolute\" you can still use align/valign for children and with \"none\" you can not.\r\n\t * Use \"none\" as much as you can as it's most cpu-saving layout.\r\n\t *\r\n\t * @default \"absolute\"\r\n\t * @param {ContainerLayout} value Layout\r\n\t */\r\n\tpublic set layout(value: ContainerLayout) {\r\n\t\tif (this.setPropertyValue(\"layout\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ContainerLayout} Layout\r\n\t */\r\n\tpublic get layout(): ContainerLayout {\r\n\t\treturn this.getPropertyValue(\"layout\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical alignment of the elements for the vertical Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param {VerticalAlign} value vertical alignment\r\n\t */\r\n\tpublic set contentValign(value: VerticalAlign) {\r\n\t\tthis.setPropertyValue(\"contentValign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {VerticalAlign} Vertical alignment\r\n\t */\r\n\tpublic get contentValign(): VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"contentValign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal alignment of the elements for the horizontal Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param {Align}  value  Horizontal alignment\r\n\t */\r\n\tpublic set contentAlign(value: Align) {\r\n\t\tthis.setPropertyValue(\"contentAlign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Align} Horizontal alignment\r\n\t */\r\n\tpublic get contentAlign(): Align {\r\n\t\treturn this.getPropertyValue(\"contentAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the grid of the Container should use fixed width. Fixed width\r\n\t * grid will divide available space to all its columns/rows equally, without\r\n\t * adapting to actual child sizes or size requirements.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Should use fixed width grid?\r\n\t */\r\n\tpublic set fixedWidthGrid(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fixedWidthGrid\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Should use fixed width grid?\r\n\t */\r\n\tpublic get fixedWidthGrid(): boolean {\r\n\t\treturn this.getPropertyValue(\"fixedWidthGrid\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of columns (when using grid layout).\r\n\t *\r\n\t * @param {Optional<number>}  value  Should use fixed width grid?\r\n\t */\r\n\tpublic set maxColumns(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"maxColumns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<number>} Should use fixed width grid?\r\n\t */\r\n\tpublic get maxColumns(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"maxColumns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @param  {IPoint}   point  A coordinate to check\r\n\t * @return {boolean}         `true` if it fits within container\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\t\tlet deviation = 0.5; // sometimes coordinates are rounded to numbers like .999 so we add deviation here\r\n\t\tif (x >= -deviation && x <= this.pixelWidth + deviation && y >= -deviation && y <= this.pixelHeight + deviation) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from different Container, including background\r\n\t * clone.\r\n\t *\r\n\t * @param {this}  source  Source Container to copy from\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.layout = source.layout;\r\n\t\tthis.setStateOnChildren = source.setStateOnChildren;\r\n\r\n\t\tif (source._background) {\r\n\t\t\tthis.background = source._background.clone();\r\n\t\t\tthis.background.copyFrom(source._background); // won't work without this\r\n\t\t}\r\n\r\n\t\t$iter.each(source.children.iterator(), (child) => {\r\n\t\t\tif (child.shouldClone) {\r\n\t\t\t\tlet clonedChild: Sprite = child.clone();\r\n\t\t\t\tclonedChild.parent = this;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Preloader]] instance to be used when Container is busy.\r\n\t *\r\n\t * @param {Optional<Preloader>}  preloader  Preloader instance\r\n\t */\r\n\tpublic set preloader(preloader: $type.Optional<Preloader>) {\r\n\t\tif (this._preloader) {\r\n\t\t\tthis.removeDispose(this._preloader);\r\n\t\t}\r\n\t\tthis._preloader = preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.parent = this.tooltipContainer;\r\n\t\t\tthis._disposers.push(preloader);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Preloader>} Preloader instance\r\n\t */\r\n\tpublic get preloader(): $type.Optional<Preloader> {\r\n\t\tconst preloader = this._preloader;\r\n\r\n\t\tif (preloader) {\r\n\t\t\treturn preloader;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.preloader;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param {Paper} paper Paper\r\n\t * @return {boolean} true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tlet changed = super.setPaper(paper);\r\n\r\n\t\tif (changed) {\r\n\t\t\tif (this._background) {\r\n\t\t\t\tthis._background.paper = paper;\r\n\t\t\t\tthis._background.topParent = this.topParent;\r\n\t\t\t}\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.setPaper(paper);\r\n\t\t\t\tchild.topParent = this.topParent;\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes Container from the system-wide list of invalid Containers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeFromInvalids() {\r\n\t\tsuper.removeFromInvalids();\r\n\t\tregistry.removeFromInvalidLayouts(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]] to be used as data for the Container.\r\n\t *\r\n\t * @todo Description\r\n\t * @param {DataItem} dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: DataItem) {\r\n\t\t// this place is potentially dangerous, as if we set datItem for some dummy container, all children dataItems will be overriden\r\n\t\t// the main reason for doing this is that we need a setDataItem code to be called for each sprite, otherwise property fields won't be\r\n\t\t// applied. Also, getting dataItem from parent all the time is more expensive than saving value.\r\n\t\tif (this._dataItem != dataItem) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tchild.dataItem = dataItem;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tif (this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.validateLayout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns Tooltip X coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} X (px)\r\n\t */\r\n\tprotected getTooltipX(): number {\r\n\t\treturn super.getTooltipX();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip Y coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Y (px)\r\n\t */\r\n\tprotected getTooltipY(): number {\r\n\t\treturn super.getTooltipY();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Font family to be used for the text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param {string} value Font family value\r\n\t */\r\n\tpublic set fontFamily(value: string) {\r\n\t\tif (this.setPropertyValue(\"fontFamily\", value, true)) {\r\n\t\t\tthis.setSVGAttribute({ \"font-family\": value });\r\n\t\t\tthis.invalidateLabels();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Font family\r\n\t */\r\n\tpublic get fontFamily(): string {\r\n\t\treturn this.getPropertyValue(\"fontFamily\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size to be used for the text. The size can either be numeric, in\r\n\t * pixels, or other measurements.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param {any} value Font size value\r\n\t */\r\n\tpublic set fontSize(value: any) {\r\n\t\tif (this.setPropertyValue(\"fontSize\", value, true)) {\r\n\t\t\tthis.setSVGAttribute({ \"font-size\": value });\r\n\t\t\tthis.invalidateLabels();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Font size\r\n\t */\r\n\tpublic get fontSize(): any {\r\n\t\treturn this.getPropertyValue(\"fontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tthis.children.each((child) => {\r\n\t\t\t// can't import Label because of Circular dependencies\r\n\t\t\tif ((<any>child)[\"hardInvalidate\"]) {\r\n\t\t\t\t(<any>child)[\"hardInvalidate\"]();\r\n\t\t\t}\r\n\t\t\telse if (child instanceof Container) {\r\n\t\t\t\tchild.invalidateLabels();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Font weight to use for text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param {FontWeight} value Font weight\r\n\t */\r\n\tpublic set fontWeight(value: FontWeight) {\r\n\t\tthis.setPropertyValue(\"fontWeight\", value);\r\n\t\tthis.setSVGAttribute({ \"font-weight\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {FontWeight} Font weight\r\n\t */\r\n\tpublic get fontWeight(): FontWeight {\r\n\t\treturn this.getPropertyValue(\"fontWeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * A text decoration to use for text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param {TextDecoration}  value  Decoration\r\n\t */\r\n\tpublic set textDecoration(value: TextDecoration) {\r\n\t\tthis.setPropertyValue(\"textDecoration\", value);\r\n\t\tthis.setSVGAttribute({ \"text-decoration\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {TextDecoration} Decoration\r\n\t */\r\n\tpublic get textDecoration(): TextDecoration {\r\n\t\treturn this.getPropertyValue(\"textDecoration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes (destroys) the element and all its children.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.dispose();\r\n\t\t}\r\n\t\tthis.disposeChildren();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a [[SpriteState]] on this element.\r\n\t *\r\n\t * The first parameter can either be a name of the state or a [[SpriteState]]\r\n\t * instance.\r\n\t *\r\n\t * When run, this method will apply SVG properties defined in a\r\n\t * [[SpriteState]], but only those that are relevant to this particular\r\n\t * element, that is are listed in its respective `properties` array.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @param {string | SpriteState} value               A state - name key or instance\r\n\t * @param {number}               transitionDuration  Duration of the transition between current and new state\r\n\t * @param {number) => number}    easing              An easing function\r\n\t */\r\n\tpublic setState(value: string | SpriteState<this[\"_properties\"], this[\"_adapter\"]>, transitionDuration?: number, easing?: (value: number) => number): $type.Optional<Animation> {\r\n\r\n\t\tlet stateName = value;\r\n\t\tif (value instanceof SpriteState) {\r\n\t\t\tstateName = value.name;\r\n\t\t}\r\n\r\n\t\tif (this.setStateOnChildren) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tchild.setState(stateName, transitionDuration, easing);\r\n\r\n\t\t\t\t// not good to set it in child setState\r\n\t\t\t\tif (stateName != \"active\") {\r\n\t\t\t\t\tchild.isActive = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.setState(stateName);\r\n\t\t}\r\n\r\n\t\tif (this.setStateOnSprites.length) {\r\n\t\t\t$array.each(this.setStateOnSprites, (item) => {\r\n\t\t\t\titem.setState(stateName, transitionDuration, easing);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn super.setState(value, transitionDuration, easing);\r\n\t}\r\n\r\n\t// otherwise isActive won't work properly with background\r\n\tprotected setActive(value: boolean) {\r\n\t\tsuper.setActive(value);\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.isActive = value;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Container.ts","/**\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"./SpriteEvents\";\r\nexport { ISpriteEvents, SpriteEventDispatcher, AMEvent };\r\n\r\nimport { BaseObjectEvents } from \"./Base\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { Dictionary, IDictionaryEvents, DictionaryTemplate, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { ListTemplate, ListDisposer, List } from \"./utils/List\";\r\nimport { EventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { MultiDisposer, IDisposer, Disposer, MutableValueDisposer } from \"./utils/Disposer\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"./utils/Animation\";\r\nimport { Optional } from \"./utils/Type\";\r\nimport { Group } from \"./rendering/Group\";\r\nimport { Paper, getGhostPaper } from \"./rendering/Paper\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { Container } from \"./Container\";\r\nimport { Pattern } from \"./rendering/fills/Pattern\";\r\nimport { LinearGradient } from \"./rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"./rendering/fills/RadialGradient\";\r\nimport { SVGContainer } from \"./rendering/SVGContainer\";\r\nimport { Align } from \"./defs/Align\";\r\nimport { Roles, AriaLive } from \"./defs/Accessibility\";\r\nimport { Popup } from \"./elements/Popup\";\r\nimport { Modal } from \"./elements/Modal\";\r\nimport { Color, color, toColor } from \"./utils/Color\";\r\nimport { Ordering } from \"./utils/Order\";\r\n\r\nimport { HorizontalCenter } from \"./defs/HorizontalCenter\";\r\nimport { VerticalCenter } from \"./defs/VerticalCenter\";\r\nimport { VerticalAlign } from \"./defs/VerticalAlign\";\r\nimport { ShapeRendering } from \"./defs/ShapeRendering\";\r\nimport { AMElement } from \"./rendering/AMElement\";\r\nimport { Filter } from \"./rendering/filters/Filter\";\r\n\r\nimport { ColorModifier } from \"./rendering/fills/ColorModifier\";\r\n\r\nimport { getInteraction } from \"./interaction/Interaction\";\r\nimport { InteractionObject } from \"./interaction/InteractionObject\";\r\n\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions } from \"./interaction/InteractionOptions\";\r\nimport { IPointer } from \"./interaction/Pointer\";\r\nimport { MouseCursorStyle } from \"./interaction/Mouse\";\r\nimport { InertiaTypes } from \"./interaction/Inertia\";\r\nimport { IStyleProperty } from \"./defs/IStyleProperty\";\r\n\r\nimport { options } from \"./Options\";\r\nimport { registry } from \"./Registry\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport { IRectangle } from \"./defs/IRectangle\";\r\nimport { Tooltip } from \"./elements/Tooltip\";\r\n\r\nimport { NumberFormatter } from \"./formatters/NumberFormatter\";\r\nimport { DateFormatter } from \"./formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"./formatters/DurationFormatter\";\r\nimport { getTextFormatter } from \"./formatters/TextFormatter\";\r\nimport { Language } from \"./utils/Language\";\r\nimport { Export } from \"./export/Export\";\r\nimport { AmChartsLogo } from \"./elements/AmChartsLogo\";\r\n\r\n\r\nimport { ISVGAttribute } from \"./rendering/AMElement\";\r\n\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $strings from \"./utils/Strings\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $iter from \"./utils/Iterator\";\r\n\r\nimport { system } from \"./System\";\r\n\r\nimport { Percent } from \"./utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Sprite]]\r\n */\r\nexport interface ISpriteProperties {\r\n\tdisabled?: boolean;\r\n\tx?: number | Percent;\r\n\ty?: number | Percent;\r\n\twidth?: number | string;\r\n\theight?: number | string;\r\n\tscale?: number;\r\n\trotation?: number;\r\n\tpixelPerfect?: boolean;\r\n\tmarginLeft?: number;\r\n\tmarginRight?: number;\r\n\tmarginTop?: number;\r\n\tmarginBottom?: number;\r\n\tfillOpacity?: number;\r\n\tfill?: Color | LinearGradient | RadialGradient | Pattern;\r\n\topacity?: number;\r\n\tstroke?: Color | LinearGradient | RadialGradient | Pattern;\r\n\tstrokeOpacity?: number;\r\n\tstrokeWidth?: number;\r\n\tstrokeDasharray?: number[];\r\n\tshapeRendering?: ShapeRendering;\r\n\tdraggable?: boolean;\r\n\tinert?: boolean;\r\n\tresizable?: boolean;\r\n\tswipeable?: boolean;\r\n\ttrackable?: boolean;\r\n\thoverable?: boolean;\r\n\tclickable?: boolean;\r\n\ttogglable?: boolean;\r\n\trightClickable?: boolean;\r\n\tlongClickable?: boolean;\r\n\twheelable?: boolean;\r\n\tfocusable?: boolean;\r\n\ttabindex?: number;\r\n\tvisible?: boolean;\r\n\ttooltipText?: string;\r\n\ttooltipHTML?: string;\r\n\ttooltipX?: number;\r\n\ttooltipY?: number;\r\n\ttooltipPosition?: \"fixed\" | \"pointer\";\r\n\tinteractionsEnabled?: boolean;\r\n\thorizontalCenter?: HorizontalCenter;\r\n\tverticalCenter?: VerticalCenter;\r\n\talign?: Align;\r\n\tvalign?: VerticalAlign;\r\n\tpaddingLeft?: number;\r\n\tpaddingRight?: number;\r\n\tpaddingTop?: number;\r\n\tpaddingBottom?: number;\r\n\tminX?: number;\r\n\tminY?: number;\r\n\tmaxX?: number;\r\n\tmaxY?: number;\r\n\tdx?: number;\r\n\tdy?: number;\r\n\trole?: string;\r\n\treaderDescribedBy?: string;\r\n\treaderLabelledBy?: string;\r\n\treaderLive?: AriaLive;\r\n\treaderControls?: string;\r\n\treaderChecked?: boolean;\r\n\treaderHidden?: boolean;\r\n\treaderDescription?: string;\r\n\treaderTitle?: string;\r\n\tnonScaling?: boolean;\r\n\tnonScalingStroke?: boolean;\r\n\tzIndex?: number;\r\n\tminWidth?: number;\r\n\tmaxWidth?: number;\r\n\tminHeight?: number;\r\n\tmaxHeight?: number;\r\n\tfillModifier?: ColorModifier;\r\n\tstrokeModifier?: ColorModifier;\r\n\thoverOnFocus?: boolean;\r\n\tpath?: string;\r\n\turlTarget?: string;\r\n\turl?: string;\r\n\thidden?: boolean;\r\n\tshowOnInit?: boolean;\r\n}\r\n\r\n/**\r\n * Defines animation options\r\n */\r\nexport interface ISpriteAnimationOptions {\r\n\tfrom?: Percent | Color | number | string;\r\n\tto: Percent | Color | number | string;\r\n\tproperty: any; // todo: this[\"_properties\"] can not be used here, think.\r\n}\r\n\r\n/**\r\n * Defines list ofvisual properties\r\n */\r\nexport const visualProperties: (keyof ISpriteProperties)[] = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeOpacity\", \"strokeWidth\", \"strokeDasharray\"]; // do not add opacity here, as it is used for showing/hiding\r\n\r\n/**\r\n * Represents a list of available adapters for [[Sprite]]\r\n */\r\nexport interface ISpriteAdapters extends ISpriteProperties {\r\n\r\n\tpixelHeight: number;\r\n\tpixelWidth: number;\r\n\trelativeHeight: number\r\n\trelativeWidth: number;\r\n\tmeasuredHeight: number;\r\n\tmeasuredWidth: number;\r\n\touterHeight: number;\r\n\touterWidth: number;\r\n\tinnerHeight: number;\r\n\tinnerWidth: number;\r\n\tglobalScale: number;\r\n\tpixelMarginRight: number;\r\n\trelativeMarginRight: number;\r\n\tpixelMarginLeft: number;\r\n\trelativeMarginLeft: number;\r\n\tpixelMarginTop: number;\r\n\trelativeMarginTop: number;\r\n\tpixelMarginBottom: number;\r\n\trelativeMarginBottom: number;\r\n\tpixelX: number;\r\n\trelativeX: number;\r\n\tpixelY: number;\r\n\trelativeY: number;\r\n\tmask: Sprite;\r\n\tpopulateString: string;\r\n};\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Sprite represents any displayable element.\r\n *\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n *\r\n * [[Sprite]] class represents the a hierarchical structure. Every object that\r\n * extends [[Sprite]] can have children, that would inherit their properties,\r\n * such as language, formatters, etc.\r\n *\r\n * @see {@link SpriteState}\r\n * @see {@link ISpriteEvents} for a list of available events\r\n * @see {@link ISpriteAdapters} for a list of available Adapters\r\n *\r\n * @todo Review child elements that need to go into `_disposers`\r\n * @important\r\n */\r\nexport class Sprite extends BaseObjectEvents implements IAnimatable {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {ISpriteProperties}\r\n\t */\r\n\tpublic _properties!: ISpriteProperties;\r\n\r\n\t/**\r\n\t * Defines state type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {SpriteState}\r\n\t */\r\n\t//public _state: SpriteState;\r\n\r\n\t/**\r\n\t * Defines type used in the Sprite.\r\n\t *\r\n\t * @type {ISpriteAdapters}\r\n\t */\r\n\tpublic _adapter!: ISpriteAdapters;\r\n\r\n\t/**\r\n\t * Holds values for Sprite's properties.\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = {};\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISpriteEvents}\r\n\t */\r\n\tpublic _events!: ISpriteEvents;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/event-listeners/} for more info about Events\r\n\t * @type {SpriteEventDispatcher<AMEvent<Sprite, ISpriteEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<this, this[\"_events\"]>> = new SpriteEventDispatcher(this);\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/adapters/} for more info about Adapters\r\n\t * @type {Adapter<Sprite, ISpriteAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<this, this[\"_adapter\"]>(this);\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprivate _bindings: { [key: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Holds indicator if this Sprite is a \"template\" to be used for creating\r\n\t * other Sprites from and should not be treated as full-fledged element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprotected _isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Holds collection of Sprite States.\r\n\t *\r\n\t * @type {Optional<DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>>}\r\n\t */\r\n\tpublic _states: $type.Optional<DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>>;\r\n\r\n\t/**\r\n\t * Holds indicator whether this sprite was already initialized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _inited: boolean = false;\r\n\r\n\t/**\r\n\t * A reference to a Tooltip for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Tooltip>}\r\n\t */\r\n\tprotected _tooltip: $type.Optional<Tooltip>;\r\n\r\n\t/**\r\n\t * A special data item which tooltip will use when formatting data. In case\r\n\t * it is not set, dataItem will be used.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<DataItem>}\r\n\t */\r\n\tprotected _tooltipDataItem: $type.Optional<DataItem>;\r\n\r\n\t/**\r\n\t * A reference to another sprite or sprite template from which tooltip should take colors if getFillFromObject or getStrokeFromObject are set to true.\r\n\t * Mostly used when we need to adjust tooltip color for a series, depending on column or bullet color.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tprotected _tooltipColorSource: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called and we have \"hidden\" state and\r\n\t * `transitionDuration > 0`, we set `isHiding` flag to `true` in order to\r\n\t * avoid restarting animations in case `hide()` method is called multiple\r\n\t * times.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isHiding: boolean = false;\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n\t * This was added becaus hidden state might have visibility set to true and so\r\n\t * there would not be possible to find out if a sprite is technically hidden or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isHidden: boolean = false;\r\n\r\n\t/**\r\n\t * This property indicates if Sprite is currently being revealed from hidden\r\n\t * state. This is used to prevent multiple calls to `sprite.show()` to\r\n\t * restart reveal animation. (if enabled)\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isShowing: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if this element is a standalone instance. A \"standalone\r\n\t * instance\" means this is a autonomous object which maintains its own\r\n\t * set of controls like Preloader, Export, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isStandaloneInstance: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if togglable Sprite is currently active (toggled on).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isActive: boolean = false;\r\n\r\n\t/**\r\n\t * A Sprite element to use as a mask for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {MutableValueDisposer}\r\n\t */\r\n\tprotected _mask = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<Group>}\r\n\t */\r\n\tprotected _clipPath: Optional<Group>;\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<AMElement>}\r\n\t */\r\n\tprotected _clipElement: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _positionPrecision: number = 3;\r\n\r\n\t/**\r\n\t * Holds reference to Sprite's [[InteractionObject]]. Sprite does not\r\n\t * perform any user interactions directly, it happens via [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<InteractionObject>}\r\n\t */\r\n\tprotected _interaction: $type.Optional<InteractionObject>;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Language}\r\n\t */\r\n\tprotected _language = new MutableValueDisposer<Language>();\r\n\r\n\t/**\r\n\t * An instance of [[NumberFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<NumberFormatter>}\r\n\t */\r\n\tprotected _numberFormatter: $type.Optional<NumberFormatter>;\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<DateFormatter>}\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * An instance of [[DurationFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<DurationFormatter>}\r\n\t */\r\n\tprotected _durationFormatter: $type.Optional<DurationFormatter>;\r\n\r\n\t/**\r\n\t * An HTML element to which [[svgContainer]] is added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<HTMLElement>}\r\n\t */\r\n\tprotected _htmlContainer: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * An HTML element to which all chart elements are added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<SVGContainer>}\r\n\t */\r\n\tprotected _svgContainer: $type.Optional<SVGContainer>;\r\n\r\n\t/**\r\n\t * A [[Container]] instance to place this element's [[Tooltip]] elements in\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Container>}\r\n\t */\r\n\tprotected _tooltipContainer: $type.Optional<Container>;\r\n\r\n\r\n\tprotected _urlDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Should this element be measured when measuring its parent container's\r\n\t * dimentions?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprotected _isMeasured: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Indicates if the chart should follow righ-to-left rules.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _rtl: boolean = false;\r\n\r\n\t/**\r\n\t * Holds [[Export]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Export}\r\n\t */\r\n\tprotected _exporting = new MutableValueDisposer<Export>();\r\n\r\n\t/**\r\n\t * Holds [[Modal]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Modal>}\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Holds [[Popup]] objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<ListTemplate<Popup>>}\r\n\t */\r\n\tprotected _popups: $type.Optional<ListTemplate<Popup>>;\r\n\r\n\t/**\r\n\t * A reference to a top-level SVG node for this Sprite element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<AMElement>}\r\n\t */\r\n\tprotected _element: Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Holds Sprite's main SVG group (`<g>`) element. Other Sprite's elements\r\n\t * are all placed in this group.\r\n\t * @type {Group}\r\n\t */\r\n\tpublic group: Group;\r\n\r\n\t/**\r\n\t * A reference to [[Paper]] SVG renderer used to create SVG nodes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Paper>}\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * Elements's top-level [[Container]].\r\n\t *\r\n\t * In most cases that will be a Chart.\r\n\t *\r\n\t * @return {Optional<Container>} Top-level ascendant\r\n\t */\r\n\tprotected _topParent: Optional<Container>;\r\n\r\n\t/**\r\n\t * Data item assigned to the sprite. It might contain information defining\r\n\t * some style properties.\r\n\t *\r\n\t * @type {Optional<DataItem>}\r\n\t */\r\n\tpublic _dataItem: $type.Optional<DataItem>;\r\n\r\n\t/**\r\n\t * Parent container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _parent: Container;\r\n\r\n\t/**\r\n\t * Sprite's \"virtual\" parent.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tprotected _virtualParent: Sprite;\r\n\r\n\t/**\r\n\t * Defines bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IRectangle}\r\n\t */\r\n\tprotected _bbox: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t/**\r\n\t * Base tab index for the Sprite. Used for TAB-key selection order.\r\n\t *\r\n\t * Use accessors `tabIndex` to set and retrieve.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _tabindex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Should system tooltips be allowed to be displayed if the element has\r\n\t * `readerTitle` set?\r\n\t *\r\n\t * Use accessors `showSystemTooltip` to set and retrieve.\r\n\t *\r\n\t * This is an accessibility feature.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprotected _showSystemTooltip: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * List of animations currently playing for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Array<Animation>>}\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * A link to [[Disposer]] for event handler which is attached to hide\r\n\t * animation. In some cases we need to cancel this event. This property is\r\n\t * used to hold the reference to disposer of this event so that we can\r\n\t * cancel it by calling its `dispose()` method.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprotected _showHideDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * If element is currently hiding, this property will hold a reference to\r\n\t * [[Animation]] instance, which is handling hiding animation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Animation>}\r\n\t */\r\n\tprotected _hideAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * List of [[Filter]] items that are currently applied to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<List<Filter>>}\r\n\t */\r\n\tprotected _filters: $type.Optional<List<Filter>>;\r\n\r\n\t/**\r\n\t * A shortcut to the special \"Focus\" filter which is applied when the element\r\n\t * gains focus.\r\n\t *\r\n\t * This is an accessibility feature.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Filter>}\r\n\t */\r\n\tprotected _focusFilter: $type.Optional<Filter>;\r\n\r\n\t/**\r\n\t * Indicates if this element is invalid and should be re-validated (redrawn).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic invalid: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if this elements position is invalid and should be repositioned\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic positionInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * A collection of key/value pairs that can be used to bind specific Sprite\r\n\t * properties to [[DataItem]].\r\n\t *\r\n\t * For example: `fill` property can be bound to `myCustomColor` field in\r\n\t * DataItem. The Sprite will automatically get the value for `fill` from its\r\n\t * DataItem.\r\n\t *\r\n\t * Can be set for each [[SpriteState]] individually to override default\r\n\t * bindings.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @type {Object}\r\n\t */\r\n\tpublic propertyFields: { [index in keyof this[\"_properties\"]]?: string } = {};\r\n\t//public propertyFields: Dictionary<keyof this[\"_properties\"], string> = new Dictionary<keyof this[\"_properties\"], string>();\r\n\r\n\t/**\r\n\t * Element's relative width.\r\n\t *\r\n\t * Do not set this property directly. Use `width` accessor with [[Percent]]\r\n\t * value instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {$type.Optional<number>}\r\n\t */\r\n\tpublic percentWidth: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Element's relative height.\r\n\t *\r\n\t * Do not set this property directly. Use `height` accessor with [[Percent]]\r\n\t * value instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {$type.Optional<number>}\r\n\t */\r\n\tpublic percentHeight: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * An SVG group element that is used to put all SVG filters to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Group>}\r\n\t */\r\n\tpublic filterElement: $type.Optional<Group>;\r\n\r\n\t/**\r\n\t * A field in data context of element's `dataItem` that holds config values\r\n\t * for this element.\r\n\t *\r\n\t * This is a very powerful feature, allowing changing virtually any setting,\r\n\t * including those for element's children, for the element via data.\r\n\t *\r\n\t * Example data:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"value\": 100,\r\n\t *   \"config\": {\r\n\t *     \"fill\": \"#F00\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * If you set element's `configField = \"config\"`, the element for this\r\n\t * specific data point will have a red fill.\r\n\t *\r\n\t * @type {Optional<string>}\r\n\t */\r\n\tpublic configField: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Reference to element's `<title>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<SVGTitleElement>}\r\n\t */\r\n\tprotected _titleElement: Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Reference to element's `<description>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<SVGDescElement>}\r\n\t */\r\n\tprotected _descriptionElement: Optional<AMElement>;\r\n\r\n\r\n\t/**\r\n\t * Specifies if property changes on this object should be propagated to the\r\n\t * objects cloned from this object.\r\n\t *\r\n\t * This setting affects property changes *after* cloning, since at the moment\r\n\t * of cloning all of properties from source object are copied to the clone\r\n\t * anyway.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic applyOnClones: boolean = false;\r\n\r\n\r\n\t/**\r\n\t * a reference to an object which should be used when populating string. used for tooltip label mostly.\r\n\t * @ignore\r\n\t */\r\n\tpublic populateStringFrom: any;\r\n\r\n\t/**\r\n\t * Internal storage properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected _measuredWidth: number;\r\n\tprotected _measuredHeight: number;\r\n\r\n\tprotected _measuredWidthSelf: number;\r\n\tprotected _measuredHeightSelf: number;\r\n\r\n\tprotected _prevMeasuredWidth: number;\r\n\tprotected _prevMeasuredHeight: number;\r\n\r\n\tprotected _pixelWidth: $type.Optional<number>;\r\n\tprotected _pixelHeight: $type.Optional<number>;\r\n\r\n\tprotected _relativeWidth: $type.Optional<number>;\r\n\tprotected _relativeHeight: $type.Optional<number>;\r\n\r\n\t// read only, sprite extreme coordinates\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxLeft: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxRight: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxTop: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxBottom: number = 0;\r\n\r\n\tprotected _isDragged: boolean = false;\r\n\r\n\t/**\r\n\t * @deprecated Moved to [[SpriteProperties]]\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _disabled: boolean = false;\r\n\r\n\tprotected _internalDisabled: boolean = false;\r\n\r\n\tprotected _updateDisabled: boolean = false;\r\n\r\n\tprotected _maskRectangle: $type.Optional<IRectangle>;\r\n\r\n\tprotected _internalDefaultsApplied: boolean = false;\r\n\r\n\tprotected _interactionDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * You can set bbox from outside if you know what size your element must be (used in radar chart for example)\r\n\t * @ignore\r\n\t */\r\n\tpublic definedBBox: IRectangle;\r\n\r\n\t/**\r\n\t * Time in milliseconds after which rollout event happens when user rolls-out of the sprite. This helps to avoid flickering in some cases.\r\n\t * @type {number}\r\n\t */\r\n\tpublic rollOutDelay: number = 0;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _outTimeout: $type.Optional<IDisposer>;\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * this flag is set to true for the initial sprite you create and place to the div so that we could clear all additional sprites/containers when this sprite is disposed\r\n\t */\r\n\r\n\tpublic isBaseSprite: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether this sprite should be cloned when cloning its parent\r\n\t * container. We set this to `false` in those cases when a sprite is created\r\n\t * by the class, so that when cloning a duplicate sprite would not appear.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic shouldClone: boolean = true;\r\n\r\n\r\n\t/**\r\n\t * A property which you can use to store any data you want.\r\n\t * @type {any}\r\n\t */\r\n\tpublic dummyData: any;\r\n\r\n\t/**\r\n\t * A reference to a real fill object. Sometimes might be useful to modify gradient (when fill is color but we have FillModifier).\r\n\t */\r\n\tpublic realFill: Color | Pattern | LinearGradient | RadialGradient;\r\n\r\n\t/**\r\n\t * A reference to a real stroke object. Sometimes might be useful to modify gradient (when fill is color but we have FillModifier).\r\n\t */\r\n\tpublic realStroke: Color | Pattern | LinearGradient | RadialGradient;\r\n\r\n\r\n\t/**\r\n\t * A reference to amCharts logo element.\r\n\t *\r\n\t * @ignore\r\n\t * @type {AmChartsLogo}\r\n\t */\r\n\tpublic logo: AmChartsLogo;\r\n\r\n\tprotected _baseId: string;\r\n\r\n\t/**\r\n\t * A read-only flag which indicates if a sprite has completed its initial\r\n\t * animation (if `showOnInit = true`).\r\n\t *\r\n\t * In case `showOnInit = false`, `appeared` is set to `true` on init.\r\n\t *\r\n\t * @readonly\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic appeared: boolean = false;\r\n\r\n\tpublic ex: number = 0;\r\n\tpublic ey: number = 0;\r\n\r\n\t/**\r\n\t * Constructor:\r\n\t * * Creates initial node\r\n\t * * Sets default properties\r\n\t * * Creates required default states\r\n\t * * Inits accessibility\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Sprite\";\r\n\r\n\t\t// Generate a unique ID\r\n\t\tthis.uid;\r\n\r\n\t\t// Create SVG group to hold everything in\r\n\t\tthis.group = this.paper.addGroup(\"g\");\r\n\r\n\t\t// Set defaults\r\n\t\t// it is better to set defauls like this in order to save invaliation calls and events\r\n\t\tthis.setPropertyValue(\"scale\", 1);\r\n\t\tthis.setPropertyValue(\"rotation\", 0);\r\n\t\tthis.setPropertyValue(\"align\", \"none\");\r\n\t\tthis.setPropertyValue(\"valign\", \"none\");\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", false);\r\n\t\tthis.setPropertyValue(\"visible\", true);\r\n\t\tthis.setPropertyValue(\"tooltipPosition\", \"fixed\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\r\n\t\tthis.setPropertyValue(\"marginTop\", 0);\r\n\t\tthis.setPropertyValue(\"marginBottom\", 0);\r\n\t\tthis.setPropertyValue(\"marginLeft\", 0);\r\n\t\tthis.setPropertyValue(\"marginRight\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"dx\", 0);\r\n\t\tthis.setPropertyValue(\"dy\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"paddingTop\", 0);\r\n\t\tthis.setPropertyValue(\"paddingBottom\", 0);\r\n\t\tthis.setPropertyValue(\"paddingRight\", 0);\r\n\t\tthis.setPropertyValue(\"paddingLeft\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"togglable\", false);\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\t\tthis.setPropertyValue(\"urlTarget\", \"_self\");\r\n\r\n\t\tthis._prevMeasuredWidth = 0;\r\n\t\tthis._prevMeasuredHeight = 0;\r\n\t\tthis._measuredWidth = 0;\r\n\t\tthis._measuredHeight = 0;\r\n\r\n\t\tthis._isMeasured = true;\r\n\r\n\t\t// Invalidate the Sprite so that renderer knows it needs to be drawn\r\n\t\tthis.invalidate();\r\n\r\n\t\t//this.states.create(\"default\").properties.opacity = 1;\r\n\r\n\t\t// Apply the theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\t//this._disposers.push(this._clickable);\r\n\r\n\t\t// Decorate adapter with events so that we can apply its settings whenever\r\n\t\t// it is modified\r\n\t\t// @todo Think what to do here. We can't just apply the adapter value to\r\n\t\t// property since not all of those are for properties. Commented out for\r\n\t\t// now.\r\n\t\t/*this.adapter.events.on(\"inserted\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t});\r\n\t\tthis.adapter.events.on(\"removed\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t});*/\r\n\r\n\t\t// Add disposable dependencies to `_disposers` so they are automatically\r\n\t\t// disposed of when this object is disposed\r\n\t\tthis._disposers.push(this.events);\r\n\t\tthis._disposers.push(this.group);\r\n\t\tthis._disposers.push(this._mask);\r\n\t\tthis._disposers.push(this._language);\r\n\t\tthis._disposers.push(this._exporting);\r\n\t\t//this._disposers.push(this._parent);\r\n\t\t//this._disposers.push(this._modal);\r\n\r\n\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t$object.each(this._bindings, (key, value) => {\r\n\t\t\t\tvalue.dispose();\r\n\t\t\t});\r\n\t\t}));\r\n\r\n\t\tthis.setPropertyValue(\"interactionsEnabled\", true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT VALIDATION, INIT, AND DRAWING STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Applies properties from all assigned themes.\r\n\t *\r\n\t * We do this here so that we can apply class names as well.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName) {\r\n\t\t\tthis.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns theme(s) used by this object either set explicitly on this\r\n\t * element, inherited from parent, or inherited from [[System]].\r\n\t *\r\n\t * @return {ITheme} An array of theme references\r\n\t */\r\n\tpublic getCurrentThemes(): ITheme[] {\r\n\t\tconst themes = this._themes;\r\n\r\n\t\tif (themes) {\r\n\t\t\treturn themes;\r\n\r\n\t\t} else {\r\n\t\t\tconst parent = this.parent;\r\n\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn parent.getCurrentThemes();\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn registry.themes;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called just before element's validation, this function allows setting\r\n\t * defaults.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\t// Nothing here, but extending classes might override this function\r\n\t\t// so that they can set their defaults\r\n\t\tthis._internalDefaultsApplied = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element.\r\n\t *\r\n\t * Object will be redrawn during the next update cycle.\r\n\t *\r\n\t * Please note that in most cases elements will auto-invalidate when needed. If\r\n\t * everything works, DO NOT use this method. Use it only if some changes do\r\n\t * not take otherwise.\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this.disabled || this._isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// We no longer reset this on each invalidate, so that they are applied\r\n\t\t// only once, and do not overwrite user-defined settings\r\n\t\t//this._internalDefaultsApplied = false;\r\n\r\n\t\tif (!this.invalid) {\r\n\t\t\tthis.invalid = true;\r\n\t\t\tregistry.addToInvalidSprites(this);\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.dispatchImmediately(\"beforevalidated\");\r\n\r\n\t\t// prevents from drawing if topparent is 0x0\r\n\t\t/*\r\n\t\tlet topParent = this.topParent;\r\n\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\tthis._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidate, this));\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Set internal defaults\r\n\t\tif (!this._internalDefaultsApplied) {\r\n\t\t\tthis.applyInternalDefaults();\r\n\t\t}\r\n\r\n\t\tthis.beforeDraw();\r\n\t\tthis.draw();\r\n\r\n\t\tthis.invalid = false;\r\n\r\n\t\tregistry.removeFromInvalidSprites(this);\r\n\t\tthis.afterDraw();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidatePosition(): void {\r\n\t\tif (this.disabled || this._isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.positionInvalid) {\r\n\t\t\tthis.positionInvalid = true;\r\n\t\t\tregistry.addToInvalidPositions(this);\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Transforms the element.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\r\n\t\tlet pixelX = this.pixelX;\r\n\t\tlet pixelY = this.pixelY;\r\n\t\tlet dx = this.dx;\r\n\t\tlet dy = this.dy;\r\n\r\n\t\tlet x: number = pixelX + dx;\r\n\t\tlet y: number = pixelY + dy;\r\n\r\n\t\tif (this._updateDisabled) {\r\n\t\t\tif (this._internalDisabled) {\r\n\t\t\t\tthis.group.attr({ \"display\": \"none\" })\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!this.disabled) {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"display\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateDisabled = false;\r\n\t\t}\r\n\r\n\t\tlet sizeChanged: boolean = this.measure();\r\n\r\n\t\t//if (!this.invalid) {\r\n\t\tlet prevGroupTransform: string = this.group.transformString;\r\n\r\n\t\tthis.group.moveTo({ x: x, y: y });\r\n\t\tthis.group.rotation = this.rotation;\r\n\t\tif (this.nonScaling) {\r\n\t\t\tthis.group.scale = this.scale / this.globalScale;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.group.scale = this.scale;\r\n\t\t}\r\n\r\n\t\tif (prevGroupTransform != this.group.transformString || sizeChanged) {\r\n\t\t\t// not yet sure, this is to avoid many transforms=>container layout invalidation on initial buid\r\n\t\t\tif (prevGroupTransform == null) {\r\n\t\t\t\tthis.dispatch(\"transformed\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dispatchImmediately(\"transformed\");\r\n\t\t\t}\r\n\t\t\t// TODO clear existing positionchanged dispatches ?\r\n\t\t\tthis.dispatch(\"positionchanged\");\r\n\t\t}\r\n\t\t//}\r\n\r\n\t\t// it might happen that x and y changed again, so we only remove if they didn't\r\n\t\tif (pixelX + dx == x && pixelY + dy == y) {\r\n\t\t\tregistry.removeFromInvalidPositions(this);\r\n\t\t\tthis.positionInvalid = false;\r\n\t\t}\r\n\t\tlet maskRectangle = this._maskRectangle;\r\n\t\t// todo: verify this\r\n\t\tif (maskRectangle) {\r\n\t\t\tthis._clipElement.moveTo({ x: maskRectangle.x - pixelX, y: maskRectangle.y - pixelY });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that is called **before** element begins to be drawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected beforeDraw(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that is called **after** element finishes drawing\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tif (this.isMeasured || this.horizontalCenter !== \"none\" || this.verticalCenter !== \"none\") {\r\n\t\t\tthis.measureElement();\r\n\t\t}\r\n\r\n\t\t//this.applyMask();\r\n\r\n\t\tif (!this._inited) {\r\n\r\n\t\t\t// used to be applySVGAttrbutes here, this is more efficient\r\n\t\t\tfor (let key of this.adapter.keys()) {\r\n\t\t\t\tswitch (key) {\r\n\t\t\t\t\tcase \"mask\":\r\n\t\t\t\t\tcase \"fill\":\r\n\t\t\t\t\tcase \"opacity\":\r\n\t\t\t\t\tcase \"fillOpacity\":\r\n\t\t\t\t\tcase \"stroke\":\r\n\t\t\t\t\tcase \"strokeOpacity\":\r\n\t\t\t\t\tcase \"shapeRendering\":\r\n\t\t\t\t\tcase \"strokeDasharray\":\r\n\t\t\t\t\t\t//case \"focusable\":\r\n\t\t\t\t\t\t//case \"tabindex\":\r\n\t\t\t\t\t\t//case \"role\":\r\n\t\t\t\t\t\t(<any>this)[key] = (<any>this)[key];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyFilters();\r\n\r\n\t\t\tthis.visible = this.visible;\r\n\t\t\tthis.interactionsEnabled = this.getPropertyValue(\"interactionsEnabled\"); // can't use .interactionsEnabled as it get's parent's\r\n\r\n\t\t\tthis._inited = true;\r\n\t\t\tthis.applyMask();\r\n\t\t\tthis.dispatch(\"validated\");\r\n\t\t\tthis.dispatch(\"inited\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.dispatch(\"validated\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggers a re-initialization of this element.\r\n\t *\r\n\t * Will result in complete redrawing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tthis._inited = false;\r\n\t\tthis.setState(this.defaultState);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the situation where parent element is resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleGlobalScale(): void {\r\n\t\tthis.dispatch(\"globalscalechanged\");\r\n\r\n\t\tif (this.nonScalingStroke) {\r\n\t\t\tthis.strokeWidth = this.strokeWidth;\r\n\t\t}\r\n\r\n\t\tif (this.nonScaling) {\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tthis.updateFilterScale();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates filter properties which might depend on scale\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateFilterScale(): void {\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tfilter.scale = this.globalScale;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes itself from system's invalid lists.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeFromInvalids() {\r\n\t\tregistry.removeFromInvalidSprites(this);\r\n\t\tregistry.removeFromInvalidPositions(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param {Sprite} source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis.events.copyFrom(source.events);\r\n\r\n\t\tthis.isMeasured = source.isMeasured;\r\n\r\n\t\tthis.states.copyFrom(source.states);\r\n\r\n\t\tif (source.filters.length > 0) {\r\n\t\t\tsource.filters.each((filter) => {\r\n\t\t\t\tthis.filters.push(filter.clone());\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.adapter.copyFrom(source.adapter);\r\n\r\n\t\t//helps to avoid calling getter which creates instance\r\n\t\tif ((<any>source)[\"_interaction\"]) {\r\n\t\t\tthis.interactions.copyFrom(source.interactions);\r\n\t\t}\r\n\r\n\t\tthis.configField = source.configField;\r\n\r\n\t\tthis.applyOnClones = source.applyOnClones;\r\n\r\n\t\t// this.numberFormatter = source.numberFormatter; // todo: this creates loose number formatter and copies it to all clones. somehow we need to know if source had numberFormatter explicitly created and not just because a getter was called.\r\n\r\n\t\t//this.mask = source.mask; need to think about this, generally this causes a lot of problems\r\n\t\tthis.disabled = source.disabled;\r\n\r\n\t\tthis.virtualParent = source.virtualParent;\r\n\r\n\t\t//@todo: create tooltip if it's on source but not on this?\r\n\t\t//const tooltip = this._tooltip;\r\n\t\t//if (tooltip) {\r\n\t\t//\ttooltip.copyFrom(source.tooltip);\r\n\t\t//}\r\n\r\n\t\tif (source._tooltip) {\r\n\t\t\tif (this._tooltip) {\r\n\t\t\t\tthis._tooltip.copyFrom(source.tooltip);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.tooltip = source.tooltip.clone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((<any>source)[\"_tooltip\"] && !this._tooltip) {\r\n\t\t\tthis._tooltip = (<any>source)[\"_tooltip\"];\r\n\t\t}\r\n\r\n\t\tthis._showSystemTooltip = source.showSystemTooltip;\r\n\r\n\t\t$utils.copyProperties(source.propertyFields, this.propertyFields);\r\n\t\t$utils.copyProperties(source.properties, this);\r\n\r\n\t\tif (source.fillModifier) {\r\n\t\t\tthis.fillModifier = source.fillModifier.clone();\r\n\t\t}\r\n\r\n\t\tif (source.strokeModifier) {\r\n\t\t\tthis.strokeModifier = source.strokeModifier.clone();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tif (!this.isDisposed()) {\r\n\t\t\tif (this.isBaseSprite) {\r\n\t\t\t\tif (this.htmlContainer) {\r\n\t\t\t\t\twhile (this.htmlContainer.childNodes.length > 0) {\r\n\t\t\t\t\t\tthis.htmlContainer.removeChild(this.htmlContainer.firstChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isBaseSprite = false;\r\n\t\t\t}\r\n\r\n\t\t\tsuper.dispose();\r\n\r\n\t\t\t// Clear adapters\r\n\t\t\tthis.adapter.clear();\r\n\r\n\t\t\tif (this.applyOnClones) {\r\n\t\t\t\tif (this._clones) {\r\n\t\t\t\t\tfor (let i = this._clones.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tlet clone = this._clones.getIndex(i);\r\n\t\t\t\t\t\tclone.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._svgContainer) {\r\n\t\t\t\tthis._svgContainer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._interactionDisposer) {\r\n\t\t\t\tthis._interactionDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._urlDisposer) {\r\n\t\t\t\tthis._urlDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeFromInvalids();\r\n\r\n\t\t\tif (this.element) {\r\n\t\t\t\tthis.element.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.group) {\r\n\t\t\t\tthis.group.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._numberFormatter) {\r\n\t\t\t\tthis._numberFormatter.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._focusFilter) {\r\n\t\t\t\tthis._focusFilter.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.stroke && !(this.stroke instanceof Color)) {\r\n\t\t\t\tthis.stroke.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// TODO a bit hacky\r\n\t\t\tif (this.fill && !(this.fill instanceof Color)) {\r\n\t\t\t\tthis.fill.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// remove from map\r\n\t\t\tif ($type.hasValue(this.id)) {\r\n\t\t\t\tthis.map.removeKey(this.id);\r\n\t\t\t}\r\n\r\n\t\t\tthis.parent = undefined;\r\n\t\t\tif (this._filters) {\r\n\t\t\t\twhile (this._filters.length > 0) {\r\n\t\t\t\t\tlet filter = <Filter>this._filters.getIndex(0);\r\n\t\t\t\t\tfilter.dispose();\r\n\t\t\t\t\tthis._filters.removeValue(filter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is a \"template\".\r\n\t *\r\n\t * Template Sprites act only as a holders for config for other \"real\"\r\n\t * elements to be cloned from.\r\n\t *\r\n\t * Templates are treated differently, as they are not validated, redrawn, or\r\n\t * otherwise are processed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean} value Is template?\r\n\t */\r\n\tpublic set isTemplate(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this._isTemplate != value) {\r\n\t\t\tthis._isTemplate = value;\r\n\r\n\t\t\tif (this instanceof Container) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tchild.isTemplate = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.parent = this.parent;\r\n\t\t\t\tthis.removeFromInvalids();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Is template?\r\n\t */\r\n\tpublic get isTemplate(): boolean {\r\n\t\treturn this._isTemplate;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the element should attempt to construct itself in a way\r\n\t * so that system tooltip is shown if its `readerTitle` is set.\r\n\t *\r\n\t * @param {boolean} value Show system tooltip?\r\n\t */\r\n\tpublic set showSystemTooltip(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis._showSystemTooltip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Show system tooltip?\r\n\t */\r\n\tpublic get showSystemTooltip(): boolean {\r\n\t\tif (!$type.hasValue(this._showSystemTooltip)) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.showSystemTooltip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._showSystemTooltip;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * HIERARCHY AND STRUCTURE RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Sprites's top-level [[Container]].\r\n\t *\r\n\t * In most cases that will be a Chart.\r\n\t *\r\n\t * @return {Optional<Container>} Top-level ascendant\r\n\t */\r\n\tpublic get topParent(): Optional<Container> {\r\n\t\tif (this._topParent) {\r\n\t\t\treturn this._topParent;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.topParent;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @param value {Container} top parent of a sprite\r\n\t */\r\n\tpublic set topParent(value: Container) {\r\n\t\tthis._topParent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Elements' parent [[Container]].\r\n\t *\r\n\t * @param {Optional<Container>}  parent  Parent container\r\n\t */\r\n\tpublic set parent(parent: Optional<Container>) {\r\n\t\tif (this._isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet currentPaper = this.paper;\r\n\t\tlet oldParent = this._parent;\r\n\t\tif (oldParent != parent) {\r\n\r\n\t\t\tif (oldParent) {\r\n\t\t\t\toldParent.children.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._parent = parent;\r\n\r\n\t\t\tif (parent) {\r\n\r\n\t\t\t\tthis.topParent = parent.topParent;\r\n\r\n\t\t\t\tif (parent.isTemplate) {\r\n\t\t\t\t\tthis.isTemplate = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.baseId = parent.baseId;\r\n\r\n\t\t\t\tparent.children.push(this);\r\n\t\t\t\t// insert handler at Container invalidates +  invalidatesLayout + adds to group\r\n\r\n\t\t\t\tif (this._tooltip && !this._tooltipContainer) {\r\n\t\t\t\t\tthis._tooltip.parent = parent.tooltipContainer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._dataItem) {\r\n\t\t\t\t\tthis.dataItem = parent.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.topParent = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Container>} Parent container\r\n\t */\r\n\tpublic get parent(): Optional<Container> {\r\n\t\treturn this._parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's \"virtual\" parent.\r\n\t *\r\n\t * This is required in ordere to maintain proper inheritance (like\r\n\t * formatters).\r\n\t *\r\n\t * Sometimes an element is a \"logical\" parent, even though it's not a direct\r\n\t * ascendant.\r\n\t *\r\n\t * Example: a bullet is not a child of the axis, but it would make sense\r\n\t * for it to inherit series' formatters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  value  Virtual parent\r\n\t */\r\n\tpublic set virtualParent(value: Sprite) {\r\n\t\tthis._virtualParent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Container>} Virtual parent\r\n\t */\r\n\tpublic get virtualParent(): Optional<Sprite> {\r\n\t\treturn this._virtualParent;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves `<defs>` to correct place in DOM.\r\n\t *\r\n\t * Some elements are initially created in \"ghost\" container. When moving\r\n\t * those into proper place in DOM, their respective `<defs>` need to be moved\r\n\t * as well.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendDefs(): void {\r\n\r\n\t\tif (this.filterElement) {\r\n\t\t\tthis.paper.appendDef(this.filterElement);\r\n\t\t}\r\n\r\n\t\tlet fill = <any>this.fill;\r\n\r\n\t\tif (fill && fill.element) {\r\n\t\t\tthis.paper.appendDef(fill.element);\r\n\t\t}\r\n\r\n\t\tlet stroke = <any>this.stroke;\r\n\t\tif (stroke && stroke.element) {\r\n\t\t\tthis.paper.appendDef(stroke.element);\r\n\t\t}\r\n\r\n\t\tif (this.fillModifier && this.fill instanceof Color) {\r\n\t\t\tlet fill = <any>this.fillModifier.modify(this.fill);\r\n\t\t\tif (fill && fill.element) {\r\n\t\t\t\tthis.paper.appendDef(fill.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.strokeModifier && this.stroke instanceof Color) {\r\n\t\t\tlet stroke = <any>this.fillModifier.modify(this.stroke);\r\n\t\t\tif (stroke && stroke.element) {\r\n\t\t\t\tthis.paper.appendDef(stroke.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._clipPath) {\r\n\t\t\tthis.paper.appendDef(this._clipPath);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Dictionary]] which maps object ids with their respective\r\n\t * objects.\r\n\t *\r\n\t * Can be used to retrieve any object by id, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * console.log(mySprite.map.getKey(\"myid\"));\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * console.log(mySprite.map.getKey(\"myid\"));\r\n\t * ```\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Dictionary<string, any>} Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tconst top = this.topParent;\r\n\r\n\t\tif (top) {\r\n\t\t\treturn top.map;\r\n\t\t} else if (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's user-defined ID.\r\n\t *\r\n\t * Will throw an Error if there already is an object with the same ID.\r\n\t *\r\n\t * Please note that above check will be performed withing the scope of the\r\n\t * current chart instance. It will not do checks across other chart instances\r\n\t * or in globally in DOM.\r\n\t *\r\n\t * Make sure the IDs are unique.\r\n\t *\r\n\t * @param {string} value ID\r\n\t */\r\n\tpublic set id(value: string) {\r\n\t\tif (this._id != value) {\r\n\t\t\tthis._id = value;\r\n\t\t\tif (this.map.hasKey(value)) {\r\n\t\t\t\tthrow Error(\"Duplicate id (\" + value + \") used on multiple objects.\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.map.setKey(value, this);\r\n\t\t\t}\r\n\t\t\tif (options.autoSetClassName) {\r\n\t\t\t\tthis.setClassName();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} ID\r\n\t */\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT AND DOM TREE MANIPULATION AND MEASURING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns DOM element reference associated with this element.\r\n\t *\r\n\t * @readonly\r\n\t * @return {SVGSVGElement} DOM element\r\n\t */\r\n\tpublic get dom(): SVGSVGElement {\r\n\t\treturn this.group.node;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Paper]] instance to place elements on.\r\n\t *\r\n\t * If there's no Paper set for this element, it goes up the ascendant tree\r\n\t * until it finds one.\r\n\t *\r\n\t * This method is used by important `addChild()` method, so it's essential\r\n\t * to have a [[Paper]] instance.\r\n\t *\r\n\t * If this element has a separate `htmlContainer` set, it will have a\r\n\t * [[Paper]] instance itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tthis.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param {Paper} paper Paper\r\n\t * @return {boolean} true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tlet oldPaper = this._paper;\r\n\r\n\t\tif (oldPaper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\r\n\t\t\tthis.appendDefs();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.paper;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * An HTML element to be used when placing wrapper element (`<div>`)\r\n\t * for the whole chart.\r\n\t *\r\n\t * This is the same for **all** elements within the same chart.\r\n\t *\r\n\t * @param {Optional<HTMLElement>} htmlContainer HTML element\r\n\t */\r\n\tpublic set htmlContainer(htmlContainer: $type.Optional<HTMLElement>) {\r\n\t\tthis._htmlContainer = htmlContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<HTMLElement>} HTML element\r\n\t */\r\n\tpublic get htmlContainer(): $type.Optional<HTMLElement> {\r\n\t\tif (this._htmlContainer) {\r\n\t\t\treturn this._htmlContainer;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.htmlContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates (if not yet created) and returns element's `<title>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {AMElement} Title element\r\n\t */\r\n\tpublic get titleElement(): AMElement {\r\n\t\tif (!this._titleElement) {\r\n\t\t\tthis._titleElement = this.paper.add(\"title\");\r\n\t\t\tthis.group.add(this._titleElement);\r\n\t\t}\r\n\t\treturn this._titleElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates (if not yet created) and returns element's `<desc>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {AMElement} Desc element\r\n\t */\r\n\tpublic get descriptionElement(): AMElement {\r\n\t\tif (!this._descriptionElement) {\r\n\t\t\tthis._descriptionElement = this.paper.add(\"desc\");\r\n\t\t\tthis.group.add(this._descriptionElement);\r\n\t\t}\r\n\t\treturn this._descriptionElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of SVG filters (effects) applied to element. If the filter\r\n\t * list is not yet initilized, creates and returns an empty one.\r\n\t * Note, not all filters combine well with one another. We recommend using one filter per sprite.\r\n\t *\r\n\t * @return {List<Filter>} List of filters\r\n\t */\r\n\tpublic get filters(): List<Filter> {\r\n\t\tif (!this._filters) {\r\n\t\t\tthis._filters = new List<Filter>();\r\n\t\t\t// TODO only add certain events ?\r\n\t\t\tthis._disposers.push(this._filters.events.onAll(this.applyFilters, this));\r\n\t\t\tthis._disposers.push(new ListDisposer(this._filters));\r\n\t\t}\r\n\t\treturn this._filters;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets required SVG attributes. Must be called every time an element is\r\n\t * redrawn so that attributes are (re)applied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected setSVGAttributes(): void {\r\n\t\tthis.fill = this.fill;\r\n\t\tthis.opacity = this.opacity;\r\n\t\tthis.fillOpacity = this.fillOpacity;\r\n\t\tthis.stroke = this.stroke;\r\n\t\tthis.strokeOpacity = this.strokeOpacity;\r\n\t\tthis.shapeRendering = this.shapeRendering;\r\n\t\tthis.strokeDasharray = this.strokeDasharray;\r\n\t\tthis.focusable = this.focusable;\r\n\t\tthis.tabindex = this.tabindex;\r\n\t\tthis.role = this.role;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an attribute directly on an SVG element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {ISVGAttribute} attribute Attribute object\r\n\t */\r\n\tprotected setSVGAttribute(attribute: ISVGAttribute): void {\r\n\t\tthis.group.attr(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute directly from SVG element.\r\n\t *\r\n\t * @param {string} attribute Attribute key to remove\r\n\t */\r\n\tprotected removeSVGAttribute(attribute: string): void {\r\n\t\tthis.group.removeAttr(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `class` attribute of the elements SVG node.\r\n\t *\r\n\t * Uses `am4core.options.classNamePrefix`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic setClassName(): void {\r\n\r\n\t\tlet className = this.className;\r\n\t\tlet classNamePrefix = options.classNamePrefix;\r\n\r\n\t\tif (this.element) {\r\n\t\t\tthis.element.addClass(classNamePrefix + className);\r\n\t\t}\r\n\r\n\t\tthis.group.addClass(classNamePrefix + className + \"-group\");\r\n\r\n\t\tif ($type.hasValue(this.id)) {\r\n\t\t\tthis.group.addClass(classNamePrefix + this.id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an `id` attribute the the element and returns the id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Element's ID\r\n\t */\r\n\tpublic uidAttr(): string {\r\n\t\tthis.element.attr({ \"id\": this.uid });\r\n\t\treturn this.uid;\r\n\t}\r\n\r\n\t/**\r\n\t * [updateClipPath description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected updateClipPath(): void {\r\n\t\tconst element = this._clipElement;\r\n\r\n\t\tif (element) {\r\n\t\t\telement.moveTo({ x: this.mask.pixelX, y: this.mask.pixelY });\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createClipPath() {\r\n\t\tif (!this._clipPath) {\r\n\t\t\tthis._clipPath = this.paper.addGroup(\"clipPath\");\r\n\t\t\tthis.paper.appendDef(this._clipPath);\r\n\t\t\tthis._disposers.push(this._clipPath);\r\n\t\t\tlet id: string = registry.getUniqueId();\r\n\t\t\tthis._clipPath.attr({ \"id\": id });\r\n\t\t\tthis.group.attr({ \"clip-path\": \"url(#\" + id + \")\" });\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies the mask Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyMask(): void {\r\n\t\tlet mask = this.mask;\r\n\r\n\t\tif (this._clipPath && mask) {\r\n\t\t\t// Container\r\n\t\t\tif (mask instanceof Container) {\r\n\t\t\t\tthis._clipElement.attr({ \"width\": $math.max(0, mask.pixelWidth), \"height\": $math.max(0, mask.pixelHeight) });\r\n\t\t\t}\r\n\t\t\t// Sprite\r\n\t\t\telse {\r\n\t\t\t\tif (mask.element && mask.element != this._clipElement) {\r\n\t\t\t\t\tthis._clipElement = mask.element;\r\n\t\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._clipPath.scale = mask.scale;\r\n\t\t\t\tthis._clipPath.x = mask.pixelX;\r\n\t\t\t\tthis._clipPath.y = mask.pixelY;\r\n\t\t\t\tthis._clipPath.rotation = mask.rotation;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters(): void {\r\n\t\t// we create a separate filter for each sprite as otherwise it would be impossible to animate filter.\r\n\t\t// svg doesn't support multiple filters applied to one element, so we put all the primitives to one filterElement of a sprite.\r\n\t\tif (this._filters && this._filters.length > 0) {\r\n\r\n\t\t\tlet width = 100;\r\n\t\t\tlet height = 100;\r\n\r\n\t\t\tif (!this.filterElement) {\r\n\t\t\t\tthis.filterElement = this.paper.addGroup(\"filter\");\r\n\t\t\t\tthis._disposers.push(this.filterElement);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.filterElement.removeChildNodes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.paper.appendDef(this.filterElement);\r\n\r\n\t\t\tlet id: string = \"filter-\" + this.uid;\r\n\t\t\tthis.filterElement.attr({ \"id\": id });\r\n\r\n\t\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\t\tfilter.sprite = this;\r\n\t\t\t\tfilter.paper = this.paper;\r\n\r\n\t\t\t\tfilter.appendPrimitives(this.filterElement);\r\n\r\n\t\t\t\tif (filter.width > width) {\r\n\t\t\t\t\twidth = filter.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (filter.height > height) {\r\n\t\t\t\t\theight = filter.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilter.scale = this.globalScale;\r\n\t\t\t});\r\n\r\n\t\t\tthis.filterElement.attr({ \"width\": width + \"%\", \"height\": height + \"%\", \"x\": -(width - 100) / 2 + \"%\", \"y\": -(height - 100) / 2 + \"%\" });\r\n\r\n\t\t\tthis.group.attr({ \"filter\": \"url(#\" + id + \")\" });\r\n\t\t}\r\n\t\telse if (this.filterElement) {\r\n\t\t\tthis.group.removeAttr(\"filter\");\r\n\t\t\tthis.filterElement.removeChildNodes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [removeClipPath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected removeClipPath(): void {\r\n\t\tif (this._clipPath) {\r\n\t\t\t//this._clipPath.dispose();\r\n\t\t\tthis.removeDispose(this._clipPath);\r\n\t\t\tthis._clipPath = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic setElement(element: AMElement) {\r\n\t\tthis.element = element;\r\n\t\tthis.setSVGAttributes();\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n\r\n\t/**\r\n\t * The main element for this Sprite, usually an SVG `<g>`.\r\n\t *\r\n\t * All other sub-elements are created in it.\r\n\t *\r\n\t * @param {Optional<AMElement>}  element  Element\r\n\t */\r\n\tpublic set element(element: Optional<AMElement>) {\r\n\r\n\t\t// Destroy previous element if there was one before\r\n\t\tthis.removeElement();\r\n\r\n\t\t// Set new element\r\n\t\tthis._element = element;\r\n\r\n\t\t// Add element to group\r\n\t\t// Since we are adding Element to group, which is already in the\r\n\t\t// `.disposers` it will be removed automatically when Sprite is disposed\r\n\t\t// of\r\n\t\tthis.group.add(element);\r\n\r\n\t\t// This is needed if someone is setting element not in draw method but\r\n\t\t// from outside\r\n\t\tif (!this.invalid) {\r\n\t\t\tthis.validate();\r\n\t\t}\r\n\r\n\t\tif (options.autoSetClassName) {\r\n\t\t\tthis.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AMElement} Element\r\n\t */\r\n\tpublic get element(): Optional<AMElement> {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * HTML container (`<div>`) which is used to place chart's `<svg>` element\r\n\t * in.\r\n\t *\r\n\t * @return {Optional<SVGContainer>} Container for chart elements\r\n\t */\r\n\tpublic get svgContainer(): $type.Optional<SVGContainer> {\r\n\t\tif (this._svgContainer) {\r\n\t\t\treturn this._svgContainer;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.svgContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets HTML container to add SVG and other chart elements to.\r\n\t *\r\n\t * @param {Optional<SVGContainer>} svgContainer Container for chart elements\r\n\t */\r\n\tpublic set svgContainer(svgContainer: $type.Optional<SVGContainer>) {\r\n\t\tthis._svgContainer = svgContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Measures main element.\r\n\t *\r\n\t * Saves measurements into private `_bbox` property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected measureElement() {\r\n\t\tif (this.element) {\r\n\t\t\tif (this.definedBBox) {\r\n\t\t\t\tthis._bbox = this.definedBBox;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet svgBBox: IRectangle = this.element.getBBox();\r\n\t\t\t\tthis._bbox = { x: svgBBox.x, y: svgBBox.y, width: svgBBox.width, height: svgBBox.height };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Positions element according its center settings.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateCenter() {\r\n\t\tif (this.element) {\r\n\t\t\tlet prevElementTransform: string = this.element.transformString;\r\n\r\n\t\t\tlet bbox = this.bbox;\r\n\r\n\t\t\tlet ex = 0;\r\n\t\t\tlet ey = 0;\r\n\r\n\t\t\tlet elementX = bbox.x;\r\n\t\t\tlet elementY = bbox.y;\r\n\r\n\t\t\tlet elementWidth = bbox.width;\r\n\t\t\tlet elementHeigth = bbox.height;\r\n\r\n\t\t\tlet pixelPaddingLeft = this.pixelPaddingLeft;\r\n\t\t\tlet pixelPaddingRight = this.pixelPaddingRight;\r\n\t\t\tlet pixelPaddingTop = this.pixelPaddingTop;\r\n\t\t\tlet pixelPaddingBottom = this.pixelPaddingBottom;\r\n\r\n\t\t\t// add padding to the measured size\r\n\t\t\tlet measuredWidth = $math.max(bbox.width + pixelPaddingLeft + pixelPaddingRight, this.pixelWidth);\r\n\t\t\tlet measuredHeight = $math.max(bbox.height + pixelPaddingTop + pixelPaddingBottom, this.pixelHeight);\r\n\r\n\t\t\t// extremes\r\n\t\t\tlet left = bbox.x;\r\n\t\t\tlet right = bbox.x + measuredWidth;\r\n\r\n\t\t\tlet top = bbox.y;\r\n\t\t\tlet bottom = bbox.y + measuredHeight;\r\n\r\n\t\t\tlet horizontalCenter = this.horizontalCenter;\r\n\t\t\tlet verticalCenter = this.verticalCenter;\r\n\r\n\t\t\tswitch (horizontalCenter) {\r\n\t\t\t\tcase \"none\":\r\n\t\t\t\t\tex = elementX + pixelPaddingLeft;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tex = pixelPaddingLeft;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tex = pixelPaddingLeft - (elementWidth + pixelPaddingRight + pixelPaddingLeft) / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tex = -pixelPaddingRight - elementWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (verticalCenter) {\r\n\t\t\t\tcase \"none\":\r\n\t\t\t\t\tey = elementY + pixelPaddingTop;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tey = pixelPaddingTop;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tey = pixelPaddingTop - (elementHeigth + pixelPaddingBottom + pixelPaddingTop) / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tey = -pixelPaddingBottom - elementHeigth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._measuredHeight = measuredHeight;\r\n\t\t\tthis._measuredWidth = measuredWidth;\r\n\r\n\t\t\tlet x: number = $math.round(ex - elementX, this._positionPrecision, true);\r\n\t\t\tlet y: number = $math.round(ey - elementY, this._positionPrecision, true);\r\n\r\n\r\n\t\t\tthis.ex = x - pixelPaddingLeft;\r\n\t\t\tthis.ey = y - pixelPaddingTop;\r\n\r\n\t\t\tthis.maxLeft = left + x - pixelPaddingLeft;\r\n\t\t\tthis.maxRight = right + x - pixelPaddingLeft;\r\n\r\n\t\t\tthis.maxTop = top + y - pixelPaddingTop;\r\n\t\t\tthis.maxBottom = bottom + y - pixelPaddingTop;\r\n\r\n\t\t\tif (this.pixelPerfect) {\r\n\t\t\t\tx -= 0.5;\r\n\t\t\t\ty -= 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.moveTo({ x: x, y: y });\r\n\r\n\t\t\tif (prevElementTransform != this.element.transformString) {\r\n\t\t\t\tthis.dispatchImmediately(\"transformed\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the whole element.\r\n\t *\r\n\t * Returns `true` if the size has changed from the last measurement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Did the size changed from the last measurement?\r\n\t */\r\n\tpublic measure(): boolean {\r\n\r\n\t\tthis.updateCenter();\r\n\r\n\t\tlet bbox = this.bbox;\r\n\r\n\t\tlet measuredWidth = this._measuredWidth;\r\n\t\tlet measuredHeight = this._measuredHeight;\r\n\r\n\t\t// extremes\r\n\t\tlet left = this.maxLeft;\r\n\t\tlet right = this.maxRight;\r\n\r\n\t\tlet top = this.maxTop;\r\n\t\tlet bottom = this.maxBottom;\r\n\r\n\t\t// non-parent wise size\r\n\t\tthis._measuredWidthSelf = measuredWidth;\r\n\t\tthis._measuredHeightSelf = measuredHeight;\r\n\r\n\t\tlet positionPrecision = this._positionPrecision;\r\n\r\n\t\t// if a sprite is rotated or scaled, calculate measured size after transformations\r\n\t\tif (this.rotation !== 0 || this.scale !== 1) {\r\n\t\t\tlet svg = this.paper.svg;\r\n\r\n\t\t\tlet matrix: SVGMatrix = svg.createSVGMatrix();\r\n\t\t\tlet rotation: number = this.rotation;\r\n\r\n\t\t\tmatrix.a = $math.cos(rotation) * this.scale;\r\n\t\t\tmatrix.c = - $math.sin(rotation) * this.scale;\r\n\t\t\tmatrix.e = 0;\r\n\t\t\tmatrix.b = $math.sin(rotation) * this.scale;\r\n\t\t\tmatrix.d = $math.cos(rotation) * this.scale;\r\n\t\t\tmatrix.f = 0;\r\n\r\n\t\t\tlet p1: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp1.x = left;\r\n\t\t\tp1.y = top;\r\n\r\n\t\t\tlet p2: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp2.x = right;\r\n\t\t\tp2.y = top;\r\n\r\n\t\t\tlet p3: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp3.x = right;\r\n\t\t\tp3.y = bottom;\r\n\r\n\t\t\tlet p4: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp4.x = left;\r\n\t\t\tp4.y = bottom;\r\n\r\n\t\t\tlet pt1: SVGPoint = p1.matrixTransform(matrix);\r\n\t\t\tlet pt2: SVGPoint = p2.matrixTransform(matrix);\r\n\t\t\tlet pt3: SVGPoint = p3.matrixTransform(matrix);\r\n\t\t\tlet pt4: SVGPoint = p4.matrixTransform(matrix);\r\n\r\n\t\t\tleft = Math.min(pt1.x, pt2.x, pt3.x, pt4.x);\r\n\t\t\tright = Math.max(pt1.x, pt2.x, pt3.x, pt4.x);\r\n\t\t\ttop = Math.min(pt1.y, pt2.y, pt3.y, pt4.y);\r\n\t\t\tbottom = Math.max(pt1.y, pt2.y, pt3.y, pt4.y);\r\n\r\n\t\t\tmeasuredWidth = right - left;\r\n\t\t\tmeasuredHeight = bottom - top;\r\n\r\n\t\t\tthis.maxLeft = $math.round(left, positionPrecision, true);\r\n\t\t\tthis.maxRight = $math.round(right, positionPrecision, true);\r\n\t\t\tthis.maxTop = $math.round(top, positionPrecision, true);\r\n\t\t\tthis.maxBottom = $math.round(bottom, positionPrecision, true);\r\n\t\t}\r\n\r\n\t\tthis._measuredWidth = $math.round(measuredWidth, positionPrecision, true);\r\n\t\tthis._measuredHeight = $math.round(measuredHeight, positionPrecision, true);\r\n\r\n\r\n\t\t// dispatch event\r\n\t\tif (this._measuredWidth != this._prevMeasuredWidth || this._measuredHeight != this._prevMeasuredHeight) {\r\n\t\t\tthis._prevMeasuredHeight = this._measuredHeight;\r\n\t\t\tthis._prevMeasuredWidth = this._measuredWidth;\r\n\r\n\t\t\t// TODO clear existing sizechanged dispatches ?\r\n\t\t\tthis.dispatch(\"sizechanged\");\r\n\r\n\t\t\tif (this.isHover && this.tooltip && this.tooltip.visible) {\r\n\t\t\t\tthis.updateTooltipPosition();\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert this element before sibling element.\r\n\t *\r\n\t * @param  {Sprite}  sprite  Target element\r\n\t * @return {Sprite}          This element\r\n\t */\r\n\tpublic insertBefore(sprite: Sprite): Sprite {\r\n\t\tlet parent = this.parent;\r\n\r\n\t\tif (parent) {\r\n\t\t\tlet index: number = parent.children.indexOf(sprite);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tparent.children.moveValue(this, index);\r\n\t\t\t\tparent.sortChildren();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert this element after sibling element.\r\n\t *\r\n\t * @param  {Sprite}  sprite  Target element\r\n\t * @return {Sprite}          This element\r\n\t */\r\n\tpublic insertAfter(sprite: Sprite): Sprite {\r\n\t\tlet parent = this.parent;\r\n\r\n\t\tif (parent) {\r\n\t\t\tlet index: number = parent.children.indexOf(sprite);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tparent.children.moveValue(this, index + 1);\r\n\t\t\t\tparent.sortChildren();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the main SVG element.\r\n\t *\r\n\t * This does not destroy the whole Sprite element. To do that use\r\n\t * `dispose()` instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeElement() {\r\n\t\t// remove visual element\r\n\t\tif (this._element) {\r\n\t\t\tthis.removeDispose(this._element);\r\n\t\t\tthis._element = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative (percent) value of the X coordindate within this element.\r\n\t *\r\n\t * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n\t * as relative value.\r\n\t *\r\n\t * @param  {number | Percent}  value  Absolute or relative X coordinate\r\n\t * @return {number}                   Relative value\r\n\t */\r\n\tpublic getRelativeX(value: number | Percent): number {\r\n\t\tif (value instanceof Percent) {\r\n\t\t\treturn value.value;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn value / this.parent.innerWidth;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative (percent) value of the Y coordindate within this element.\r\n\t *\r\n\t * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n\t * as relative value.\r\n\t *\r\n\t * @param  {number | Percent}  value  Absolute or relative Y coordinate\r\n\t * @return {number}                   Relative value\r\n\t */\r\n\tpublic getRelativeY(value: number | Percent): number {\r\n\t\tif (value instanceof Percent) {\r\n\t\t\treturn value.value;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn value / this.parent.innerHeight;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an X coordinate in pixel within the element.\r\n\t *\r\n\t * If number is passed in as parameter, the same number will be returned\r\n\t * back.\r\n\t *\r\n\t * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n\t *\r\n\t * @param  {number | Percent}  value  Absolute or relative X coordinate\r\n\t * @return {number}                   X coordinate in pixels\r\n\t */\r\n\tpublic getPixelX(value: number | Percent): number {\r\n\r\n\t\t// we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n\t\t// all the time and this would result chain of the same actions and will slow down the system a lot\r\n\r\n\t\tlet pixel: number = 0;\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tpixel = value;\r\n\t\t}\r\n\t\telse if (value instanceof Percent) {\r\n\t\t\tlet relative: number = value.value;\r\n\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tpixel = $math.round(this.parent.innerWidth * relative, this._positionPrecision, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pixel;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Y coordinate in pixel within the element.\r\n\t *\r\n\t * If number is passed in as parameter, the same number will be returned\r\n\t * back.\r\n\t *\r\n\t * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n\t *\r\n\t * @param  {number | Percent}  value  Absolute or relative Y coordinate\r\n\t * @return {number}                   Y coordinate in pixels\r\n\t */\r\n\tpublic getPixelY(value: number | Percent): number {\r\n\r\n\t\t// we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n\t\t// all the time and this would result chain of the same actions and will slow down the system a lot\r\n\r\n\t\tlet pixel: number = 0;\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tpixel = value;\r\n\t\t}\r\n\t\telse if (value instanceof Percent) {\r\n\t\t\tlet relative: number = value.value;\r\n\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tpixel = $math.round(this.parent.innerHeight * relative, this._positionPrecision, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pixel;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to a specified coordinates.\r\n\t *\r\n\t * Using this method is preferred method of moving element, as it saves some\r\n\t * CPU processing power over setting `x` and `y` properties separately.\r\n\t *\r\n\t * The method respects element's center settings. The element will be\r\n\t * positioned so that `point` coordinates come in whatever \"center\" of the\r\n\t * element is, as set in `horizontalCenter` and `verticalCenter`.\r\n\t *\r\n\t * Besides moving the element, you can also at the same time scale and\r\n\t * rotate the element.\r\n\t *\r\n\t * @param {IPoint}  point     New coordinates\r\n\t * @param {number}  rotation  New rotation\r\n\t * @param {number}  scale     New Scale\r\n\t */\r\n\tpublic moveTo(point: IPoint, rotation?: number, scale?: number, isDragged?: boolean): void {\r\n\t\tif (this.isDragged && !isDragged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (point) {\r\n\t\t\tif ($type.isNumber(point.x)) {\r\n\t\t\t\tthis.setPropertyValue(\"x\", point.x);\r\n\t\t\t}\r\n\t\t\tif ($type.isNumber(point.y)) {\r\n\t\t\t\tthis.setPropertyValue(\"y\", point.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(rotation)) {\r\n\t\t\tthis.rotation = rotation;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(scale)) {\r\n\t\t\tthis.scale = scale;\r\n\t\t}\r\n\r\n\t\t// must leave this\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets another [[Sprite]] element as this elements mask.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Optional<Sprite>} mask A [[Sprite]] to use as mask\r\n\t */\r\n\tpublic set mask(mask: Optional<Sprite>) {\r\n\t\tif (this._mask.get() !== mask) {\r\n\t\t\t// this is good\r\n\t\t\tif (mask) {\r\n\r\n\t\t\t\tthis.createClipPath();\r\n\r\n\t\t\t\tif (!(mask instanceof Container)) {\r\n\t\t\t\t\tmask.isMeasured = false;\r\n\t\t\t\t\tif (mask.element) {\r\n\t\t\t\t\t\tthis._clipElement = mask.element;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._clipElement = this.paper.add(\"rect\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._clipElement) {\r\n\t\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._mask.set(mask, new MultiDisposer([\r\n\t\t\t\t\t//mask.addEventListener(SpriteEvent.TRANSFORMED, this.applyMask, false, this);\r\n\t\t\t\t\tmask.events.on(\"maxsizechanged\", () => { if (this.inited) { this.applyMask } }, undefined, false),\r\n\t\t\t\t\tmask.events.on(\"validated\", this.applyMask, this, false),\r\n\t\t\t\t\tmask.events.on(\"positionchanged\", this.applyMask, this, false)\r\n\t\t\t\t]));\r\n\r\n\t\t\t\tthis.applyMask();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._mask.reset();\r\n\t\t\t\tthis.group.removeAttr(\"clip-path\");\r\n\t\t\t\tthis.removeClipPath();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Sprite]] element currently used as mask for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<Sprite>} A [[Sprite]] to use as mask\r\n\t */\r\n\tpublic get mask(): Optional<Sprite> {\r\n\t\treturn this.adapter.apply(\"mask\", this._mask.get());\r\n\t}\r\n\r\n\t// you can set IRectangle as a mask instead o a sprite. Note, the changes of the object won't be monitored\r\n\r\n\t/**\r\n\t * Instead of creating a [[Sprite]] for mask, you can just use a\r\n\t * [[Rectangle]] by setting this accessor.\r\n\t *\r\n\t * Please note that the element will not monitor any changes to the mask\r\n\t * rectangle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IRectangle} rect Mask Rectangle\r\n\t */\r\n\tpublic set maskRectangle(rect: IRectangle) {\r\n\t\tif (rect) {\r\n\r\n\t\t\tthis.createClipPath();\r\n\r\n\t\t\tif (!this._clipElement) {\r\n\t\t\t\tthis._clipElement = this.paper.add(\"rect\");\r\n\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t}\r\n\t\t\tthis._clipElement.attr({ \"width\": rect.width, \"height\": rect.height });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeClipPath();\r\n\t\t\tthis._clipElement = undefined;\r\n\t\t}\r\n\t\tthis._maskRectangle = rect;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {IRectangle} Mask Rectangle\r\n\t */\r\n\tpublic get maskRectangle(): IRectangle {\r\n\t\treturn this._maskRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element was already measured.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean} value Was element already measured?\r\n\t */\r\n\tpublic set isMeasured(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\r\n\t\tif (!value) {\r\n\t\t\tthis._measuredWidth = 0;\r\n\t\t\tthis._measuredHeight = 0;\r\n\t\t\t//this._pixelHeight = 0;\r\n\t\t\t//this._pixelWidth = 0;\r\n\t\t}\r\n\r\n\t\tif (this._isMeasured != value) {\r\n\t\t\tthis._isMeasured = value;\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Was element already measured?\r\n\t */\r\n\tpublic get isMeasured(): boolean {\r\n\t\treturn this._isMeasured;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the this element has any of its parts overlapping with another\r\n\t * element.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param  {Sprite}   sprite  Second element to test again\r\n\t * @return {boolean}          Overlapping?\r\n\t */\r\n\tpublic hitTest(sprite: Sprite): boolean {\r\n\t\t// validate, otherwise we will not know measuredWidth and measuredHeight\r\n\t\tif (this.invalid) {\r\n\t\t\tthis.validate();\r\n\t\t}\r\n\t\tif (sprite.invalid) {\r\n\t\t\tsprite.validate();\r\n\t\t}\r\n\r\n\t\tlet ax1 = this.pixelX;\r\n\t\tlet ay1 = this.pixelY;\r\n\t\tlet ax2 = ax1 + this.measuredWidth;\r\n\t\tlet ay2 = ay1 + this.measuredHeight;\r\n\r\n\t\tlet bx1 = sprite.pixelX;\r\n\t\tlet by1 = sprite.pixelY;\r\n\t\tlet bx2 = bx1 + sprite.measuredWidth;\r\n\t\tlet by2 = by1 + sprite.measuredHeight;\r\n\r\n\t\treturn !(bx1 > ax2 || bx2 < ax1 || by1 > ay2 || by2 < ay1);\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * STATE-RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns `true` if Sprite has already finished initializing.\r\n\t *\r\n\t * @return {boolean} Initialized?\r\n\t */\r\n\tpublic get inited(): boolean {\r\n\t\treturn this._inited;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a collection of element's available [[SpriteState]] entries.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @return {DictionaryTemplate<string, SpriteState>} States\r\n\t */\r\n\tpublic get states(): DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>> {\r\n\t\tif (!this._states) {\r\n\t\t\tconst state = new SpriteState<this[\"_properties\"], this[\"_adapter\"]>();\r\n\r\n\t\t\t// works\r\n\t\t\tthis._states = new DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>(state);\r\n\r\n\t\t\t// TODO what about removeKey ?\r\n\t\t\tthis._disposers.push(this._states.events.on(\"insertKey\", this.processState, this, false));\r\n\t\t\tthis._disposers.push(this._states.events.on(\"setKey\", this.processState, this, false));\r\n\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._states));\r\n\t\t\tthis._disposers.push(state);\r\n\t\t}\r\n\t\treturn this._states;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[SpriteState]] object for \"hidden\" state.\r\n\t *\r\n\t * This is a shortcut to `this.states.getKey(\"hidden\")`.\r\n\t *\r\n\t * @return {SpriteState} Hidden state\r\n\t */\r\n\tpublic get hiddenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this.states.getKey(\"hidden\")) {\r\n\t\t\tlet hiddenState = this.states.create(\"hidden\");\r\n\t\t\thiddenState.properties.opacity = 0;\r\n\t\t\thiddenState.properties.visible = false;\r\n\t\t}\r\n\r\n\t\treturn this.states.getKey(\"hidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[SpriteState]] object for \"default\" state.\r\n\t *\r\n\t * This is a shortcut to `this.states.getKey(\"default\")`.\r\n\t *\r\n\t * @return {SpriteState} Hidden state\r\n\t */\r\n\tpublic get defaultState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\r\n\t\tif (!this.states.getKey(\"default\")) {\r\n\t\t\tlet defaultState = this.states.create(\"default\");\r\n\t\t\tdefaultState.properties.opacity = 1;\r\n\t\t}\r\n\r\n\t\treturn this.states.getKey(\"default\");\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if some key states are defined and updates Sprite properties\r\n\t * accordingly.\r\n\t *\r\n\t * For example if there's a state \"down\" defined for Sprite, we automatically\r\n\t * make it \"clickable\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IDictionaryEvents<string, SpriteState>[\"insertKey\" | \"setKey\"]} event An event which caused state list update\r\n\t */\r\n\tprotected processState(event: IDictionaryEvents<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>[\"insertKey\" | \"setKey\"]): void {\r\n\t\tlet state: SpriteState<this[\"_properties\"], this[\"_adapter\"]> = event.newValue;\r\n\t\tstate.sprite = this;\r\n\t\tstate.name = event.key;\r\n\r\n\t\tif (this.states.hasKey(\"hover\") || $type.hasValue(this.tooltipHTML) || $type.hasValue(this.tooltipText)) {\r\n\t\t\tthis.hoverable = true;\r\n\t\t}\r\n\r\n\t\tif (this.states.hasKey(\"down\")) {\r\n\t\t\tthis.clickable = true;\r\n\t\t}\r\n\r\n\t\tif (this.states.hasKey(\"focus\")) {\r\n\t\t\tthis.focusable = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list elements's animations currently being played.\r\n\t *\r\n\t * If the list has not been initialized it is created.\r\n\t *\r\n\t * @return {Array<Animation>} List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts element's local coordinates to the coordinates within the main\r\n\t * chart container.\r\n\t *\r\n\t * @param  {IPoint}  point  Local point\r\n\t * @return {IPoint}         Global point\r\n\t */\r\n\tpublic getSvgPoint(point: IPoint): IPoint {\r\n\t\t// Calculate SVG point\r\n\t\tlet bbox = this.htmlContainer.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\t\"x\": point.x - bbox.left,\r\n\t\t\t\"y\": point.y - bbox.top\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and starts an [[Animation]] with given `animationOptions`.\r\n\t *\r\n\t * @see {@link Animation} for additional information about available options\r\n\t * @param  {ISpriteAnimationOptions[] | ISpriteAnimationOptions}  animationOptions  Animation options\r\n\t * @param  {number}                                               duration          Duration in milliseconds\r\n\t * @param  {(number) => number}                                   easing            Easing function\r\n\t * @return {Animation}                                                              Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: ISpriteAnimationOptions[] | ISpriteAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a [[SpriteState]] on this element.\r\n\t *\r\n\t * The first parameter can either be a name state or a [[SpriteState]]\r\n\t * instance.\r\n\t *\r\n\t * When run, this method will apply SVG properties defined in a\r\n\t * [[SpriteState]], but only those that are relevant to this particular\r\n\t * element, i.e. are in the `properties` array.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @param {string | SpriteState} value               A state - name key or instance\r\n\t * @param {number}               transitionDuration  Duration of the transition between current and new state\r\n\t * @param {number) => number}    easing              An easing function\r\n\t */\r\n\tpublic setState(value: string | SpriteState<this[\"_properties\"], this[\"_adapter\"]>, transitionDuration?: number, easing?: (value: number) => number): $type.Optional<Animation> {\r\n\t\tlet state: Optional<SpriteState<this[\"_properties\"], this[\"_adapter\"]>>;\r\n\t\tif (value instanceof SpriteState) {\r\n\t\t\tthis.states.setKey(value.name, value);\r\n\t\t\tstate = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstate = this.states.getKey(value);\r\n\t\t\tif (!state) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stop previous transition\r\n\t\t// not good - foe expample, we are animating to some \"active\" state and in them middle \"hover\" state happens. then \"active\" stat won't be applied\r\n\t\t//if (this._transition) {\r\n\t\t//this._transition.stop();\r\n\t\t//}\r\n\r\n\t\tif (state.name == \"hover\") {\r\n\t\t\tif (this.isHidden) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.isHover = true;\r\n\t\t}\r\n\r\n\t\tif (state.name == \"hidden\") {\r\n\t\t\tthis.isHiding = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.visible) {\r\n\t\t\t\tthis.setVisibility(state.properties.visible || this.defaultState.properties.visible);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state.name == \"active\") {\r\n\t\t\tthis.isActive = true;\r\n\t\t}\r\n\t\t// we do not set isActive = false here if it's not active, but container does that if setStateOnChildren = true\r\n\r\n\r\n\t\tif (!$type.isNumber(transitionDuration)) {\r\n\t\t\ttransitionDuration = state.transitionDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = state.transitionEasing;\r\n\t\t}\r\n\r\n\t\treturn this.transitTo(state, transitionDuration, easing);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies proper state based on the condition of the element. A condition is\r\n\t * deducted in this order:\r\n\t * * \"hover\" if Sprite has currently any pointers over it\r\n\t * * \"down\" if Sprite has any pointers (touch or mouse) currently pressed over it\r\n\t * * \"focus\" if Sprite has currently got focus (accessibility)\r\n\t * * \"hidden\" if Sprite is currently hidden\r\n\t *\r\n\t * Returns an [[Animation]] object, which is handling gradual transition from\r\n\t * current values of properties, to the new target state(s).\r\n\t *\r\n\t * @param  {number}     duration  Duration for the animation (ms)\r\n\t * @return {Optional<Animation>}  [[Animation]] object which is handling the transition\r\n\t */\r\n\tpublic applyCurrentState(duration?: number): $type.Optional<Animation> {\r\n\r\n\t\t//if (!this.isHidden) { // this was done for hover state not to take effect if \"hidden\" is actually visible, need to think about it.\r\n\r\n\t\tlet animation: $type.Optional<Animation> = this.setState(this.defaultState, duration);\r\n\r\n\t\tif (this.isHover) {\r\n\t\t\tanimation = this.setState(\"hover\", duration);\r\n\t\t}\r\n\r\n\t\tif (this.isDown && this.interactions.downPointers.length) {\r\n\t\t\tanimation = this.setState(\"down\", duration);\r\n\t\t}\r\n\r\n\t\tthis.isFocused = this.isFocused;\r\n\r\n\t\tif (this.isActive) {\r\n\t\t\tanimation = this.setState(\"active\", duration);\r\n\t\t\tif (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n\t\t\t\tanimation = this.setState(\"hoverActive\", duration);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts an [[Animation]] of the properties to specific values as they are\r\n\t * set in `state`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {SpriteState}         state     Target State\r\n\t * @param  {number}              duration  Duration in milliseconds\r\n\t * @param  {(number) => number}  easing    Easing function\r\n\t * @return {Animation}                     Transition Animation\r\n\t */\r\n\tprotected transitTo(state: SpriteState<this[\"_properties\"], this[\"_adapter\"]>, duration: number, easing?: (value: number) => number): Optional<Animation> {\r\n\t\t// Init\r\n\t\tlet options: ISpriteAnimationOptions[] = [],\r\n\t\t\tpropValues = state.allValues,\r\n\t\t\ttransition: Optional<Animation>;\r\n\r\n\t\t// todo: do this for numeric/color properties only?\r\n\t\t// @todo use state.getPropertyValue instead\r\n\t\t$object.each(propValues, (propertyName, finalValue) => {\r\n\t\t\tlet currentValue: any = (<any>this)[propertyName];\r\n\t\t\t// save current value to default state. this solves a big problem where values must be set both on sprite and default state\r\n\t\t\tif (finalValue != currentValue && this.defaultState.properties[propertyName] == undefined) {\r\n\t\t\t\tthis.defaultState.properties[propertyName] = currentValue;\r\n\t\t\t}\r\n\r\n\t\t\t//if (finalValue != currentValue && $type.hasValue(finalValue)) {\r\n\t\t\tif ($type.hasValue(finalValue)) {\r\n\t\t\t\tlet option: ISpriteAnimationOptions = { from: currentValue, to: <any>finalValue, property: propertyName };\r\n\t\t\t\toptions.push(option);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (options.length > 0) {\r\n\t\t\ttransition = this.animate(options, duration, easing);\r\n\t\t\tif (transition && !transition.isFinished()) {\r\n\t\t\t\t// TODO should this use events.once ?\r\n\t\t\t\t// TODO push onto _disposers array ?\r\n\t\t\t\tthis._disposers.push(transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.dispatchImmediately(\"transitionended\");\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dispatchImmediately(\"transitionended\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// apply filters if set\r\n\t\tif (state.filters.length > 0) {\r\n\t\t\tlet newFilters: Filter[] = [];\r\n\t\t\t// check for the same filters\r\n\t\t\t$iter.each(state.filters.iterator(), (stateFilter) => {\r\n\t\t\t\tlet newFilter: Filter = <Filter>stateFilter.clone();\r\n\t\t\t\tnewFilters.push(newFilter);\r\n\t\t\t\tlet animationOptions: IAnimationOptions[] = [];\r\n\r\n\t\t\t\t$iter.each(this.filters.iterator(), (currentFilter) => {\r\n\t\t\t\t\t// if we have the same filters\r\n\t\t\t\t\tif (currentFilter.className == newFilter.className) {\r\n\r\n\t\t\t\t\t\tif (!$iter.contains(this.defaultState.filters.iterator(), (x) => x.className === newFilter.className)) {\r\n\t\t\t\t\t\t\tthis.defaultState.filters.push(currentFilter);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$object.each(newFilter.properties, (propertyName, newValue) => {\r\n\t\t\t\t\t\t\tlet currentValue = (<any>currentFilter).properties[propertyName];\r\n\t\t\t\t\t\t\t// if values are not the same, push to animation options array\r\n\t\t\t\t\t\t\tif (currentValue != newValue) {\r\n\t\t\t\t\t\t\t\tanimationOptions.push({ property: propertyName, from: currentValue, to: newValue });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// animate to new value\r\n\t\t\t\tnewFilter.animate(animationOptions, duration, easing);\r\n\t\t\t});\r\n\t\t\tthis.filters.clear();\r\n\t\t\tthis.filters.pushAll(newFilters);\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if Sprite is currently transiting from one state/value to\r\n\t * another.\r\n\t *\r\n\t * @return {boolean} Is in transition?\r\n\t */\r\n\tpublic isInTransition(): boolean {\r\n\t\treturn this.animations.length > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element has a mouse pointer currently hovering\r\n\t * over it, or if it has any touch pointers pressed on it.\r\n\t *\r\n\t * @param {boolean} value Is hovered?\r\n\t */\r\n\tpublic set isHover(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (value !== this.isHover) {\r\n\t\t\tif (this.isInteractive()) {\r\n\t\t\t\tthis.interactions.isHover = value;\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tthis.handleOver();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.handleOut();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this element has a mouse pointer currently hovering\r\n\t * over it, or if it has any touch pointers pressed on it.\r\n\t *\r\n\t * @return {boolean} Is hovered?\r\n\t */\r\n\tpublic get isHover(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isHover;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this element is being dragged at the moment.\r\n\t *\r\n\t * @return {boolean} Is dragged?\r\n\t */\r\n\tpublic get isDragged(): boolean {\r\n\t\treturn this._isDragged;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element has any pointers (mouse or touch) pressing down\r\n\t * on it.\r\n\t *\r\n\t * @param {boolean} value Is down?\r\n\t */\r\n\tpublic set isDown(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.isInteractive() && this.isDown != value) {\r\n\t\t\tthis.interactions.isDown = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.handleDown();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.handleUp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is down?\r\n\t */\r\n\tpublic get isDown(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isDown;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is focused (possibly by tab navigation).\r\n\t *\r\n\t * @param {boolean} value Is focused?\r\n\t */\r\n\tpublic set isFocused(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.focusable && this.isFocused != value) {\r\n\t\t\tif (this.isInteractive()) {\r\n\t\t\t\tthis.interactions.isFocused = value;\r\n\t\t\t\tif (value === true) {\r\n\t\t\t\t\tthis.handleFocus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.handleBlur();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is focused?\r\n\t */\r\n\tpublic get isFocused(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isFocused;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently active (toggled on) or not\r\n\t * (toggled off).\r\n\t *\r\n\t * @param {boolean} value Is active?\r\n\t */\r\n\tpublic set isActive(value: boolean) {\r\n\t\tthis.setActive(value);\r\n\t}\r\n\r\n\r\n\tprotected setActive(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this._isActive !== value) {\r\n\t\t\tthis._isActive = value;\r\n\t\t\tif (value && this.states.hasKey(\"active\")) {\r\n\t\t\t\tthis.setState(\"active\");\r\n\t\t\t\tif (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n\t\t\t\t\tthis.setState(\"hoverActive\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCurrentState();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"toggled\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is active?\r\n\t */\r\n\tpublic get isActive(): boolean {\r\n\t\treturn this._isActive;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is disabled.\r\n\t *\r\n\t * A disabled element is hidden, and is removed from any processing, layout\r\n\t * calculations, and generally treated like if it does not existed.\r\n\t *\r\n\t * The element itself is not destroyed, though. Setting this back to `false`,\r\n\t * will \"resurrect\" the element.\r\n\t *\r\n\t * @param {boolean}  value  Disabled?\r\n\t */\r\n\tpublic set disabled(value: boolean) {\r\n\t\tthis.setDisabled(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Disabled?\r\n\t */\r\n\tpublic get disabled(): boolean {\r\n\t\t//if(this._internalDisabled){\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\t\tlet current = this.getPropertyValue(\"disabled\");\r\n\t\tif ($type.hasValue(current)) {\r\n\t\t\treturn current;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.disabled;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.disabled;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tlet current = this.getPropertyValue(\"disabled\");\r\n\t\tif (current != value) {\r\n\t\t\tthis.setPropertyValue(\"disabled\", value, true);\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.parent = this.parent;\r\n\t\t\t\tthis.removeFromInvalids();\r\n\t\t\t\tthis.group.attr({ \"display\": \"none\" });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this instanceof Container) {\r\n\t\t\t\t\tthis.deepInvalidate();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.__disabled) {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"display\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"transformed\");\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Internal disable method.\r\n\t *\r\n\t * Do not use it for disabling elements. Use `disabled` accessor instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean} value Disabled?\r\n\t */\r\n\tpublic set __disabled(value: boolean) {\r\n\t\tif (this._internalDisabled != value) {\r\n\t\t\tthis._internalDisabled = value;\r\n\t\t\tthis._updateDisabled = true;\r\n\t\t\tthis.invalidatePosition(); // better use this instead of invalidate()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return {boolean} Disabled?\r\n\t */\r\n\tpublic get __disabled(): boolean {\r\n\t\treturn this._internalDisabled;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * FORMATTERS AND OTHER EXTERNAL HELPERS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * A [[NumberFormatter]] instance.\r\n\t *\r\n\t * This is used to format numbers.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"numberFormatter\": {\r\n\t *     \"numberFormat\": \"#,###.#####\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t *\r\n\t * @see {@link NumberFormatter} for more info on formatting numbers\r\n\t * @param {NumberFormatter}  value  An instance of NumberFormatter\r\n\t */\r\n\tpublic set numberFormatter(value: NumberFormatter) {\r\n\t\tthis._numberFormatter = value;\r\n\t\tthis._numberFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {NumberFormatter} A [[NumberFormatter]] instance to be used\r\n\t */\r\n\tpublic get numberFormatter(): NumberFormatter {\r\n\t\tif (this._numberFormatter) {\r\n\t\t\treturn this._numberFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.numberFormatter;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.numberFormatter;\r\n\t\t}\r\n\t\tthis._numberFormatter = new NumberFormatter();\r\n\t\tthis._numberFormatter.language = this.language;\r\n\t\treturn this.numberFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] instance.\r\n\t *\r\n\t * This is used to format dates, e.g. on a date axes, balloons, etc.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dateFormatter\": {\r\n\t *     \"dateFormat\": \"yyyy-MM-dd\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t * @see {@link DateFormatter} for more info on dates formatting\r\n\t * @param {DateFormatter}  value  An instance of DateFormatter\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t\tthis._dateFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DateFormatter} An instance of DateFormatter\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (this._dateFormatter) {\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.dateFormatter;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.dateFormatter;\r\n\t\t}\r\n\t\tthis._dateFormatter = new DateFormatter();\r\n\t\tthis._dateFormatter.language = this.language;\r\n\t\treturn this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DurationFormatter]] instance.\r\n\t *\r\n\t * This is used to format numbers as durations, e.g. on a value axes.\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t * @see {@link DurationFormatter} for more info on durations\r\n\t * @param {DurationFormatter}  value  An instance of DurationFormatter\r\n\t */\r\n\tpublic set durationFormatter(value: DurationFormatter) {\r\n\t\tthis._durationFormatter = value;\r\n\t\tthis._durationFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DurationFormatter} An instance of DurationFormatter\r\n\t */\r\n\tpublic get durationFormatter(): DurationFormatter {\r\n\t\tif (this._durationFormatter) {\r\n\t\t\treturn this._durationFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.durationFormatter;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.durationFormatter;\r\n\t\t}\r\n\t\tthis._durationFormatter = new DurationFormatter();\r\n\t\tthis._durationFormatter.language = this.language;\r\n\t\treturn this.durationFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to use for translations.\r\n\t *\r\n\t * Normally it is enough to set language for the top-most element - chart.\r\n\t *\r\n\t * All other element child elements will automatically re-use that language\r\n\t * object.\r\n\t *\r\n\t * @param {Language}  value  An instance of Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tif (this._language.get() !== value) {\r\n\t\t\tthis._language.set(value, value.events.on(\"localechanged\", (ev) => {\r\n\t\t\t\tif (this instanceof Container) {\r\n\t\t\t\t\tthis.deepInvalidate();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} An instance of Language\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tlet language = this._language.get();\r\n\t\tif (language) {\r\n\t\t\treturn language;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.language;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.language;\r\n\t\t}\r\n\t\tlanguage = new Language();\r\n\t\tthis.language = language;\r\n\t\treturn language;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DATA-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Parses the string for meta tags `{tag}` and replaces them with a real\r\n\t * value. Supports straight up tags referring to the field in data, i.e.\r\n\t * `{value}` or tags with additional formatting info. E.g.:\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatDate(\"yyyy-MM-dd\")}\r\n\t * {myfield.formatDate()}\r\n\t * {myfield.formatNumber(\"#,####.00\")}\r\n\t * {myfield.formatNumber()}\r\n\t * {myField.formatDuration(\"mm:ss\")}\r\n\t * ```\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * This method Will automatically detect and use proper formatter for the\r\n\t * value.\r\n\t *\r\n\t * The source value will be looked up in various places: (in order)\r\n\t * * Sprite's own `dataItem`\r\n\t * * Sprite's properties\r\n\t * * Parent's `dataItem`\r\n\t * * Parent's properties\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}    string            A string to format\r\n\t * @param  {DataItem}  dataItem          DataItem\r\n\t * @return {string}                      Formatted string\r\n\t */\r\n\r\n\tpublic populateString(string: string, dataItem?: DataItem): string {\r\n\t\tif ($type.hasValue(string)) {\r\n\t\t\tstring = $type.castString(string);\r\n\t\t\tstring = getTextFormatter().escape(string);\r\n\t\t\tlet tags = string.match(/\\{([^}]+)\\}/g);\r\n\t\t\tlet i;\r\n\t\t\tif (tags) {\r\n\t\t\t\tfor (i = 0; i < tags.length; i++) {\r\n\t\t\t\t\tlet tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n\t\t\t\t\tlet value = this.getTagValue(tag, \"\", dataItem);\r\n\r\n\t\t\t\t\tif (!$type.hasValue(value)) {\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstring = string.split(tags[i]).join(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstring = getTextFormatter().unescape(string);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstring = \"\";\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"populateString\", string);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the value from data item and formats it according to specified format.\r\n\t *\r\n\t * If `format` is specified, it will use its contents to choose formatter for\r\n\t * the value. Otherwise it will select formatter accordingly to actual value\r\n\t * type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Ability to force certain formatter on known numeric and date values\r\n\t * @see {@link NumberFormatter}\r\n\t * @see {@link DateFormatter}\r\n\t * @see {@link DurationFormatter}\r\n\t * @param  {string}    tagName           Tag name to replace\r\n\t * @param  {string}    format            Format to use\r\n\t * @param  {DataItem}  dataItem          DataItem\r\n\t * @return {string}                      Formatted value\r\n\t */\r\n\tpublic getTagValue(tagName: string, format?: string, dataItem?: DataItem): string {\r\n\t\tlet value: any;\r\n\t\tif (!$type.hasValue(dataItem)) {\r\n\t\t\tdataItem = this.dataItem;\r\n\t\t}\r\n\r\n\t\t// Parse parts\r\n\t\tlet parts: any[] = [];\r\n\t\tlet reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;;\r\n\t\tlet matches;\r\n\t\twhile ((matches = reg.exec(tagName)) !== null) {\r\n\t\t\tif (matches[3]) {\r\n\t\t\t\t// Simple property\r\n\t\t\t\tparts.push({\r\n\t\t\t\t\tprop: matches[3]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Method\r\n\t\t\t\t// Parse parameters\r\n\t\t\t\tlet params: any[] = [];\r\n\t\t\t\tif ($utils.trim(matches[2]) != \"\") {\r\n\t\t\t\t\tlet reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n\t\t\t\t\tlet matches2;\r\n\t\t\t\t\twhile ((matches2 = reg2.exec(matches[2])) !== null) {\r\n\t\t\t\t\t\tparams.push(matches2[1] || matches2[2] || matches2[3])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tparts.push({\r\n\t\t\t\t\tmethod: matches[1],\r\n\t\t\t\t\tparams: params\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Check if we can retrieve the value from data item\r\n\t\tif (dataItem) {\r\n\r\n\r\n\t\t\t// Check values\r\n\t\t\tvalue = this.getTagValueFromObject(parts, dataItem.values);\r\n\r\n\t\t\t// Check properties\r\n\t\t\tif (!$type.hasValue(value) || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and wont't get to the dateX date.\r\n\t\t\t\tvalue = this.getTagValueFromObject(parts, dataItem);\r\n\t\t\t}\r\n\r\n\t\t\t// Check data context\r\n\t\t\tlet dataContext: any = dataItem.dataContext;\r\n\t\t\tif (!$type.hasValue(value) && dataContext) {\r\n\t\t\t\tvalue = this.getTagValueFromObject(parts, dataItem.dataContext);\r\n\r\n\t\t\t\t// scond data context level sometimes exist (tree map)\r\n\t\t\t\tif (!$type.hasValue(value) && dataContext.dataContext) {\r\n\t\t\t\t\tvalue = this.getTagValueFromObject(parts, dataContext.dataContext);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Check component's data item\r\n\t\t\tif (!$type.hasValue(value) && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n\t\t\t\tvalue = dataItem.component.getTagValue(tagName, format);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check sprite's properties\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tvalue = this.getTagValueFromObject(parts, this.populateStringFrom || <any>this);\r\n\t\t}\r\n\r\n\t\t// Finally, check the parent\r\n\t\tif (!$type.hasValue(value) && this.parent) {\r\n\t\t\tvalue = this.parent.getTagValue(tagName, format);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to retrieve values from properties of any object, then applies\r\n\t * proper formatting to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (improve)\r\n\t * @param  {any[]}   parts   Properties ant methods to access\r\n\t * @param  {any}     object  Source object\r\n\t * @param  {string}  format  A specific format to apply\r\n\t * @return {any}             Formatted value\r\n\t */\r\n\tpublic getTagValueFromObject(parts: any[], object: any, format?: string): any {\r\n\t\tlet current: any = object;\r\n\t\tlet formatApplied = false;\r\n\t\tfor (let i = 0, len = parts.length; i < len; i++) {\r\n\t\t\tlet part = parts[i];\r\n\t\t\tif (part.prop) {\r\n\t\t\t\t// Regular property\r\n\t\t\t\tcurrent = current[part.prop];\r\n\t\t\t\tif (!$type.hasValue(current)) {\r\n\t\t\t\t\t// Not set, return undefined\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Method\r\n\r\n\t\t\t\tswitch (part.method) {\r\n\t\t\t\t\tcase \"formatNumber\":\r\n\t\t\t\t\t\tlet numberValue = $utils.anyToNumber(current);\r\n\t\t\t\t\t\tif ($type.hasValue(numberValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.numberFormatter.format(\r\n\t\t\t\t\t\t\t\tnumberValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formatDate\":\r\n\t\t\t\t\t\tlet dateValue = $utils.anyToDate(current);\r\n\t\t\t\t\t\tif (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n\t\t\t\t\t\t\t// Was not able to get date out of value, quitting and letting\r\n\t\t\t\t\t\t\t// calling method try another value\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($type.hasValue(dateValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.dateFormatter.format(\r\n\t\t\t\t\t\t\t\tdateValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formatDuration\":\r\n\t\t\t\t\t\tlet durationValue = $utils.anyToNumber(current);\r\n\t\t\t\t\t\tif ($type.hasValue(durationValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.durationFormatter.format(\r\n\t\t\t\t\t\t\t\tdurationValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined,\r\n\t\t\t\t\t\t\t\tpart.params[1] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"urlEncode\":\r\n\t\t\t\t\tcase \"encodeURIComponent\":\r\n\t\t\t\t\t\tcurrent = encodeURIComponent(current);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (current[part.method]) {\r\n\t\t\t\t\t\t\tcurrent[part.method].apply(this, part.params);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply default format if it wasn't applied explicitly\r\n\t\tif (!formatApplied) {\r\n\r\n\t\t\tlet formatParts = [{\r\n\t\t\t\tmethod: \"\",\r\n\t\t\t\tparams: format\r\n\t\t\t}];\r\n\r\n\t\t\tif (!$type.hasValue(format)) {\r\n\r\n\t\t\t\t// Format is not set\r\n\t\t\t\t// Determine from the type of the value\r\n\t\t\t\tif ($type.isNumber(current)) {\r\n\t\t\t\t\tformatParts[0].method = \"formatNumber\";\r\n\t\t\t\t\tformatParts[0].params = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isDate(current)) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDate\";\r\n\t\t\t\t\tformatParts[0].params = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Format set\r\n\t\t\t\t// Try to determine formatter based on the format\r\n\t\t\t\tlet formatterType: string = $utils.getFormat(format);\r\n\r\n\t\t\t\t// format\r\n\t\t\t\tif (formatterType === $strings.NUMBER) {\r\n\t\t\t\t\tformatParts[0].method = \"formatNumber\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatterType === $strings.DATE) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDate\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatterType === $strings.DURATION) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDuration\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply format\r\n\t\t\tif (formatParts[0].method) {\r\n\t\t\t\tcurrent = this.getTagValueFromObject(formatParts, current);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn current;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A [[DataItem]] to use as element's data source.\r\n\t *\r\n\t * @todo Review type\r\n\t * @param {this[\"_dataItem\"]}  dataItem  DataItem\r\n\t */\r\n\tpublic set dataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\t//an not use this[\"_dataItem\"] here, as we return parent data item if this sprite doesn't have one.\r\n\t\t// @todo:think about it\r\n\t\tthis.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {this} [[DataItem]]\r\n\t */\r\n\tpublic get dataItem(): this[\"_dataItem\"] {\r\n\t\tif (!this._dataItem) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.dataItem;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.dataItem;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets currently used [[DataItem]].\r\n\t *\r\n\t * If the element has also `configField` set, it will also look for any\r\n\t * config in DataItem's data context to apply to this element.\r\n\t *\r\n\t * @param {DataItem} dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: DataItem) {\r\n\t\tif (this._dataItem != dataItem) {\r\n\t\t\tthis._dataItem = dataItem;\r\n\r\n\t\t\tif (this.configField) {\r\n\t\t\t\tif (dataItem.dataContext) {\r\n\t\t\t\t\tthis.config = (<any>dataItem.dataContext)[this.configField];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tfor (let propertyName in this.propertyFields) {\r\n\t\t\t\t\tlet fieldValue = this.propertyFields[propertyName];\r\n\t\t\t\t\tif ($type.hasValue(dataContext[fieldValue])) {\r\n\t\t\t\t\t\tlet anyThis = <any>this;\r\n\t\t\t\t\t\tanyThis[propertyName] = dataContext[fieldValue];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * PROPERTY UTILITIES\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's property value.\r\n\t *\r\n\t * Will check if there are any bindings with [[DataItem]].\r\n\t *\r\n\t * Will also apply any adapters bound to `propertyName`.\r\n\t *\r\n\t * @param  {ISpriteProperties}  propertyName  Property name\r\n\t * @return {any}                              Property value\r\n\t */\r\n\tpublic getPropertyValue(propertyName: keyof this[\"_properties\"]): any {\r\n\t\tlet propValue = this.properties[propertyName];\r\n\t\t// Apply adapter\r\n\t\t// @todo get rid of <any>\r\n\t\tif (!this._isTemplate) {\r\n\t\t\tpropValue = this.adapter.apply(<any>propertyName, propValue);\r\n\t\t}\r\n\r\n\t\treturn propValue;\r\n\t}\r\n\r\n\r\n\tprotected setColorProperty<Key extends keyof this[\"properties\"]>(property: Key, value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>, invalidate?: boolean): boolean {\r\n\t\tlet currentValue = this.properties[property];\r\n\t\tif (value instanceof Color && currentValue instanceof Color && value.hex == currentValue.hex) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.setPropertyValue(property, value, invalidate);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected setPercentProperty<Key extends keyof this[\"properties\"]>(property: Key, value: Percent | number, invalidate?: boolean, transform?: boolean, precision?: number, floor?: boolean): boolean {\r\n\t\tvalue = $type.toNumberOrPercent(value);\r\n\r\n\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\tvalue = $math.round(value, precision, floor);\r\n\r\n\t\t\treturn this.setPropertyValue(property, value, invalidate, transform);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet currentValue = this.properties[property];\r\n\r\n\t\t\tif (value instanceof Percent && currentValue instanceof Percent && value.value == currentValue.value) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.setPropertyValue(property, value, invalidate, transform);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets elements's property value. Will also propagate the same property value\r\n\t * on all element's clones.\r\n\t *\r\n\t * @param  {this[\"_properties\"]}  property    Property\r\n\t * @param  {any}                  value       Value\r\n\t * @param  {boolean}              invalidate  Should the sprite be invalidated, cause it's re-rendering\r\n\t * @param  {boolean}              transform   Re-apply positioning of the element\r\n\t * @return {boolean}                          Did the value change? It will return `true` if the new value and the old value of the property are not the same\r\n\t * @todo Review propagation to clones. Right now we simply check if clone is disposed before setting the same property on it. It's better to remove from clone list altogether.\r\n\t */\r\n\tpublic setPropertyValue<Key extends keyof this[\"properties\"]>(property: Key, value: any, invalidate?: boolean, transform?: boolean): boolean {\r\n\t\tlet currentValue = this.properties[property];\r\n\t\tif (this.properties[property] !== value) {\r\n\r\n\t\t\tthis.properties[property] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"propertychanged\"] = {\r\n\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: <string>property\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (invalidate) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (transform) {\r\n\t\t\t\tthis.invalidatePosition();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.applyOnClones) {\r\n\t\t\t\tconst clones = this.clones.values;\r\n\t\t\t\tconst length = clones.length;\r\n\r\n\t\t\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\t\t\tconst clone = clones[i];\r\n\r\n\t\t\t\t\tif (!clone.isDisposed()) {\r\n\t\t\t\t\t\t//(<Sprite>clone).setPropertyValue(<any>property, value, invalidate, transform);\r\n\t\t\t\t\t\t(<any>clone)[property] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Verify this\r\n\t */\r\n\tpublic bind<\r\n\t\tS extends { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tFrom extends (keyof S & keyof this),\r\n\t\tTo extends keyof this\r\n\t\t>(\r\n\t\t\tproperty: To,\r\n\t\t\tsource: S,\r\n\t\t\tbindToProperty: From,\r\n\t\t\tmodifier?: (value: this[From]) => this[To]\r\n\t\t): void;\r\n\tpublic bind<\r\n\t\tS extends { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tKey extends (keyof S & keyof this)\r\n\t\t>(\r\n\t\t\tproperty: Key,\r\n\t\t\tsource: S,\r\n\t\t\tmodifier?: (value: this[Key]) => this[Key]\r\n\t\t): void;\r\n\tpublic bind<\r\n\t\tS extends this & { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tKey extends (keyof S & keyof this)\r\n\t\t>(\r\n\t\t\tproperty: Key,\r\n\t\t\tsource: S,\r\n\t\t\tbindToProperty: Key = property,\r\n\t\t\tmodifier?: (value: this[Key]) => this[Key]\r\n\t\t): void {\r\n\t\tif ($type.hasValue(this._bindings[<string>property])) {\r\n\t\t\tthis._bindings[<string>property].dispose();\r\n\t\t}\r\n\r\n\t\t// set current value\r\n\t\tthis[property] = source[bindToProperty];\r\n\r\n\t\t//source.addEventListener(AMEvent.PROPERTY_CHANGED, this.handleBindings, false, this);\r\n\t\tthis._bindings[<string>property] = source.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property === bindToProperty) {\r\n\t\t\t\tlet value: this[Key] = source[bindToProperty];\r\n\r\n\t\t\t\tif (modifier) {\r\n\t\t\t\t\tvalue = modifier(value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO clonesById\r\n\t\t\t\tthis[property] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up and obeserver function to monitor changes in particular property\r\n\t * or properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param   {string | string[]}  property  Element's property name\r\n\t * @param   {function}           listener  Handler function\r\n\t * @param   {C}                  context   Context for handler function\r\n\t * @returns {IDisposer}                    Event Disposer\r\n\t */\r\n\tpublic observe<C>(property: string | string[], listener: (this: C, event: AMEvent<Sprite, ISpriteEvents>[\"propertychanged\"]) => void, context?: C): IDisposer {\r\n\t\treturn new MultiDisposer($array.map($array.toArray(property), (prop) => {\r\n\t\t\treturn this.events.on(\"propertychanged\", (e) => {\r\n\t\t\t\tif (e.property === prop) {\r\n\t\t\t\t\tlistener.call(context, e);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}));\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ACCESSIBILITY-RELATED PROPERTIES\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Applies accessibility to the SVG element.\r\n\t *\r\n\t * Adds `<title>` and `<description>` elements as well as `aria-labelledby`\r\n\t * and `role` properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyAccessibility(): void {\r\n\r\n\t\t// Check if we need to add label and description\r\n\t\tlet title = this.readerTitle,\r\n\t\t\tdescription = this.readerDescription,\r\n\t\t\trole = this.role,\r\n\t\t\thidden = this.readerHidden,\r\n\t\t\tchecked = this.readerChecked,\r\n\t\t\tcontrols = this.readerControls,\r\n\t\t\tlive = this.readerLive;\r\n\r\n\t\t// Init label/describe ids\r\n\t\tlet labelledByIds: string[] = [],\r\n\t\t\tdescribedByIds: string[] = [];\r\n\r\n\t\tlet labelledBy: string = this.readerLabelledBy;\r\n\t\tif (labelledBy) {\r\n\t\t\tlabelledByIds.push(labelledBy);\r\n\t\t}\r\n\r\n\t\tlet describedBy: string = this.readerDescribedBy;\r\n\t\tif (describedBy) {\r\n\t\t\tdescribedByIds.push(describedBy);\r\n\t\t}\r\n\r\n\t\t// If we have only label, we use `aria-label` attribute.\r\n\t\t// If there are both label and description, we'll go with separate tags and\r\n\t\t// use `aria-labelledby`\r\n\t\tif (title && !description && !this.showSystemTooltip) {\r\n\r\n\t\t\t// Only label is set, use attribute\r\n\t\t\tthis.setSVGAttribute({\r\n\t\t\t\t\"aria-label\": title\r\n\t\t\t});\r\n\r\n\t\t\t// Remove previous elements\r\n\t\t\tthis.removeSVGAttribute(\"aria-description\");\r\n\t\t\tif (this._titleElement) {\r\n\t\t\t\tthis.group.removeElement(this._titleElement);\r\n\t\t\t\tthis._titleElement = undefined;\r\n\t\t\t}\r\n\t\t\tif (this._descriptionElement) {\r\n\t\t\t\tthis.group.removeElement(this._descriptionElement);\r\n\t\t\t\tthis._descriptionElement = undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (title) {\r\n\t\t\t\tlet titleElement = this.titleElement;\r\n\t\t\t\tlet titleId = this.uid + \"-title\";\r\n\t\t\t\tif (titleElement.node.textContent != title) {\r\n\t\t\t\t\ttitleElement.node.textContent = title;\r\n\t\t\t\t\ttitleElement.attr({ id: titleId });\r\n\t\t\t\t}\r\n\t\t\t\tlabelledByIds.push(titleId);\r\n\t\t\t}\r\n\t\t\telse if (this._titleElement) {\r\n\t\t\t\tthis.group.removeElement(this._titleElement);\r\n\t\t\t\tthis._titleElement = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (description) {\r\n\t\t\t\tlet descriptionElement = this.descriptionElement;\r\n\t\t\t\tlet descriptionId = this.uid + \"-description\";\r\n\t\t\t\tif (descriptionElement.node.textContent != description) {\r\n\t\t\t\t\tdescriptionElement.node.textContent = description;\r\n\t\t\t\t\tdescriptionElement.attr({ id: descriptionId });\r\n\t\t\t\t}\r\n\t\t\t\tlabelledByIds.push(descriptionId);\r\n\t\t\t}\r\n\t\t\telse if (this._descriptionElement) {\r\n\t\t\t\tthis.group.removeElement(this._descriptionElement);\r\n\t\t\t\tthis._descriptionElement = undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Add label and described properties\r\n\t\tif (labelledByIds.length) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": labelledByIds.join(\" \") });\r\n\t\t}\r\n\t\tif (describedByIds.length) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-describedby\": describedByIds.join(\" \") });\r\n\t\t}\r\n\r\n\t\t// Apply role\r\n\t\tif (role) {\r\n\t\t\tthis.setSVGAttribute({ \"role\": role });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"role\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-hidden\r\n\t\tif (hidden) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-hidden\": \"true\" });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-hidden\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-checked\r\n\t\tif (checked) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-checked\": \"true\" });\r\n\t\t}\r\n\t\telse if (checked === false) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-checked\": \"false\" });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-checked\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-controls\r\n\t\tif (controls) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-controls\": controls });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-controls\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-live\r\n\t\tif (live) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-live\": live });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-live\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader title of the element.\r\n\t *\r\n\t * @param {string} value Title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerTitle\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Title\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\treturn this.getPropertyValue(\"readerTitle\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader description of the element.\r\n\t *\r\n\t * @param {string} value Description\r\n\t */\r\n\tpublic set readerDescription(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerDescription\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Description\r\n\t */\r\n\tpublic get readerDescription(): string {\r\n\t\treturn this.getPropertyValue(\"readerDescription\");\r\n\t}\r\n\r\n\t/**\r\n\t * A WAI-ARIA role for the element.\r\n\t *\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#role_definitions} for more information on WAI-ARIA roles\r\n\t * @param {Roles}  value  Role\r\n\t */\r\n\tpublic set role(value: Roles) {\r\n\t\tvalue = <Roles>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"role\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Roles} Role\r\n\t */\r\n\tpublic get role(): Roles {\r\n\t\treturn this.getPropertyValue(\"role\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element should be hidden from screen readers.\r\n\t *\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-hidden} for more information\r\n\t * @param {boolean}  value  Hidden?\r\n\t */\r\n\tpublic set readerHidden(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"readerHidden\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Hidden?\r\n\t */\r\n\tpublic get readerHidden(): boolean {\r\n\t\treturn this.getPropertyValue(\"readerHidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is currently marked as \"checked\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-checked} for more information\r\n\t * @param {boolean} value Checked?\r\n\t */\r\n\tpublic set readerChecked(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"readerChecked\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Checked?\r\n\t */\r\n\tpublic get readerChecked(): boolean {\r\n\t\treturn this.getPropertyValue(\"readerChecked\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element this element controls.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-controls} for more information\r\n\t * @param {string} value Setting value\r\n\t */\r\n\tpublic set readerControls(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerControls\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Setting value\r\n\t */\r\n\tpublic get readerControls(): string {\r\n\t\treturn this.getPropertyValue(\"readerControls\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls accessibility setting \"aria-live\" for the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions} for more information\r\n\t * @param {AriaLive} value Setting value\r\n\t */\r\n\tpublic set readerLive(value: AriaLive) {\r\n\t\tvalue = <AriaLive>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerLive\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {AriaLive} Setting value\r\n\t */\r\n\tpublic get readerLive(): AriaLive {\r\n\t\treturn this.getPropertyValue(\"readerLive\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element that describes this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby} for more information\r\n\t * @param {Sprite} value Target element\r\n\t */\r\n\tpublic set readerLabelledBy(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerLabelledBy\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Sprite} Target element\r\n\t */\r\n\tpublic get readerLabelledBy(): string {\r\n\t\treturn this.getPropertyValue(\"readerLabelledBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element that describes this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-describedby} for more information\r\n\t * @param {Sprite} value Target element\r\n\t */\r\n\tpublic set readerDescribedBy(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerDescribedBy\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Sprite} Target element\r\n\t */\r\n\tpublic get readerDescribedBy(): string {\r\n\t\treturn this.getPropertyValue(\"readerDescribedBy\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * USER INTERACTIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns elements keyboard options.\r\n\t *\r\n\t * @return {IKeyboardOptions} Keyboard options\r\n\t */\r\n\tpublic get keyboardOptions(): IKeyboardOptions {\r\n\t\tif (!this.interactions.keyboardOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.keyboardOptions;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.keyboardOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.keyboardOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (creates if necessary) an [[InteractionObject]] associated with\r\n\t * this element.\r\n\t *\r\n\t * [[InteractionObject]] is used to attach all kinds of user-interactions to\r\n\t * the element, e.g. click/touch, dragging, hovering, and similar events.\r\n\t *\r\n\t * @return {InteractionObject} Interaction object\r\n\t */\r\n\tpublic get interactions(): InteractionObject {\r\n\t\tif (!this._interaction) {\r\n\t\t\tconst interaction = getInteraction().getInteraction(this.dom);\r\n\t\t\tthis._interaction = interaction;\r\n\t\t\tthis._interaction.clickable = this.clickable;\r\n\t\t\tthis._interaction.hoverable = this.hoverable;\r\n\t\t\tthis._interaction.trackable = this.trackable;\r\n\t\t\tthis._interaction.draggable = this.draggable;\r\n\t\t\tthis._interaction.swipeable = this.swipeable;\r\n\t\t\tthis._interaction.resizable = this.resizable;\r\n\t\t\tthis._interaction.wheelable = this.wheelable;\r\n\t\t\tthis._interaction.inert = this.inert;\r\n\t\t\tthis._disposers.push(this._interaction);\r\n\t\t}\r\n\t\treturn this._interaction;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if interactions object was created. Mostly used just to avoid creating interactions object if not needed.\r\n\t * @return {boolean} Is Sprite interactive?\r\n\t */\r\n\tpublic isInteractive(): boolean {\r\n\t\tif (this._interaction) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT FOCUS-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Controls if the element can gain focus.\r\n\t *\r\n\t * Focusable element will be selectable via TAB key.\r\n\t *\r\n\t * Please note, clicking it with a mouse or touching will not add focus to\r\n\t * it.\r\n\t *\r\n\t * Focused element will show a system-specific highlight, which might ruin\r\n\t * the overal look. This is why we don't focus element on click/touch.\r\n\t *\r\n\t * A default setting varies for different elements. By default all elements\r\n\t * are not focusable, except certain items like buttons, legend items, etc.\r\n\t *\r\n\t * @default undefined (auto)\r\n\t * @param {Optional<boolean>}  value  Can element be focused?\r\n\t */\r\n\tpublic set focusable(value: Optional<boolean>) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"focusable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.focusable = value;\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tthis.setSVGAttribute({ \"focusable\": value });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"focusable\");\r\n\t\t\t\t}\r\n\t\t\t\t// Set focus events that would apply \"focus\" state\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-focusable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"blur\", this.handleBlur, this, false),\r\n\t\t\t\t\tthis.events.on(\"focus\", this.handleFocus, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<boolean>} Can element be focused?\r\n\t */\r\n\tpublic get focusable(): Optional<boolean> {\r\n\t\treturn this.getPropertyValue(\"focusable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Applies filters (if set) when element gains focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"focus\"]} ev Original event\r\n\t */\r\n\tpublic handleFocus(ev?: AMEvent<Sprite, ISpriteEvents>[\"focus\"]): void {\r\n\t\tif (this.focusable) {\r\n\t\t\tif (this.topParent) {\r\n\t\t\t\tthis.topParent.hasFocused = true;\r\n\t\t\t}\r\n\t\t\tif (this.focusFilter) {\r\n\t\t\t\t// Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n\t\t\t\t// need to call it here\r\n\t\t\t\tthis.filters.push(this.focusFilter);\r\n\t\t\t}\r\n\t\t\tif (this.hoverOnFocus) {\r\n\t\t\t\t// Trigger a hover event as well\r\n\t\t\t\tthis.isHover = true;\r\n\t\t\t\tthis.handleOver();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes focus filter (if set) when elementloses focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"blur\"]} ev Original event\r\n\t */\r\n\tpublic handleBlur(ev?: AMEvent<Sprite, ISpriteEvents>[\"blur\"]): void {\r\n\t\tif (this.focusable) {\r\n\t\t\tif (this.topParent) {\r\n\t\t\t\tthis.topParent.hasFocused = false;\r\n\t\t\t}\r\n\t\t\tif (this.focusFilter) {\r\n\t\t\t\t// Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n\t\t\t\t// need to call it here\r\n\t\t\t\tthis.filters.removeValue(this.focusFilter);\r\n\t\t\t}\r\n\t\t\tif (this.hoverOnFocus) {\r\n\t\t\t\t// Trigger a out event as well\r\n\t\t\t\tthis.isHover = false;\r\n\t\t\t\tthis.handleOut();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Filter]] to apply to element when it gains focus.\r\n\t *\r\n\t * Normally, browsers will draw a default ugly square around focused element,\r\n\t * which totally makes sense because its purpose is to help identify active\r\n\t * element for visually impaired people.\r\n\t *\r\n\t * However, if you would rather apply a filter, so you can modify how focused\r\n\t * element looks like, use `focusFilter`.\r\n\t *\r\n\t * Simply set it to an anstance of [[FocusFilter]], or any other filter\r\n\t * object.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.focusFilter = new am4core.FocusFilter();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.focusFilter = new am4core.FocusFilter();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"focusFilter\": {\r\n\t *     \"type\": \"FocusFilter\"\r\n\t *   },\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link Filter}\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<Filter>} Focused element filter\r\n\t * @todo This is still experimental, use at your own risk.\r\n\t */\r\n\tpublic get focusFilter(): $type.Optional<Filter> {\r\n\t\t/*if (!this._focusFilter) {\r\n\t\t\tthis._focusFilter = new FocusFilter();\r\n\t\t\tthis._disposers.push(this._focusFilter);\r\n\t\t}*/\r\n\t\t//return this._focusFilter;\r\n\r\n\t\tconst focusFilter = this._focusFilter;\r\n\r\n\t\tif (focusFilter) {\r\n\t\t\treturn focusFilter;\r\n\t\t}\r\n\t\tif (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.focusFilter;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.focusFilter;\r\n\t\t}\r\n\r\n\t\t//this._focusFilter = new FocusFilter();\r\n\t\t//this._disposers.push(this._focusFilter);\r\n\t}\r\n\r\n\t/**\r\n\t * @see {@link Filter}\r\n\t * @ignore Exclude from docs\r\n\t * @todo This is still experimental, don't use it\r\n\t */\r\n\tpublic set focusFilter(value: $type.Optional<Filter>) {\r\n\t\tthis._focusFilter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, this element will also trigger `\"over\"` event with all\r\n\t * the related consequences, like \"hover\" state being applied and tooltip\r\n\t * being shown.\r\n\t *\r\n\t * Useful as an accessibility feature to display rollover tooltips on items\r\n\t * selected via keyboard.\r\n\t *\r\n\t * @param {boolean}  value  Trigger hover on focus?\r\n\t * @default false\r\n\t */\r\n\tpublic set hoverOnFocus(value: boolean) {\r\n\t\tif (value !== this.hoverOnFocus) {\r\n\t\t\tthis.setPropertyValue(\"hoverOnFocus\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Trigger hover on focus?\r\n\t */\r\n\tpublic get hoverOnFocus(): boolean {\r\n\t\treturn this.getPropertyValue(\"hoverOnFocus\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets TAB index.\r\n\t *\r\n\t * Tab index maintains the order in which focusable elements gain focus when\r\n\t * TAB key is pressed.\r\n\t *\r\n\t * Please note, tab index is not local to the chart. It affects the whole\r\n\t * of the page, including non-SVG elements. Maintain extreme causion when\r\n\t * setting tab indexes, as it affects the user experience for the whole\r\n\t * web page.\r\n\t *\r\n\t * @param {number} value TAB index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"tabindex\", value) && $type.isNumber(value)) {\r\n\t\t\tthis.interactions.tabindex = value;\r\n\t\t\tthis.setSVGAttribute({ \"tabindex\": value });\r\n\t\t\tif (value > -1) {\r\n\t\t\t\tthis.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.focusable = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current TAB index for focusable item.\r\n\t *\r\n\t * @return {number} TAB index\r\n\t */\r\n\tpublic get tabindex(): $type.Optional<number> {\r\n\t\tconst index = this._tabindex;\r\n\r\n\t\tif (index != null) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.tabindex;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.tabindex;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DRAGGING AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's options to be used for inertia. This setting is\r\n\t * inheritable, meaning that if not set directly, it will search in all its\r\n\t * ascendants until very top.\r\n\t *\r\n\t * Inertia is used only if element's `inert` is set to `true`.\r\n\t *\r\n\t * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n\t * movement, and will continue moving in the same drag direction, gradually\r\n\t * reducing in speed until finally stops.\r\n\t *\r\n\t * Check [[IInertiaOptions]] for how you tweak inertia animations.\r\n\t *\r\n\t * @return {Dictionary<InertiaTypes, IInertiaOptions>} Inertia options\r\n\t */\r\n\tpublic get inertiaOptions(): Dictionary<InertiaTypes, IInertiaOptions> {\r\n\t\tif (!this.interactions.inertiaOptions) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.inertiaOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.inertiaOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element is draggable.\r\n\t *\r\n\t * @param {boolean}  value  `true` if element can be dragged\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"draggable\", value)) {\r\n\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.draggable = value;\r\n\t\t\t\t//interaction.processDraggable(this);\r\n\r\n\t\t\t\t// Add events\r\n\t\t\t\t// @todo Maybe attach to InteractionObject's multidisposer so that\r\n\t\t\t\t// sprites events get disposed together with them?\r\n\t\t\t\t// this.interactions.disposers.getItem(\"movable\")\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-draggable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"dragstart\", this.handleDragStart, this, false),\r\n\t\t\t\t\tthis.events.on(\"drag\", this.handleDragMove, this, false),\r\n\t\t\t\t\tthis.events.on(\"dragstop\", this.handleDragStop, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} `true` if element can be dragged\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.getPropertyValue(\"draggable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when dragged element is being started to drag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected handleDragStart(): void {\r\n\t\tthis.interactions.originalPosition = {\r\n\t\t\tx: this.pixelX,\r\n\t\t\ty: this.pixelY\r\n\t\t};\r\n\t\tthis._isDragged = true;\r\n\t\tthis.hideTooltip(0);\r\n\t}\r\n\r\n\t/**\r\n\t * Tell this element to start being dragged. This is useful if you want to\r\n\t * drag items by interactions performed not directly on the target element.\r\n\t *\r\n\t * Parameter `pointer` is highly recommended. By passing in the Pointer you\r\n\t * will ensure that movement is tracked for the pointer that you want. If not\r\n\t * supplied, the system will try to determine the most logical pointer.\r\n\t *\r\n\t * However this may fail if you have more than one pointer active, which\r\n\t * might happen if you have several objects being dragged on a touch device.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer} pointer Pointer to use for movement\r\n\t */\r\n\tpublic dragStart(pointer?: IPointer): void {\r\n\t\t//this.dragStop(pointer);\r\n\t\t//this.draggable = true;\r\n\t\tthis._isDragged = true;\r\n\t\tgetInteraction().dragStart(this.interactions, pointer);\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when dragged element is being dropped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected handleDragStop(): void {\r\n\t\tthis._isDragged = false;\r\n\t\tthis.showTooltip();\r\n\t\tthis.interactions.originalPosition = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops manually initiated dragging of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer} pointer Pointer to use as a reference\r\n\t */\r\n\tpublic dragStop(pointer?: IPointer): void {\r\n\t\t//this.draggable = false;\r\n\t\tthis._isDragged = false;\r\n\t\tgetInteraction().dragStop(this.interactions, pointer);\r\n\t\t//this.handleDragStop();\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when {Sprite} is being dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionEvent} ev Event object\r\n\t * @todo Implement parent position offset calculation\r\n\t */\r\n\tpublic handleDragMove(ev: AMEvent<Sprite, ISpriteEvents>[\"drag\"]): void {\r\n\t\tlet point: Optional<IPoint> = this.interactions.originalPosition;\r\n\r\n\t\tif (point) {\r\n\t\t\tlet globalScale = this.parent.globalScale;\r\n\r\n\t\t\tthis.moveTo({ x: point.x + ev.shift.x / globalScale, y: point.y + ev.shift.y / globalScale }, undefined, undefined, true);\r\n\t\t\t//this.dispatchImmediately(\"drag\", ev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element should use inertia when interacted with.\r\n\t *\r\n\t * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n\t * movement, and will continue moving in the same drag direction, gradually\r\n\t * reducing in speed until finally stops.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} value `true` if element should use inertia when animated\r\n\t */\r\n\tpublic set inert(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"inert\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.inert = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} `true` if element should use inertia when animated\r\n\t */\r\n\tpublic get inert(): boolean {\r\n\t\treturn this.getPropertyValue(\"inert\");\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * HOVERING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns Sprite's hover options.\r\n\t *\r\n\t * @see {@link IHoverOptions} for available options.\r\n\t * @return {IHoverOptions} Options\r\n\t */\r\n\tpublic get hoverOptions(): IHoverOptions {\r\n\t\tif (!this.interactions.hoverOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.hoverOptions;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.hoverOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.hoverOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element is hoverable (hover events are registered).\r\n\t *\r\n\t * Use `over` and `out` events, to watch for those respective actions.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} value `true` if element can be hovered\r\n\t */\r\n\tpublic set hoverable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"hoverable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.hoverable = value;\r\n\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-hoverable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"over\", this.handleOver, this, false),\r\n\t\t\t\t\tthis.events.on(\"out\", this.handleOut, this, false),\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} `true` if element is hoverable\r\n\t */\r\n\tpublic get hoverable(): boolean {\r\n\t\treturn this.getPropertyValue(\"hoverable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles tasks when element becomes hovered:\r\n\t * * Shows [[Tooltip]] if applicable\r\n\t * * Applies \"hover\" state\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"over\"]} ev Event object\r\n\t */\r\n\tpublic handleOver(ev?: AMEvent<Sprite, ISpriteEvents>[\"over\"]): void {\r\n\t\tif (this._outTimeout) {\r\n\t\t\tthis._outTimeout.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.isHover) {\r\n\t\t\tif (this.states.hasKey(\"hover\")) {\r\n\t\t\t\t//this.setState(\"hover\");\r\n\t\t\t\t// This will check `isHover` and will set \"hover\" state\r\n\t\t\t\tif (!this.isHidden) {\r\n\t\t\t\t\tthis.applyCurrentState();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet point: IPoint\r\n\t\t\tif (ev && ev.pointer) {\r\n\t\t\t\tpoint = $utils.documentPointToSvg(ev.pointer.point, this.svgContainer.SVGContainer)\r\n\t\t\t}\r\n\r\n\t\t\tthis.showTooltip(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hideTooltip();\r\n\t\t\tif (!this.isHidden && this.states.hasKey(\"hover\")) {\r\n\t\t\t\tthis.applyCurrentState();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles tasks when element loses hover:\r\n\t *\r\n\t * * Hides [[Tooltip]]\r\n\t * * Applies default state\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"out\"]} ev [description]\r\n\t */\r\n\tpublic handleOut(ev?: AMEvent<Sprite, ISpriteEvents>[\"out\"]): void {\r\n\t\tthis.hideTooltip();\r\n\t\tthis._outTimeout = this.setTimeout(this.handleOutReal.bind(this), this.rollOutDelay);\r\n\t}\r\n\r\n\t/**\r\n\t * [handleOutReal description]\r\n\t *\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic handleOutReal() {\r\n\t\tif (!this.isHidden && !this.isHiding && this.states.hasKey(\"hover\")) {\r\n\t\t\tthis.applyCurrentState();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * CLICKING/TAPPING AND TOGGLING STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns Sprite's click (hit) options.\r\n\t *\r\n\t * Click (hit) options control things like double-click, timeouts, etc.\r\n\t *\r\n\t * @see {@link IHitOptions} for available options.\r\n\t * @return {IHitOptions} Options\r\n\t */\r\n\tpublic get hitOptions(): IHitOptions {\r\n\t\tif (!this.interactions.hitOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.hitOptions;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.hitOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.hitOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares element's after `down` event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"down\"]} ev Event\r\n\t */\r\n\tpublic handleDown(ev?: AMEvent<Sprite, ISpriteEvents>[\"down\"]): void {\r\n\t\tif (this.interactions.downPointers.length === 1) {\r\n\t\t\tthis.interactions.originalPosition = {\r\n\t\t\t\tx: this.pixelX,\r\n\t\t\t\ty: this.pixelY\r\n\t\t\t};\r\n\t\t\tthis.interactions.originalAngle = this.rotation;\r\n\t\t\tthis.interactions.originalScale = this.scale;\r\n\t\t\tif (this.states.hasKey(\"down\")) {\r\n\t\t\t\tthis.setState(\"down\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares element's after `up` event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"up\"]} ev Event\r\n\t */\r\n\tpublic handleUp(ev?: AMEvent<Sprite, ISpriteEvents>[\"up\"]): void {\r\n\t\t/*if (!this.isDown) {\r\n\t\t\tthis.interactions.originalPosition = null;\r\n\t\t\tthis.interactions.originalAngle = null;\r\n\t\t\tthis.interactions.originalScale = null;\r\n\t\t}*/\r\n\t\tif (this.states.hasKey(\"down\")) {\r\n\t\t\tthis.applyCurrentState();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the element is clickable.\r\n\t *\r\n\t * Some type of the elements, like buttons are clickable by default.\r\n\t *\r\n\t * Most of the elements are not clickable by default.\r\n\t *\r\n\t * Use `hit`, `doublehit`, `up`, `down`, `toggled` events to watch for\r\n\t * respective click/touch actions.\r\n\t *\r\n\t * @param {boolean} value `true` if element can be clicked\r\n\t */\r\n\tpublic set clickable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"clickable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.clickable = value;\r\n\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-clickable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"up\", this.handleUp, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic get clickable(): boolean {\r\n\t\treturn this.getPropertyValue(\"clickable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element can be toggled on and off by subsequent clicks/taps.\r\n\t *\r\n\t * Togglable element will alternate its `isActive` property between `true`\r\n\t * and `false` with each click.\r\n\t *\r\n\t * @param {boolean} value Is togglable?\r\n\t */\r\n\tpublic set togglable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"togglable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-togglable\", value, () => this.events.on(\"hit\", this.handleToggle, this, false));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is togglable?\r\n\t */\r\n\tpublic get togglable(): boolean {\r\n\t\treturn this.getPropertyValue(\"togglable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles toggling of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"hit\"]} ev Event\r\n\t */\r\n\tpublic handleToggle(ev: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tthis.isActive = !this.isActive;\r\n\t}\r\n\r\n\t/**\r\n\t * Click-through URL for this element.\r\n\t *\r\n\t * If set, clicking/tapping this element will open the new URL in a target\r\n\t * window/tab as set by `urlTarget`.\r\n\t *\r\n\t * Please note that URL will be parsed by data placeholders in curly\r\n\t * brackets, to be populated from data. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"columns\": {\r\n\t *       \"url\": \"https://www.google.com/search?q={category.urlEncode()}\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Optional<string>} value URL\r\n\t */\r\n\tpublic set url(value: $type.Optional<string>) {\r\n\t\tif (this.setPropertyValue(\"url\", value)) {\r\n\t\t\tif (this._urlDisposer) {\r\n\t\t\t\tthis._urlDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// If URL is not empty, set up events\r\n\t\t\tif ($utils.isNotEmpty(value)) {\r\n\t\t\t\tthis._urlDisposer = this.events.on(\"hit\", this.urlHandler, this, false);\r\n\r\n\t\t\t\t// Set other required parameters\r\n\t\t\t\tthis.clickable = true;\r\n\t\t\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} URL\r\n\t */\r\n\tpublic get url(): $type.Optional<string> {\r\n\t\treturn this.getPropertyValue(\"url\");\r\n\t}\r\n\r\n\tpublic set baseId(value: string) {\r\n\t\tthis.setBaseId(value);\r\n\t}\r\n\r\n\tpublic get baseId(): string {\r\n\t\tif (!this._baseId && this.parent) {\r\n\t\t\tthis.baseId = this.parent.baseId;\r\n\t\t}\r\n\r\n\t\treturn this._baseId;\r\n\t}\r\n\r\n\tprotected setBaseId(value: string) {\r\n\t\tif (value != this._baseId) {\r\n\t\t\tif (this.invalid) {\r\n\t\t\t\tthis.invalid = false;\r\n\t\t\t\tregistry.removeFromInvalidSprites(this);\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t\tthis._baseId = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Target to use for URL clicks:\r\n\t *\r\n\t * * _blank\r\n\t * * _self (default)\r\n\t * * _parent\r\n\t * * _top\r\n\t * * Name of the window/frame\r\n\t *\r\n\t * Ignored if `url` is not set.\r\n\t *\r\n\t * @param {string} value URL target\r\n\t */\r\n\tpublic set urlTarget(value: string) {\r\n\t\tthis.setPropertyValue(\"urlTarget\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} URL target\r\n\t */\r\n\tpublic get urlTarget(): string {\r\n\t\treturn this.getPropertyValue(\"urlTarget\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles URL transition on element click.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionEvent} ev An event object\r\n\t */\r\n\tpublic urlHandler(ev: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\t// Is URL set?\r\n\t\tif ($utils.isNotEmpty(this.url)) {\r\n\t\t\t// Proceed to the URL\r\n\t\t\tlet url = this.populateString(this.url);\r\n\t\t\tif (this.urlTarget === \"_self\") {\r\n\t\t\t\twindow.location.href = url;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.open(url, this.urlTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * SWIPING GESTURE TRACKING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's swipe gesture options.\r\n\t *\r\n\t * @return {ISwipeOptions} Swipe gesture options\r\n\t */\r\n\tpublic get swipeOptions(): ISwipeOptions {\r\n\t\tif (!this.interactions.swipeOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.swipeOptions;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.swipeOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.swipeOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is swipeable.\r\n\t *\r\n\t * Swipable element will invoke `swipe`, `swipeleft` and `swiperight` events,\r\n\t * when quick horizontal drag action is performed with either mouse or touch.\r\n\t *\r\n\t * Please note that combining swipe and drag is possible, however will incur\r\n\t * a slight but noticeable delay in drag start.\r\n\t *\r\n\t * @param {boolean}  value  Element swipable?\r\n\t */\r\n\tpublic set swipeable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"swipeable\", value)) {\r\n\t\t\tthis.applyCursorStyle();\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.swipeable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processSwipeable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Element swipable?\r\n\t */\r\n\tpublic get swipeable(): boolean {\r\n\t\treturn this.getPropertyValue(\"swipeable\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POINTER TRACKING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if the element is trackable (mouse position over it is reported to\r\n\t * event listeners).\r\n\t *\r\n\t * Will invoke `track` events whenever pointer (cursor) changes position\r\n\t * while over element.\r\n\t *\r\n\t * Please note, touch devices will also invoke `track` events when touch\r\n\t * point is moved while holding down on a trackable element.\r\n\t *\r\n\t * @param {boolean} value Track cursor movement over element?\r\n\t */\r\n\tpublic set trackable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"trackable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.trackable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processTrackable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Track cursor movement over element?\r\n\t */\r\n\tpublic get trackable(): boolean {\r\n\t\treturn this.getPropertyValue(\"trackable\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MOUSE-WHEEL RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if the element can be interacted with mouse wheel.\r\n\t *\r\n\t * Will invoke `wheel`, `wheelup`, `wheeldown`, `wheelleft`, and `wheelright`\r\n\t * events when using mouse wheel over the element.\r\n\t *\r\n\t * @param {boolean} value Mouse wheel events enabled?\r\n\t */\r\n\tpublic set wheelable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"wheelable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.wheelable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processWheelable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Mouse wheel events enabled?\r\n\t */\r\n\tpublic get wheelable(): boolean {\r\n\t\treturn this.getPropertyValue(\"wheelable\");\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * RESIZE\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if this element is resizable.\r\n\t *\r\n\t * Enabling resize will turn on various interactions on the element. Their\r\n\t * actual functionality will depend on other properties.\r\n\t *\r\n\t * If the element also `draggable`, resize will only happen with two points\r\n\t * of contact on a touch device.\r\n\t *\r\n\t * If the element is not draggable, resize can be performed with just one\r\n\t * point of contact, touch or mouse.\r\n\t *\r\n\t * Will invoke `resize` event every time the size of the element changes.\r\n\t *\r\n\t * @param {boolean}  value  Element resizable?\r\n\t */\r\n\tpublic set resizable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"resizable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.resizable = value;\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-resizable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"resize\", this.handleResize, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Element resizable?\r\n\t */\r\n\tpublic get resizable(): boolean {\r\n\t\treturn this.getPropertyValue(\"resizable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles resize intermediate step.\r\n\t *\r\n\t * By default this method resizes actual element. Each element, can override\r\n\t * this method to implement their own resize logic.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionEvent} ev Event object\r\n\t */\r\n\tpublic handleResize(ev: AMEvent<Sprite, ISpriteEvents>[\"resize\"]): void {\r\n\t\tthis.scale = this.interactions.originalScale * ev.scale;\r\n\t\tthis.validatePosition();\r\n\t\t/*center: (io.draggable\r\n\t\t? $math.getMidPoint(point1, point2)\r\n\t\t: {\r\n\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\"y\": io.originalPosition.y\r\n\t\t})*/\r\n\t\t//this.moveTo(this.originalPosition.x + ev.shift.x, this.originalPosition.y + ev.shift.y);\r\n\t\tif (this.draggable) {\r\n\t\t\tlet svgPoint1: IPoint = $utils.documentPointToSvg(ev.point1, this.htmlContainer);\r\n\t\t\tlet svgPoint2: IPoint = $utils.documentPointToSvg(ev.point2, this.htmlContainer);\r\n\t\t\tlet svgMidPoint: IPoint = $math.getMidPoint(svgPoint1, svgPoint2);\r\n\r\n\t\t\tlet parentPoint1: IPoint = $utils.documentPointToSprite(ev.startPoint1, this.parent);\r\n\t\t\tlet parentPoint2: IPoint = $utils.documentPointToSprite(ev.startPoint2, this.parent);\r\n\r\n\t\t\tlet originalPosition: Optional<IPoint> = this.interactions.originalPosition;\r\n\t\t\tlet originalScale: number = this.interactions.originalScale;\r\n\r\n\t\t\tif (originalPosition) {\r\n\t\t\t\tlet spritePoint1: IPoint = { x: (parentPoint1.x - originalPosition.x) / originalScale, y: (parentPoint1.y - originalPosition.y) / originalScale };\r\n\t\t\t\tlet spritePoint2: IPoint = { x: (parentPoint2.x - originalPosition.x) / originalScale, y: (parentPoint2.y - originalPosition.y) / originalScale };\r\n\r\n\t\t\t\tlet spriteMidPoint: IPoint = $math.getMidPoint(spritePoint1, spritePoint2);\r\n\r\n\t\t\t\tlet parentPoint: IPoint = $utils.svgPointToSprite(svgMidPoint, this.parent);\r\n\t\t\t\tthis.moveTo({ x: parentPoint.x - spriteMidPoint.x * this.scale, y: parentPoint.y - spriteMidPoint.y * this.scale });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MOUSE-RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's cursor options.\r\n\t *\r\n\t * Cursor options usually define cursor style for various states of the\r\n\t * hovered element.\r\n\t *\r\n\t * Elements inherit `cursorOptions` from their parents if they don't have\r\n\t * them set explicitly.\r\n\t *\r\n\t * @see {@link ICursorOptions} for a list of available options\r\n\t * @return {ICursorOptions} Cursor options\r\n\t */\r\n\tpublic get cursorOptions(): ICursorOptions {\r\n\t\tif (!this.interactions.cursorOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.cursorOptions;\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.cursorOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.cursorOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut to setting mouse cursor on hover.\r\n\t *\r\n\t * @param {Array<IStyleProperty>} style An array of styles to apply onhover\r\n\t */\r\n\tpublic set cursorOverStyle(style: Array<IStyleProperty>) {\r\n\t\tthis.cursorOptions.overStyle = style;\r\n\t\tgetInteraction().applyCursorOverStyle(this.interactions);\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut to setting mouse cursor when button is pressed down.\r\n\t *\r\n\t * @param {Array<IStyleProperty>} style An array of styles to apply onhover\r\n\t */\r\n\tpublic set cursorDownStyle(style: Array<IStyleProperty>) {\r\n\t\tthis.cursorOptions.downStyle = style;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies default cursor styles for interactable elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Determine if this is necessary. Maybe let's not apply any cursor styles by default\r\n\t */\r\n\tpublic applyCursorStyle(): void {\r\n\r\n\t\t// Draggable styles\r\n\t\t/*if (this.draggable) {\r\n\r\n\t\t\tif (!$type.hasValue(this.cursorOptions.overStyle)) {\r\n\t\t\t\tthis.cursorOptions.overStyle = MouseCursorStyle.grab;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.hasValue(this.cursorOptions.downStyle)) {\r\n\t\t\t\tthis.cursorOptions.downStyle = MouseCursorStyle.grabbing;\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Setting this to `false` will effectively disable all interactivity on the\r\n\t * element.\r\n\t *\r\n\t * @param {boolean}  value  Is interaction enabled for this element?\r\n\t */\r\n\tpublic set interactionsEnabled(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\r\n\t\tif (this.setPropertyValue(\"interactionsEnabled\", value)) {\r\n\t\t\tlet pointerEvents = null; // must be null, not \"null\"!\r\n\t\t\tif (!value) {\r\n\t\t\t\tpointerEvents = \"none\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is for IE\r\n\t\t\t\tthis.group.node.style.pointerEvents = \"\";\r\n\t\t\t}\r\n\t\t\tthis.group.node.style.pointerEvents = pointerEvents;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is interaction enabled for this element?\r\n\t */\r\n\tpublic get interactionsEnabled(): boolean {\r\n\t\tlet value = this.getPropertyValue(\"interactionsEnabled\");\r\n\t\tif (value === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.interactionsEnabled;\r\n\t\t}\r\n\t\tif (this.parent) {\r\n\t\t\treturn this.parent.interactionsEnabled;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * EXPORT-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * An [[Export]] instance.\r\n\t *\r\n\t * Used to access API of the chart export functionality.\r\n\t *\r\n\t * If `exporting` is not set, the element inherits [[Export]] instance from\r\n\t * its parents.\r\n\t *\r\n\t * Upon request, if no parent has such instance, a new one is created, using\r\n\t * default settings, what in most cases is just enough.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/} for more info about exporting\r\n\t * @param {Export}  exp  Export\r\n\t */\r\n\tpublic set exporting(exp: Export) {\r\n\t\tthis._exporting.set(exp, exp);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Export} Export instance\r\n\t */\r\n\tpublic get exporting(): Export {\r\n\t\treturn this.getExporting();\r\n\t}\r\n\r\n\t/**\r\n\t * This is here as a method so that inheriting classes could override it.\r\n\t *\r\n\t * @return {Export} Export instance\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tlet _export = this._exporting.get();\r\n\r\n\t\tif (_export) {\r\n\t\t\treturn _export;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.isStandaloneInstance || !this.parent) {\r\n\t\t\t\t_export = new Export(this.svgContainer.SVGContainer);\r\n\t\t\t\t_export.sprite = this;\r\n\t\t\t\t_export.language = this.language;\r\n\t\t\t\t_export.dateFormatter = this.dateFormatter;\r\n\t\t\t\tthis._exporting.set(_export, _export);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.parent.exporting;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _export;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MODAL/POPUP RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns a [[Modal]] instance, associated with this chart.\r\n\t * (elements top parent)\r\n\t *\r\n\t * Accessing modal does not make it appear. To make a modal appear, use\r\n\t * `showModal()` method.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @return {Modal} Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tconst topParent = this.topParent;\r\n\r\n\t\tif (topParent) {\r\n\t\t\t// We always use top parent's modal\r\n\t\t\treturn topParent.modal;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// We are a top parent, let's check if we have a modal\r\n\t\t\tif (!$type.hasValue(this._modal)) {\r\n\r\n\t\t\t\t// Create new modal\r\n\t\t\t\tthis._modal = new Modal();\r\n\t\t\t\tthis._modal.container = this.svgContainer.SVGContainer;\r\n\r\n\t\t\t\t// Prefix with Sprite's class name\r\n\t\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add to disposers\r\n\t\t\t\tthis._disposers.push(this._modal);\r\n\t\t\t}\r\n\t\t\treturn this._modal;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal window with specific content (`text` parameter) and,\r\n\t * optionally, `title`.\r\n\t *\r\n\t * The `text` parameter can contain HTML content.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @param {string}  text   Modal contents\r\n\t * @param {string}  title  Title for the modal window\r\n\t */\r\n\tpublic openModal(text: string, title?: string): Modal {\r\n\r\n\t\t// Hide previous modal\r\n\t\tthis.closeModal();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\r\n\t\treturn modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if there is one currently open.\r\n\t */\r\n\tpublic closeModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of popups for this chart.\r\n\t *\r\n\t * @return {ListTemplate<Popup>} Popups\r\n\t */\r\n\tpublic get popups(): ListTemplate<Popup> {\r\n\t\tconst topParent = this.topParent;\r\n\r\n\t\tif (topParent != null) {\r\n\t\t\t// We always use top parent's popups\r\n\t\t\treturn topParent.popups;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// We are a top parent, let's check if we have a modal\r\n\t\t\tif (!$type.hasValue(this._popups)) {\r\n\r\n\t\t\t\t// Create popup template\r\n\t\t\t\tlet popupTemplate = new Popup();\r\n\t\t\t\tpopupTemplate.container = this.svgContainer.SVGContainer;\r\n\t\t\t\tpopupTemplate.sprite = this;\r\n\r\n\t\t\t\t// Prefix with Sprite's class name\r\n\t\t\t\tpopupTemplate.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create the list\r\n\t\t\t\tthis._popups = new ListTemplate(popupTemplate);\r\n\r\n\t\t\t\t// Add to disposers\r\n\t\t\t\tthis._disposers.push(new ListDisposer(this._popups));\r\n\t\t\t\tthis._disposers.push(this._popups.template);\r\n\t\t\t}\r\n\t\t\treturn this._popups;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates, opens, and returns a new [[Popup]] window.\r\n\t *\r\n\t * `text` can be any valid HTML.\r\n\t *\r\n\t * `title` is currently not supported.\r\n\t *\r\n\t * @param  {string}  text   Popup contents\r\n\t * @param  {string}  title  Popup title\r\n\t * @return {Popup}          Popup instance\r\n\t */\r\n\tpublic openPopup(text: string, title?: string): Popup {\r\n\t\tlet popup = this.popups.create();\r\n\t\tpopup.content = text;\r\n\t\tif ($type.hasValue(title)) {\r\n\t\t\tpopup.title = title;\r\n\t\t}\r\n\t\tpopup.open();\r\n\t\treturn popup;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes all currently open popup windows\r\n\t */\r\n\tpublic closeAllPopups(): void {\r\n\t\tthis.popups.each((popup) => {\r\n\t\t\tpopup.close();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POSITIONAL PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's absolute or relative X coordinate.\r\n\t *\r\n\t * If setting both X and Y, please consider using `moveTo()` method instead,\r\n\t * as it will be faster to set both coordinates at once.\r\n\t *\r\n\t * @param {number | Percent} value X coordinate\r\n\t */\r\n\tpublic set x(value: number | Percent) {\r\n\t\tif (!this.isDragged) {\r\n\t\t\tthis.setPercentProperty(\"x\", value, false, true, this._positionPrecision, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} X coordinate\r\n\t */\r\n\tpublic get x(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"x\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current absolute X coordinate in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} X coordinate (px)\r\n\t */\r\n\tpublic get pixelX(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"pixelX\",\r\n\t\t\t$math.fitToRange(this.getPixelX(this.x), this.minX, this.maxX)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current relative X coordinate in [[Percent]].\r\n\t *\r\n\t * @return {number} X coordinate ([[Percent]])\r\n\t */\r\n\tpublic get relativeX(): number {\r\n\t\treturn this.adapter.apply(\"relativeX\", this.getRelativeX(this.x));\r\n\t}\r\n\r\n\t/**\r\n\t * The smallest allowable absolute X coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Min X (px)\r\n\t */\r\n\tpublic set minX(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"minX\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Min X (px)\r\n\t */\r\n\tpublic get minX(): number {\r\n\t\treturn this.getPropertyValue(\"minX\");\r\n\t}\r\n\r\n\t/**\r\n\t * The biggest allowable absolute X coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Max X (px)\r\n\t */\r\n\tpublic set maxX(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"maxX\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Max X (px)\r\n\t */\r\n\tpublic get maxX(): number {\r\n\t\treturn this.getPropertyValue(\"maxX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative Y coordinate.\r\n\t *\r\n\t * If setting both X and Y, please consider using `moveTo()` method instead,\r\n\t * as it will be faster to set both coordinates at once.\r\n\t *\r\n\t * @param {number | Percent}  value  Y coordinate\r\n\t */\r\n\tpublic set y(value: number | Percent) {\r\n\t\tif (!this.isDragged) {\r\n\t\t\tthis.setPercentProperty(\"y\", value, false, true, this._positionPrecision, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Y coordinate\r\n\t */\r\n\tpublic get y(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"y\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current absolute Y coordinate in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Y coordinate (px)\r\n\t */\r\n\tpublic get pixelY(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"pixelY\",\r\n\t\t\t$math.fitToRange(this.getPixelY(this.y), this.minY, this.maxY)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current relative Y coordinate in [[Percent]].\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Y coordinate ([[Percent]])\r\n\t */\r\n\tpublic get relativeY(): number {\r\n\t\treturn this.adapter.apply(\"relativeY\", this.getRelativeX(this.y));\r\n\t}\r\n\r\n\t/**\r\n\t * The smallest allowable absolute Y coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Min Y (px)\r\n\t */\r\n\tpublic set minY(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"minY\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Min Y (px)\r\n\t */\r\n\tpublic get minY(): number {\r\n\t\treturn this.getPropertyValue(\"minY\");\r\n\t}\r\n\r\n\t/**\r\n\t * The biggest allowable absolute Y coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  value  Max Y (px)\r\n\t */\r\n\tpublic set maxY(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"maxY\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Max Y (px)\r\n\t */\r\n\tpublic get maxY(): number {\r\n\t\treturn this.getPropertyValue(\"maxY\");\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal offset for the element in pixels.\r\n\t *\r\n\t * Can be negative value for offset to the left.\r\n\t *\r\n\t * @param {number}  value  Horizontal offset (px)\r\n\t */\r\n\tpublic set dx(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"dx\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Horizontal offset (px)\r\n\t */\r\n\tpublic get dx(): number {\r\n\t\treturn this.getPropertyValue(\"dx\");\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical offset for the element in pixels.\r\n\t *\r\n\t * Can be negative value for offset upwards.\r\n\t *\r\n\t * @param {number}  value  Vertical offset (px)\r\n\t */\r\n\tpublic set dy(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"dy\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Vertical offset (px)\r\n\t */\r\n\tpublic get dy(): number {\r\n\t\treturn this.getPropertyValue(\"dy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the element in degrees. (0-360)\r\n\t *\r\n\t * @param {number}  value  Rotation (0-360)\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"rotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Rotation (0-360)\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this.getPropertyValue(\"rotation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls horizontal alignment of the element.\r\n\t *\r\n\t * This is used by parent [[Container]] when layouting its children.\r\n\t *\r\n\t * @param {Align}  value  Horizontal align\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tvalue = <Align>$type.toText(value);\r\n\t\tthis.setPropertyValue(\"align\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Align} Horizontal align\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.getPropertyValue(\"align\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls vertical alignment of the element.\r\n\t *\r\n\t * This is used by parent [[Container]] when layouting its children.\r\n\t *\r\n\t * @param {VerticalAlign}  value  Vertical align\r\n\t */\r\n\tpublic set valign(value: VerticalAlign) {\r\n\t\tvalue = <VerticalAlign>$type.toText(value);\r\n\t\tthis.setPropertyValue(\"valign\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {VerticalAlign} Vertical align\r\n\t */\r\n\tpublic get valign(): VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"valign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls which part of the element to treat as a horizontal center.\r\n\t *\r\n\t * The setting will be used when positioning, resizing and rotating the\r\n\t * element.\r\n\t *\r\n\t * @param {HorizontalCenter}  value  Horizontal center\r\n\t */\r\n\tpublic set horizontalCenter(value: HorizontalCenter) {\r\n\t\tvalue = <HorizontalCenter>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"horizontalCenter\", value)) {\r\n\t\t\tthis.updateCenter();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HorizontalCenter} Horizontal center\r\n\t */\r\n\tpublic get horizontalCenter(): HorizontalCenter {\r\n\t\treturn this.getPropertyValue(\"horizontalCenter\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls which part of the element to treat as a vertical center.\r\n\t *\r\n\t * The setting will be used when positioning, resizing and rotating the\r\n\t * element.\r\n\t *\r\n\t * @param {VerticalCenter}  value  Vertical center\r\n\t */\r\n\tpublic set verticalCenter(value: VerticalCenter) {\r\n\t\tvalue = <VerticalCenter>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"verticalCenter\", value)) {\r\n\t\t\tthis.updateCenter();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {VerticalCenter} Vertical center\r\n\t */\r\n\tpublic get verticalCenter(): VerticalCenter {\r\n\t\treturn this.getPropertyValue(\"verticalCenter\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DIMENSIONAL PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Maximum allowed width for the element in pixels.\r\n\t *\r\n\t * @param {number}  value  Maximum width (px)\r\n\t */\r\n\tpublic set maxWidth(value: number) {\r\n\t\tthis.setMaxWidth(value);\r\n\t}\r\n\r\n\tprotected setMaxWidth(value: number) {\r\n\t\tlet prevWidth = this.maxWidth;\r\n\t\tlet prevHeight = this.maxHeight;\r\n\t\tif (this.setPropertyValue(\"maxWidth\", value)) {\r\n\t\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"maxsizechanged\"] = {\r\n\t\t\t\ttype: \"maxsizechanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tpreviousWidth: prevWidth,\r\n\t\t\t\tpreviousHeight: prevWidth\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Maximum width (px)\r\n\t */\r\n\tpublic get maxWidth(): number {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.maxWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum allowed height for the element in pixels.\r\n\t *\r\n\t * @param {number}  value  Maximum height (px)\r\n\t */\r\n\tpublic set maxHeight(value: number) {\r\n\t\tthis.setMaxHeight(value);\r\n\t}\r\n\r\n\tprotected setMaxHeight(value: number) {\r\n\r\n\t\tlet prevWidth = this.maxWidth;\r\n\t\tlet prevHeight = this.maxHeight;\r\n\r\n\t\tif (this.setPropertyValue(\"maxHeight\", value)) {\r\n\t\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"maxsizechanged\"] = {\r\n\t\t\t\ttype: \"maxsizechanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tpreviousWidth: prevWidth,\r\n\t\t\t\tpreviousHeight: prevWidth\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Maximum height (px)\r\n\t */\r\n\tpublic get maxHeight(): number {\r\n\t\tlet maxHeight = this.getPropertyValue(\"maxHeight\");\r\n\t\tif (!$type.isNumber(maxHeight)) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.maxHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum width of the element in pixels.\r\n\t *\r\n\t * Set to `undefined` to remove the limit.\r\n\t *\r\n\t * @param {Optional<number>}  value  Minimum width (px)\r\n\t */\r\n\tpublic set minWidth(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"minWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<number>} Minimum width (px)\r\n\t */\r\n\tpublic get minWidth(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum height for the element in pixels.\r\n\t *\r\n\t * Set to `undefined` to remove the limit.\r\n\t *\r\n\t * @param {Optional<number>}  value  Minimum height (px)\r\n\t */\r\n\tpublic set minHeight(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"minHeight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<number>} Minimum height (px)\r\n\t */\r\n\tpublic get minHeight(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative width.\r\n\t *\r\n\t * The width can either be absolute, set in numer pixels, or relative, set\r\n\t * in [[Percent]].\r\n\t *\r\n\t * Relative width will be calculated using closest measured ancestor\r\n\t * [[Container]].\r\n\t *\r\n\t * @param {number | Percent}  value  Width (numeric in pixels or relative)\r\n\t */\r\n\tpublic set width(value: number | Percent) {\r\n\r\n\t\tlet changed: boolean = this.setPercentProperty(\"width\", value, true, false, this._positionPrecision, true);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.percentWidth = undefined;\r\n\t\t\tthis.relativeWidth = undefined;\r\n\r\n\t\t\tif (value instanceof Percent) {\r\n\t\t\t\tthis.percentWidth = value.percent;\r\n\t\t\t\tif ($type.isNumber(this._pixelWidth)) {\r\n\t\t\t\t\tthis.maxWidth = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pixelWidth = undefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._pixelWidth = Number(value);\r\n\t\t\t\tthis.maxWidth = this._pixelWidth;\r\n\t\t\t}\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Width (absolute or relative)\r\n\t */\r\n\tpublic get width(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"width\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative height.\r\n\t *\r\n\t * The height can either be absolute, set in numer pixels, or relative, set\r\n\t * in [[Percent]].\r\n\t *\r\n\t * Relative height will be calculated using closest measured ancestor\r\n\t * [[Container]].\r\n\t *\r\n\t * @param {number | Percent}  value  Height (numeric in pixels or relative)\r\n\t */\r\n\tpublic set height(value: number | Percent) {\r\n\r\n\t\tlet changed: boolean = this.setPercentProperty(\"height\", value, true, false, this._positionPrecision, true);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.percentHeight = undefined;\r\n\t\t\tthis._relativeHeight = undefined;\r\n\r\n\t\t\tif (value instanceof Percent) {\r\n\t\t\t\tthis.percentHeight = value.percent;\r\n\t\t\t\tif ($type.isNumber(this._pixelHeight)) {\r\n\t\t\t\t\tthis.maxHeight = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pixelHeight = undefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._pixelHeight = Number(value);\r\n\t\t\t\tthis.maxHeight = this._pixelHeight; // yes, we reset maxWidth\r\n\t\t\t}\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} height (absolute or relative)\r\n\t */\r\n\tpublic get height(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"height\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's width in pixels, if width was set. For actual width use measuredWidth property.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\tlet width: number;\r\n\t\tif ($type.isNumber(this.percentWidth)) {\r\n\t\t\twidth = this.maxWidth;\r\n\t\t}\r\n\t\telse if ($type.isNumber(this._pixelWidth)) {\r\n\t\t\twidth = this._pixelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t}\r\n\r\n\t\tconst minWidth = this.minWidth;\r\n\r\n\t\tif (minWidth != null && width < minWidth) {\r\n\t\t\twidth = minWidth;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"pixelWidth\",\r\n\t\t\t$math.round(width, this._positionPrecision, true)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's height in pixels. For actual height use measuredHeight property.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Height (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\tlet height: number;\r\n\t\tif ($type.isNumber(this.percentHeight)) {\r\n\t\t\theight = this.maxHeight;\r\n\t\t}\r\n\t\telse if ($type.isNumber(this._pixelHeight)) {\r\n\t\t\theight = this._pixelHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\theight = 0//this._measuredHeightSelf;\r\n\t\t}\r\n\r\n\t\tconst minHeight = this.minHeight;\r\n\r\n\t\tif (minHeight != null && height < minHeight) {\r\n\t\t\theight = minHeight;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"pixelHeight\",\r\n\t\t\t$math.round(height, this._positionPrecision, true)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Element's relative width in [[Percent]].\r\n\t * @ignore\r\n\t *\r\n\t * @param {$type.Optional<number>}  value  Relative width\r\n\t */\r\n\tpublic set relativeWidth(value: $type.Optional<number>) {\r\n\t\tif (this._relativeWidth != value) {\r\n\t\t\tthis._relativeWidth = value;\r\n\t\t\t//\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {$type.Optional<number>} Relative width\r\n\t * @ignore\r\n\t */\r\n\tpublic get relativeWidth(): $type.Optional<number> {\r\n\t\tconst relativeWidth = this._relativeWidth;\r\n\r\n\t\tif ($type.isNumber(relativeWidth)) {\r\n\t\t\treturn this.adapter.apply(\"relativeWidth\", relativeWidth);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Element's relative height in [[Percent]].\r\n\t *\r\n\t * @param {$type.Optional<number>}  value  Relative height\r\n\t * @ignore\r\n\t */\r\n\tpublic set relativeHeight(value: $type.Optional<number>) {\r\n\t\tif (this._relativeHeight != value) {\r\n\t\t\tthis._relativeHeight = value;\r\n\t\t\t//\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {$type.Optional<number>} Relative height\r\n\t * @ignore\r\n\t */\r\n\tpublic get relativeHeight(): $type.Optional<number> {\r\n\t\tconst relativeHeight = this._relativeHeight;\r\n\r\n\t\tif ($type.isNumber(relativeHeight)) {\r\n\t\t\treturn this.adapter.apply(\"relativeHeight\", relativeHeight);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured width in pixels.\r\n\t *\r\n\t * A measured width is actual width of contents plus `paddingRight` and* `paddingLeft`, relative to sprite parent, meaning that\r\n\t * rotation and scale is taken into account.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get measuredWidth(): number {\r\n\r\n\t\tif (this.disabled || this.__disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"measuredWidth\", this._measuredWidth);\r\n\t\t// it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n\t\t//return this.adapter.apply(\"measuredWidth\", $math.fitToRange(this._measuredWidth, this.minWidth, this.maxWidth));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns elements's measured height in pixels.\r\n\t *\r\n\t * A measured height is actual height of contents plus `paddingTop` and `paddingBottom`, relative to sprite parent, meaning that\r\n\t * rotation and scale taken into account.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Height (px)\r\n\t */\r\n\tpublic get measuredHeight(): number {\r\n\r\n\t\tif (this.disabled || this.__disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n\t\t//return this.adapter.apply(\"measuredHeight\", $math.fitToRange(this._measuredHeight, this.minHeight, this.maxHeight));\r\n\t\treturn this.adapter.apply(\"measuredHeight\", this._measuredHeight);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured width plus its left and right margins in\r\n\t * pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Outer width (px)\r\n\t */\r\n\tpublic get outerWidth(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"outerWidth\",\r\n\t\t\tthis.pixelWidth + this.pixelMarginRight + this.pixelMarginLeft\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured height plus its top and bottom margins in\r\n\t * pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Outer height (px)\r\n\t */\r\n\tpublic get outerHeight(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"outerHeight\",\r\n\t\t\tthis.pixelHeight + this.pixelMarginTop + this.pixelMarginBottom\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured inner width in pixels.\r\n\t *\r\n\t * Inner width is actual available space for content, e.g. element's width\r\n\t * minus horizontal padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Inner width (px)\r\n\t */\r\n\tpublic get innerWidth(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"innerWidth\",\r\n\t\t\tMath.max(0, this.pixelWidth - this.pixelPaddingRight - this.pixelPaddingLeft)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured inner height in pixels.\r\n\t *\r\n\t * Inner height is actual available space for content, e.g. element's height\r\n\t * minus vertical padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Inner height (px)\r\n\t */\r\n\tpublic get innerHeight(): number {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"innerHeight\",\r\n\t\t\tMath.max(0, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom)\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current \"global\" scale.\r\n\t *\r\n\t * Scale values accumulate over hierarchy of elements.\r\n\t *\r\n\t * E.g. if a [[Container]] has `scale = 2` and it's child has a `scale = 2`,\r\n\t * the child's `globalScale` will be 4. (a multitude of `2 x 2`)\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Global scale\r\n\t */\r\n\tpublic get globalScale(): number {\r\n\t\tlet scale: number = this.scale;\r\n\t\tif (this.parent) {\r\n\t\t\tscale = scale * this.parent.globalScale;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"globalScale\", scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Scale of the element.\r\n\t *\r\n\t * The scale is set from 0 (element reduced to nothing) to 1 (default size).\r\n\t * * 2 will mean element is increased twice.\r\n\t * * 0.5 - reduced by 50%.\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * @param {number}  value  Scale (0-1)\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (value < 0) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tif (value != this.getPropertyValue(\"scale\")) {\r\n\t\t\tthis.setPropertyValue(\"scale\", value, false, true);\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Scale (0-1)\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.getPropertyValue(\"scale\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all four margins for the element at once.\r\n\t *\r\n\t * Margins are set in pixels.\r\n\t *\r\n\t * @param  {number}  top     Top margin\r\n\t * @param  {number}  right   Right margin\r\n\t * @param  {number}  bottom  Bottom margin\r\n\t * @param  {number}  left    Left margin\r\n\t * @return {Sprite}          Current element\r\n\t */\r\n\tpublic margin(top: number, right: number, bottom: number, left: number): Sprite {\r\n\t\tthis.marginTop = top;\r\n\t\tthis.marginRight = right;\r\n\t\tthis.marginBottom = bottom;\r\n\t\tthis.marginLeft = left;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Left margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Margin value\r\n\t */\r\n\tpublic set marginLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginLeft\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Margin value\r\n\t */\r\n\tpublic get marginLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Right margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Margin value\r\n\t */\r\n\tpublic set marginRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginRight\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Margin value\r\n\t */\r\n\tpublic get marginRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Margin value\r\n\t */\r\n\tpublic set marginTop(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginTop\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Margin value\r\n\t */\r\n\tpublic get marginTop(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginTop\");\r\n\t}\r\n\r\n\t/**\r\n\t * Bottom margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Margin value\r\n\t */\r\n\tpublic set marginBottom(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginBottom\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Margin value\r\n\t */\r\n\tpublic get marginBottom(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginBottom\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current right margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Right margin (px)\r\n\t */\r\n\tpublic get pixelMarginRight(): number {\r\n\t\treturn this.adapter.apply(\"pixelMarginRight\", this.getPixelX(this.marginRight));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative right margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative right margin\r\n\t */\r\n\tpublic get relativeMarginRight(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.adapter.apply(\"relativeMarginRight\", this.getRelativeX(this.marginRight));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current left margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Left margin (px)\r\n\t */\r\n\tpublic get pixelMarginLeft(): number {\r\n\t\treturn this.adapter.apply(\"pixelMarginLeft\", this.getPixelX(this.marginLeft));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative left margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative left margin\r\n\t */\r\n\tpublic get relativeMarginLeft(): number {\r\n\t\t//@todo Maybe use [[Percent]]?\r\n\t\treturn this.adapter.apply(\"relativeMarginLeft\", this.getRelativeX(this.marginLeft));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current top margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Top margin (px)\r\n\t */\r\n\tpublic get pixelMarginTop(): number {\r\n\t\treturn this.adapter.apply(\"pixelMarginTop\", this.getPixelY(this.marginTop));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative top margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative top margin\r\n\t */\r\n\tpublic get relativeMarginTop(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.adapter.apply(\"relativeMarginTop\", this.getRelativeY(this.marginTop));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current bottom margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Bottom margin (px)\r\n\t */\r\n\tpublic get pixelMarginBottom(): number {\r\n\t\treturn this.adapter.apply(\"pixelMarginBottom\", this.getPixelY(this.marginBottom));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative bottom margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative bottom margin\r\n\t */\r\n\tpublic get relativeMarginBottom(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.adapter.apply(\"relativeMarginBottom\", this.getRelativeY(this.marginBottom));\r\n\t}\r\n\r\n\t/**\r\n\t * Sets padding for the element in pixels.\r\n\t *\r\n\t * @param  {number}  top     Top padding (px)\r\n\t * @param  {number}  right   Right padding (px)\r\n\t * @param  {number}  bottom  Bottom padding (px)\r\n\t * @param  {number}  left    Left padding (px)\r\n\t * @return {Sprite}          Element\r\n\t */\r\n\tpublic padding(top: number, right: number, bottom: number, left: number): Sprite {\r\n\t\tthis.paddingTop = top;\r\n\t\tthis.paddingRight = right;\r\n\t\tthis.paddingBottom = bottom;\r\n\t\tthis.paddingLeft = left;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Left padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Padding value\r\n\t */\r\n\tpublic set paddingLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingLeft\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Padding value\r\n\t */\r\n\tpublic get paddingLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Right padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Padding value\r\n\t */\r\n\tpublic set paddingRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingRight\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Padding value\r\n\t */\r\n\tpublic get paddingRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Padding value\r\n\t */\r\n\tpublic set paddingTop(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingTop\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Padding value\r\n\t */\r\n\tpublic get paddingTop(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingTop\");\r\n\t}\r\n\r\n\t/**\r\n\t * Bottom padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param {number | Percent}  value  Padding value\r\n\t */\r\n\tpublic set paddingBottom(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingBottom\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Padding value\r\n\t */\r\n\tpublic get paddingBottom(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingBottom\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current right padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Right padding (px)\r\n\t */\r\n\tpublic get pixelPaddingRight(): number {\r\n\t\treturn this.getPixelX(this.paddingRight);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative right padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative right padding\r\n\t */\r\n\tpublic get relativePaddingRight(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeX(this.paddingRight);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current left padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Left padding (px)\r\n\t */\r\n\tpublic get pixelPaddingLeft(): number {\r\n\t\treturn this.getPixelX(this.paddingLeft);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative left padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative left padding\r\n\t */\r\n\tpublic get relativePaddingLeft(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeX(this.paddingLeft);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current top padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Top padding (px)\r\n\t */\r\n\tpublic get pixelPaddingTop(): number {\r\n\t\treturn this.getPixelY(this.paddingTop);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative top padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative top padding\r\n\t */\r\n\tpublic get relativePaddingTop(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeY(this.paddingTop);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current bottom padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Bottom padding (px)\r\n\t */\r\n\tpublic get pixelPaddingBottom(): number {\r\n\t\treturn this.getPixelY(this.paddingBottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative bottom padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Relative bottom padding\r\n\t */\r\n\tpublic get relativePaddingBottom(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeY(this.paddingBottom);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * APPEARANCE-RELATED PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Path of a sprite element\r\n\t * @type {string}\r\n\t */\r\n\tpublic set path(value: string) {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\t\t\tif (!this.element) {\r\n\t\t\t\tthis.element = this.paper.add(\"path\");\r\n\t\t\t}\r\n\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\tthis.invalidatePosition();\r\n\t\t\t// otherwise is 0x0\r\n\t\t\tif (!this.inited) {\r\n\t\t\t\tthis.events.once(\"inited\", this.validatePosition, this, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Path of a tick element\r\n\t * @type {string}\r\n\t */\r\n\tpublic get path(): string {\r\n\t\treturn this.getPropertyValue(\"path\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[ColorModifier]] that can be used to modify color and pattern of the\r\n\t * element's fill, e.g. create gradients.\r\n\t *\r\n\t * @param {ColorModifier}  value  Fill color modifiier\r\n\t */\r\n\tpublic set fillModifier(value: ColorModifier) {\r\n\t\tif (this.setPropertyValue(\"fillModifier\", value)) {\r\n\t\t\tthis.setFill(this.fill);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ColorModifier} Fill color modifier\r\n\t */\r\n\tpublic get fillModifier(): ColorModifier {\r\n\t\treturn this.getPropertyValue(\"fillModifier\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[ColorModifier]] that can be used to modify color and pattern of the\r\n\t * element's stroke (outline), e.g. create gradients.\r\n\t *\r\n\t * @param {ColorModifier}  value  Stroke color modifier\r\n\t */\r\n\tpublic set strokeModifier(value: ColorModifier) {\r\n\t\tthis.setPropertyValue(\"strokeModifier\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ColorModifier} Stroke color modifier\r\n\t */\r\n\tpublic get strokeModifier(): ColorModifier {\r\n\t\treturn this.getPropertyValue(\"strokeModifier\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's fill opacity.\r\n\t *\r\n\t * Opacity ranges from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * @param {number}  value  Opacity (0-1)\r\n\t */\r\n\tpublic set fillOpacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"fillOpacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"fill-opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-9)\r\n\t */\r\n\tpublic get fillOpacity(): number {\r\n\t\treturn this.getPropertyValue(\"fillOpacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's fill color or pattern.\r\n\t *\r\n\t * @param {Optional<Color | Pattern | LinearGradient | RadialGradient>}  value  Fill\r\n\t */\r\n\tpublic set fill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setFill(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Optional<Color | Pattern | LinearGradient | RadialGradient>}  value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tif (!$type.isObject(value)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tif (this.setColorProperty(\"fill\", value) || this.fillModifier) {\r\n\t\t\t// this can not go into next if, as value is turned to Gradient\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (this.fillModifier) {\r\n\t\t\t\t\tvalue = this.fillModifier.modify(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.realFill = value;\r\n\r\n\t\t\t// todo: review this place when some Color type will be added\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tthis.setSVGAttribute({ \"fill\": value.toString() });\r\n\t\t\t}\r\n\t\t\telse if (!$type.hasValue(value)) {\r\n\t\t\t\tthis.removeSVGAttribute(\"fill\");\r\n\t\t\t}\r\n\t\t\telse if (<any>value instanceof Pattern || <any>value instanceof LinearGradient || <any>value instanceof RadialGradient) {\r\n\t\t\t\tlet fill = value;\r\n\t\t\t\tfill.paper = this.paper;\r\n\t\t\t\tthis.setSVGAttribute({ \"fill\": \"url(#\" + fill.id + \")\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Fill\r\n\t */\r\n\tpublic get fill(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.getPropertyValue(\"fill\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's opacity.\r\n\t *\r\n\t * Opacity setting can range from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * ATTENTION: It is highly not recommended to use `opacity` directly on the\r\n\t * element. The charts use `opacity` to hide/show elements, so your setting\r\n\t * might be lost if element is hidden and then later shown.\r\n\t *\r\n\t * Instead use methods `hide()` and `show()` to completely toggle off and on\r\n\t * the element.\r\n\t *\r\n\t * Or, use properties `fillOpacity` and `strokeOpacity`, if you need to make\r\n\t * the element semi-transparent.\r\n\t *\r\n\t * @param {number} value Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"opacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): number {\r\n\t\treturn this.getPropertyValue(\"opacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's stroke (outline) color or pattern.\r\n\t *\r\n\t * @param {Color | Pattern | LinearGradient | RadialGradient}  value  Stroke setting\r\n\t */\r\n\tpublic set stroke(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tthis.setStroke(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `stroke` property on the SVG element, including applicable\r\n\t * color modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Color | Pattern | LinearGradient | RadialGradient} value Stroke setting\r\n\t */\r\n\tprotected setStroke(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tif (!$type.isObject(value)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tif (this.setColorProperty(\"stroke\", value) || this.strokeModifier) {\r\n\r\n\t\t\t// this can not go into next if, as value is turned to Gradient\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (this.strokeModifier) {\r\n\t\t\t\t\tvalue = this.strokeModifier.modify(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.realStroke = value;\r\n\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (value.hex == \"none\") {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"stroke\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setSVGAttribute({ \"stroke\": value.toString() });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!$type.hasValue(value)) {\r\n\t\t\t\tthis.removeSVGAttribute(\"stroke\");\r\n\t\t\t}\r\n\t\t\telse if (<any>value instanceof Pattern || <any>value instanceof LinearGradient || <any>value instanceof RadialGradient) {\r\n\t\t\t\tlet stroke = value;\r\n\t\t\t\tstroke.paper = this.paper;\r\n\t\t\t\tthis.setSVGAttribute({ \"stroke\": \"url(#\" + stroke.id + \")\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Stroke setting\r\n\t */\r\n\tpublic get stroke(): Color | Pattern | LinearGradient | RadialGradient {\r\n\t\treturn this.getPropertyValue(\"stroke\");\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity.\r\n\t *\r\n\t * The values may range from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * @param {number}  value  Opacity (0-1)\r\n\t */\r\n\tpublic set strokeOpacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"strokeOpacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-1)\r\n\t */\r\n\tpublic get strokeOpacity(): number {\r\n\t\treturn this.getPropertyValue(\"strokeOpacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element's stroke (outline) should remain keep constant\r\n\t * thicnkess and do not scale when the whole element is resized.\r\n\t *\r\n\t * @param {boolean}  value  Do not scale stroke (outline)\r\n\t */\r\n\tpublic set nonScalingStroke(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"nonScalingStroke\", value)) {\r\n\t\t\tthis.strokeWidth = this.strokeWidth;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Do not scale stroke (outline)\r\n\t */\r\n\tpublic get nonScalingStroke(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonScalingStroke\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element should keep constant size and not scale even if there is\r\n\t * space available, or it does not fit.\r\n\t *\r\n\t * @param {boolean}  value  Is element scaleable?\r\n\t */\r\n\tpublic set nonScaling(value: boolean) {\r\n\t\t// @todo Description (review)\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setPropertyValue(\"nonScaling\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is element scaleable?\r\n\t */\r\n\tpublic get nonScaling(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonScaling\");\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param {number}  value  Thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tthis.setPropertyValue(\"strokeWidth\", value, true);\r\n\r\n\t\tif (this.nonScalingStroke) {\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tvalue = 1;\r\n\t\t\t}\r\n\t\t\tvalue = value / this.globalScale;\r\n\t\t}\r\n\t\tthis.setSVGAttribute({ \"stroke-width\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): number {\r\n\t\treturn this.getPropertyValue(\"strokeWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-dasharray` for the stroke (outline).\r\n\t *\r\n\t * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n\t * @param {string}  value  `stroke-dasharray`\r\n\t */\r\n\tpublic set strokeDasharray(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"strokeDasharray\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-dasharray\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} `stroke-dasharray`\r\n\t */\r\n\tpublic get strokeDasharray(): string {\r\n\t\treturn this.getPropertyValue(\"strokeDasharray\");\r\n\t}\r\n\r\n\t/**\r\n\t * An SVG-specific `shape-rendering` value.\r\n\t *\r\n\t * `shape-rendering` controls how vector graphics are drawn and rendered.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering} for more information about `shape-rendering`\r\n\t * @default \"auto\"\r\n\t * @param {ShapeRendering}  value  'shape-rendering' value\r\n\t */\r\n\tpublic set shapeRendering(value: ShapeRendering) {\r\n\t\tvalue = <ShapeRendering>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"shapeRendering\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"shape-rendering\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ShapeRendering} 'shape-rendering' value\r\n\t */\r\n\tpublic get shapeRendering(): ShapeRendering {\r\n\t\treturn this.getPropertyValue(\"shapeRendering\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if SVG vectors should be drawn with \"pixel\" precision, producing\r\n\t * perfectly crisp lines on retina displays.\r\n\t *\r\n\t * Setting this to `true` might improve visual quality, but may have a\r\n\t * negative effect on performance.\r\n\t *\r\n\t * Different elements use different default setting for `pixelPerfect`.\r\n\t *\r\n\t * We recommend leaving this at their default settings, unless there's a\r\n\t * specific need.\r\n\t *\r\n\t * @param {boolean}  value  Use pixel perfect?\r\n\t */\r\n\tpublic set pixelPerfect(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (value) {\r\n\t\t\tthis._positionPrecision = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._positionPrecision = 3;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use pixel perfect?\r\n\t */\r\n\tpublic get pixelPerfect(): boolean {\r\n\t\treturn this.getPropertyValue(\"pixelPerfect\");\r\n\t}\r\n\r\n\t/**\r\n\t * An RTL (righ-to-left) setting.\r\n\t *\r\n\t * RTL may affect alignment, text, and other visual properties.\r\n\t *\r\n\t * @param {DateFormatter}  value  `true` for to use RTL\r\n\t */\r\n\tpublic set rtl(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis._rtl = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} RTL?\r\n\t */\r\n\tpublic get rtl(): boolean {\r\n\t\tif ($type.hasValue(this._rtl)) {\r\n\t\t\treturn this._rtl;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.rtl;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.rtl;\r\n\t\t}\r\n\t\tthis.rtl = false;\r\n\t\treturn this.rtl;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * VISIBILITY AND ORDER PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n \t * Reveals hidden element.\r\n \t *\r\n \t * Has no effect if element is already visible.\r\n \t *\r\n \t * If `duration` is not specified, it will use default.\r\n \t *\r\n \t * @param  {number}  duration  Fade in duration (ms)\r\n \t * @return {Optional<Animation>} Animation object if such object was created\r\n \t */\r\n\tpublic show(duration?: number): $type.Optional<Animation> {\r\n\t\treturn this.showReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs actual operations to reveal this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number} duration Fade in duration (ms)\r\n\t * @return {number}          Fade in duration (ms)\r\n\t */\r\n\tprotected showReal(duration?: number): $type.Optional<Animation> {\r\n\t\tlet transition: $type.Optional<Animation>;\r\n\r\n\t\tconst properties = this.defaultState.properties;\r\n\r\n\t\tif (!this.disabled && (this.isHidden || !this.visible || this.isHiding || (properties.opacity != null && this.opacity < properties.opacity && !this.isShowing))) {\r\n\r\n\t\t\t// helps to avoid flicker, as show might change opacity or visibility but item might be at invalid state/position\r\n\t\t\tif (this.invalid) {\r\n\t\t\t\tthis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.positionInvalid) {\r\n\t\t\t\tthis.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.defaultState.transitionDuration;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hideAnimation) {\r\n\t\t\t\tthis._hideAnimation.kill();\r\n\t\t\t\tthis._hideAnimation = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel hide handler just in case it was there\r\n\t\t\tif (this._showHideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._showHideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\tthis._isHidden = false;\r\n\t\t\tthis.isHiding = false;\r\n\t\t\tthis.isShowing = true;\r\n\r\n\t\t\t// Apply current state\r\n\t\t\ttransition = this.applyCurrentState(duration);\r\n\r\n\t\t\tif (transition && !transition.isFinished()) {\r\n\r\n\t\t\t\tthis._showHideDisposer = transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.isShowing = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._disposers.push(this._showHideDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isShowing = false;\r\n\t\t\t}\r\n\t\t\t// Make it visible\r\n\t\t\tlet visible = this.defaultState.properties.visible;\r\n\t\t\tif (!$type.hasValue(visible)) {\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t\tthis.visible = visible;\r\n\r\n\t\t\t// Dispatch \"show\" event\r\n\t\t\tthis.dispatchImmediately(\"shown\");\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates hiding of Sprite.\r\n\t * When called it will fade out the the Sprite to transparency, then make it\r\n\t * invisible.\r\n\t * @param {number} duration Duration in millisecons\r\n\t */\r\n\r\n\t/**\r\n\t * Hides the element, by applying `hidden` state.\r\n\t *\r\n\t * Has no effect if element is already hidden.\r\n \t *\r\n \t * If `duration` is not specified, it will use default.\r\n \t *\r\n \t * While element is fading out, its `isHiding` property will resolve to\r\n \t * `true`.\r\n \t *\r\n \t * When element is hidden, its `visible` property will resolve to `false`.\r\n\t *\r\n\t * @param  {number}  duration  Fade out duration (ms)\r\n\t * @return {Optional<Animation>} hide Animation object if such object was created\r\n\t */\r\n\tpublic hide(duration?: number): $type.Optional<Animation> {\r\n\t\treturn this.hideReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides actual SVG elements and handles hiding animations.\r\n\t *\r\n\t * @param  {number}  duration  Fade out duration (ms)\r\n\t * @return {Animation}            Fade out duration (ms)\r\n\t * @ignore\r\n\t */\r\n\tprotected hideReal(duration?: number): $type.Optional<Animation> {\r\n\t\tlet transition: $type.Optional<Animation>;\r\n\r\n\t\tif (!this.isHiding && this.visible) {\r\n\t\t\tthis.hideTooltip(0);\r\n\r\n\t\t\tif (this._hideAnimation) {\r\n\t\t\t\tthis._hideAnimation.kill();\r\n\t\t\t\tthis._hideAnimation = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tthis.isShowing = false;\r\n\r\n\t\t\t// Cancel hide handler just in case it was there\r\n\t\t\tif (this._showHideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._showHideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\t// Get state\r\n\t\t\tlet hiddenState = this.hiddenState;\r\n\r\n\t\t\t// Transition to \"hidden\" state, provided Sprite has one set\r\n\t\t\tif (hiddenState) {\r\n\t\t\t\t// Yes, we have a \"hidden\" state\r\n\t\t\t\t// `setState` will return an `Animation` object which we can set\r\n\t\t\t\t// events on\r\n\t\t\t\ttransition = this.setState(hiddenState, duration, undefined);\r\n\r\n\t\t\t\tif (transition && !transition.isFinished()) {\r\n\t\t\t\t\tthis._hideAnimation = transition;\r\n\t\t\t\t\tthis._showHideDisposer = transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t\t\tthis._isHidden = true;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tthis._disposers.push(this._showHideDisposer);\r\n\r\n\t\t\t\t\t// Thrown everything into `_disposers` just in case Sprite gets\r\n\t\t\t\t\t// destroyed in the meantime\r\n\t\t\t\t\tthis._disposers.push(transition);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t\tthis._isHidden = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// No hidden state, let's just set `visible` and call it a day\r\n\t\t\t\tthis.visible = false;\r\n\t\t\t\tthis.isHiding = false;\r\n\t\t\t\tthis._isHidden = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dispach \"hidden\" event\r\n\t\t\tthis.dispatchImmediately(\"hidden\");\r\n\t\t\tthis.invalidate(); // hide it at once to avoid flickers // validate() causes SO\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(duration)) {\r\n\t\t\tduration = this.hiddenState.transitionDuration;\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the element.\r\n\t *\r\n\t * @param {boolean} value Visible?\r\n\t */\r\n\tpublic set visible(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setVisibility(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current visibility of the element.\r\n\t *\r\n\t * @return {boolean} Visible?\r\n\t */\r\n\tpublic get visible(): boolean {\r\n\t\treturn this.getVisibility();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\tprotected getVisibility(): boolean {\r\n\t\tlet value = this.getPropertyValue(\"visible\");\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tvalue = true;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param  {boolean}  value  true - visible, false - hidden\r\n\t * @return {string}          Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"visible\", value)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.group.removeAttr(\"visibility\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.group.attr({ \"visibility\": \"hidden\" });\r\n\t\t\t}\r\n\t\t\t//this.invalidatePosition();\r\n\r\n\t\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tvisible: value\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A \"zIndex\" of the element.\r\n\t *\r\n\t * \"zIndex\" determines the order of how elements are placed over each other.\r\n\t *\r\n\t * Higher \"zIndex\" will mean the element will be draw on top of elements\r\n\t * with lower \"zIndexes\".\r\n\t *\r\n\t * @param {number}  value  zIndex\r\n\t */\r\n\tpublic set zIndex(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"zIndex\", value)) {\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} zIndex\r\n\t */\r\n\tpublic get zIndex(): number {\r\n\t\treturn this.getPropertyValue(\"zIndex\");\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to the very top in element order, so that it appears\r\n\t * in front of other elements.\r\n\t */\r\n\tpublic toFront(): void {\r\n\t\tlet parent = this.parent;\r\n\t\tif (parent && parent.children.indexOf(this) != parent.children.length - 1) {\r\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to the very bottom in the element order, so that it\r\n\t * appears behind other elements.\r\n\t */\r\n\tpublic toBack(): void {\r\n\t\tlet parent = this.parent;\r\n\t\tif (parent && parent.children.indexOf(this) != 0) {\r\n\t\t\tparent.children.moveValue(this, 0);\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * TOOLTIP-RELATED PROPERTIES STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * A [[Tooltip]] object to be used when displayed rollover information for\r\n\t * the element.\r\n\t *\r\n\t * @param {Tooltip}  tooltip  Tooltip\r\n\t */\r\n\tpublic set tooltip(tooltip: $type.Optional<Tooltip>) {\r\n\t\tif (this._tooltip) {\r\n\t\t\t//this._tooltip.dispose();\r\n\t\t\tthis.removeDispose(this._tooltip);\r\n\t\t}\r\n\r\n\t\tthis._tooltip = tooltip;\r\n\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Tooltip>} Tooltip\r\n\t */\r\n\tpublic get tooltip(): $type.Optional<Tooltip> {\r\n\t\tif (this._tooltip) {\r\n\t\t\treturn this._tooltip;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.tooltip;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.tooltip;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DataItem]] to use when populating content for the element's\r\n\t * [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @see {@link DataItem}\r\n\t * @param {DataItem}  value  Tooltip data item\r\n\t */\r\n\tpublic set tooltipDataItem(value: DataItem) {\r\n\t\t// important: do not dispose tooltip dataItem, as it is some actual data item from data!\r\n\t\tthis._tooltipDataItem = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DataItem} Tooltip data item\r\n\t */\r\n\tpublic get tooltipDataItem(): DataItem {\r\n\t\tconst tooltipDataItem = this._tooltipDataItem;\r\n\r\n\t\tif (tooltipDataItem) {\r\n\t\t\treturn tooltipDataItem;\r\n\r\n\t\t} else {\r\n\t\t\treturn this.dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] or sprite template to use when getting colors for tooltip. If a template is set,\r\n\t * tooltip will look for a clone in tooltipDataItem.sprites. If no clone is found, then template colors will be used.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @see {@link Sprite}\r\n\t * @param {Optional<Sprite>}  sprite Sprite\r\n\t */\r\n\tpublic set tooltipColorSource(sprite: $type.Optional<Sprite>) {\r\n\t\tthis._tooltipColorSource = sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Sprite>} Tooltip color source\r\n\t */\r\n\tpublic get tooltipColorSource(): $type.Optional<Sprite> {\r\n\t\treturn this._tooltipColorSource;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param {point} optional point (sprite-related) to which tooltip must point.\r\n\t * @return {boolean} returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\t\t// do not show if hidden\r\n\t\tlet sprite: Sprite = this;\r\n\t\twhile (sprite != undefined) {\r\n\t\t\tif (!sprite.visible || sprite.disabled || sprite.__disabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsprite = sprite.parent;\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(this.tooltipText) || $type.hasValue(this.tooltipHTML)) {\r\n\t\t\tlet tooltip = this.tooltip;\r\n\t\t\tlet tooltipDataItem = this.tooltipDataItem;\r\n\r\n\t\t\tif (tooltip) {\r\n\t\t\t\tlet colorSource: Sprite = this;\r\n\t\t\t\tlet tooltipColorSource = this.tooltipColorSource;\r\n\t\t\t\tif ((tooltip.getStrokeFromObject || tooltip.getFillFromObject) && tooltipColorSource) {\r\n\t\t\t\t\tif (tooltipColorSource.isTemplate) {\r\n\t\t\t\t\t\tif (tooltipDataItem) {\r\n\t\t\t\t\t\t\t$array.eachContinue(tooltipDataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == tooltipColorSource) {\r\n\t\t\t\t\t\t\t\t\tcolorSource = sprite;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcolorSource = tooltipColorSource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (tooltip.getStrokeFromObject) {\r\n\t\t\t\t\tlet stroke = this.stroke;\r\n\t\t\t\t\tlet source: Sprite = colorSource;\r\n\r\n\t\t\t\t\twhile (source.parent != undefined) {\r\n\t\t\t\t\t\tstroke = source.stroke;\r\n\t\t\t\t\t\tif (stroke == undefined) {\r\n\t\t\t\t\t\t\tsource = source.parent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stroke != undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (stroke instanceof Color) {\r\n\t\t\t\t\t\ttooltip.background.animate({ property: \"stroke\", to: stroke }, tooltip.animationDuration);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttooltip.background.stroke = stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set data item\r\n\t\t\t\ttooltip.dataItem = tooltipDataItem;\r\n\t\t\t\ttooltip.label.populateStringFrom = this;\r\n\r\n\t\t\t\tif (tooltip.getFillFromObject) {\r\n\r\n\t\t\t\t\tlet fill = this.fill;\r\n\r\n\t\t\t\t\tlet source: Sprite = colorSource;\r\n\r\n\t\t\t\t\twhile (source.parent != undefined) {\r\n\t\t\t\t\t\tfill = source.fill;\r\n\t\t\t\t\t\tif (fill == undefined || (fill instanceof Color && fill.rgb == undefined)) {\r\n\t\t\t\t\t\t\tsource = source.parent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (fill != undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (fill == undefined) {\r\n\t\t\t\t\t\tfill = color(\"#000000\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (fill instanceof Color) {\r\n\t\t\t\t\t\tif (!tooltip.visible) {\r\n\t\t\t\t\t\t\ttooltip.background.fill = fill;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttooltip.background.animate({ property: \"fill\", to: fill }, tooltip.animationDuration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttooltip.background.fill = fill;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (tooltip.autoTextColor && fill instanceof Color) {\r\n\t\t\t\t\t\ttooltip.label.fill = fill.alternative;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply tooltip text\r\n\t\t\t\tlet text = \"\";\r\n\t\t\t\tif (this.tooltipHTML) {\r\n\t\t\t\t\ttooltip.html = this.tooltipHTML;\r\n\t\t\t\t\ttext = this.tooltipHTML;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.tooltipText) {\r\n\t\t\t\t\ttooltip.text = this.tooltipText;\r\n\t\t\t\t\ttext = this.tooltipText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateTooltipPosition(point);\r\n\r\n\t\t\t\t// Set accessibility option\r\n\t\t\t\ttooltip.readerDescribedBy = this.uidAttr();\r\n\r\n\t\t\t\t// make label to render to be able to check currentText\r\n\t\t\t\tif (tooltip.label.invalid) {\r\n\t\t\t\t\ttooltip.label.validate();\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (text != undefined && text != \"\" && tooltip.label.currentText != \"\") {\r\n\r\n\t\t\t\t\t//@todo: think of how to solve this better\r\n\t\t\t\t\tif (tooltip && !tooltip.parent) {\r\n\t\t\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reveal tooltip\r\n\t\t\t\t\t// showing it in 1 ms helps to avoid strange flickering in IE\r\n\t\t\t\t\tlet duration = tooltip.defaultState.transitionDuration;\r\n\t\t\t\t\tif (duration <= 0) {\r\n\t\t\t\t\t\tduration = 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttooltip.show(duration);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateTooltipPosition(point?: IPoint) {\r\n\t\tif (this.tooltipPosition == \"pointer\") {\r\n\t\t\tthis._interactionDisposer = getInteraction().body.events.on(\"track\", (ev) => {\r\n\t\t\t\tthis.pointTooltipTo($utils.documentPointToSvg(ev.point, this.svgContainer.SVGContainer), true);\r\n\t\t\t});\r\n\t\t\tif (point) {\r\n\t\t\t\tthis.pointTooltipTo(point, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Point to the X/Y of this Sprite\r\n\t\t\tlet globalPoint = $utils.spritePointToSvg({\r\n\t\t\t\t\"x\": this.tooltipX,\r\n\t\t\t\t\"y\": this.tooltipY\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.pointTooltipTo(globalPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the point the [[Tooltip]] should point to.\r\n\t *\r\n\t * @param {IPoint}   point      Coordinates to point to\r\n\t * @param {boolean}  instantly  Move instantly without animation\r\n\t */\r\n\tprotected pointTooltipTo(point: IPoint, instantly?: boolean): void {\r\n\t\tlet tooltip = this.tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.pointTo(point, instantly);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\t\tlet tooltip = this.tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.hide(duration);\r\n\t\t\tif (this._interactionDisposer) {\r\n\t\t\t\tthis._interactionDisposer.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An HTML template to be used to populate [[Tooltip]] contents.\r\n\t *\r\n\t * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n\t * for any data values to be replaced with the values from respective data\r\n\t * items.\r\n\t *\r\n\t * @param {string} value Tooltip HTML content template\r\n\t */\r\n\tpublic set tooltipHTML(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tthis.hoverable = true;\r\n\t\tif (this.setPropertyValue(\"tooltipHTML\", value)) {\r\n\t\t\tif (this.tooltip) {\r\n\t\t\t\tif (this.tooltip.visible) {\r\n\t\t\t\t\tthis.showTooltip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Tooltip HTML content template\r\n\t */\r\n\tpublic get tooltipHTML(): string {\r\n\t\treturn this.getPropertyValue(\"tooltipHTML\");\r\n\t}\r\n\r\n\t/**\r\n\t * A text template to be used to populate Tooltip's contents.\r\n\t *\r\n\t * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n\t * for any data values to be replaced with the values from respective data\r\n\t * items.\r\n\t *\r\n\t * This template will also be parsed for any special formatting tags.\r\n\t *\r\n\t * @param {string} value Tooltip content template\r\n\t * @see {@link TextFormatter}\r\n\t */\r\n\tpublic set tooltipText(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (value) {\r\n\t\t\tthis.hoverable = true;\r\n\t\t}\r\n\t\tif (this.setPropertyValue(\"tooltipText\", value)) {\r\n\t\t\tif (this.tooltip) {\r\n\t\t\t\tif (this.tooltip.visible) {\r\n\t\t\t\t\tthis.showTooltip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Tooltip content template\r\n\t */\r\n\tpublic get tooltipText(): string {\r\n\t\treturn this.getPropertyValue(\"tooltipText\");\r\n\t}\r\n\r\n\t/**\r\n\t * A container reference that should be used to place element's\r\n\t * [[Tooltip]] in.\r\n\t *\r\n\t * Will use parent's container if does not have one set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container} value Container\r\n\t * @todo Dispose of the old _tooltipContainer ?\r\n\t */\r\n\tpublic set tooltipContainer(value: $type.Optional<Container>) {\r\n\t\tthis._tooltipContainer = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<Container>} Container\r\n\t */\r\n\tpublic get tooltipContainer(): $type.Optional<Container> {\r\n\t\tif (this._tooltipContainer) {\r\n\t\t\treturn this._tooltipContainer;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.tooltipContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate the [[Tooltip]] should be shown at.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  value  Tooltip X (px)\r\n\t */\r\n\tpublic set tooltipX(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"tooltipX\", value) && this.tooltip) {\r\n\t\t\tthis.tooltip.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Tooltip X (px)\r\n\t */\r\n\tpublic get tooltipX(): number {\r\n\t\treturn this.getTooltipX();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if [[Tooltip]] should follow the mouse or touch pointer or stay\r\n\t * at the fixed position.\r\n\t *\r\n\t * @param { \"fixed\" | \"pointer\" }  value  Position\r\n\t */\r\n\tpublic set tooltipPosition(value: \"fixed\" | \"pointer\") {\r\n\t\tthis.setPropertyValue(\"tooltipPosition\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @type {\"fixed\" | \"pointer\"} Position\r\n\t */\r\n\tpublic get tooltipPosition(): \"fixed\" | \"pointer\" {\r\n\t\treturn this.getPropertyValue(\"tooltipPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate the [[Tooltip]] should be shown at.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  value  Tooltip Y (px)\r\n\t */\r\n\tpublic set tooltipY(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\r\n\t\tif (this.setPropertyValue(\"tooltipY\", value) && this.tooltip) {\r\n\t\t\tthis.tooltip.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Tooltip Y (px)\r\n\t */\r\n\tpublic get tooltipY(): number {\r\n\t\treturn this.getTooltipY();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip X coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} X (px)\r\n\t */\r\n\tprotected getTooltipX(): number {\r\n\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\r\n\t\tif (!$type.isNumber(x)) {\r\n\t\t\tx = this.maxLeft + this.measuredWidth / 2 - this.pixelPaddingLeft - this.ex; // overflow is know only for measured items, so this is not always good\r\n\t\t}\r\n\r\n\t\treturn x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip Y coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Y (px)\r\n\t */\r\n\tprotected getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!$type.isNumber(y)) {\r\n\t\t\ty = this.maxTop + this.measuredHeight / 2 - this.pixelPaddingTop - this.ey;  // overflow is know only for measured items, so this is not always good\r\n\t\t}\r\n\r\n\t\treturn y;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Error} e Error\r\n\t * @todo Implement from applying further actions to this item\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\r\n\t\tif (this.svgContainer) {\r\n\t\t\tthis.modal.content = e.message;\r\n\t\t\tthis.modal.closable = false;\r\n\t\t\tthis.modal.open();\r\n\t\t\tthis.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param {object}  config  Config\r\n */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\tif ($type.hasValue(config.tooltipColorSource) && $type.isString(config.tooltipColorSource) && this.map.hasKey(config.tooltipColorSource)) {\r\n\t\t\t\tconfig.tooltipColorSource = this.map.getKey(config.tooltipColorSource);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  a  Element 1\r\n\t * @param  {string}  b  Element 2\r\n\t * @return {Ordering}   Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"tooltipColorSource\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"tooltipColorSource\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n\t * This was added becaus hidden state might have visibility set to true and so\r\n\t * there would not be possible to find out if a sprite is technically hidden or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic get isHidden(): boolean {\r\n\t\tif (this._isHidden) {\r\n\t\t\treturn this._isHidden;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.isHidden;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * If this is set to `true`, Sprite, when inited will be instantly hidden\r\n\t * (\"hidden\" state applied) and then shown (\"default\" state applied).\r\n\t *\r\n\t * If your \"default\" state's `transitionDuration > 0` this will result in\r\n\t * initial animation from \"hidden\" state to \"default\" state.\r\n\t *\r\n\t * If you need a Sprite which has `showOnInit = true` not to be shown\r\n\t * initially, set `sprite.hidden = true`. Setting `sprite.visible = false`\r\n\t * will not prevent the animation and the sprite will be shown.\r\n\t *\r\n\t * @param {boolean}  value show on init?\r\n\t */\r\n\tpublic set showOnInit(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setShowOnInit(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setShowOnInit(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"showOnInit\", value) && value && !this.inited && !this.hidden) {\r\n\t\t\tregistry.events.once(\"enterframe\", this.hideInitially, this);\r\n\t\t\tthis.events.once(\"beforevalidated\", this.hideInitially, this, false);\r\n\t\t\tthis.events.on(\"inited\", this.appear, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected hideInitially() {\r\n\t\tthis.appeared = false;\r\n\t\t//if (!this.hidden && !this._isHidden) { // not good for series, as on enterframe it doesn't have data items yet.\r\n\t\tif (!this.inited) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tthis.appeared = false;\r\n\t\tif (!this.hidden && !this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\t\tif (!this.hidden) {\r\n\r\n\t\t\tlet animation = this.show();\r\n\r\n\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.appeared = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.appeared = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.appeared = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Show on init?\r\n\t */\r\n\tpublic get showOnInit(): boolean {\r\n\t\treturn this.getPropertyValue(\"showOnInit\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * If a sprite has `showOnInit = true`, it will animate from \"hidden\" to\r\n\t * \"default\" state when initialized. To prevent this but keep\r\n\t * `showOnInit = true`, you can set `sprite.hidden = true`.\r\n\t *\r\n\t * @param {boolean}  value initially hidden?\r\n\t */\r\n\tpublic set hidden(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setPropertyValue(\"hidden\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Is initially hidden?\r\n\t */\r\n\tpublic get hidden(): boolean {\r\n\t\treturn this.getPropertyValue(\"hidden\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IRectangle}\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\treturn this._bbox;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Sprite.ts","/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color, color } from \"./Color\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available color purposes and their relation with the color set color\r\n * index.\r\n */\r\nexport interface IColorPurpose {\r\n\tstroke: Color,\r\n\tfill: Color,\r\n\r\n\tprimaryButton: Color,\r\n\tprimaryButtonHover: Color,\r\n\tprimaryButtonDown: Color,\r\n\tprimaryButtonActive: Color,\r\n\tprimaryButtonText: Color,\r\n\tprimaryButtonStroke: Color,\r\n\r\n\tsecondaryButton: Color,\r\n\tsecondaryButtonHover: Color,\r\n\tsecondaryButtonDown: Color,\r\n\tsecondaryButtonActive: Color,\r\n\tsecondaryButtonText: Color,\r\n\tsecondaryButtonStroke: Color,\r\n\r\n\tgrid: Color,\r\n\tbackground: Color,\r\n\talternativeBackground: Color,\r\n\ttext: Color,\r\n\talternativeText: Color,\r\n\tdisabledBackground: Color,\r\n\r\n\tpositive: Color,\r\n\tnegative: Color\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n *\r\n * The main difference from the basic [[ColorSet]] is that instead of sequenced\r\n * colors, it uses a concept of named colors.\r\n *\r\n * This way, every element in the UI can extract an exact color theme author\r\n * meant for the specific purpose, like strokes, backgrounds, etc.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class InterfaceColorSet extends BaseObject {\r\n\r\n\t/**\r\n\t * Maps the list of purposes (like \"stroke\") to an index of color of the\r\n\t * color set.\r\n\t */\r\n\tprotected _purposes: IColorPurpose = {\r\n\t\tstroke: color(\"#e5e5e5\"),\r\n\t\tfill: color(\"#f3f3f3\"),\r\n\r\n\t\tprimaryButton: color(\"#6794dc\"),\r\n\t\tprimaryButtonHover: color(\"#6771dc\"),\r\n\t\tprimaryButtonDown: color(\"#68dc75\"),\r\n\t\tprimaryButtonActive: color(\"#68dc75\"),\r\n\t\tprimaryButtonText: color(\"#FFFFFF\"),\r\n\t\tprimaryButtonStroke: color(\"#FFFFFF\"),\r\n\r\n\t\tsecondaryButton: color(\"#d9d9d9\"),\r\n\t\tsecondaryButtonHover: color(\"#d9d9d9\").brighten(-0.25),\r\n\t\tsecondaryButtonDown: color(\"#d9d9d9\").brighten(-0.35),\r\n\t\tsecondaryButtonActive: color(\"#d9d9d9\").brighten(0.35),\r\n\t\tsecondaryButtonText: color(\"#000000\"),\r\n\r\n\t\tsecondaryButtonStroke: color(\"#FFFFFF\"),\r\n\r\n\t\tgrid: color(\"#000000\"),\r\n\t\tbackground: color(\"#ffffff\"),\r\n\t\talternativeBackground: color(\"#000000\"),\r\n\t\ttext: color(\"#000000\"),\r\n\t\talternativeText: color(\"#FFFFFF\"),\r\n\t\tdisabledBackground: color(\"#999999\"),\r\n\t\tpositive: color(\"#67dc75\"),\r\n\t\tnegative: color(\"#dc6788\")\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"InterfaceColorSet\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void {}\r\n\r\n\t/**\r\n\t * Returns a color to be used for the specific purpose.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let uicolors = new am4core.InterfaceColorSet();\r\n\t * console.log(uicolors.getFor(\"stroke\"));\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var uicolors = new am4core.InterfaceColorSet();\r\n\t * console.log(uicolors.getFor(\"stroke\"));\r\n\t * ```\r\n\t *\r\n\t * @param  {keyof IColorPurpose}  purpose  Color use purpuse\r\n\t * @return {Color}                        Color\r\n\t */\r\n\tpublic getFor(purpose: keyof IColorPurpose): Color {\r\n\t\treturn this._purposes[purpose];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets color to be used for the specific purpose.\r\n\t *\r\n\t * @param {keyof IColorPurpose}  purpose  Color use purpose\r\n\t * @param {Color}               color    Color\r\n\t */\r\n\tpublic setFor(purpose: keyof IColorPurpose, color: Color): void {\r\n\t\tthis._purposes[purpose] = color;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/InterfaceColorSet.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IClone } from \"./Clone\";\r\nimport { Disposer, MultiDisposer, IDisposer } from \"./Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Ordering } from \"./Order\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * @todo Description\r\n */\r\nexport class IndexedIterable<A> {\r\n\r\n\t/**\r\n\t * Item list\r\n\t *\r\n\t * @type {Array<A>}\r\n\t */\r\n\tprivate _array: Array<A>;\r\n\r\n\t/**\r\n\t * Start index.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _start: number;\r\n\r\n\t/**\r\n\t * End index.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _end: number;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {Array<A>}  array  List items\r\n\t * @param {number}    start  Start index\r\n\t * @param {number}    end    End index\r\n\t */\r\n\tconstructor(array: Array<A>, start: number, end: number) {\r\n\t\tthis._array = array;\r\n\t\tthis._start = start;\r\n\t\tthis._end = end;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list item iterator.\r\n\t *\r\n\t * @return {Iterator} Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<A> {\r\n\t\treturn (push) => {\r\n\t\t\tif (this._start !== this._end) {\r\n\t\t\t\tif (this._start < this._end) {\r\n\t\t\t\t\tfor (let i = this._start; i < this._end; ++i) {\r\n\t\t\t\t\t\tif (!push(this._array[i])) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = this._start - 1; i >= this._end; --i) {\r\n\t\t\t\t\t\tif (!push(this._array[i])) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an interable list sorted backwards than current list.\r\n\t *\r\n\t * @return {IndexedIterable<A>} List\r\n\t */\r\n\tpublic backwards(): IndexedIterable<A> {\r\n\t\treturn new IndexedIterable(this._array, this._end, this._start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new list consisting only of specific range of items between\r\n\t * `start` and `end` indexes.\r\n\t *\r\n\t * @param  {number}              start  Start index\r\n\t * @param  {number}              end    End index\r\n\t * @return {IndexedIterable<A>}         List\r\n\t */\r\n\tpublic range(start: number, end: number): IndexedIterable<A> {\r\n\t\tif (start <= end) {\r\n\t\t\tif (this._start === this._end) {\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if (this._start < this._end) {\r\n\t\t\t\tconst diff = end - start;\r\n\r\n\t\t\t\tstart = Math.max(this._start + start, this._start);\r\n\t\t\t\tend = Math.min(start + diff, this._end);\r\n\r\n\t\t\t\treturn new IndexedIterable(this._array, start, end);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconst diff = end - start;\r\n\r\n\t\t\t\tstart = Math.max(this._start - start, this._end);\r\n\t\t\t\tend = Math.max(start - diff, this._end);\r\n\r\n\t\t\t\treturn new IndexedIterable(this._array, start, end);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Start index must be lower than end index\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for the [[List]].\r\n */\r\nexport interface IListEvents<A> {\r\n\t/**\r\n\t * Invoked when item is added to the list.\r\n\t *\r\n\t * @todo remove this later?\r\n\t */\r\n\tinserted: {\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when item is removed from the list.\r\n\t *\r\n\t * @todo remove this later?\r\n\t */\r\n\tremoved: {\r\n\t\toldValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setAll` method is called.\r\n\t */\r\n\tsetAll: {\r\n\t\toldArray: Array<A>;\r\n\t\tnewArray: Array<A>;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `insertIndex` method is called.\r\n\t */\r\n\tinsertIndex: {\r\n\t\tindex: number;\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setIndex` method is called.\r\n\t */\r\n\tsetIndex: {\r\n\t\tindex: number;\r\n\t\toldValue: A;\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when item is removed.\r\n\t */\r\n\tremoveIndex: {\r\n\t\tindex: number;\r\n\t\toldValue: A;\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * ListGrouper organizes [[List]] items into groups.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ListGrouper<A> extends MultiDisposer {\r\n\r\n\t/**\r\n\t * Function that can be used to extract a \"value\" of the list element.\r\n\t *\r\n\t * Used for ordering.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tprivate _getKey: (value: A) => number;\r\n\r\n\t/**\r\n\t * A function that  is used to order list groups.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tprivate _sort: (left: number, right: number) => Ordering;\r\n\r\n\t/**\r\n\t * Grouping keys.\r\n\t *\r\n\t * @type {Array<number>}\r\n\t */\r\n\tprivate _keys: Array<number> = [];\r\n\r\n\t/**\r\n\t * List item groups.\r\n\t */\r\n\tprivate _groups: { [key: number]: Array<A> } = {};\r\n\r\n\t/**\r\n\t * Inserts an item (`x`) to a specific group (`key`) and specific `index`.\r\n\t *\r\n\t * @param {A}       x      Item\r\n\t * @param {number}  key    Group name\r\n\t * @param {number}  index  Index\r\n\t */\r\n\tprivate _insert(x: A, key: number, index?: number): void {\r\n\t\tif (this._groups[key] == null) {\r\n\t\t\tthis._groups[key] = [];\r\n\r\n\t\t\t// TODO code duplication with SortedList\r\n\t\t\tconst { found, index } = $array.getSortedIndex(this._keys, this._sort, key);\r\n\r\n\t\t\tif (found) {\r\n\t\t\t\tthrow new Error(\"Key already exists: \" + key);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$array.insertIndex(this._keys, index, key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (index == null) {\r\n\t\t\tthis._groups[key].push(x);\r\n\r\n\t\t} else {\r\n\t\t\t$array.insertIndex(this._groups[key], index, x);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an item from the list.\r\n\t *\r\n\t * @param {A} x Item to remove\r\n\t */\r\n\tprivate _remove(x: A): void {\r\n\t\tconst key = this._getKey(x);\r\n\r\n\t\tconst values = this._groups[key];\r\n\r\n\t\tif (values != null) {\r\n\t\t\t$array.remove(values, x);\r\n\r\n\t\t\tif (values.length === 0) {\r\n\t\t\t\tdelete this._groups[key];\r\n\r\n\t\t\t\tconst { found, index } = $array.getSortedIndex(this._keys, this._sort, key);\r\n\r\n\t\t\t\tif (found) {\r\n\t\t\t\t\t$array.removeIndex(this._keys, index);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Key doesn't exist: \" + key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor(\r\n\t\tlist: $iter.Iterable<A> & {\r\n\t\t\tevents: EventDispatcher<{\r\n\t\t\t\tinserted: { newValue: A },\r\n\t\t\t\tremoved: { oldValue: A }\r\n\t\t\t}>;\r\n\t\t},\r\n\t\tgetKey: (value: A) => number,\r\n\t\tsort: (left: number, right: number) => Ordering\r\n\t) {\r\n\t\tsuper([\r\n\t\t\tlist.events.on(\"inserted\", (x) => {\r\n\t\t\t\tconst value = x.newValue;\r\n\t\t\t\tconst key = this._getKey(value);\r\n\r\n\t\t\t\tlet index = 0;\r\n\r\n\t\t\t\t$iter.eachContinue(list.iterator(), (x) => {\r\n\t\t\t\t\tif (x === value) {\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t} else if (this._getKey(x) === key) {\r\n\t\t\t\t\t\t++index;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._insert(value, key, index);\r\n\t\t\t}, undefined, false),\r\n\r\n\t\t\tlist.events.on(\"removed\", (x) => {\r\n\t\t\t\tthis._remove(x.oldValue);\r\n\t\t\t}, undefined, false)\r\n\t\t]);\r\n\r\n\t\tthis._getKey = getKey;\r\n\t\tthis._sort = sort;\r\n\r\n\t\t$iter.each(list.iterator(), (x) => {\r\n\t\t\tthis._insert(x, getKey(x));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator for the list.\r\n\t *\r\n\t * The iterator will iterate through all items in all groups.\r\n\t *\r\n\t * @return {.Iterator<A>} Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<A> {\r\n\t\treturn $iter.flatten($iter.map($iter.fromArray(this._keys), (key) => {\r\n\t\t\treturn $iter.fromArray(this._groups[key]);\r\n\t\t}));\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n */\r\nexport type ListLike<A> = $iter.Iterable<A> & {\r\n\tevents: EventDispatcher<{ removed: { oldValue: A } }>;\r\n};\r\n\r\n/**\r\n * A disposable list, which when disposed itself will call `dispose()` method\r\n * on all its items.\r\n */\r\nexport class ListDisposer<A extends IDisposer> extends Disposer {\r\n\tconstructor(list: ListLike<A>) {\r\n\t\tconst disposer = list.events.on(\"removed\", (x) => {\r\n\t\t\tx.oldValue.dispose();\r\n\t\t}, undefined, false);\r\n\r\n\t\tsuper(() => {\r\n\t\t\tdisposer.dispose();\r\n\r\n\t\t\t// TODO clear the list ?\r\n\t\t\t$iter.each(list.iterator(), (x) => {\r\n\t\t\t\tx.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param {number}  index  Index\r\n * @param {number}  len    Length\r\n */\r\nfunction checkBounds(index: number, len: number): void {\r\n\tif (!(index >= 0 && index < len)) {\r\n\t\tthrow new Error(\"Index out of bounds: \" + index);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List<T> {\r\n\r\n\t/**\r\n\t * List values.\r\n\t *\r\n\t * @type {Array<T>}\r\n\t */\r\n\tprivate _values: Array<T>;\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t *\r\n\t * @type {EventDispatcher<AMEvent<this, IListEvents<T>>>}\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<this, IListEvents<T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {Array<T>}  initial  Inital list of values to add to list\r\n\t */\r\n\tconstructor(initial: Array<T> = []) {\r\n\t\tthis._values = initial;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of values in the list.\r\n\t *\r\n\t * Do not use this property to add values. Rather use dedicated methods, like\r\n\t * `push()`, `removeIndex()`, etc.\r\n\t *\r\n\t * @readonly\r\n\t * @return {Array<T>} List values\r\n\t */\r\n\tpublic get values(): Array<T> {\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if list contains specific item reference.\r\n\t *\r\n\t * @param  {T}        item  Item to search for\r\n\t * @return {boolean}        `true` if found, `false` if not found\r\n\t */\r\n\tpublic contains(value: T): boolean {\r\n\t\treturn this._values.indexOf(value) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specific item from the list.\r\n\t *\r\n\t * @param {T} item An item to remove\r\n\t */\r\n\tpublic removeValue(value: T): void {\r\n\t\tlet i = 0;\r\n\t\tlet length = this._values.length;\r\n\r\n\t\twhile (i < length) {\r\n\t\t\t// TODO handle NaN\r\n\t\t\tif (this._values[i] === value) {\r\n\t\t\t\tthis.removeIndex(i);\r\n\t\t\t\t--length;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Searches the list for specific item and returns its index.\r\n\t *\r\n\t * @param  {T}       item  An item to search for\r\n\t * @return {number}        Index or -1 if not found\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\treturn $array.indexOf(this._values, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Number of items in list.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Number of items\r\n\t */\r\n\tpublic get length(): number {\r\n\t\treturn this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's a value at specific index.\r\n\t *\r\n\t * @param  {number}   index  Index\r\n\t * @return {boolean}         Value exists?\r\n\t */\r\n\tpublic hasIndex(index: number): boolean {\r\n\t\treturn index >= 0 && index < this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an item at specified index.\r\n\t *\r\n\t * @param  {number}  index  Index\r\n\t * @return {T}              List item\r\n\t */\r\n\tpublic getIndex(index: number): T | undefined {\r\n\t\treturn this._values[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets value at specific index.\r\n\t *\r\n\t * If there's already a value at the index, it is overwritten.\r\n\t *\r\n\t * @param  {number}  index  Index\r\n\t * @param  {T}       value  New value\r\n\t * @return {T}              New value\r\n\t */\r\n\tpublic setIndex(index: number, value: T): T {\r\n\t\tcheckBounds(index, this._values.length);\r\n\r\n\t\tconst oldValue = this._values[index];\r\n\r\n\t\t// Do nothing if the old value and the new value are the same\r\n\t\tif (oldValue !== value) {\r\n\t\t\tthis._values[index] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn oldValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item to the list at a specific index, which pushes all the other\r\n\t * items further down the list.\r\n\t *\r\n\t * @param  {number} index Index\r\n\t * @param  {T}      item  An item to add\r\n\t */\r\n\tpublic insertIndex(index: number, value: T): void {\r\n\t\tcheckBounds(index, this._values.length + 1);\r\n\r\n\t\t$array.insertIndex(this._values, index, value);\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_sortQuicksort description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number}    low    [description]\r\n\t * @param {number}    high   [description]\r\n\t * @param {function}  order  [description]\r\n\t */\r\n\tprivate _sortQuicksort(low: number, high: number, order: (left: T, right: T) => Ordering): void {\r\n\t\tif (low < high) {\r\n\t\t\tconst p = this._sortPartition(low, high, order);\r\n\t\t\tthis._sortQuicksort(low, p, order);\r\n\t\t\tthis._sortQuicksort(p + 1, high, order);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_sortPartition description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param  {number}    low    [description]\r\n\t * @param  {number}    high   [description]\r\n\t * @param  {function}  order  [description]\r\n\t * @return {number}           [description]\r\n\t */\r\n\tprivate _sortPartition(low: number, high: number, order: (left: T, right: T) => Ordering): number {\r\n\t\tconst values = this._values;\r\n\t\tconst pivot = values[low];\r\n\r\n\t\tlet i = low - 1;\r\n\t\tlet j = high + 1;\r\n\r\n\t\tfor (; ;) {\r\n\t\t\tdo {\r\n\t\t\t\t++i;\r\n\t\t\t} while (order(values[i], pivot) < 0);\r\n\r\n\t\t\tdo {\r\n\t\t\t\t--j;\r\n\t\t\t} while (order(values[j], pivot) > 0);\r\n\r\n\t\t\tif (i >= j) {\r\n\t\t\t\treturn j;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.swap(i, j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reorders list items according to specific ordering function.\r\n\t *\r\n\t * @param {T) => Ordering}  order  Ordering function\r\n\t */\r\n\tpublic sort(order: (left: T, right: T) => Ordering): void {\r\n\t\t// https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\n\t\t// @todo faster implementation of this\r\n\t\t// @todo test this\r\n\t\tthis._sortQuicksort(0, this._values.length - 1, order);\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps indexes of two items in the list.\r\n\t *\r\n\t * @param {number}  a  Item 1\r\n\t * @param {number}  b  Item 2\r\n\t */\r\n\tpublic swap(a: number, b: number): void {\r\n\t\tconst len = this._values.length;\r\n\r\n\t\tcheckBounds(a, len);\r\n\t\tcheckBounds(b, len);\r\n\r\n\t\tif (a !== b) {\r\n\t\t\tconst value_a = this._values[a];\r\n\t\t\tconst value_b = this._values[b];\r\n\r\n\t\t\tthis._values[a] = value_b;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: a,\r\n\t\t\t\t\toldValue: value_a,\r\n\t\t\t\t\tnewValue: value_b\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._values[b] = value_a;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: b,\r\n\t\t\t\t\toldValue: value_b,\r\n\t\t\t\t\tnewValue: value_a\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value at specific index.\r\n\t *\r\n\t * @param  {number}  index  Index of value to remove\r\n\t * @return {T}              Removed value\r\n\t */\r\n\tpublic removeIndex(index: number): T {\r\n\t\tcheckBounds(index, this._values.length);\r\n\r\n\t\tconst oldValue = this._values[index];\r\n\r\n\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\tif (this.events.isEnabled(\"removeIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"removeIndex\", {\r\n\t\t\t\ttype: \"removeIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\toldValue: oldValue\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\ttype: \"removed\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\toldValue: oldValue\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn oldValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves an item to a specific index within the list.\r\n\t *\r\n\t * If the index is not specified it will move the item to the end of the\r\n\t * list.\r\n\t *\r\n\t * @param {T}       value  Item to move\r\n\t * @param {number}  index  Index to place item at\r\n\t */\r\n\tpublic moveValue(value: T, toIndex?: number): void {\r\n\t\t// TODO don't do anything if the desired index is the same as the current index\r\n\t\tlet index = this.indexOf(value);\r\n\r\n\t\t// TODO remove all old values rather than only the first ?\r\n\t\tif (index !== -1) {\r\n\t\t\tconst oldValue = this._values[index];\r\n\r\n\t\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\t\tif (this.events.isEnabled(\"removeIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removeIndex\", {\r\n\t\t\t\t\ttype: \"removeIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (toIndex == null) {\r\n\t\t\ttoIndex = this._values.length;\r\n\t\t\tthis._values.push(value);\r\n\r\n\t\t} else {\r\n\t\t\t$array.insertIndex(this._values, toIndex, value);\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: toIndex,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (index === -1) {\r\n\t\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item to the end of the list.\r\n\t *\r\n\t * @param  {T}  item  An item to add\r\n\t */\r\n\tpublic push<K extends T>(value: K): K {\r\n\t\tconst index = this._values.push(value) - 1;\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item as a first item in the list.\r\n\t *\r\n\t * @param  {T}  item  An item to add\r\n\t */\r\n\tpublic unshift(value: T): void {\r\n\t\treturn this.insertIndex(0, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds multiple items to the list.\r\n\t *\r\n\t * @param {Array<T>}  items  An Array of items to add\r\n\t */\r\n\tpublic pushAll(values: Array<T>): void {\r\n\t\t$array.each(values, (value) => {\r\n\t\t\tthis.push(value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies and adds items from abother list.\r\n\t *\r\n\t * @param {List<T>}  source  A list top copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tthis.pushAll(source._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last item from the list, and removes it.\r\n\t *\r\n\t * @return {T} Item\r\n\t */\r\n\tpublic pop(): $type.Optional<T> {\r\n\t\tlet index = this._values.length - 1;\r\n\t\treturn index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first item from the list, and removes it.\r\n\t *\r\n\t * @return {T} Item\r\n\t */\r\n\tpublic shift(): $type.Optional<T> {\r\n\t\treturn this._values.length ? this.removeIndex(0) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets multiple items to the list.\r\n\t *\r\n\t * All current items are removed.\r\n\t *\r\n\t * @param {Array<T>}  newArray  New items\r\n\t */\r\n\tpublic setAll(newArray: Array<T>): void {\r\n\t\t// @tod if a value exists in both the new and old arrays, don't send remove/insert events\r\n\t\tconst oldArray = $array.copy(this._values);\r\n\r\n\t\tthis._values.length = 0;\r\n\r\n\t\t$array.each(newArray, (value) => {\r\n\t\t\tthis._values.push(value);\r\n\t\t});\r\n\r\n\t\tif (this.events.isEnabled(\"setAll\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"setAll\", {\r\n\t\t\t\ttype: \"setAll\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\toldArray: oldArray,\r\n\t\t\t\tnewArray: this._values // TODO make a copy ?\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t$array.each(oldArray, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t$array.each(this._values, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the list.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis.setAll([]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list iterator.\r\n\t *\r\n\t * @return {Iterator} Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<T> {\r\n\t\treturn $iter.fromArray(this._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the list.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<T> {\r\n\t\tconst length = this._values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tyield this._values[i];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each element in the list.\r\n\t */\r\n\tpublic each(f: (value: T) => void): void {\r\n\t\t$array.each(this._values, f);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a specific range of list items, which can be iterated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Code duplication with IndexedIterable\r\n\t * @param  {number}              start  Start index\r\n\t * @param  {number}              end    End index\r\n\t * @return {IndexedIterable<T>}         Range\r\n\t */\r\n\tpublic range(start: number, end: number): IndexedIterable<T> {\r\n\t\tif (start <= end) {\r\n\t\t\tconst diff = end - start;\r\n\r\n\t\t\tstart = Math.max(start, 0);\r\n\t\t\tend = Math.min(start + diff, this._values.length);\r\n\r\n\t\t\treturn new IndexedIterable(this._values, start, end);\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Start index must be lower than end index\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that has list items sorted backwards.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {IndexedIterable<T>} List\r\n\t */\r\n\tpublic backwards(): IndexedIterable<T> {\r\n\t\treturn new IndexedIterable(this._values, this._values.length, 0);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of a [[List]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class ListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends List<T> implements IClone<ListTemplate<T>> {\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t * @type {T}\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {T} t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param {T}  v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {T} Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param {ListTemplate}  source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.push(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.push(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an exact clone of the list, including its items and template.\r\n\t *\r\n\t * @return {ListTemplate<T>} New list\r\n\t */\r\n\tpublic clone(): ListTemplate<T> {\r\n\t\tconst out = new ListTemplate(this.template);\r\n\r\n\t\tconst values = this.values;\r\n\r\n\t\tconst length = values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tout.push(values[i].clone());\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/List.ts","/**\r\n * A collection of functions that deals with path calculations.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * PATH FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns an SVG path from a number of points.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IPoint[]}  points  An array of line elbow points\r\n * @return {string}            SVG path\r\n */\r\nexport function polyline(points: IPoint[]): string {\r\n\tlet path = lineTo(points[0]);\r\n\tlet prevPoint = { x: 0, y: 0 };\r\n\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\tlet point = points[i];\r\n\t\tif ($math.getDistance(point, prevPoint) > 1) {\r\n\t\t\tpath += lineTo(point);\r\n\t\t\tprevPoint = point;\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n\r\n/**\r\n * Returns a starting point of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IPoint}  point  Starting point\r\n * @return {string}         SVG path\r\n */\r\nexport function moveTo(point: IPoint): string {\r\n\treturn \" M\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n\r\n/**\r\n * Returns a line part of SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IPoint}  point  SVG path\r\n * @return {string}         SVG path\r\n */\r\nexport function lineTo(point: IPoint): string {\r\n\treturn \" L\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n\r\n/**\r\n * Returns a quadratic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IPoint}  point         End point of the curve\r\n * @param  {IPoint}  controlPoint  Control point\r\n * @return {string}                SVG path\r\n */\r\nexport function quadraticCurveTo(point: IPoint, controlPoint: IPoint): string {\r\n\treturn \" Q\" + $math.round(controlPoint.x, 4)\r\n\t\t+ \",\" + $math.round(controlPoint.y, 4) + \" \" + $math.round(point.x, 4)\r\n\t\t+ \",\" + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Returns a cubic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IPoint}  point          End point of the curve\r\n * @param  {IPoint}  controlPointA  Control point A\r\n * @param  {IPoint}  controlPointB  Control point B\r\n * @return {string}                 SVG path\r\n */\r\nexport function cubicCurveTo(point: IPoint, controlPointA: IPoint, controlPointB: IPoint): string {\r\n\treturn \" C\" + $math.round(controlPointA.x, 4)\r\n\t\t+ \",\" + $math.round(controlPointA.y, 4) + \" \" + $math.round(controlPointB.x, 4)\r\n\t\t+ \",\" + $math.round(controlPointB.y, 4) + \" \" + $math.round(point.x, 4)\r\n\t\t+ \",\" + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Returns a terminator for an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @return {string} SVG path\r\n */\r\nexport function closePath(): string {\r\n\treturn \" Z\";\r\n}\r\n\r\n/**\r\n * Returns an arc part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better parameter descriptions\r\n * @param  {number}  startAngle  Starting angle\r\n * @param  {number}  arc         Arc\r\n * @param  {number}  radius      Radius\r\n * @param  {number}  radiusY     Vertical radius\r\n * @return {string}              SVG path\r\n */\r\nexport function arcTo(startAngle: number, arc: number, radius: number, radiusY?: number): string {\r\n\r\n\tif (arc == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tif (!$type.isNumber(radiusY)) {\r\n\t\tradiusY = radius;\r\n\t}\r\n\r\n\tlet path = \"\";\r\n\tlet c = \",\";\r\n\tlet segments = Math.ceil(Math.abs(arc) / 180);\r\n\tlet l = 1;\r\n\r\n\tif (arc < 0) {\r\n\t\tl = 0;\r\n\t}\r\n\r\n\t// center\r\n\tlet cx: number = -$math.cos(startAngle) * radius;\r\n\tlet cy: number = -$math.sin(startAngle) * radiusY;\r\n\r\n\t// previous, as we use a not A\r\n\tlet pax: number = 0;\r\n\tlet pay: number = 0;\r\n\r\n\tfor (let i = 0; i < segments; i++) {\r\n\t\tlet endAngle = startAngle + arc / segments * (i + 1);\r\n\r\n\t\tlet ax = $math.round($math.cos(endAngle) * radius + cx - pax, 4);\r\n\t\tlet ay = $math.round($math.sin(endAngle) * radiusY + cy - pay, 4);\r\n\r\n\t\tpath += \" a\" + radius + c + radiusY + c + 0 + c + 0 + c + l + c + ax + c + ay;\r\n\r\n\t\tpax = ax;\r\n\t\tpay = ay;\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Creates an arc path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number}  startAngle         [description]\r\n * @param  {number}  arc                [description]\r\n * @param  {number}  radius             [description]\r\n * @param  {number}  innerRadius        [description]\r\n * @param  {number}  radiusY            [description]\r\n * @param  {number}  cornerRadius       [description]\r\n * @param  {number}  innerCornerRadius  [description]\r\n * @return {string}                     SVG path\r\n */\r\nexport function arc(startAngle: number, arc: number, radius: number, innerRadius?: number, radiusY?: number, cornerRadius?: number, innerCornerRadius?: number): string {\r\n\tif (arc == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tif(!$type.isNumber(innerRadius)){\r\n\t\tinnerRadius = 0;\r\n\t}\r\n\r\n\tif (radius == 0 && innerRadius <= 0) {\r\n\t\treturn \"\";\r\n\t}\t\r\n\r\n\tif (radius < innerRadius) {\r\n\t\tlet temp = radius;\r\n\t\tradius = innerRadius;\r\n\t\tinnerRadius = temp;\r\n\r\n\t\tif ($type.isNumber(radiusY)) {\r\n\t\t\tradiusY = radiusY / innerRadius * radius;\r\n\t\t}\r\n\t}\r\n\r\n\tarc = $math.min(arc, 360);\r\n\r\n\tif (arc == 360) {\r\n\t\tcornerRadius = 0;\r\n\t\tinnerCornerRadius = 0;\r\n\t}\r\n\r\n\tlet endAngle = startAngle + arc;\r\n\tlet crSin = $math.sin($math.min(arc, 45) / 2);\r\n\r\n\tradiusY = $type.isNumber(radiusY) ? radiusY : radius;\r\n\tcornerRadius = cornerRadius || 0;\r\n\tinnerCornerRadius = $type.isNumber(innerCornerRadius) ? innerCornerRadius : cornerRadius;\r\n\r\n\tlet innerRadiusY = (radiusY / radius) * innerRadius;\r\n\r\n\tlet cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n\tlet innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n\r\n\tcornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n\tcornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\tinnerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n\tinnerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\tcornerRadius = $math.round($math.fitToRange(cornerRadius, 0, radius * crSin), 4);\r\n\tcornerRadiusY = $math.round($math.fitToRange(cornerRadiusY, 0, radiusY * crSin), 4);\r\n\r\n\tinnerCornerRadius = $math.round($math.fitToRange(innerCornerRadius, 0, innerRadius * crSin), 4);\r\n\tinnerCornerRadiusY = $math.round($math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin), 4);\r\n\r\n\tlet crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n\tlet crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n\r\n\tif (innerRadius < innerCornerRadius) {\r\n\t\tinnerRadius = innerCornerRadius;\r\n\t}\r\n\r\n\tif (innerRadiusY < innerCornerRadiusY) {\r\n\t\tinnerRadiusY = innerCornerRadiusY;\r\n\t}\r\n\r\n\tlet crInnerAngle: number = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n\tlet crInnerAngleY: number = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n\r\n\tif (!$type.isNumber(crInnerAngle)) {\r\n\t\tcrInnerAngle = 0;\r\n\t}\r\n\tif (!$type.isNumber(crInnerAngleY)) {\r\n\t\tcrInnerAngleY = 0;\r\n\t}\r\n\r\n\tlet middleAngle = startAngle + arc / 2;\r\n\tlet mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.sin(middleAngle) * innerRadiusY };\r\n\r\n\tlet a0 = { x: $math.cos(startAngle) * (innerRadius + innerCornerRadius), y: $math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\tlet b0 = { x: $math.cos(startAngle) * (radius - cornerRadius), y: $math.sin(startAngle) * (radiusY - cornerRadiusY) };\r\n\tlet c0 = { x: $math.cos(endAngle) * (radius - cornerRadius), y: $math.sin(endAngle) * (radiusY - cornerRadiusY) };\r\n\tlet d0 = { x: $math.cos(endAngle) * (innerRadius + innerCornerRadius), y: $math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\r\n\tlet b1 = { x: $math.cos(startAngle + crAngle) * radius, y: $math.sin(startAngle + crAngleY) * radiusY };\r\n\tlet d1 = { x: $math.cos(endAngle - crInnerAngle) * innerRadius, y: $math.sin(endAngle - crInnerAngleY) * innerRadiusY };\r\n\r\n\t// some magic math\r\n\tinnerCornerRadius += innerCornerRadius * $math.sin(crInnerAngle / 2);\r\n\tinnerCornerRadiusY += innerCornerRadiusY * $math.sin(crInnerAngleY / 2);\r\n\r\n\tif (crInnerAngle > (endAngle - startAngle) / 2) {\r\n\t\td1 = mPoint;\r\n\t}\r\n\r\n\tlet path: string = \"\";\r\n\t// start from b if this is full circle\r\n\tif (arc == 360) {\r\n\t\tpath = moveTo(b0);\r\n\t}\r\n\t// otherwise start from a\r\n\telse {\r\n\t\tpath = moveTo(a0);\r\n\t\tpath += lineTo(b0);\r\n\t\tpath += arcToPoint(b1, cornerRadius, cornerRadiusY, true);\r\n\t}\r\n\r\n\t// draw arc\r\n\tpath += arcTo(startAngle + crAngle, arc - 2 * crAngle, radius, radiusY);\r\n\r\n\t// draw inner arc\r\n\tif ($type.isNumber(innerRadius) && innerRadius != 0) {\r\n\r\n\t\t// move to B if this is full circle\r\n\t\tif (arc == 360 && cornerRadius == 0) {\r\n\t\t\tpath += moveTo(d0);\r\n\t\t}\r\n\t\t// draw line otherwise\r\n\t\telse {\r\n\t\t\tpath += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n\t\t\tpath += lineTo(d0);\r\n\t\t\tpath += arcToPoint(d1, innerCornerRadius, innerCornerRadiusY, true);\r\n\t\t}\r\n\r\n\t\tpath += arcTo(endAngle - crInnerAngle, -(arc - 2 * crInnerAngle), innerRadius, innerRadiusY);\r\n\t\tif (arc < 360 || cornerRadius > 0) {\r\n\t\t\tpath += arcToPoint(a0, innerCornerRadius, innerCornerRadiusY, true);\r\n\t\t}\r\n\t\tpath += lineTo(a0);\r\n\t}\r\n\telse {\r\n\t\tpath += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n\t\tif (arc < 360) {\r\n\t\t\tpath += lineTo(a0);\r\n\t\t}\r\n\t}\r\n\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Creates a path for an arc to specific coordinate.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {IPoint}  point         Reference point\r\n * @param  {number}  radius        Radius\r\n * @param  {number}  radiusY       Vertical radius (for skewed arcs)\r\n * @param  {boolean} sweepFlag     [description]\r\n * @param  {boolean} largeArcFlag  [description]\r\n * @param  {number}  xAxisRotation [description]\r\n * @return {string}                Arc path\r\n */\r\nexport function arcToPoint(point: IPoint, radius: number, radiusY?: number, sweepFlag?: boolean, largeArcFlag?: boolean, xAxisRotation?: number): string {\r\n\tif (radius == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\txAxisRotation = xAxisRotation || 0;\r\n\tlargeArcFlag = Boolean(largeArcFlag);\r\n\tsweepFlag = Boolean(sweepFlag);\r\n\r\n\tlet c = \",\";\r\n\tlet sweepFlagValue: number = +sweepFlag; // converts to 1 or 0\r\n\tlet largeArcFlagValue: number = +largeArcFlag;  // converts to 1 or 0\r\n\r\n\treturn \" A\" + radius + c + radiusY + c + xAxisRotation + c + largeArcFlagValue + c + sweepFlagValue + c + $math.round(point.x, 4) + c + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Creates a new rectangle.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {number}  width   Width (px)\r\n * @param  {number}  height  Height (px)\r\n * @param  {number}  x       X position\r\n * @param  {number}  y       Y position\r\n * @return {string}          Rectangle\r\n */\r\nexport function rectangle(width: number, height: number, x?: number, y?: number): string {\r\n\tif (!$type.isNumber(x)) {\r\n\t\tx = 0;\r\n\t}\r\n\tif (!$type.isNumber(y)) {\r\n\t\ty = 0;\r\n\t}\r\n\treturn moveTo({ x: x, y: y }) + lineTo({ x: x + width, y: y }) + lineTo({ x: x + width, y: y + height }) + lineTo({ x: x, y: y + height }) + closePath();\r\n}\r\n\r\n/**\r\n * Converts a rectangle to an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {IRectangle}  rect  Rectangle\r\n * @param  {boolean}     ccw   Counter-clockwise?\r\n * @return {string}            SVG path\r\n */\r\nexport function rectToPath(rect: IRectangle, ccw?: boolean): string {\r\n\tlet c = \",\";\r\n\tlet L = \" L\";\r\n\tif (ccw) {\r\n\t\treturn \"M\" + rect.x\r\n\t\t\t+ c + rect.y + L + rect.x\r\n\t\t\t+ c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n\t\t\t+ c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n\t\t\t+ c + rect.y + L + rect.x\r\n\t\t\t+ c + rect.y;\r\n\t}\r\n\telse {\r\n\t\treturn \"M\" + rect.x\r\n\t\t\t+ c + rect.y + L + (rect.x + rect.width)\r\n\t\t\t+ c + rect.y + L + (rect.x + rect.width)\r\n\t\t\t+ c + (rect.y + rect.height) + L + rect.x\r\n\t\t\t+ c + (rect.y + rect.height) + L + rect.x\r\n\t\t\t+ c + rect.y;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/Path.ts","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_an-object.js\n// module id = 14\n// module chunks = 302","/**\r\n * This module contains Color object definition\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { iRGB, iHSV, iHSL } from \"./Colors\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\n\r\n// Re-export\r\nexport { iRGB, iHSV, iHSL };\r\n\r\n/**\r\n * Represents a color.\r\n *\r\n * `Color` accepts value only in [[iRGB]] object format. To create `Color`\r\n * object by parsing it from any supported string-based formats, use helper\r\n * [[color]] function:\r\n *\r\n * ```TypeScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class Color {\r\n\r\n\t/**\r\n\t * Light color (used when light contrasting color is required).\r\n\t *\r\n\t * @param {Color}\r\n\t * @ignore\r\n\t */\r\n\tprotected _lightColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * Dark color (used when dark contrasting color is required).\r\n\t *\r\n\t * @param {Color}\r\n\t * @ignore\r\n\t */\r\n\tprotected _darkColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * Holds RGB value of the color.\r\n\t *\r\n\t * @type {iRGB}\r\n\t */\r\n\tprotected _value: $type.Optional<iRGB>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {iRGB} color Source color\r\n\t */\r\n\tconstructor(color: $type.Optional<iRGB>) {\r\n\t\tthis._value = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[iRGB]] representation of the color.\r\n\t *\r\n\t * @return {iRGB} RGB object\r\n\t */\r\n\tpublic get rgb(): $type.Optional<iRGB> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns color hex value string, e.g. \"#FF0000\".\r\n\t *\r\n\t * @return {string} Hex color code\r\n\t */\r\n\tpublic get hex(): string {\r\n\t\treturn this._value ? $colors.rgbToHex(this._value) : \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `rgba()` representation of the color, e.g.:\r\n\t * `rgba(255, 0, 0, 0.5)`.\r\n\t *\r\n\t * @return {string} rgba color string\r\n\t */\r\n\tpublic get rgba(): string {\r\n\t\treturn this._value ? $colors.rgbToRGBA(this._value) : \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Set alpha (transparency) of the color.\r\n\t *\r\n\t * @param {number} value Alpha (0-1)\r\n\t */\r\n\tpublic set alpha(value: number) {\r\n\t\tif (this._value) {\r\n\t\t\tthis._value.a = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current transparency.\r\n\t *\r\n\t * @return {number} Alpha (0-1)\r\n\t */\r\n\tpublic get alpha(): number {\r\n\t\tif (this._value != null && this._value.a != null) {\r\n\t\t\treturn this._value.a;\r\n\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets \"light\" color. Used when determining contrasting color.\r\n\t *\r\n\t * @param {Color} color Color\r\n\t */\r\n\tpublic set lightColor(color: Color) {\r\n\t\tthis._lightColor = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current light color setting.\r\n\t *\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get lightColor(): Color {\r\n\t\tif (!this._lightColor) {\r\n\t\t\tthis._lightColor = new Color({ r: 255, g: 255, b: 255 });\r\n\t\t}\r\n\t\treturn this._lightColor;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets \"dark\" color. Used when determining contrasting color.\r\n\t *\r\n\t * @param {Color} color Color\r\n\t */\r\n\tpublic set darkColor(color: Color) {\r\n\t\tthis._darkColor = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current dark color setting.\r\n\t *\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get darkColor(): Color {\r\n\t\tif (!this._darkColor) {\r\n\t\t\tthis._darkColor = new Color({ r: 0, g: 0, b: 0 });\r\n\t\t}\r\n\t\treturn this._darkColor;\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides `toString` method so that [[Color]] object can be used as\r\n\t * string.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} String represantion of color (usable in CSS)\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn this.alpha < 1 ? this.rgba : this.hex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] which is percent lighter (positive value),\r\n\t * or darker (negative value).\r\n\t *\r\n\t * Parameter is in the scale of -1 to 1.\r\n\t *\r\n\t * @param  {number}  percent  Increase/decrease lightness by X\r\n\t * @return {Color}            New Color\r\n\t */\r\n\tpublic lighten(percent: number): Color {\r\n\t\treturn new Color($colors.lighten(this.rgb, percent));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] which is percent brighter (positive value),\r\n\t * or darker (negative value).\r\n\t *\r\n\t * Parameter is in the scale of -1 to 1.\r\n\t *\r\n\t * @param  {number}  percent  Increase/decrease brightness by X\r\n\t * @return {Color}            New Color\r\n\t */\r\n\tpublic brighten(percent: number): Color {\r\n\t\treturn new Color($colors.brighten(this.rgb, percent));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] based on current color with specific saturation\r\n\t * applied.\r\n\t *\r\n\t * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n\t * saturated).\r\n\t *\r\n\t * @param  {number}  saturation  Saturation (0-1)\r\n\t * @return {Color}               New (saturated) color\r\n\t */\r\n\tpublic saturate(saturation: number): Color {\r\n\t\treturn new Color($colors.saturate(this.rgb, saturation));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a either light or dark color that contrasts specifically with\r\n\t * this color.\r\n\t *\r\n\t * Uses properties `darkColor` (default black) and `lightColor` (default\r\n\t * white).\r\n\t *\r\n\t * Useful when determining which color label should be on a colored\r\n\t * background, so that it stands out.\r\n\t *\r\n\t * @return {Color} Contrasting color\r\n\t */\r\n\tpublic get alternative(): Color {\r\n\t\tif (this.rgb != null) {\r\n\t\t\treturn $colors.isLight(this.rgb) ? this.darkColor : this.lightColor;\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Color does not exist\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Resolves an input variable to a normal [[iRGB]] color and creates [[Color]]\r\n * object for it.\r\n *\r\n * @param  {string | iRGB | Color}  value  Input value\r\n * @param  {number}                 alpha  Alpha (0-1)\r\n * @return {Color}                         Color object\r\n */\r\nexport function color(value?: string | iRGB | Color, alpha?: number): Color {\r\n\r\n\tif (!$type.hasValue(value)) {\r\n\t\treturn new Color(undefined);\r\n\t}\r\n\r\n\tif (typeof value == \"string\") {\r\n\t\tlet cacheId = \"_color_\" + value + \"_\" + (alpha || \"1\");\r\n\t\tlet cached = registry.getCache(cacheId);\r\n\t\tif (cached) {\r\n\t\t\treturn new Color({\r\n\t\t\t\tr: cached.r,\r\n\t\t\t\tg: cached.g,\r\n\t\t\t\tb: cached.b,\r\n\t\t\t\ta: cached.a\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet rgb = $colors.rgb(value, alpha);\r\n\t\tregistry.setCache(cacheId, rgb);\r\n\t\treturn new Color(rgb);\r\n\t}\r\n\r\n\t// Check if it's already a Color object\r\n\tif (value instanceof Color) {\r\n\t\tif ($type.hasValue(alpha)) {\r\n\t\t\tvalue.alpha = alpha;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Not a string or Color instance, it's the iRGB object then\r\n\treturn new Color(value);\r\n}\r\n\r\n/**\r\n * Checks if supplied argument is instance of [[Color]].\r\n *\r\n * @param  {any}      value  Input value\r\n * @return {boolean}         Is Color?\r\n */\r\nexport function isColor(value: any): boolean {\r\n\treturn value instanceof Color;\r\n}\r\n\r\n/**\r\n * Converts any value to [[Color]].\r\n *\r\n * @param  {any}    value  Input value\r\n * @return {Color}         Color\r\n */\r\nexport function castColor(value: any): Color {\r\n\treturn color(value);\r\n}\r\n\r\n/**\r\n * Converts any value into a [[Color]].\r\n *\r\n * @param  {any}    value  Source value\r\n * @return {Color}         Color object\r\n */\r\nexport function toColor(value: any): Color {\r\n\tif ($type.hasValue(value) && !isColor(value)) {\r\n\t\treturn castColor(value);\r\n\t}\r\n\treturn value;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Color.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Ordering } from \"./Order\";\r\nimport { Optional } from \"./Type\";\r\nimport * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {A}             value  Value to search\r\n * @returns {number}               Index\r\n */\r\nexport function indexOf<A>(array: ArrayLike<A>, value: A): number {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t// TODO handle NaN\r\n\t\tif (array[i] === value) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param   {ArrayLike<A>}           array  Source array\r\n * @param   {(value: A) => boolean}  test   Function which is called on each element\r\n * @returns {boolean}                Whether `test` returned true or not\r\n */\r\nexport function any<A>(array: ArrayLike<A>, test: (value: A) => boolean): boolean {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (test(array[i])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {function}      fn     Callback function\r\n * @returns {number}               New array\r\n */\r\nexport function map<A, B>(array: ArrayLike<A>, fn: (value: A, index: number) => B): Array<B> {\r\n\tconst length = array.length;\r\n\tconst output = new Array(length);\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\toutput[i] = fn(array[i], i);\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {function}      fn     Callback function\r\n */\r\nexport function each<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tfn(array[i], i);\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {function}      fn     Callback function\r\n */\r\nexport function eachReverse<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\r\n\tlet i = array.length;\r\n\r\n\twhile (i--) {\r\n\t\tfn(array[i], i);\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {function}      fn     Callback function\r\n */\r\nexport function eachContinue<A>(array: ArrayLike<A>, fn: (value: A, index: number) => boolean): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (!fn(array[i], i)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param {ArrayLike<A>}  array  Source array\r\n * @param {number}        index  Target element index\r\n */\r\nexport function shiftLeft<A>(array: Array<A>, index: number): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = index; i < length; ++i) {\r\n\t\tarray[i - index] = array[i];\r\n\t}\r\n\r\n\tarray.length = length - index;\r\n}\r\n\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @returns {A}                    Last item\r\n */\r\nexport function last<A>(array: Array<A>): Optional<A> {\r\n\tconst length = array.length;\r\n\treturn length ? array[length - 1] : undefined;\r\n}\r\n\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @returns {A}                    Last item\r\n */\r\nexport function first<A>(array: Array<A>): Optional<A> {\r\n\treturn array[0];\r\n}\r\n\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item to insert\r\n * @param {ArrayLike<A>}  array    Index to insert item at\r\n */\r\nexport function insert<A>(array: Array<A>, element: A, index: number): void {\r\n\t//if (array) {\r\n\tindex = $math.fitToRange(index, 0, array.length);\r\n\tarray.splice(index, 0, element);\r\n\t//}\r\n}\r\n\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item\r\n * @param {ArrayLike<A>}  array    Index to move item to\r\n */\r\nexport function setIndex<A>(array: Array<A>, element: A, index: number): void {\r\n\tremove(array, element);\r\n\tinsert(array, element, index);\r\n}\r\n\r\n\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param {ArrayLike<A>}  array  Output array\r\n * @param {ArrayLike<A>}  input  Input array\r\n */\r\nexport function pushAll<A>(array: Array<A>, input: Array<A>) {\r\n\tconst length = input.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tarray.push(input[i]);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item to remove\r\n */\r\nexport function remove<A>(array: Array<A>, element: A): boolean {\r\n\tlet found: boolean = false;\r\n\tlet index: number = array.indexOf(element);\r\n\r\n\tif (index !== -1) {\r\n\t\tfound = true;\r\n\t\tarray.splice(index, 1);\r\n\r\n\t\tlet length: number = array.length;\r\n\r\n\t\twhile (index < length) {\r\n\t\t\t// TODO handle NaN\r\n\t\t\tif (array[index] === element) {\r\n\t\t\t\tarray.splice(index, 1);\r\n\t\t\t\t--length;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t++index;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn found;\r\n}\r\n\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item to add\r\n * @param {ArrayLike<A>}  array    Index to move item to\r\n */\r\nexport function move<A>(array: Array<A>, element: A, toIndex?: number): void {\r\n\t// @todo this implementation must be the same as the List.moveValue method\r\n\t// @todo don't do anything if the desired index is the same as the current index\r\n\tlet index = indexOf(array, element);\r\n\r\n\t// @todo remove all old values rather than only the first ?\r\n\tif (index !== -1) {\r\n\t\tremoveIndex(array, index);\r\n\t}\r\n\r\n\tif (toIndex == null) {\r\n\t\tarray.push(element);\r\n\t} else {\r\n\t\tinsertIndex(array, toIndex, element);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item to add\r\n * @param {ArrayLike<A>}  array    Index to add item at\r\n */\r\nexport function add<A>(array: Array<A>, element: A, index?: number): void {\r\n\t// Append to the end if index is not set\r\n\tif (!$type.isNumber(index)) {\r\n\t\tarray.push(element);\r\n\t}\r\n\r\n\t// Add to the beginning of array if index is 0\r\n\telse if (index === 0) {\r\n\t\tarray.unshift(element);\r\n\t}\r\n\t// Add to indicated place if index is set\r\n\telse {\r\n\t\tarray.splice(index, 0, element);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param {ArrayLike<A>}  array    Source array\r\n * @param {ArrayLike<A>}  element  Item to remove\r\n * @param {ArrayLike<A>}  array    Index to move item to\r\n */\r\nexport function replace<A>(array: Array<A>, element: A, index?: number): void {\r\n\t// check if exists\r\n\tlet ind: number = array.indexOf(element);\r\n\r\n\t// remove if exists\r\n\tif (ind !== -1) {\r\n\t\tarray.splice(ind, 1);\r\n\t}\r\n\r\n\t// add to end if index is not set\r\n\tif (!$type.isNumber(index)) {\r\n\t\tarray.push(element);\r\n\t}\r\n\t// add to indicated place if index is set\r\n\telse {\r\n\t\tarray.splice(index, 0, element);\r\n\t}\r\n}\r\n\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param {Array<A> | A}  input  Source value\r\n * @return {Array<A>} An array\r\n */\r\nexport function toArray<A>(input: Array<A> | A): Array<A> {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input;\r\n\t}\r\n\telse {\r\n\t\treturn [input];\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param   {ArrayLike<A>}  array    Source array\r\n * @param   {ArrayLike<A>}  element  Item to search for\r\n * @returns {boolean}                Item in array?\r\n */\r\nexport function has<A>(array: ArrayLike<A>, element: A): boolean {\r\n\treturn indexOf(array, element) !== -1;\r\n}\r\n\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @returns {boolean}              Copy of the array\r\n */\r\nexport function copy<A>(array: ArrayLike<A>): Array<A> {\r\n\tconst length = array.length;\r\n\r\n\t// It's faster to create the array with a pre-defined length\r\n\tconst output = new Array(length);\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t// Because the array has a pre-defined length, we have to assign rather than push\r\n\t\t// This is also faster than pushing\r\n\t\toutput[i] = array[i];\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param   {ArrayLike<A>}  array  Source array\r\n * @param   {number}        start  Start index\r\n * @param   {number}        end    End index\r\n * @returns {Array<A>}             Part of the array\r\n */\r\nexport function slice<A>(array: ArrayLike<A>, start: number, end: number = array.length): Array<A> {\r\n\tconst output = new Array(end - start);\r\n\r\n\tfor (let i = start; i < end; ++i) {\r\n\t\toutput[i - start] = array[i];\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param {Array<A>}  array  Source array\r\n * @param {number}    index  Index\r\n * @param {A}         value  Value to insert\r\n */\r\nexport function insertIndex<A>(array: Array<A>, index: number, value: A): void {\r\n\tarray.splice(index, 0, value);\r\n}\r\n\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param {Array<A>}  array  Source array\r\n * @param {number}    index  Index\r\n */\r\nexport function removeIndex<A>(array: Array<A>, index: number): void {\r\n\tarray.splice(index, 1);\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport interface SortResult {\r\n\tfound: boolean;\r\n\tindex: number\r\n}\r\n\r\n/**\r\n * Orders an array using specific `ordering` function and returns index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param   {ArrayLike<A>}  array     Source array\r\n * @param   {function}      ordering  An ordering function\r\n * @param   {ArrayLike<A>}  value     Value to search for\r\n * @returns {SortResult}              Result of the search\r\n */\r\nexport function getSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A, right: A) => Ordering, value: A): SortResult {\r\n\tlet start = 0;\r\n\tlet end   = array.length;\r\n\tlet found = false;\r\n\r\n\twhile (start < end) {\r\n\t\t// TODO is this faster/slower than using Math.floor ?\r\n\t\tconst pivot = (start + end) >> 1;\r\n\r\n\t\tconst order = ordering(value, array[pivot]);\r\n\r\n\t\t// less\r\n\t\tif (order < 0) {\r\n\t\t\tend = pivot;\r\n\r\n\t\t// equal\r\n\t\t} else if (order === 0) {\r\n\t\t\tfound = true;\r\n\t\t\tstart = pivot + 1;\r\n\r\n\t\t// more\r\n\t\t} else {\r\n\t\t\tstart = pivot + 1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tfound: found,\r\n\t\tindex: (found ? start - 1 : start)\r\n\t};\r\n}\r\n\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param   {ArrayLike<A>}  array    Source array\r\n * @param   {function}      matches  Search function\r\n * @returns {number}                 Index of the item if found\r\n */\r\nexport function findIndex<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (matches(array[i], i)) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param   {ArrayLike<A>}  array    Source array\r\n * @param   {function}      matches  Search function\r\n * @returns {number}                 Item if found\r\n */\r\nexport function find<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\r\n\tconst index = findIndex(array, matches);\r\n\r\n\tif (index !== -1) {\r\n\t\treturn array[index];\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Array.ts","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_global.js\n// module id = 17\n// module chunks = 302","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\nimport { Ordering } from \"./Order\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns an iterator for all entries in object.\r\n *\r\n * Can be used to safely iterate through all properties of the object.\r\n *\r\n * @param   {object}    object  Source object\r\n * @returns {Iterator}          Iterator\r\n */\r\nexport function entries<Object>(object: Object): $iter.Iterator<[$type.Keyof<Object>, Object[$type.Keyof<Object>]]> {\r\n\treturn (push) => {\r\n\t\t// TODO make this more efficient ?\r\n\t\tfor (let key in object) {\r\n\t\t\tif (hasKey(object, key)) {\r\n\t\t\t\tif (!push([key as $type.Keyof<Object>, object[key] as Object[$type.Keyof<Object>]])) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an array of object's property names.\r\n *\r\n * @param   {object}        object  Source object\r\n * @returns {Array<string}          Object property names\r\n */\r\nexport function keys<Object>(object: Object): Array<$type.Keyof<Object>> {\r\n\tconst output = [];\r\n\r\n\tfor (let key in object) {\r\n\t\tif (hasKey(object, key)) {\r\n\t\t\toutput.push(key as $type.Keyof<Object>);\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param   {object}        object  Source object\r\n * @param   {function}      order   Ordering function\r\n * @returns {Array<string>}          Object property names\r\n */\r\nexport function keysOrdered<Object>(object: Object, order: (a: $type.Keyof<Object>, b: $type.Keyof<Object>) => Ordering): Array<$type.Keyof<Object>> {\r\n\treturn keys(object).sort(order);\r\n}\r\n\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param   {object}   object  Source object\r\n * @param   {string}   key     Property name\r\n * @returns {boolean}          Has key?\r\n */\r\nexport function hasKey<Object, Key extends keyof Object>(object: Object, key: Key): boolean {\r\n\treturn {}.hasOwnProperty.call(object, key);\r\n}\r\n\r\n/**\r\n * Returns value of the specific `key`.\r\n *\r\n * @param   {object}   object  Source object\r\n * @param   {string}   key     Property name\r\n * @returns {any}              Key value\r\n */\r\nexport function getKey<Object, Key extends keyof Object>(object: Object, key: Key): Object[Key] {\r\n\treturn object[key];\r\n}\r\n\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param {object}   object  Source object\r\n * @param {function} fn      Callback function\r\n */\r\nexport function eachContinue<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => boolean): void {\r\n\tfor (let key in object) {\r\n\t\tif (hasKey(object, key)) {\r\n\t\t\tif (!fn(key as $type.Keyof<Object>, object[key] as Object[$type.Keyof<Object>])) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * @param {object}   object  Source object\r\n * @param {function} fn      Callback function\r\n */\r\nexport function each<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => void): void {\r\n\teachContinue(object, (key, value) => {\r\n\t\tfn(key, value);\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param {object}    object  Source object\r\n * @param {function}  fn      Callback function\r\n * @param {function}  order   Ordering function\r\n */\r\nexport function eachOrdered<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => void, ord: (a: $type.Keyof<Object>, b: $type.Keyof<Object>) => Ordering): void {\r\n\t$array.each(keysOrdered(object, ord), (key) => {\r\n\t\tfn(key, object[key]);\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a copy of the object.\r\n *\r\n * @param   {object} object  Source object\r\n * @returns {object}         Copy of the object\r\n */\r\nexport function copy<Object>(object: Object): Object {\r\n\treturn Object.assign({}, object);\r\n}\r\n\r\n/**\r\n * Merges two objects and returns a new object that contains properties from\r\n * both source objects.\r\n *\r\n * @param   {object} object1  Source object #1\r\n * @param   {object} object2  Source object #2\r\n * @returns {object}          Combined object\r\n */\r\nexport function merge<Object1, Object2>(object1: Object1, object2: Object2): Object1 & Object2 {\r\n\treturn Object.assign({}, object1, object2);\r\n}\r\n\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param {object}         source  Source object\r\n * @param {object}         target    Target object\r\n * @param {Array<string>}  keys  List of keys to copy\r\n */\r\nexport function copyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\tif ($type.hasValue(source[key])) {\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies a list of properties from one object to another only if target does't have value of the property set.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param {object}         source  Source object\r\n * @param {object}         target    Target object\r\n * @param {Array<string>}  keys  List of keys to copy\r\n */\r\nexport function softCopyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\tif ($type.hasValue(source[key]) && !($type.hasValue((<any>target)[key]))) {\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will copy empty properties.\r\n *\r\n * @param {object}         source  Source object\r\n * @param {object}         target    Target object\r\n * @param {Array<string>}  keys  List of keys to copy\r\n */\r\nexport function forceCopyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\ttarget[key] = source[key];\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies all properties from one object to another.\r\n *\r\n * @param {object}  from  Source object\r\n * @param {object}  to    Target object\r\n */\r\nexport function copyAllProperties(from: { [key: string]: any }, to: { [key: string]: any }): void {\r\n\tcopyProperties(from, to, keys(from));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Object.ts","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fails.js\n// module id = 19\n// module chunks = 302","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-object.js\n// module id = 20\n// module chunks = 302","/**\r\n * Base functionality\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IClone } from \"./utils/Clone\";\r\nimport { List, ListTemplate } from \"./utils/List\";\r\nimport { Dictionary, DictionaryTemplate } from \"./utils/Dictionary\";\r\nimport { Disposer, IDisposer } from \"./utils/Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Color, color } from \"./utils/Color\";\r\nimport { Percent, percent } from \"./utils/Percent\";\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { Ordering } from \"./utils/Order\";\r\n\r\nimport { registry } from \"./Registry\";\r\nimport { cache } from \"./utils/Cache\";\r\n\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n//import * as $debug from \"./utils/Debug\";\r\n\r\n/**\r\n * Provides base functionality for all derivative objects, like generating ids,\r\n * handling cache, etc.\r\n */\r\nexport class BaseObject implements IClone<BaseObject>, IDisposer {\r\n\r\n\t/**\r\n\t * A unique ID for this object.\r\n\t *\r\n\t * Generated on first access by `uid()` getter.\r\n\t *\r\n\t * @type {Optional<string>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _uid: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _disposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * User-defined id of the object.\r\n\t *\r\n\t * @type {Optional<string>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _id: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Holds a universal mapping collection, so that elements and their children\r\n\t * can create and look up all kinds of relations between id and object.\r\n\t *\r\n\t * @type {Optional<Dictionary<string, any>>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _map: $type.Optional<Dictionary<string, any>>;\r\n\r\n\t/**\r\n\t * The theme used by this object.\r\n\t *\r\n\t * @type {Optional<ITheme[]>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _themes: $type.Optional<ITheme[]>;\r\n\r\n\t// @review\r\n\t/**\r\n\t * A list of objects that are clones of this object. An object needs to\r\n\t * maintain a list of its clones so that properties can be re-applied to\r\n\t * clones whenever property on the object they were cloned from changes.\r\n\t *\r\n\t * @type {Optional<Dictionary<string, this>>}\r\n\t */\r\n\tprotected _clones: $type.Optional<List<this>>;\r\n\r\n\r\n\t// @review\r\n\t/**\r\n\t * Reference to the original object this object was cloned from. We need to\r\n\t * keep this so we can disassociate it from source object when this object\r\n\t * is disposed.\r\n\t *\r\n\t * @type {Optional<this>}\r\n\t */\r\n\tpublic clonedFrom: $type.Optional<this>;\r\n\r\n\t/**\r\n\t * A class name for the object.\r\n\t *\r\n\t * This property is used by deriving classes to identify which class it is.\r\n\t * We could derive the class name from the object itself, however method of\r\n\t * doing so is too costly, so we are relying on this property to quickly\r\n\t * access type of class.\r\n\t *\r\n\t * @type {Optional<string>}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _className: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * [cloneId description]\r\n\t *\r\n\t * @type {Optional<string>}\r\n\t * @todo Needs description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic cloneId: $type.Optional<string>;\r\n\r\n\t//protected _classes: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Sets class name\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.className = \"BaseObject\";\r\n\t\t//this.debug();\r\n\t}\r\n\r\n\tprotected debug(): void {\r\n\t\t//$debug.debug(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns object's internal unique ID.\r\n\t *\r\n\t * @return {string} Unique ID\r\n\t */\r\n\tpublic get uid(): string {\r\n\t\tif (!this._uid) {\r\n\t\t\tthis._uid = registry.getUniqueId();\r\n\t\t\tregistry.map.setKey(this._uid, this);\r\n\t\t}\r\n\t\treturn this._uid;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the user-defined id of the element.\r\n\t *\r\n\t * @param {Optional<string>} value Id\r\n\t */\r\n\tpublic set id(value: $type.Optional<string>) {\r\n\t\t//registry.map.setKey(value, this); // registry.map only stores by uid\r\n\t\tthis._id = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Id\r\n\t */\r\n\tpublic get id(): $type.Optional<string> {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a universal collection for mapping ids with objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Dictionary<string, any>} Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tif (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies properties from all assigned themes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\t// TODO is this needed ?\r\n\t\tif (registry) {\r\n\t\t\tlet themes = this.getCurrentThemes();\r\n\r\n\t\t\t// TODO is this needed ?\r\n\t\t\tif (themes) {\r\n\t\t\t\t$array.each(themes, (theme, index) => {\r\n\t\t\t\t\ttheme(this);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of themes to be used for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Optional<ITheme[]>} value An array of themes\r\n\t */\r\n\tpublic set themes(value: $type.Optional<ITheme[]>) {\r\n\t\tthis._themes = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<ITheme[]>} An array of themes\r\n\t */\r\n\tpublic get themes(): $type.Optional<ITheme[]> {\r\n\t\treturn this._themes;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of themes that should be applied to this element. It could\r\n\t * either be a list of themes set explicitly on this element, or system-wide.\r\n\t *\r\n\t * @return {ITheme[]} List of themes\r\n\t */\r\n\tpublic getCurrentThemes(): ITheme[] {\r\n\t\treturn this.themes || registry.themes;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return {boolean} Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\r\n\t\t\tconst a = this._disposers;\r\n\r\n\t\t\tthis._disposers = <any>null;\r\n\r\n\t\t\twhile (a.length !== 0) {\r\n\t\t\t\tconst disposer = a.shift();\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear cache\r\n\t\t\tthis.clearCache();\r\n\r\n\t\t\t// remove from clones list\r\n\t\t\tif (this.clonedFrom) {\r\n\t\t\t\tthis.clonedFrom.clones.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tconst uid = this._uid;\r\n\r\n\t\t\tif (uid != null) {\r\n\t\t\t\tregistry.map.removeKey(uid);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an IDisposer, which will be disposed when this object is disposed.\r\n\t *\r\n\t * @param {IDisposer} target Object to dispose\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic addDisposer(target: IDisposer): void {\r\n\t\tthis._disposers.push(target);\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes disposable object and removes it from `_disposers`.\r\n\t *\r\n\t * @param {IDisposer} target Object to dispose\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic removeDispose(target: IDisposer): void {\r\n\t\t//if(target){\r\n\t\tif (!this._disposed) {\r\n\t\t\tlet index = $array.indexOf(this._disposers, target);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis._disposers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttarget.dispose();\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a copy of this object and returns the clone. Try to avoid cloning complex objects like chart, create new instances if you need them.\r\n\t *\r\n\t * @param   {string}  cloneId  An id to use for clone (if not set a unique id will be generated)\r\n\t * @returns {Object}           Clone\r\n\t */\r\n\tpublic clone<A extends this>(cloneId?: string): this {\r\n\t\tif (!cloneId) {\r\n\t\t\tcloneId = \"clone-\" + registry.getUniqueId();\r\n\t\t}\r\n\r\n\t\tlet newObject: this = new (<{ new(): A; }>this.constructor)();\r\n\t\tnewObject.cloneId = cloneId;\r\n\r\n\t\tnewObject.copyFrom(this);\r\n\r\n\t\t// add to clones list\r\n\t\t// this.clones.push(newObject); // moved this to copyFrom\r\n\r\n\r\n\t\treturn newObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a collection of object's clones.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Dictionary<string, this>} Clones\r\n\t */\r\n\tpublic get clones(): List<this> {\r\n\t\tif (!this._clones) {\r\n\t\t\tthis._clones = new List<this>();\r\n\t\t}\r\n\t\treturn this._clones;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param {this} object Source element\r\n\t */\r\n\tpublic copyFrom(object: this): void {\r\n\t\tobject.clones.moveValue(this);\r\n\t\tthis.clonedFrom = object;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's class name. (a class that was used to instantiate the element)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  value  Class name\r\n\t */\r\n\tpublic set className(value: $type.Optional<string>) {\r\n\t\tthis._className = value;\r\n\t\t/*if (registry) {\r\n\t\t\tregistry.registeredClasses[value] = typeof this;\r\n\t\t}*/\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Class name\r\n\t */\r\n\tpublic get className(): $type.Optional<string> {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n\t/**\r\n\t * Caches value in object's cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  key    Key\r\n\t * @param {any}     value  Value\r\n\t * @param {number}  ttl    TTL in seconds\r\n\t */\r\n\tpublic setCache(key: string, value: any, ttl?: number): void {\r\n\t\tcache.set(this.uid, key, value, ttl);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves cached value.\r\n\t *\r\n\t * If optional second padarameter is specified, it will return that value\r\n\t * if cache is not available or is expired.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  key    Key\r\n\t * @param  {any}     value  Value to return if cache is not available\r\n\t * @return {any}            Value\r\n\t */\r\n\tpublic getCache(key: string, value: any = undefined): any {\r\n\t\treturn cache.get(this.uid, key, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears object's local cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clearCache(): void {\r\n\t\tcache.clear(this.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates [[Disposer]] for `setTimeout` function call. This ensures that all\r\n\t * timeouts created by the object will be cleared when object itself is\r\n\t * disposed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {() => void}  fn     Callback function\r\n\t * @param  {number}      delay  Timeout (ms)\r\n\t * @return {IDisposer}          Disposer for timeout\r\n\t */\r\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\r\n\t\tconst id = setTimeout(() => {\r\n\t\t\tthis.removeDispose(disposer);\r\n\t\t\tfn();\r\n\t\t}, delay);\r\n\r\n\t\tconst disposer = new Disposer(() => {\r\n\t\t\tclearTimeout(id);\r\n\t\t});\r\n\r\n\t\tthis._disposers.push(disposer);\r\n\t\treturn disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * JSON-BASED CONFIG PROCESSING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Use this property to set JSON-based config. When set, triggers processing\r\n\t * routine, which will go through all properties, and try to apply values,\r\n\t * create instances, etc.\r\n\t *\r\n\t * Use this with caution, as it is a time-consuming process. It's used for\r\n\t * initialchart setup only, not routine operations.\r\n\t *\r\n\t * @param {object} json JSON config\r\n\t */\r\n\tpublic set config(config: object) {\r\n\t\ttry {\r\n\t\t\tthis.processConfig(config);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t/*if (this instanceof Sprite) {\r\n\t\t\t\tthis.raiseCriticalError(e);\r\n\t\t\t}*/\r\n\t\t\t(<any>this).raiseCriticalError(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the JSON config.\r\n\t *\r\n\t * @param {object}  json  JSON config\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected processConfig(config?: object): void {\r\n\r\n\t\tif (!config) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get target\r\n\t\tlet target = <any>this;\r\n\r\n\t\t// Iterate through all of the items\r\n\t\t$object.eachOrdered(config, (configKey, value) => {\r\n\t\t\tlet configValue: any = value;\r\n\r\n\t\t\t// Is this a callback?\r\n\t\t\tif (configKey == \"callback\" && typeof value == \"function\") {\r\n\t\t\t\t(<any>value).call(target);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if there's a property in target\r\n\t\t\tif (this.hasProperty(configKey)) {\r\n\r\n\t\t\t\tlet item: any;\r\n\r\n\t\t\t\t// Do we have instructions to create an object?\r\n\t\t\t\tif ($type.isObject(configValue) && $type.hasValue((<any>configValue)[\"type\"])) {\r\n\t\t\t\t\t// Create new instance\r\n\t\t\t\t\tif (item = this.createClassInstance((<any>configValue)[\"type\"])) {\r\n\t\t\t\t\t\ttarget[configKey] = item;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\titem = target[configKey];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Get item from the object\r\n\t\t\t\t\titem = target[configKey];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * It is...\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t */\r\n\r\n\t\t\t\tif (item instanceof Adapter) {\r\n\r\n\t\t\t\t\t// ... an Adapter, try to add handlers to it\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tthis.processAdapters(item, configValue);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof EventDispatcher) {\r\n\r\n\t\t\t\t\t// ... an EventDispatcher, try to add handlers to it\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tthis.processEvents(item, configValue);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.asIs(configKey)) {\r\n\r\n\t\t\t\t\t// ... a special field, just set it to new value\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\t// (no need to add each indvidual item)\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (<any>configValue instanceof BaseObject) {\r\n\r\n\t\t\t\t\t// ... a BaseObject object, we just going to use it as it is\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof BaseObject) {\r\n\r\n\t\t\t\t\t// ... another child BaseObject\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\t// Let's just pass in config part in and let itself deal with it\r\n\t\t\t\t\titem.config = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof ListTemplate) {\r\n\r\n\t\t\t\t\t// ... a list with template\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t// Let's see what we can do with it\r\n\t\t\t\t\tif ($type.isArray(configValue)) {\r\n\r\n\t\t\t\t\t\t// It's an array.\r\n\t\t\t\t\t\t// Create a list item for entry, or try to apply properties to an\r\n\t\t\t\t\t\t// existing entry if possible and it is present.\r\n\t\t\t\t\t\t$array.each(configValue, (entry, index) => {\r\n\t\t\t\t\t\t\tlet type = this.getConfigEntryType(entry);\r\n\t\t\t\t\t\t\tlet listItem;\r\n\t\t\t\t\t\t\tif (item.hasIndex(index) && !entry[\"forceCreate\"]) {\r\n\t\t\t\t\t\t\t\tlistItem = item.getIndex(index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (<any>entry instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\t\t\t\t\titem.push(entry);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (type) {\r\n\t\t\t\t\t\t\t\tlistItem = item.create(type);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlistItem = item.create();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($type.isObject(entry)) {\r\n\r\n\t\t\t\t\t\t\t\t// If the list item is BaseObject, we just need to let it\r\n\t\t\t\t\t\t\t\t// deal if its own config\r\n\t\t\t\t\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t\t(<any>listItem).config = entry;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n\t\t\t\t\t\t\t\t\t$object.copyAllProperties(<Object>entry, <Object>listItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\titem.setIndex(item.indexOf(listItem), entry);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Truncate the list if it contains less items than the config\r\n\t\t\t\t\t\t// array\r\n\t\t\t\t\t\twhile (configValue.length > item.length) {\r\n\t\t\t\t\t\t\titem.pop();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.isObject(configValue)) {\r\n\r\n\t\t\t\t\t\t// It's a single oject.\r\n\t\t\t\t\t\t// Treat it as a template.\r\n\t\t\t\t\t\tif (<any>configValue instanceof BaseObject) {\r\n\t\t\t\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\t\t\t\titem.template = configValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t$object.each(configValue, (entryKey, entryValue) => {\r\n\r\n\t\t\t\t\t\t\t\tlet listItem = (<any>item.template)[entryKey];\r\n\t\t\t\t\t\t\t\tif (listItem instanceof Adapter) {\r\n\t\t\t\t\t\t\t\t\tthis.processAdapters(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (listItem instanceof EventDispatcher) {\r\n\t\t\t\t\t\t\t\t\tthis.processEvents(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (listItem instanceof DictionaryTemplate) {\r\n\t\t\t\t\t\t\t\t\tthis.processDictionaryTemplate(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (item.template[entryKey] instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t\t// Template is a BaseObject. Let it deal with its own config.\r\n\t\t\t\t\t\t\t\t\t(<any>item.template[entryKey]).config = entryValue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if ($type.isObject(entryValue) && $type.hasValue((<any>entryValue)[\"type\"])) {\r\n\t\t\t\t\t\t\t\t\tif (listItem = this.createClassInstance((<any>entryValue)[\"type\"])) {\r\n\t\t\t\t\t\t\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t\t\t\tlistItem.config = entryValue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\titem.template[entryKey] = listItem;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\titem.template[entryKey] = entryValue;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (listItem instanceof List) {\r\n\t\t\t\t\t\t\t\t\t// It's List, process it\r\n\t\t\t\t\t\t\t\t\tthis.processList(entryValue, listItem);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// Aything else. Just assing and be done with it.\r\n\t\t\t\t\t\t\t\t\titem.template[entryKey] = this.maybeColorOrPercent(entryValue);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// Something else?\r\n\t\t\t\t\t\t// Not sure what to do with it on a list - ignore\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof List) {\r\n\r\n\t\t\t\t\t// ... a list\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\tthis.processList(configValue, item);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof DictionaryTemplate) {\r\n\r\n\t\t\t\t\t// ... a dictionary with template\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\tthis.processDictionaryTemplate(item, configValue);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof Dictionary) {\r\n\r\n\t\t\t\t\t// ... a dictionary\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\t// @todo\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof Color || item instanceof Percent) {\r\n\r\n\t\t\t\t\t// ... it's a Color or Percent\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ($type.isObject(item) && $type.isObject(configValue)) {\r\n\r\n\t\t\t\t\t// ... a regular object\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t$object.copyAllProperties(<Object>configValue, <Object>item);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// ... something else - probably a simple property or object\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t// Maybe convert to `Percent` or `Color`?\r\n\t\t\t\t\tconfigValue = this.maybeColorOrPercent(configValue);\r\n\r\n\t\t\t\t\t// Assign\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}, this.configOrder);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to detect if value is color or percent and converts to proper object\r\n\t * if necessary.\r\n\t *\r\n\t * Returns the same source value if no color/percent detected\r\n\t *\r\n\t * @param  {any}  value  Source value\r\n\t * @return {any}         Converted value\r\n\t */\r\n\tprotected maybeColorOrPercent(value: any): any {\r\n\t\tif ($type.isString(value)) {\r\n\t\t\tif (value.match(/^[0-9.\\-]+\\%$/)) {\r\n\t\t\t\treturn percent($type.toNumber(value));\r\n\t\t\t}\r\n\t\t\telse if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n\t\t\t\treturn color(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tprotected processAdapters(item: Adapter<any, any>, config: any): void {\r\n\t\tif ($type.isObject(config)) {\r\n\t\t\t$object.each(config, (key, entry) => {\r\n\t\t\t\tif (!item.has(key, entry)) {\r\n\t\t\t\t\titem.add(key, entry);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ($type.isArray(config)) {\r\n\t\t\t$array.each(config, (entry: { type: string, callback: any, priority?: number }, index) => {\r\n\t\t\t\titem.add(entry.type, entry.callback, entry.priority || 0, this);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected processEvents(item: EventDispatcher<any>, config: any): void {\r\n\t\tif ($type.isObject(config)) {\r\n\t\t\t$object.each(config, (key, entry) => {\r\n\t\t\t\tif (!item.has(key, entry)) {\r\n\t\t\t\t\titem.on(key, entry);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ($type.isArray(config)) {\r\n\t\t\t$array.each(config, (entry: { type: string, callback: any }, index) => {\r\n\t\t\t\titem.on(entry.type, entry.callback, this);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON config for a [[DictionaryTemplate]] item.\r\n\t *\r\n\t * @todo Description\r\n\t * @param {DictionaryTemplate<any, any>}  item    Item\r\n\t * @param {any}                           config  Config\r\n\t */\r\n\tprotected processDictionaryTemplate(item: DictionaryTemplate<any, any>, config: any): void {\r\n\r\n\t\t// We can only process object\r\n\t\t// Not sure what to do with other types - ignore\r\n\t\tif ($type.isObject(config)) {\r\n\r\n\t\t\t// Create an entry for each item, or override properties for\r\n\t\t\t// existing one.\r\n\t\t\t$object.each(config, (entryKey, entryValue) => {\r\n\t\t\t\tlet listItem;\r\n\r\n\t\t\t\t// Get existing one, or create a new one\r\n\t\t\t\tif (entryKey == \"template\") {\r\n\t\t\t\t\tlistItem = item.template;\r\n\t\t\t\t}\r\n\t\t\t\telse if (item.hasKey(entryKey)) {\r\n\t\t\t\t\tlistItem = item.getKey(entryKey);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlistItem = item.create(entryKey);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set data\r\n\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\tlistItem.config = entryValue;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entryValue)) {\r\n\t\t\t\t\t$object.copyAllProperties(<Object>entryValue, <Object>listItem);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlistItem.setKey(entryKey, entryValue);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes [[List]].\r\n\t *\r\n\t * @param {any}        configValue  Config value\r\n\t * @param {List<any>}  item         Item\r\n\t */\r\n\tprotected processList(configValue: any, item: List<any>): void {\r\n\r\n\t\t// Convert to array if necessary\r\n\t\tif (!$type.isArray(configValue)) {\r\n\t\t\tconfigValue = [configValue];\r\n\t\t}\r\n\r\n\t\t// It's an array\r\n\t\t// Create a list item for entry\r\n\t\t$array.each(configValue, (entry, index) => {\r\n\r\n\t\t\tif ($type.isObject(entry)) {\r\n\r\n\t\t\t\t// An object.\r\n\t\t\t\t//\r\n\t\t\t\t// Let's see if we can instantiate a class out of it, or we need\r\n\t\t\t\t// to push it into list as it is.\r\n\t\t\t\t//\r\n\t\t\t\t// If there are items already at the specified index in the list,\r\n\t\t\t\t// apply properties rather than create a new one.\r\n\r\n\t\t\t\tlet listItem;\r\n\t\t\t\tif (item.hasIndex(index) && !(<any>entry)[\"forceCreate\"]) {\r\n\t\t\t\t\tlistItem = item.getIndex(index);\r\n\t\t\t\t}\r\n\t\t\t\telse if (<any>entry instanceof BaseObject) {\r\n\t\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\t\titem.push(entry);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlistItem = this.createEntryInstance(entry);\r\n\t\t\t\t\titem.push(listItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the list item is BaseObject, we just need to let it\r\n\t\t\t\t// deal if its own config\r\n\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t(<any>listItem).config = entry;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Basic value.\r\n\t\t\t\t// Just push it into list, or override existing value\r\n\t\t\t\tif (item.hasIndex(index)) {\r\n\t\t\t\t\titem.setIndex(index, entry);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\titem.push(entry);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\t// Truncate the list if it contains less items than the config\r\n\t\t// array\r\n\t\twhile (configValue.length > item.length) {\r\n\t\t\titem.pop();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  a  Element 1\r\n\t * @param  {string}  b  Element 2\r\n\t * @return {Ordering}   Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Language must come first, so it's all set up when the rest of the\r\n\t\t// elements are being instantiated\r\n\t\telse if (a == \"language\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"language\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if field should be just assigned as is, without any checking when\r\n\t * processing JSON config.\r\n\t *\r\n\t * Extending functions can override this function to do their own checks.\r\n\t *\r\n\t * @param  {string}   field  Field name\r\n\t * @return {boolean}         Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn $array.indexOf([\"locale\"], field) != -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a relevant class instance if such class definition exists.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  className  Class name\r\n\t * @return {Object}             Instance\r\n\t */\r\n\tprotected createClassInstance(className: string): Object {\r\n\t\tif ($type.hasValue(registry.registeredClasses[className])) {\r\n\t\t\treturn new registry.registeredClasses[className]();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a class instance for a config entry using it's type. (as set in\r\n\t * `type` property)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}  config  Config part\r\n\t * @return {any}          Instance\r\n\t */\r\n\tprotected createEntryInstance(config: any): any {\r\n\t\tlet res: Object;\r\n\t\tif ($type.hasValue(config[\"type\"])) {\r\n\t\t\tres = this.createClassInstance(config[\"type\"]);\r\n\t\t}\r\n\t\tif (!res) {\r\n\t\t\treturn config;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines config object type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}  config  Config part\r\n\t * @return {any}          Type\r\n\t */\r\n\tprotected getConfigEntryType(config: any): any {\r\n\t\tif ($type.hasValue(config[\"type\"])) {\r\n\t\t\tif ($type.hasValue(registry.registeredClasses[config[\"type\"]])) {\r\n\t\t\t\treturn registry.registeredClasses[config[\"type\"]];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow Error(\"Invalid type: \\\"\" + config[\"type\"] + \"\\\".\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this element has a property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}   prop  Property name\r\n\t * @return {boolean}        Has property?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop in this ? true : false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[BaseObjectEvents]].\r\n */\r\nexport interface IBaseObjectEvents { };\r\n\r\n/**\r\n * A version of [[BaseObject]] with events properties and methods.\r\n * Classes that use [[EventDispatcher]] should extend this instead of\r\n * [[BaseObject]] directly.\r\n */\r\nexport class BaseObjectEvents extends BaseObject {\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"BaseObjectEvents\";\r\n\t\tthis._disposers.push(this.events);\r\n\t}\r\n\r\n\tpublic _events!: IBaseObjectEvents;\r\n\r\n\t/**\r\n\t * An [[EventDispatcher]] instance\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<this, this[\"_events\"]>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Dispatches an event using own event dispatcher. Will automatically\r\n\t * populate event data object with event type and target (this element).\r\n\t * It also checks if there are any handlers registered for this sepecific\r\n\t * event.\r\n\t *\r\n\t * @param {Key} eventType Event type (name)\r\n\t * @param {any}    data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatch<Key extends keyof this[\"_events\"]>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Works like `dispatch`, except event is triggered immediately, without\r\n\t * waiting for the next frame cycle.\r\n\t *\r\n\t * @param {Key} eventType Event type (name)\r\n\t * @param {any}    data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof this[\"_events\"]>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, data);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param {BaseObjectEvents} source Source object\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.events.copyFrom(source.events);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Base.ts","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks.js\n// module id = 22\n// module chunks = 302","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_descriptors.js\n// module id = 23\n// module chunks = 302","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-dp.js\n// module id = 24\n// module chunks = 302","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-length.js\n// module id = 25\n// module chunks = 302","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IDisposer, Disposer } from \"./Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Optional } from \"./Type\";\r\nimport { IClone } from \"./Clone\";\r\nimport * as $object from \"./Object\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $string from \"./String\";\r\n\r\n/**\r\n * Defines events from [[Dictionary]].\r\n */\r\nexport interface IDictionaryEvents<Key, Value> {\r\n\r\n\t/**\r\n\t * Invoked when an item is removed from the dictionary.\r\n\t */\r\n\tremoved: {\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t *\r\n\t\t * @type {Value}\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when dictionary is cleared.\r\n\t */\r\n\tcleared: {};\r\n\r\n\t/**\r\n\t * Invoked when `insertKey()` method is called.\r\n\t */\r\n\tinsertKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t *\r\n\t\t * @type {Key}\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Added value.\r\n\t\t *\r\n\t\t * @type {Value}\r\n\t\t */\r\n\t\tnewValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setKey()` method is called.\r\n\t */\r\n\tsetKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t *\r\n\t\t * @type {Key}\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Removed value. (if overwriting)\r\n\t\t *\r\n\t\t * @type {Value}\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t\t/**\r\n\t\t * Added value.\r\n\t\t *\r\n\t\t * @type {Value}\r\n\t\t */\r\n\t\tnewValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `removeKey()` method is called.\r\n\t */\r\n\tremoveKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t *\r\n\t\t * @type {Key}\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t *\r\n\t\t * @type {Value}\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * [K description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Descirption\r\n */\r\nexport type DictionaryLike<K, A> = $iter.Iterable<[K, A]> & {\r\n\tevents: EventDispatcher<{ removed: { oldValue: A } }>;\r\n};\r\n\r\n/**\r\n * A disposable dictionary, which when disposed itself will call `dispose()`\r\n * method on all its items.\r\n */\r\nexport class DictionaryDisposer<K, A extends IDisposer> extends Disposer {\r\n\tconstructor(dict: DictionaryLike<K, A>) {\r\n\t\tconst disposer = dict.events.on(\"removed\", (x) => {\r\n\t\t\tx.oldValue.dispose();\r\n\t\t}, undefined, false);\r\n\r\n\t\tsuper(() => {\r\n\t\t\tdisposer.dispose();\r\n\r\n\t\t\t// TODO clear the dictionary ?\r\n\t\t\t$iter.each(dict.iterator(), (a) => {\r\n\t\t\t\tconst v = a[1];\r\n\t\t\t\tv.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * A Dictionary is collection where values of some type can be mapped to\r\n * string keys.\r\n *\r\n * You might call it an \"associative list\" or \"associative array\".\r\n */\r\nexport class Dictionary<Key extends string, T> {\r\n\r\n\t/**\r\n\t * Key/value pairs\r\n\t */\r\n\tprivate _dictionary: { [key in Key]?: T };\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t *\r\n\t * @type {EventDispatcher<AMEvent<Dictionary<Key, T>, IDictionaryEvents<Key, T>>>}\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<Dictionary<Key, T>, IDictionaryEvents<Key, T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._dictionary = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if key exists in Dictionary.\r\n\t *\r\n\t * @param  {Key}      key  The key to search for\r\n\t * @return {boolean}       `true` if key exists, `false` if it doesn't\r\n\t */\r\n\tpublic hasKey(key: Key): boolean {\r\n\t\treturn $object.hasKey(this._dictionary, key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value for a specific key.\r\n\t *\r\n\t * @param  {Key}          key  The key to search for\r\n\t * @return {Optional<T>}       Value for the key, or `undefined` if it doesn't exist\r\n\t */\r\n\tpublic getKey(key: Key): Optional<T> {\r\n\t\treturn this._dictionary[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts value at specific key.\r\n\t *\r\n\t * Will thrown an exception if the key already exists in the dictionary.\r\n\t *\r\n\t * @param {Key}  key    Key\r\n\t * @param {T}    value  Value\r\n\t */\r\n\tpublic insertKey(key: Key, value: T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tthrow new Error(\"Key \" + key + \" already exists in dictionary\");\r\n\r\n\t\t} else {\r\n\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"insertKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"insertKey\", {\r\n\t\t\t\t\ttype: \"insertKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds or updates key/value into dictionary.\r\n\t *\r\n\t * If the key already exists, the old value will be overwritten.\r\n\t *\r\n\t * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n\t *\r\n\t * @param  {Key}  key    Key\r\n\t * @param  {T}    value  Value\r\n\t */\r\n\tpublic setKey(key: Key, value: T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\r\n\t\t\tif (oldValue !== value) {\r\n\t\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"setKey\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"setKey\", {\r\n\t\t\t\t\t\ttype: \"setKey\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tkey: key,\r\n\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\tnewValue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"insertKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"insertKey\", {\r\n\t\t\t\t\ttype: \"insertKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the value at specific `key` using custom function.\r\n\t *\r\n\t * Passes in current value into the function, and uses its output as a new\r\n\t * value.\r\n\t *\r\n\t * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Key}       key  Key\r\n\t * @param {function}  fn   Function to transform the value\r\n\t */\r\n\tpublic updateKey(key: Key, fn: (value: T) => T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\t\t\tconst newValue = fn(oldValue);\r\n\r\n\t\t\tif (oldValue !== newValue) {\r\n\t\t\t\tthis._dictionary[key] = newValue;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"setKey\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"setKey\", {\r\n\t\t\t\t\t\ttype: \"setKey\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tkey: key,\r\n\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\tnewValue: newValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Key \" + key + \" doesn't exist in dictionary\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes value at specific `key` from dictionary.\r\n\t *\r\n\t * @param {Key}  key  Key to remove\r\n\t */\r\n\tpublic removeKey(key: Key): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\r\n\t\t\tdelete this._dictionary[key];\r\n\r\n\t\t\tif (this.events.isEnabled(\"removeKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removeKey\", {\r\n\t\t\t\t\ttype: \"removeKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [insertKeyIfEmpty description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo description\r\n\t * @param  {Key}       key      [description]\r\n\t * @param  {function}  ifEmpty  [description]\r\n\t * @return {T}                  [description]\r\n\t */\r\n\tpublic insertKeyIfEmpty(key: Key, ifEmpty: () => T): T {\r\n\t\tif (!this.hasKey(key)) {\r\n\t\t\tthis.insertKey(key, ifEmpty());\r\n\t\t}\r\n\r\n\t\treturn <T>this.getKey(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the dictionary.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\t// TODO dispatch this after clear\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t$object.each(this._dictionary, (key, value) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: value\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._dictionary = {};\r\n\r\n\t\tif (this.events.isEnabled(\"cleared\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"cleared\", {\r\n\t\t\t\ttype: \"cleared\",\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies items from another Dictionary.\r\n\t *\r\n\t * @param {Dictionary<Key, T>}  source  A Dictionary to copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (a) => {\r\n\t\t\t// TODO fix this type cast\r\n\t\t\tthis.setKey(<Key>a[0], a[1]);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an interator that can be used to iterate through all items in\r\n\t * the dictionary.\r\n\t *\r\n\t * @return {Iterator} Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<[Key, T]> {\r\n\t\t// @todo fix this type after the Iterator bug is fixed\r\n\t\t// https://github.com/Microsoft/TypeScript/issues/16730\r\n\t\treturn <$iter.Iterator<[Key, T]>>$object.entries(this._dictionary);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the keys/values of the dictionary.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<[Key, T]> {\r\n\t\t// TODO make this more efficient ?\r\n\t\tfor (let key in this._dictionary) {\r\n\t\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\t\tyield [<Key>key, this._dictionary[key]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each key/value in the dictionary.\r\n\t */\r\n\tpublic each(f: (key: Key, value: T) => void): void {\r\n\t\t$iter.each(this.iterator(), ([key, value]) => f(key, value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that can be used to iterate through all items in\r\n\t * the dictionary, ordered by key.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Iterator} Iterator\r\n\t */\r\n\tpublic sortedIterator(): $iter.Iterator<[Key, T]> {\r\n\t\treturn $iter.sort(this.iterator(), (x, y) => $string.order(x[0], y[0]));\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of a [[Dictionary]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class DictionaryTemplate<Key extends string, T extends IClone<T> & { isTemplate: boolean }> extends Dictionary<Key, T> {\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t * @type {T}\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {T} t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param {T}  v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {T} Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other dictionary.\r\n\t *\r\n\t * @param {DictionaryTemplate}  source  Source dictionary\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (a) => {\r\n\t\t\t// TODO fix this type cast\r\n\t\t\t// TODO why does this need to clone ?\r\n\t\t\tthis.setKey(<Key>a[0], a[1].clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to specified\r\n\t * `key` in the dictionary, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the dictionary if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create(key: Key): T {\r\n\t\treturn this.insertKeyIfEmpty(key, () => this.template.clone());\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Dictionary.ts","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-object.js\n// module id = 27\n// module chunks = 302","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_a-function.js\n// module id = 28\n// module chunks = 302","/**\r\n * An Adapter can be used to apply chained synchronous transformations to any\r\n * value at runtime.\r\n *\r\n * Each type class using Adapters must have `adapters` property and adapter\r\n * interface defined.\r\n *\r\n * Adapters can be used to allow external code to apply transformations to any\r\n * value at any time.\r\n *\r\n * For example we have a Weather class which has a method `now()` which returns\r\n * current temperature.\r\n *\r\n * ```\r\n * function now() {\r\n *   // ... calculate temperature\r\n *   let temp = \"Temperature now is \" + degrees + \"F\";\r\n *   return temp;\r\n * }\r\n * ```\r\n *\r\n * Now, supposed we want to let other classes to modify the output of the\r\n * `now()`? We just apply an adapter to the `temp` before it is returned:\r\n *\r\n * ```\r\n * temp = this.adapters.apply(\"now\", {\r\n *   temp: temp,\r\n *   degrees: degrees\r\n * }).temp;\r\n * ```\r\n *\r\n * Some other class might tap onto it by defining an Adapter that calculates\r\n * the temperature in Celsius:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"(\" + farenheitToCelsius(arg.degrees) + \"C)\";\r\n *   return arh;\r\n * });\r\n *\r\n * Furthermore some time-related class could add time:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"; the time now is \" + (new Date().toLocaleString());\r\n *   return arh;\r\n * });\r\n *\r\n * So without adapters we would get output like this:\r\n *\r\n * ```\r\n * Temperature now is 90F\r\n * ```\r\n *\r\n * With adapters applied we now have:\r\n *\r\n * ```\r\n * Temperature now is 90F (32C); the time now is 12/11/2012, 7:00:00 PM\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SortedList } from \"./SortedList\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $number from \"./Number\";\r\nimport * as $order from \"./Order\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Adapter interface.\r\n */\r\ninterface IAdapterCallback<Target, T> {\r\n\tid: number;\r\n\tkey: keyof T;\r\n\tcallback: (value: T[keyof T], target: Target, key?: keyof T) => T[keyof T];\r\n\tscope: any;\r\n\tpriority: number;\r\n}\r\n\r\n/**\r\n * Defines an interface for a global adapter.\r\n */\r\ninterface IGlobalAdapterCallback {\r\n\tid: number;\r\n\tkey: string;\r\n\tcallback: <T, Target, Key extends keyof T, C>(this: C, value: T[Key], target: Target, key?: keyof T) => T[Key];\r\n\tscope: any;\r\n\tpriority: number;\r\n\ttype: { new(): any };\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * GLOBAL ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A global adapter is an adpater that is attached to a class type rather than\r\n * specific object instance.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class GlobalAdapter {\r\n\r\n\t/**\r\n\t * Callback id iterator.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _callbackId: number = 0;\r\n\r\n\t/**\r\n\t * A list of if callbacks (adapters).\r\n\t *\r\n\t */\r\n\tprivate _callbacks = new SortedList<IGlobalAdapterCallback>((left, right) => {\r\n\t\treturn $order.or($number.order(left.priority, right.priority),\r\n\t\t\t$number.order(left.id, right.id));\r\n\t});\r\n\r\n\tpublic addAll<T, Target, Key extends keyof T>(\r\n\t\ttype: { new(): Target },\r\n\t\tkey: Key,\r\n\t\tcallback: (value: T[Key], target: Target, key: keyof T) => T[Key],\r\n\t\tpriority?: number\r\n\t): void;\r\n\r\n\tpublic addAll<T, Target, Key extends keyof T, C>(\r\n\t\ttype: { new(): Target },\r\n\t\tkey: Key,\r\n\t\tcallback: (this: C, value: T[Key], target: Target, key: keyof T) => T[Key],\r\n\t\tpriority?: number,\r\n\t\tscope?: C\r\n\t): void;\r\n\r\n\t/**\r\n\t * Adds a global callback which is not specific to any particular object.\r\n\t * Whenever an adapter in any object of the specific class type is invoked\r\n\t * global adapters will kick in.\r\n\t *\r\n\t * @param {any}         type      Class type\r\n\t * @param {any}         key       Adapter key\r\n\t * @param {any}         callback  Callback function\r\n\t * @param {number = 0}  priority  Priority (higher priority meaning adapter will be applied later)\r\n\t * @param {any}         scope     Callback function scaope\r\n\t */\r\n\tpublic addAll(type: any, key: any, callback: any, priority: number = 0, scope?: any): void {\r\n\t\tthis._callbacks.insert({\r\n\t\t\tid: ++this._callbackId,\r\n\t\t\tkey: key,\r\n\t\t\tcallback: callback,\r\n\t\t\tpriority: priority,\r\n\t\t\tscope: scope,\r\n\t\t\ttype: type\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if there are adapters for specific type available.\r\n\t *\r\n\t * @param  {Target}   type  Adapter type\r\n\t * @param  {Key}      key   Adapter key\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic isEnabled<T, Target, Key extends keyof T>(type: Target, key: Key): boolean {\r\n\t\t// TODO check the type and key\r\n\t\treturn this._callbacks.length > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies global adapters for the object of the specific type.\r\n\t *\r\n\t * @param {any}  type   Class type\r\n\t * @param {any}  key    Adapter key\r\n\t * @param {any}  value  Value\r\n\t */\r\n\tpublic applyAll<T, Target, Key extends keyof T = keyof T>(type: Target, key: Key, value: T[Key]): T[Key] {\r\n\t\t// This is needed to improve the performance and reduce garbage collection\r\n\t\tconst callbacks = this._callbacks.values;\r\n\t\tconst length = callbacks.length;\r\n\r\n\t\tif (length == 0) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Cycle through all callbacks and find the ones we need to use\r\n\t\tfor (var i = 0; i < length; ++i) {\r\n\t\t\tconst item = callbacks[i];\r\n\r\n\t\t\tif (item.key === key && type instanceof item.type) {\r\n\t\t\t\tvalue = item.callback.call(item.scope, value, type, key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A global Adapter for plugins that want to add specific\r\n * functionality for any chart, not just specific instance.\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * @todo Description (improve)\r\n */\r\nexport let globalAdapter: GlobalAdapter = new GlobalAdapter();\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REGULAR ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Adapter allows adding ordered callback functions and associating them with a\r\n * string-based key. An Adapter user can then easily invoke those callbacks to\r\n * apply custom functions on its input, output or intermediate values.\r\n *\r\n * Custom code and plugins can add their own callbacks to modify and enhance\r\n * core functionality.\r\n *\r\n * See the description of `add()` for an example.\r\n *\r\n * Almost any object in amCharts4 has own adapter, accessible with `adapter`\r\n * property.\r\n *\r\n * Any adapters added to it will be applied to that object only.\r\n *\r\n * ### Global Adapters\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * {@link https://www.amcharts.com/docs/v4/reference/adapter_module/#globalAdapter_property More info}.\r\n *\r\n * @important\r\n */\r\nexport class Adapter<Target, T> {\r\n\r\n\t/**\r\n\t * Internal counter for callback ids.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _callbackId: number = 0;\r\n\r\n\t/**\r\n\t * A list of adapter callbacks.\r\n\t *\r\n\t * @param {[type]} $number.order(left.priority, right.priority) [description]\r\n\t * @param {[type]} $number.order(left.id,       right.id));\t}  [description]\r\n\t */\r\n\tprivate _callbacks = new SortedList<IAdapterCallback<Target, T>>((left, right) => {\r\n\t\treturn $order.or($number.order(left.priority, right.priority),\r\n\t\t\t$number.order(left.id, right.id));\r\n\t});\r\n\r\n\t/**\r\n\t * Holds an object reference this Adapter is for.\r\n\t *\r\n\t * @type {T}\r\n\t */\r\n\tpublic object: Target;\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t */\r\n\tpublic events: EventDispatcher<{\r\n\t\tinserted: {};\r\n\t\tremoved: {};\r\n\t}>;\r\n\r\n\t/**\r\n\t * Constructor, sets the object referece this Adapter should be used for.\r\n\t *\r\n\t * @param {T} c Object\r\n\t */\r\n\tconstructor(c: Target) {\r\n\t\tthis.object = c;\r\n\r\n\t\t// TODO this exposes the internal events\r\n\t\tthis.events = this._callbacks.events;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a callback for a specific key.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Override fill color value and make all slices green\r\n\t * chart.series.template.adapter.add(\"fill\", (value, target, key) => {\r\n\t *   return am4core.color(\"#005500\");\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Override fill color value and make all slices green\r\n\t * chart.series.template.adapter.add(\"fill\", function(value, target, key) {\r\n\t *   return am4core.color(\"#005500\");\r\n\t * });\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"adapter\": {\r\n\t *     \t// Override fill color value and make all slices green\r\n\t *     \t\"fill\": function(value, target, key) {\r\n\t *     \t  return am4core.color(\"#005500\");\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will call user-defined function (adapter) whenever `fill` value\r\n\t * is requested from the Pie series, allowing it to override the default\r\n\t * using custom code and any fuzzy logic.\r\n\t *\r\n\t * There can be any number of adapters set on one property key.\r\n\t *\r\n\t * In this case adapters will be applied in daisy-chain fashion. The first\r\n\t * adapter in queue will make its transformation. The next one will have\r\n\t * the output of the first adapter as a starting value, etc.\r\n\t *\r\n\t * The order of the adapters are determined either by the order they were\r\n\t * added in, or their `priority` value.\r\n\t *\r\n\t * The heigher the `priority`, the later in the game adapter will be applied.\r\n\t *\r\n\t * @param {string}         key       Key\r\n\t * @param {any[]) => any}  callback  A callback function\r\n\t * @param {number}         priority  The higher priority, the more chance the adapter will be applied last\r\n\t * @param {any}            scope     Scope for the callback function\r\n\t */\r\n\tpublic add<Key extends keyof T, C>(key: Key, callback: (this: C, value: T[Key], target: Target, key: keyof T) => T[Key], priority: number = 0, scope?: C): void {\r\n\t\tthis._callbacks.insert({\r\n\t\t\tid: ++this._callbackId,\r\n\t\t\tkey: key,\r\n\t\t\tcallback: callback,\r\n\t\t\tpriority: priority,\r\n\t\t\tscope: scope\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether specific adapter is already set.\r\n\t *\r\n\t * @param   {string}         key       Key\r\n\t * @param   {any[]) => any}  callback  A callback function\r\n\t * @param   {number}         priority  The higher priority, the more chance the adapter will be applied last\r\n\t * @param   {any}            scope     Scope for the callback function\r\n\t * @returns                            Adapter set?\r\n\t */\r\n\tpublic has<Key extends keyof T, C>(key: Key, callback: (this: C, value: T[Key], target: Target, key: keyof T) => T[Key], priority: number = 0, scope?: C): boolean {\r\n\t\t// @todo Implement actual check\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes adapter callbacks for the specific `key`.\r\n\t *\r\n\t * If `priority` is specified, only callbacks for that priority are removed.\r\n\t *\r\n\t * @param {string} key      Key\r\n\t * @param {number} priority Priority\r\n\t * @todo Implement\r\n\t */\r\n\tpublic remove(key: string, priority?: number): void {\r\n\t\t// It has to make a copy because it removes the elements while iterating\r\n\t\t// TODO inefficient\r\n\t\t$array.each($iter.toArray(this._callbacks.iterator()), (item) => {\r\n\t\t\t// TODO test this\r\n\t\t\tif (item.key === key && (!$type.isNumber(priority) || priority === item.priority)) {\r\n\t\t\t\tthis._callbacks.remove(item);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if there are any adapters set for the specific `key`.\r\n\t *\r\n\t * @returns {boolean} Are there any adapters for the key?\r\n\t */\r\n\tpublic isEnabled<Key extends keyof T>(key: Key): boolean {\r\n\t\t// TODO check the key\r\n\t\treturn this._callbacks.length > 0 || globalAdapter.isEnabled<T, Target, Key>(this.object, key);\r\n\t}\r\n\r\n\t/**\r\n\t * Passes the input value through all the callbacks for the defined `key`.\r\n\t *\r\n\t * @param  {string}  key      Key\r\n\t * @param  {any}     value    Input value\r\n\t * @param  {any[]}   ...rest  Rest of the parameters to be passed into callback\r\n\t * @return {any}              Output value\r\n\t */\r\n\tpublic apply<Key extends keyof T>(key: Key, value: T[Key]): T[Key] {\r\n\t\t// This is needed to improve the performance and reduce garbage collection\r\n\t\tconst callbacks = this._callbacks.values;\r\n\t\tconst length = callbacks.length;\r\n\r\n\t\tif (length > 0) {\r\n\t\t\tfor (var i = 0; i < length; ++i) {\r\n\t\t\t\tconst item = callbacks[i];\r\n\r\n\t\t\t\tif (item.key === key) {\r\n\t\t\t\t\tvalue = item.callback.call(item.scope, value, this.object, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply global adapters\r\n\t\tvalue = globalAdapter.applyAll<T, Target, Key>(this.object, key, value);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all adapter keys that are currently in effect.\r\n\t *\r\n\t * @return {string[]} Adapter keys\r\n\t */\r\n\tpublic keys(): Array<keyof T> {\r\n\t\t// TODO inefficient\r\n\t\treturn $iter.toArray($iter.map(this._callbacks.iterator(), (x) => x.key));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all the adapter callbacks from `source`.\r\n\t *\r\n\t * @param {Adapter<Target, T>}  source  An Adapter to copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source._callbacks.iterator(), (x) => {\r\n\t\t\tthis.add(x.key, x.callback, x.priority, x.scope);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all callbacks from this Adapter.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._callbacks.clear();\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Adapter.ts","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_hide.js\n// module id = 30\n// module chunks = 302","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_redefine.js\n// module id = 31\n// module chunks = 302","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-html.js\n// module id = 32\n// module chunks = 302","/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions } from \"./InteractionOptions\";\r\nimport { MultiDisposer, IDisposer } from \"../utils/Disposer\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./InteractionObject\";\r\nimport { InteractionKeyboardObject } from \"./InteractionKeyboardObject\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { Inertia, InertiaTypes } from \"./Inertia\";\r\nimport { IPointer, IBreadcrumb } from \"./Pointer\";\r\nimport { addEventListener } from \"../utils/DOM\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IStyleProperty } from \"../defs/IStyleProperty\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $time from \"../utils/Time\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Interaction]]\r\n */\r\nexport interface IInteractionEvents extends IBaseObjectEvents {\r\n\r\n\ttrack: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tdown: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tup: {\r\n\t\tpointer: IPointer;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tfocus: {\r\n\t\tevent: FocusEvent;\r\n\t}\r\n}\r\n\r\n/**\r\n * Interface representing a delayed event\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IDelayedEvent {\r\n\ttype: keyof IInteractionObjectEvents;\r\n\tio: InteractionObject;\r\n\tpointer: IPointer;\r\n\tevent: MouseEvent | TouchEvent;\r\n\tkeepUntil?: number;\r\n\ttimeout?: IDisposer;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n﻿/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n *\r\n * @see {@link IInteractionEvents} for a list of available events\r\n */\r\nexport class Interaction extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IInteractionEvents}\r\n\t * @deprecated Use inetraction.body.events instead\r\n\t */\r\n\tpublic _events!: IInteractionEvents;\r\n\r\n\t/**\r\n\t * A reference to an [[Interaction]] object for document's body.\r\n\t *\r\n\t * Users can use it to add global, non-chart related events, that will be\r\n\t * applicable to the whole document.\r\n\t *\r\n\t * @type {InteractionObject}\r\n\t */\r\n\tpublic body: InteractionObject;\r\n\r\n\t/**\r\n\t * An indicator of global events were already initialized.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _globalEventsAdded: boolean = false;\r\n\r\n\t/**\r\n\t * Holds which mouse event listeners to use.\r\n\t *\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _pointerEvents = {\r\n\t\t\"pointerdown\": \"mousedown\",\r\n\t\t\"pointerup\": \"mouseup\",\r\n\t\t\"pointermove\": \"mousemove\",\r\n\t\t\"pointercancel\": \"mouseup\",\r\n\t\t\"pointerover\": \"mouseover\",\r\n\t\t\"pointerout\": \"mouseout\",\r\n\t\t\"wheel\": \"wheel\"\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates if Interaction should use only \"pointer\" type events, like\r\n\t * \"pointermove\", available in all modern browsers, ignoring \"legacy\"\r\n\t * events, like \"touchmove\".\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _usePointerEventsOnly: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if passive mode options is supported by this browser.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _passiveSupported: boolean = false;\r\n\r\n\t/**\r\n\t * Holds list of delayed events\r\n\t *\r\n\t * @type {IDelayedEvent[]}\r\n\t */\r\n\tprotected _delayedEvents: { out: IDelayedEvent[] } = { out: [] };\r\n\r\n\t/**\r\n\t * List of objects that current have a pointer hovered over them.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic overObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that currently has a pressed pointer.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic downObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that need mouse position to be reported to them.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic trackedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that are currently being dragged.\r\n\t *\r\n\t * @type {List<InteractionObject>}\r\n\t */\r\n\tpublic transformedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * An object that currently has focus. Usually set automatically via\r\n\t * [[InteractionObject]] `isFocus` method.\r\n\t *\r\n\t * @type {Optional<InteractionObject>}\r\n\t */\r\n\tpublic focusedObject: $type.Optional<InteractionObject>;\r\n\r\n\t/**\r\n\t * Holds all known pointers.\r\n\t *\r\n\t * @type {Dictionary<string, IPointer>}\r\n\t */\r\n\tpublic pointers = new Dictionary<string, IPointer>();\r\n\r\n\t/**\r\n\t * Inertia options that need to be applied to after element drag, if it's\r\n\t * `inert = true`.\r\n\t *\r\n\t * This is just a default, which can and probably will be overridden by\r\n\t * actual elements.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic inertiaOptions = new Dictionary<InertiaTypes, IInertiaOptions>();\r\n\r\n\t/**\r\n\t * Default options for click events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IHitOptions}\r\n\t */\r\n\tpublic hitOptions: IHitOptions = {\r\n\t\t//\"holdTime\": 1000,\r\n\t\t\"doubleHitTime\": 300,\r\n\t\t//\"delayFirstHit\": false,\r\n\t\t\"hitTolerance\": 10,\r\n\t\t\"noFocus\": true\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for hover events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IHoverOptions}\r\n\t */\r\n\tpublic hoverOptions: IHoverOptions = {\r\n\t\t\"touchOutBehavior\": \"leave\",\r\n\t\t\"touchOutDelay\": 1000\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for detecting a swipe gesture. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {ISwipeOptions}\r\n\t */\r\n\tpublic swipeOptions: ISwipeOptions = {\r\n\t\t\"time\": 500,\r\n\t\t\"verticalThreshold\": 75,\r\n\t\t\"horizontalThreshold\": 30\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for keyboard operations. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @type {IKeyboarOptions}\r\n\t */\r\n\tpublic keyboardOptions: IKeyboardOptions = {\r\n\t\t\"speed\": 0.1,\r\n\t\t\"accelleration\": 1.2,\r\n\t\t\"accellerationDelay\": 2000\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Constructor. Sets up universal document-wide move events to handle stuff\r\n\t * outside particular chart container.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Call super\r\n\t\tsuper();\r\n\r\n\t\t// Set class name\r\n\t\tthis.className = \"Interaction\";\r\n\r\n\t\t// Create InteractionObject for <body>\r\n\t\tthis.body = this.getInteraction(document.body);\r\n\r\n\t\tthis._disposers.push(this.body);\r\n\r\n\t\t// Detect browser capabilities and determine what event listeners to use\r\n\t\tif (window.hasOwnProperty(\"PointerEvent\")) {\r\n\t\t\t// IE10+/Edge without touch controls enabled\r\n\t\t\tthis._pointerEvents.pointerdown = \"pointerdown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"pointerup\";\r\n\t\t\tthis._pointerEvents.pointermove = \"pointermove\";\r\n\t\t\tthis._pointerEvents.pointercancel = \"pointercancel\";\r\n\t\t\tthis._pointerEvents.pointerover = \"pointerover\";\r\n\t\t\tthis._pointerEvents.pointerout = \"pointerout\";\r\n\t\t\t//this._usePointerEventsOnly = true;\r\n\t\t} else if (window.hasOwnProperty(\"MSPointerEvent\")) {\r\n\t\t\t// IE9\r\n\t\t\tthis._pointerEvents.pointerdown = \"MSPointerDown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"MSPointerUp\";\r\n\t\t\tthis._pointerEvents.pointermove = \"MSPointerMove\";\r\n\t\t\tthis._pointerEvents.pointercancel = \"MSPointerUp\";\r\n\t\t\tthis._pointerEvents.pointerover = \"MSPointerOver\";\r\n\t\t\tthis._pointerEvents.pointerout = \"MSPointerOut\";\r\n\t\t\t//this._usePointerEventsOnly = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// uses defaults for normal browsers\r\n\t\t}\r\n\r\n\t\t// Detect proper mouse wheel events\r\n\t\tif (\"onwheel\" in document.createElement(\"div\")) {\r\n\t\t\t// Modern browsers\r\n\t\t\tthis._pointerEvents.wheel = \"wheel\";\r\n\t\t}\r\n\t\telse if ($type.hasValue((<any>document).onmousewheel)) {\r\n\t\t\t// Webkit and IE support at least \"mousewheel\"\r\n\t\t\tthis._pointerEvents.wheel = \"mousewheel\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// The rest of the legacy browsers\r\n\t\t\tthis._pointerEvents.wheel = \"DOMMouseScroll\";\r\n\t\t}\r\n\r\n\t\t// Set up default inertia options\r\n\t\tthis.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\t\tthis.inertiaOptions.setKey(\"resize\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\r\n\t\t// Check for passive mode support\r\n\t\ttry {\r\n\t\t\tlet target = this;\r\n\t\t\tlet options = Object.defineProperty({}, \"passive\", {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\ttarget._passiveSupported = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\twindow.addEventListener(\"test\", options, options);\r\n\t\t\twindow.removeEventListener(\"test\", options, options);\r\n\t\t} catch (err) {\r\n\t\t\tthis._passiveSupported = false;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void { }\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Processing\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Sets up global events.\r\n\t *\r\n\t * We need this so that we can track drag movement beyond chart's container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic addGlobalEvents(): void {\r\n\t\tif (!this._globalEventsAdded) {\r\n\r\n\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerDown(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointermove,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerMove(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointerup,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerUp(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\tdocument,\r\n\t\t\t\tthis._pointerEvents.pointercancel,\r\n\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerUp(ev, true) }\r\n\t\t\t));\r\n\r\n\t\t\t// No need to duplicate events for hubrid systems that support both\r\n\t\t\t// pointer events and touch events. Touch events are need only for\r\n\t\t\t// some touch-only systems, like Mobile Safari.\r\n\t\t\tif (!this._usePointerEventsOnly) {\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchStart(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchmove\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchMove(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchend\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchEnd(ev) }\r\n\t\t\t\t));\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keydown\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyDown(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keyup\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyUp(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._globalEventsAdded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject} io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processClickable(io: InteractionObject): void {\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is hoverable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject} io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processHoverable(io: InteractionObject): void {\r\n\t\tif (io.hoverable || io.trackable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"hoverable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"hoverable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<MouseEvent | PointerEvent>(io.element, this._pointerEvents.pointerout, (e) => this.handlePointerOut(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent | PointerEvent>(io.element, this._pointerEvents.pointerover, (e) => this.handlePointerOver(io, e))\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t\tif (io.trackable) {\r\n\t\t\t\t//sprite.addEventListener(\"touchmove\", this.handleTouchMove, false, this);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"hoverable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"hoverable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up [[InteractionObject]] as movable. Movable can be any\r\n\t * transformation, e.g. drag, swipe, resize, track.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processMovable(io: InteractionObject) {\r\n\r\n\t\t// Add unified events\r\n\t\tif (io.draggable || io.swipeable || io.trackable || io.resizable) {\r\n\r\n\t\t\t// Prep the element\r\n\t\t\tif (!this.isGlobalElement(io)) {\r\n\t\t\t\tthis.prepElement(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is trackable and sets relative events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processTrackable(io: InteractionObject): void {\r\n\t\tthis.processHoverable(io);\r\n\t\tthis.processMovable(io);\r\n\t\tif (io.trackable) {\r\n\t\t\tthis.trackedObjects.moveValue(io);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.trackedObjects.removeValue(io);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is draggable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processDraggable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is swipeable and sets relative events.\r\n\t *\r\n\t * A swipe event is triggered when a horizontal drag of 75px or more (and\r\n\t * less than 30px vertically) occurs within 700 milliseconds. This can be\r\n\t * overridden in sprites [[swipeOptions]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processSwipeable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is resizable and attaches required events\r\n\t * to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processResizable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is supposed to capture mouse wheel events\r\n\t * and prepares it to catch those events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processWheelable(io: InteractionObject): void {\r\n\t\tif (io.wheelable) {\r\n\t\t\t//io.hoverable = true;\r\n\t\t\tif (!io.eventDisposers.hasKey(\"wheelable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"wheelable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<WheelEvent>(io.element, this._pointerEvents.wheel, (e) => this.handleMouseWheel(io, e)),\r\n\t\t\t\t\tio.events.on(\"out\", (e) => {\r\n\t\t\t\t\t\tif (io.wheelable) {\r\n\t\t\t\t\t\t\tthis.unlockWheel();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tio.events.on(\"over\", (e) => {\r\n\t\t\t\t\t\tif (io.wheelable) {\r\n\t\t\t\t\t\t\tthis.lockWheel();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"wheelable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"wheelable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is focusable. A focusable element is an\r\n\t * element that will be highlighted when users presses TAB key. If the\r\n\t * element is focusable, this function will attach relative focus/blur\r\n\t * events to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processFocusable(io: InteractionObject): void {\r\n\t\tif (io.focusable === true && (io.tabindex > -1)) {\r\n\t\t\tif (!io.eventDisposers.hasKey(\"focusable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"focusable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"focus\", (e) => this.handleFocus(io, e)),\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"blur\", (e) => this.handleBlur(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"focusable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"focusable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is \"touchable\". It means any interaction\r\n\t * whatsoever: mouse click, touch screen tap, swipe, drag, resize, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t */\r\n\tpublic processTouchable(io: InteractionObject): void {\r\n\t\t// Add unified events\r\n\t\tif (io.clickable || io.hoverable || io.trackable || io.draggable || io.swipeable || io.resizable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"touchable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"touchable\", new MultiDisposer([\r\n\r\n\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t(e) => this.handlePointerDown(io, e)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t(e) => this.handleTouchDown(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"touchable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"touchable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Non-pointer events\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatches \"focus\" event when element gains focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {FocusEvent}         ev  Original event\r\n\t */\r\n\tpublic handleFocus(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = true;\r\n\t\tif (io.events.isEnabled(\"focus\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"focus\"] = {\r\n\t\t\t\ttype: \"focus\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"focus\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used by regular click events to prevent focus if \"noFocus\" is set.\r\n\t *\r\n\t * This should not be called by \"focus\" handlers.\r\n\t *\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent | TouchEvent}         ev  Original event\r\n\t */\r\n\tprivate handleFocusBlur(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\")) {\r\n\t\t\t/*if (ev.cancelable) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}*/\r\n\t\t\t//this.setTimeout($dom.blur, 1);\r\n\t\t\tio.events.once(\"focus\", $dom.blur);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches \"blur\" event when element loses focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {FocusEvent}         ev  Original event\r\n\t */\r\n\tpublic handleBlur(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = false;\r\n\t\tif (io.events.isEnabled(\"blur\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"blur\"] = {\r\n\t\t\t\ttype: \"blur\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"blur\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global keyboard-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Checks if there is an item that has currently focus and that they key is\r\n\t * one of the directional keys. If both of the conditions are true, it\r\n\t * creates an object to simulate movement of dragable element with keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardEvent} ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyDown(ev: KeyboardEvent): void {\r\n\r\n\t\tif (this.focusedObject) {\r\n\t\t\tif (keyboard.isKey(ev, \"esc\")) {\r\n\t\t\t\t// ESC removes focus\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\t\t\telse if (this.focusedObject.draggable && keyboard.isKey(ev, [\"up\", \"down\", \"left\", \"right\"])) {\r\n\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Get focused object\r\n\t\t\t\tlet io = this.focusedObject;\r\n\r\n\t\t\t\t// Get particular key\r\n\t\t\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\r\n\t\t\t\t// If such disposer already exists we know the event is going on so we\r\n\t\t\t\t// just move on\r\n\t\t\t\tif (io.eventDisposers.hasKey(disposerKey)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create a keyboard mover\r\n\t\t\t\tlet ko = new InteractionKeyboardObject(io, ev);\r\n\t\t\t\tio.eventDisposers.setKey(disposerKey, ko);\r\n\t\t\t\tswitch (keyboard.getEventKey(ev)) {\r\n\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\tko.directionY = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\tko.directionY = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tko.directionX = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tko.directionX = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches related events when the keyboard key is realeasd.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardEvent} ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyUp(ev: KeyboardEvent): void {\r\n\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\t\tif (this.focusedObject) {\r\n\t\t\tconst disposer = this.focusedObject.eventDisposers.getKey(disposerKey);\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Dispose stuff\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tthis.focusedObject.eventDisposers.removeKey(disposerKey);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handler for a global \"pointermove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerMove(ev: MouseEvent): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Update current point position\r\n\t\tpointer.point = this.getPointerPoint(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"track\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\r\n\t\t// Track\r\n\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t// Process further\r\n\t\tthis.handleGlobalMove(pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerdown\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerDown(ev: MouseEvent): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Remove delayed hovers\r\n\t\t//console.log(\"Running processDelayed fom handleGlobalPointerDown\")\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"down\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents touch action from firing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event\r\n\t */\r\n\tpublic preventTouchAction(ev: TouchEvent): void {\r\n\t\tif (!ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerup\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {MouseEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerUp(ev: MouseEvent, cancelled: boolean = false): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"up\")) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\ttype: \"up\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t}\r\n\r\n\t\t// Process further\r\n\t\tthis.handleGlobalUp(pointer, ev, cancelled);\r\n\r\n\t}\r\n\r\n\t/**\r\n * ==========================================================================\r\n * Global touch-related even handlers\r\n * ==========================================================================\r\n */\r\n\r\n\t/**\r\n\t * Handler for a global \"touchmove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchMove(ev: TouchEvent): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t/*ev.stopPropagation();\r\n\t\tif (ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}*/\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Update current point position\r\n\t\t\tpointer.point = this.getPointerPoint(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"track\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\t\ttype: \"track\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Track\r\n\t\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t\t// Process further\r\n\t\t\tthis.handleGlobalMove(pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchstart\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchStart(ev: TouchEvent): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Remove delayed hovers\r\n\t\t//console.log(\"Running processDelayed fom handleGlobalTouchStart\")\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (!this._usePointerEventsOnly && this.events.isEnabled(\"down\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\t\ttype: \"down\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchend\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {TouchEvent} ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchEnd(ev: TouchEvent): void {\r\n\r\n\t\t//this.log(\"[RAW] (global)\", ev);\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t/*ev.stopPropagation();\r\n\t\tif (ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}*/\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"up\")) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle element-related events\r\n\t\t\tthis.handleGlobalUp(pointer, ev);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles event when pointer is over [[InteractionObject]] and button is\r\n\t * pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}          io  Element\r\n\t * @param {MouseEvent | PointerEvent}  ev  Original event\r\n\t */\r\n\tpublic handlePointerDown(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t//this.log(\"[RAW]\", ev);\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t//ev.preventDefault();\r\n\t\t//ev.stopPropagation();\r\n\t\t//if (ev.defaultPrevented) {\r\n\t\t//}\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Ignore if it's anything but mouse's primary button\r\n\t\tif (!pointer.touch && (ev.which > 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Set mouse button\r\n\t\tpointer.button = ev.which;\r\n\r\n\t\t// Reset pointer\r\n\t\tthis.resetPointer(pointer, ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleDown(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] is hovered by a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent}         ev  Original event\r\n\t */\r\n\tpublic handlePointerOver(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t//this.log(\"[RAW]\", ev);\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOver(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] loses hover from a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {MouseEvent}         ev  Original event\r\n\t */\r\n\tpublic handlePointerOut(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t//this.log(\"[RAW]\", ev);\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOut(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when mouse wheel is crolled over the [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io  Element\r\n\t * @param {WheelEvent}         ev  Original event\r\n\t * @todo Investigate more-cross browser stuff https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n\t */\r\n\tpublic handleMouseWheel(io: InteractionObject, ev: WheelEvent): void {\r\n\r\n\t\t//this.log(\"[RAW]\", ev);\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Update current point position\r\n\t\tpointer.point = this.getPointerPoint(ev);\r\n\r\n\t\t// Init delta values\r\n\t\tlet deltaX: number = 0, deltaY: number = 0;\r\n\r\n\r\n\t\t// Set up modifier\r\n\t\t// This is needed because FireFox reports wheel deltas in \"lines\" instead\r\n\t\t// of pixels so we have to approximate pixel value\r\n\t\tlet mod = 1;\r\n\t\tif (ev.deltaMode == 1) {\r\n\t\t\tmod = 50;\r\n\t\t}\r\n\r\n\t\t// Calculate deltas\r\n\t\tif (ev instanceof WheelEvent) {\r\n\t\t\tdeltaX = Math.round(ev.deltaX) * mod;\r\n\t\t\tdeltaY = Math.round(ev.deltaY) * mod;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid event type\");\r\n\t\t}\r\n\r\n\t\t// Handle the event\r\n\t\tthis.handleWheel(io, pointer, deltaX, deltaY, ev);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific touch-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t  * Handles an event when an [[InteractionObject]] is touched on a touch\r\n\t  * device.\r\n\t  *\r\n\t  * @ignore Exclude from docs\r\n\t  * @param {InteractionObject}  io  Element\r\n\t  * @param {TouchEvent}         ev  Original event\r\n\t  */\r\n\tpublic handleTouchDown(io: InteractionObject, ev: TouchEvent): void {\r\n\r\n\t\t//this.log(\"[RAW]\", ev);\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\tthis.maybePreventDefault(io, ev);\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\tthis.resetPointer(pointer, ev.changedTouches[i]);\r\n\r\n\t\t\t// Process down\r\n\t\t\tthis.handleDown(io, pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Universal handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles click/tap. Checks for doublehit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleHit(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Check if this is a double-hit\r\n\t\tlet now = $time.getTime();\r\n\t\tif (io.lastHit && (io.lastHit >= (now - this.getHitOption(io, \"doubleHitTime\")))) {\r\n\r\n\t\t\t// Yup - it's a double-hit\r\n\r\n\t\t\t// Cancel the hit\r\n\t\t\t//clearTimeout(io.lastHitPointer.hitTimeout);\r\n\r\n\t\t\t// If it happened too fast it probably means that hybrid device just\r\n\t\t\t// generated two events for the same tap\r\n\t\t\tif ((now - io.lastHit) < 100) {\r\n\t\t\t\t// Ignore\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear last hit\r\n\t\t\tio.lastHit = undefined;\r\n\t\t\tio.lastHitPointer = undefined;\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (io.events.isEnabled(\"doublehit\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"doublehit\"] = {\r\n\t\t\t\t\ttype: \"doublehit\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"doublehit\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Log last hit\r\n\t\t\tio.lastHit = now;\r\n\t\t\tio.lastHitPointer = pointer;\r\n\r\n\t\t\tif (pointer.button === 3) {\r\n\t\t\t\t// Execute HIT now\r\n\t\t\t\tif (io.events.isEnabled(\"rightclick\")) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"rightclick\"] = {\r\n\t\t\t\t\t\ttype: \"rightclick\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev\r\n\t\t\t\t\t}\r\n\t\t\t\t\tio.events.dispatchImmediately(\"rightclick\", imev);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (io.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"hit\"] = {\r\n\t\t\t\t\t\ttype: \"hit\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tpoint: pointer.point\r\n\t\t\t\t\t};\r\n\t\t\t\t\tio.events.dispatchImmediately(\"hit\", imev);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer hovering over [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t * @param {boolean}                  soft     Invoked by helper function\r\n\t */\r\n\tpublic handleOver(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, soft: boolean = false): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove any delayed outs\r\n\t\tthis.processDelayed();\r\n\r\n\t\t//this.log(\"[HANDLER] OVER\", ev, io);\r\n\r\n\t\t// Add pointer\r\n\t\tio.overPointers.moveValue(pointer);\r\n\r\n\t\t// Check if object is not yet hovered\r\n\t\tif (!io.isHover) {\r\n\r\n\t\t\t// Set element as hovered\r\n\t\t\tio.isHover = true;\r\n\t\t\tthis.overObjects.moveValue(io);\r\n\r\n\t\t\t// Generate body track event. This is needed so that if element loads\r\n\t\t\t// under unmoved mouse cursor, we still need all the actions that are\r\n\t\t\t// required to happen to kick in.\r\n\t\t\tthis.handleTrack(this.body, pointer, ev, true);\r\n\r\n\t\t\t// Event\r\n\t\t\tif (io.events.isEnabled(\"over\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"over\"] = {\r\n\t\t\t\t\ttype: \"over\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"over\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when [[InteractionObject]] is no longer hovered.\r\n\t *\r\n\t * If `soft = true`, this means that method is being invoked by some other\r\n\t * code, not hard \"out\" function, like `handleUp` which implies we need to\r\n\t * run additional checks before unhovering the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t * @param {boolean}                  soft     Invoked by helper function\r\n\t * @param {boolean}                  force    Force imediate out\r\n\t */\r\n\tpublic handleOut(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, soft: boolean = false, force: boolean = false): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this.log(\"[HANDLER] OUT\", ev, io);\r\n\r\n\t\t// Remove pointer\r\n\t\tio.overPointers.removeValue(pointer);\r\n\r\n\t\t// Check if element is still hovered\r\n\t\tif (io.isHover && (!io.hasDelayedOut || force)) {\r\n\r\n\r\n\t\t\t// Should we run additional checks?\r\n\t\t\tif (soft && io.overPointers.length) {\r\n\t\t\t\t//this.log(\"[HANDLER] failed soft test \" + io.overPointers.length, ev, io);\r\n\t\t\t\t// There are still pointers hovering - don't do anything else and\r\n\t\t\t\t// wait until either no over pointers are there or we get a hard out\r\n\t\t\t\t// event.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Should we delay \"out\" if this is happening on a touch device?\r\n\t\t\tif (pointer.touch && !force && !this.old(pointer)) {\r\n\t\t\t\t//this.log(\"[HANDLER] OUT delaying\", ev, io);\r\n\r\n\t\t\t\t// This is a touch pointer, and it hasn't moved, let's pretend\r\n\t\t\t\t// the object is still hovered, and act as per \"behavior\" setting\r\n\t\t\t\tlet behavior = this.getHoverOption(io, \"touchOutBehavior\");\r\n\t\t\t\tif (behavior == \"leave\") {\r\n\t\t\t\t\t// Set to \"leave\", so we do not execute any \"out\" event.\r\n\t\t\t\t\t// It will be handled by any other interaction that happens\r\n\t\t\t\t\t// afterwards.\r\n\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tkeepUntil: $time.getTime() + 500\r\n\t\t\t\t\t});\r\n\t\t\t\t\tio.hasDelayedOut = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if (behavior == \"delay\" && this.getHoverOption(io, \"touchOutDelay\")) {\r\n\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tkeepUntil: $time.getTime() + 500,\r\n\t\t\t\t\t\ttimeout: this.setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t\t\t\t\t}, this.getHoverOption(io, \"touchOutDelay\"))\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Nothing for \"remove\" - that's how it works \"out-of-the-box\"\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//this.log(\"[HANDLER] OUT unhovering\", ev, io);\r\n\r\n\t\t\t// Set element as not hovered\r\n\t\t\tio.isHover = false;\r\n\t\t\tthis.overObjects.removeValue(io);\r\n\r\n\t\t\t// Invoke event\r\n\t\t\tif (io.events.isEnabled(\"out\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"out\"] = {\r\n\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"out\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset object from lefover delayed outs, pointers\r\n\t\t\tio.overPointers.clear();\r\n\t\t\tio.hasDelayedOut = false;\r\n\t\t\t// @todo (clean delayed)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes dalyed events, such as \"out\" event that was initiated for\r\n\t * elements by touch.\r\n\t */\r\n\tprivate processDelayed(): void {\r\n\r\n\t\tlet delayedEvent;\r\n\t\twhile (delayedEvent = this._delayedEvents.out.pop()) {\r\n\t\t\tif (delayedEvent.timeout) {\r\n\t\t\t\tdelayedEvent.timeout.dispose();\r\n\t\t\t}\r\n\t\t\tthis.handleOut(delayedEvent.io, delayedEvent.pointer, delayedEvent.event, false, true);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer down.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleDown(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent | undefined): void {\r\n\r\n\t\t//this.log(\"[HANDLER] DOWN\", ev, io);\r\n\r\n\t\t// Need to prevent default event from happening on transformable objects\r\n\t\tthis.maybePreventDefault(io, ev);\r\n\r\n\t\t// Stop inertia animations if they're currently being played out\r\n\t\tif (io.inert) {\r\n\t\t\tthis.stopInertia(io);\r\n\t\t}\r\n\r\n\t\t// Trigger hover because some touch devices won't trigger over events\r\n\t\t// on their own\r\n\t\tthis.handleOver(io, pointer, ev, true);\r\n\r\n\t\t// Add pointer to list\r\n\t\tio.downPointers.moveValue(pointer);\r\n\r\n\t\t// Apply styles if necessary\r\n\t\tthis.applyCursorDownStyle(io, pointer);\r\n\r\n\t\t// Check if object is already down\r\n\t\tif (!io.isDown) {\r\n\r\n\t\t\t// Lose focus if needed\r\n\t\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\") && this.focusedObject) {\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\r\n\t\t\t// Set object as hovered\r\n\t\t\tio.isDown = true;\r\n\t\t\tthis.downObjects.moveValue(io);\r\n\r\n\t\t\t// Prep object for dragging and/or resizing\r\n\t\t\tif (io.draggable) {\r\n\t\t\t\t//this.log(\"[HANDLER] starting drag \" + io.draggable, ev, io);\r\n\t\t\t\tthis.processDragStart(io, pointer, ev);\r\n\t\t\t}\r\n\t\t\tif (io.resizable) {\r\n\t\t\t\tthis.processResizeStart(io, pointer, ev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Dispatch \"down\" event\r\n\t\tif (io.events.isEnabled(\"down\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer up.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleGlobalUp(pointer: IPointer, ev: MouseEvent | TouchEvent | undefined, cancelled: boolean = false): void {\r\n\r\n\t\t//this.log(\"[HANDLER] GLOBAL UP\", ev);\r\n\r\n\t\t// Process all down objects\r\n\t\t$iter.each(this.downObjects.backwards().iterator(), (io) => {\r\n\r\n\t\t\t// Check if this particular pointer is pressing down\r\n\t\t\t// on object\r\n\t\t\tif (io.downPointers.contains(pointer)) {\r\n\t\t\t\tthis.handleUp(io, pointer, ev, cancelled);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when [[InteractionObject]] is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Interaction object\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleUp(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, cancelled: boolean = false): void {\r\n\r\n\t\t//this.log(\"[HANDLER] UP\", ev, io);\r\n\r\n\t\t// Restore cursor style\r\n\t\tthis.restoreCursorDownStyle(io, pointer);\r\n\r\n\t\t// Remove pointer from the list\r\n\t\tio.downPointers.removeValue(pointer);\r\n\r\n\t\t// Trigger out because some touch devices won't trigger out events\r\n\t\t// on their own\r\n\t\tthis.handleOut(io, pointer, ev, true);\r\n\r\n\t\t// Check if object still down\r\n\t\tif (io.isDown) {\r\n\r\n\t\t\t// Check if there are no other pointers hovering this element\r\n\t\t\tif (io.downPointers.length == 0) {\r\n\t\t\t\t// Set element as no longer down\r\n\t\t\t\tio.isDown = false;\r\n\t\t\t\tthis.downObjects.removeValue(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Dispatch \"up\" event\r\n\t\t\tif (io.events.isEnabled(\"up\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"up\"] = {\r\n\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if this was not a cancelled event.\r\n\t\t\t// If event was canelled (which might happen if gesture resulted in\r\n\t\t\t// navigation or page scroll) there's no point in triggering hit and\r\n\t\t\t// other actions.\r\n\t\t\tif (!cancelled) {\r\n\r\n\t\t\t\t////this.log(\"[HANDLER] UP (event triggered)\", ev, io);\r\n\t\t\t\t// Handle swiping-related stuff\r\n\t\t\t\tif (io.swipeable && this.swiped(io, pointer)) {\r\n\t\t\t\t\t// Swiped - nothing else should happen\r\n\t\t\t\t\tthis.handleSwipe(io, pointer, ev);\r\n\t\t\t\t\t////this.log(\"[HANDLER] UP (swipe?)\", ev, io);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t////this.log(\"[HANDLER] UP (proceeding) \" + io.draggable, ev, io);\r\n\t\t\t\t\t// Check if it maybe a click\r\n\t\t\t\t\tif (io.clickable && !this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tthis.handleHit(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Handle inertia\r\n\t\t\t\t\tif (io.inert && this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\t////this.log(\"[HANDLER] UP (tarting inertia)\", ev, io);\r\n\t\t\t\t\t\tthis.handleInertia(io, pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (io.draggable) {\r\n\t\t\t\t\t\t////this.log(\"[HANDLER] UP (stopping drag)\", ev, io);\r\n\t\t\t\t\t\tthis.processDragStop(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (io.resizable) {\r\n\t\t\t\t\t\tthis.processResizeStop(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if event needs to be prevented on draggable and such items, so that\r\n\t * touch gestures like navigation and scroll do not kick in.\r\n\t *\r\n\t * @param {InteractionObject}        io  Object\r\n\t * @param {MouseEvent | TouchEvent}  ev  Event\r\n\t */\r\n\tprivate maybePreventDefault(io: InteractionObject, ev: MouseEvent | TouchEvent | undefined): void {\r\n\t\tif ($type.hasValue(ev) && (io.draggable || io.swipeable || io.trackable || io.resizable) && !this.isGlobalElement(io)) {\r\n\t\t\t//this.log(\"[PREVENT]\", ev);\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer move.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleGlobalMove(pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Process hovered elements\r\n\t\t// We check if the element became unhovered without reporting the mouseout\r\n\t\t// event. (it happens in some cases)\r\n\t\tif (!pointer.touch) {\r\n\t\t\t$iter.each(this.overObjects.backwards().iterator(), (io) => {\r\n\t\t\t\t// Is this pointer relevant to element?\r\n\t\t\t\tif (io.overPointers.contains(pointer) && io.hoverable) {\r\n\t\t\t\t\t// Check if the element is still hovered\r\n\t\t\t\t\tlet reset = false;\r\n\t\t\t\t\tif (io.element && pointer.lastEvent) {\r\n\t\t\t\t\t\tif (!$dom.contains(io.element, <HTMLElement>pointer.lastEvent.target)) {\r\n\t\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (reset) {\r\n\t\t\t\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Process down elements\r\n\t\t$iter.each(this.transformedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (io.downPointers.contains(pointer) &&\r\n\t\t\t\t// Swipe still happening?\r\n\t\t\t\t!(io.swipeable && this.swiping(io, pointer)) &&\r\n\t\t\t\t(io.draggable || io.resizable)) {\r\n\t\t\t\tthis.handleTransform(io, ev);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Process tracked elements\r\n\t\t$iter.each(this.trackedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (!io.overPointers.contains(pointer)) {\r\n\t\t\t\tthis.handleTrack(io, pointer, ev);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles reporting of pointer movement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io        Element\r\n\t * @param {IPointer}                 pointer    Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev         Original event\r\n\t * @param {boolean}                  skipCheck  Sould we skip check if cursor actually moved\r\n\t */\r\n\tpublic handleTrack(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, skipCheck = false): void {\r\n\r\n\t\t// Do nothing if the cursor did not actually move\r\n\t\tif (!skipCheck && !this.moved(pointer, 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initiate TRACK event\r\n\t\tif (io.events.isEnabled(\"track\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tpointer: pointer\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles swipe action.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic handleSwipe(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// We pass in InteractionEvent with shift in mouse coordinates\r\n\t\t// between when the drag started and ended\r\n\t\tif (io.events.isEnabled(\"swipe\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipe\"] = {\r\n\t\t\t\ttype: \"swipe\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"swipe\", imev);\r\n\t\t}\r\n\r\n\t\tif (pointer.startPoint.x < pointer.point.x) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swiperight\"] = {\r\n\t\t\t\t\ttype: \"swiperight\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swiperight\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (io.events.isEnabled(\"swipeleft\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipeleft\"] = {\r\n\t\t\t\t\ttype: \"swipeleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swipeleft\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event triggering for wheel rotation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t * @param {number}             deltaX   Horizontal shift\r\n\t * @param {number}             deltaY   Vertical shift\r\n\t * @param {WheelEvent}         ev       Original event\r\n\t */\r\n\tpublic handleWheel(io: InteractionObject, pointer: IPointer, deltaX: number, deltaY: number, ev: WheelEvent): void {\r\n\t\tconst shift: IPoint = {\r\n\t\t\tx: deltaX,\r\n\t\t\ty: deltaY\r\n\t\t};\r\n\r\n\t\t// Trigger generic WHEEL event\r\n\t\tif (io.events.isEnabled(\"wheel\")) {\r\n\t\t\tio.events.dispatchImmediately(\"wheel\", {\r\n\t\t\t\ttype: \"wheel\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tshift: shift\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Trigger direction-specific events\r\n\r\n\t\t// Horizontal\r\n\t\tif (deltaX < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelleft\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelleft\", {\r\n\t\t\t\t\ttype: \"wheelleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaX > 0) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelright\", {\r\n\t\t\t\t\ttype: \"wheelright\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Vertical\r\n\t\t} else if (deltaY < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelup\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelup\", {\r\n\t\t\t\t\ttype: \"wheelup\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaY > 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheeldown\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheeldown\", {\r\n\t\t\t\t\ttype: \"wheeldown\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates inertia checking sub-routines for different movement types:\r\n\t * drag, resize.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}   sprite\r\n\t * @param {IPointer}            pointer\r\n\t */\r\n\tpublic handleInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\tif (io.draggable && io.downPointers.length === 0) {\r\n\t\t\tthis.handleMoveInertia(io, pointer);\r\n\t\t}\r\n\r\n\t\tif (io.resizable && io.downPointers.length > 1) {\r\n\t\t\tthis.handleResizeInertia(io, pointer);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues moving the element to simulate the effect of inertia. Happens\r\n\t * when `inert` and `draggable` object is dragged and then released.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic handleMoveInertia(io: InteractionObject, pointer: IPointer): void {\r\n\t\tlet interaction = io;\r\n\t\tlet type: \"move\" = \"move\";\r\n\t\tlet point = {\r\n\t\t\t\"x\": pointer.point.x,\r\n\t\t\t\"y\": pointer.point.y\r\n\t\t};\r\n\t\tlet startPoint = {\r\n\t\t\t\"x\": pointer.startPoint.x,\r\n\t\t\t\"y\": pointer.startPoint.y\r\n\t\t};\r\n\r\n\t\t// Init inertia object\r\n\t\tlet inertia = new Inertia(interaction, type, point, startPoint);\r\n\r\n\t\t// Get inertia data\r\n\t\tlet ref = this.getTrailPoint(pointer, $time.getTime() - this.getInertiaOption(io, \"move\", \"time\"));\r\n\t\tif (typeof ref === \"undefined\") {\r\n\t\t\tthis.processDragStop(io, pointer, pointer.lastUpEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init animation options\r\n\t\tlet factor = this.getInertiaOption(io, \"move\", \"factor\");\r\n\t\tlet animationOptions = [{\r\n\t\t\t\"to\": pointer.point.x + (pointer.point.x - ref.point.x) * factor,\r\n\t\t\t\"property\": \"x\"\r\n\t\t}, {\r\n\t\t\t\"to\": pointer.point.y + (pointer.point.y - ref.point.y) * factor,\r\n\t\t\t\"property\": \"y\"\r\n\t\t}];\r\n\r\n\t\t// Start animation\r\n\t\tlet animation: Animation = new Animation(\r\n\t\t\tinertia,\r\n\t\t\tanimationOptions,\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"duration\"),\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"easing\")\r\n\t\t).start();\r\n\t\tthis._disposers.push(animation.events.on(\"animationended\", (ev) => {\r\n\t\t\tinertia.done();\r\n\t\t}));\r\n\r\n\t\t// Add inertia object\r\n\t\tio.inertias.setKey(\"move\", inertia);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues resizing of a `resizable` element after it is resized and\r\n\t * released.\r\n\t *\r\n\t * **NOTE:** this is is just a placeholder function. No actual fucntionality\r\n\t * is implemented, yet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic handleResizeInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Some day, folks. Some day...\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates element's position and size based on position of\r\n\t * all its related pointers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io  Element\r\n\t * @param {MouseEvent | TouchEvent}  ev  Original event\r\n\t */\r\n\tpublic handleTransform(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\r\n\r\n\t\t// Get primary pointer and its respective points\r\n\t\tlet pointer1: $type.Optional<IPointer> = io.downPointers.getIndex(0);\r\n\t\tlet point1: IPoint = null;\r\n\t\tlet startPoint1: IPoint = null;\r\n\r\n\t\tif (pointer1) {\r\n\t\t\tpoint1 = pointer1.point;\r\n\t\t\tstartPoint1 = pointer1.startPoint;\r\n\t\t}\r\n\r\n\t\t// Init secondary pointer\r\n\t\tlet pointer2: $type.Optional<IPointer>;\r\n\t\tlet point2: IPoint;\r\n\t\tlet startPoint2: IPoint;\r\n\r\n\t\t// Use center of the sprite to simulate \"second\" point of touch\r\n\t\tpoint2 = {\r\n\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\"y\": io.originalPosition.y\r\n\t\t};\r\n\t\tstartPoint2 = point2;\r\n\r\n\t\t// Determine if it's a sinngle pointer or multi\r\n\t\tlet singlePoint: boolean = true;\r\n\t\tfor (let i = 1; i < io.downPointers.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet nextPointer = io.downPointers.getIndex(i);\r\n\r\n\t\t\t// Doublecheck if it's not the same pointer by comparing original position\r\n\t\t\tif (startPoint1.x != nextPointer.startPoint.x || startPoint1.y != nextPointer.startPoint.y) {\r\n\r\n\t\t\t\t// Several pointers down\r\n\t\t\t\tsinglePoint = false;\r\n\r\n\t\t\t\t// Get second pointer\r\n\t\t\t\tpointer2 = nextPointer;\r\n\t\t\t\tpoint2 = pointer2.point;\r\n\t\t\t\tstartPoint2 = pointer2.startPoint;\r\n\r\n\t\t\t\t// Stop looking\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Primary touch point moved?\r\n\t\tlet pointer1Moved = pointer1 && this.moved(pointer1, 0);\r\n\r\n\t\t// Report DRAG_START if necessary\r\n\t\tif (io.draggable && pointer1 && pointer1.dragStartEvents && pointer1.dragStartEvents.length && pointer1Moved) {\r\n\t\t\tif (io.events.isEnabled(\"dragstart\")) {\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstart\", pointer1.dragStartEvents.shift());\r\n\t\t\t}\r\n\t\t\t//delete pointer1.dragStartEvents;\r\n\t\t}\r\n\r\n\t\t// Determine what we do in order of superiority\r\n\t\tif (singlePoint && io.draggable) {\r\n\r\n\t\t\t// We have only one pointer and the Sprite is draggable\r\n\t\t\t// There's nothing else to be done - just move it\r\n\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Check if second touch point moved\r\n\t\t\tlet pointer2Moved = pointer2 && this.moved(pointer2, 0);\r\n\r\n\t\t\tif (io.draggable && io.resizable) {\r\n\t\t\t\t//this.handleTransformAll(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tif (io.draggable) {\r\n\t\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (io.resizable) {\r\n\t\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles movement of the dragged element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}                        io            Element\r\n\t * @param {IPoint}                                   point         Current point of the pointer\r\n\t * @param {IPoint}                                   startPoint    Starting point of the pointer\r\n\t * @param {MouseEvent | TouchEvent | KeyboardEvent}  ev            Original event\r\n\t * @param {boolean}                                  pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformMove(io: InteractionObject, point: IPoint, startPoint: IPoint, ev: MouseEvent | TouchEvent | KeyboardEvent, pointerMoved: boolean): void {\r\n\r\n\t\tif (pointerMoved) {\r\n\t\t\tif (io.events.isEnabled(\"drag\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"drag\"] = {\r\n\t\t\t\t\ttype: \"drag\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tshift: {\r\n\t\t\t\t\t\t\"x\": point.x - startPoint.x,\r\n\t\t\t\t\t\t\"y\": point.y - startPoint.y\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstartPoint: startPoint,\r\n\t\t\t\t\tpoint: point\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"drag\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles resizing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io            Element\r\n\t * @param {IPoint}                   point1        Current position of reference point #1\r\n\t * @param {IPoint}                   startPoint1   Original position of reference point #1\r\n\t * @param {IPoint}                   point2        Current position of reference point #2\r\n\t * @param {IPoint}                   startPoint2   Original position of reference point #2\r\n\t * @param {MouseEvent | TouchEvent}  ev            Original event\r\n\t * @param {boolean}                  pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformResize(io: InteractionObject, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint, ev: MouseEvent | TouchEvent, pointerMoved: boolean): void {\r\n\t\tif (io.events.isEnabled(\"resize\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"resize\"] = {\r\n\t\t\t\ttype: \"resize\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tscale: $math.getScale(point1, startPoint1, point2, startPoint2),\r\n\t\t\t\tstartPoint1: startPoint1,\r\n\t\t\t\tpoint1: point1,\r\n\t\t\t\tstartPoint2: startPoint2,\r\n\t\t\t\tpoint2: point2\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"resize\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles all the preparations of the element when it starts to be dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processDragStart(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Add to draggedObjects\r\n\t\tthis.transformedObjects.moveValue(io);\r\n\r\n\t\t// Report \"dragstart\"\r\n\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstart\"] = {\r\n\t\t\ttype: \"dragstart\",\r\n\t\t\ttarget: io,\r\n\t\t\tevent: ev\r\n\t\t};\r\n\r\n\t\t// Log object that we are starting to drag, so we can check against and\r\n\t\t// avoid hovers on other objects that might be in the path of movement.\r\n\t\tif (pointer) {\r\n\t\t\tpointer.dragTarget = io;\r\n\t\t\t//pointer.startPoint = pointer.point;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * If pointer is set we will not fire the event until the pointer has\r\n\t\t * actually moved. If it's not set we don't have to wait for anything, so we\r\n\t\t * just fire off the event right away.\r\n\t\t */\r\n\t\tif (pointer && pointer.dragStartEvents) {\r\n\t\t\tpointer.dragStartEvents.push(imev);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tio.dispatchImmediately(\"dragstart\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up element drag operation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processDragStop(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Pointer set?\r\n\t\tif (!pointer) {\r\n\t\t\tpointer = this.getDragPointer(io);\r\n\t\t}\r\n\r\n\t\t// Unset drag object\r\n\t\tif (pointer) {\r\n\t\t\tpointer.dragTarget = undefined;\r\n\t\t}\r\n\r\n\t\t// Removed from transformedObjects\r\n\t\tthis.transformedObjects.removeValue(io);\r\n\r\n\t\t// Unlock document\r\n\t\t//this.unlockDocument();\r\n\r\n\t\t// Report dragstop\r\n\t\tif (!pointer || this.moved(pointer, 0)) {\r\n\t\t\tif (io.events.isEnabled(\"dragstop\")) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstop\"] = {\r\n\t\t\t\t\ttype: \"dragstop\",\r\n\t\t\t\t\ttarget: io\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstop\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles all the preparations of the element when it starts to be resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processResizeStart(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Add to draggedObjects\r\n\t\tthis.transformedObjects.moveValue(io);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up element drag operation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}        io       Element\r\n\t * @param {IPointer}                 pointer  Pointer\r\n\t * @param {MouseEvent | TouchEvent}  ev       Original event\r\n\t */\r\n\tpublic processResizeStop(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Removed from transformedObjects\r\n\t\tthis.transformedObjects.removeValue(io);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Controls for InteractionObjects initiating directly\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Manually triggers drag start on the element. Could be useful in cases\r\n\t * where tracking or dragging one element can also influence dragging another\r\n\t * element.\r\n\t *\r\n\t * Passing in `pointer` reference is advisable. If not passed in it will try\r\n\t * to determine which pointer to attach to. However, it's better to specify\r\n\t * it explicitly.\r\n\t *\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic dragStart(io: InteractionObject, pointer?: IPointer): void {\r\n\t\tif (pointer || (pointer = this.getDragPointer(io))) {\r\n\t\t\tthis.handleDown(io, pointer, pointer.lastDownEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Manually ends drag on the element.\r\n\t *\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic dragStop(io: InteractionObject, pointer?: IPointer): void {\r\n\t\tif (pointer || (pointer = this.getDragPointer(io))) {\r\n\t\t\tthis.handleGlobalUp(pointer, pointer.lastUpEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method uses a fuzzy logic to find the pointer to be used for dragging.\r\n\t * Beware that this is not a rock-solid solution. If there are a few objects\r\n\t * being dragged at the same time, you may get unexepected results.\r\n\t *\r\n\t * @param  {InteractionObject}   io  InteractionObject to get pointers from\r\n\t * @return {Optional<IPointer>}      Pointer currently being used for dragging\r\n\t */\r\n\tpublic getDragPointer(io?: InteractionObject): $type.Optional<IPointer> {\r\n\t\tif (io) {\r\n\t\t\t// InteractionObject is supplied\r\n\t\t\t// Use it's first down pointer\r\n\t\t\treturn io.downPointers.getIndex(0);\r\n\t\t}\r\n\t\telse if (this.transformedObjects.length) {\r\n\t\t\t// Use first dragged object\r\n\t\t\treturn this.getDragPointer(this.transformedObjects.getIndex(0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Utils\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns pointer id for the given event object.\r\n\t *\r\n\t * @param  {any}     ev  Event\r\n\t * @return {string}      Pointer ID\r\n\t */\r\n\tprotected getPointerId(ev: any): string {\r\n\t\tlet id = \"\";\r\n\t\tif ($type.hasValue(ev.identifier)) {\r\n\t\t\tid = \"\" + <string>ev.identifier;\r\n\t\t} else if ($type.hasValue(ev.pointerId)) {\r\n\t\t\tid = \"\" + <string>ev.pointerId;\r\n\t\t} else {\r\n\t\t\tid = \"m\";\r\n\t\t}\r\n\t\treturn id.replace(\"-\", \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor position of the event.\r\n\t *\r\n\t * @param  {MouseEvent | Touch}  ev  Original event\r\n\t * @return {IPoint}                  Event point\r\n\t */\r\n\tprotected getPointerPoint(ev: MouseEvent | Touch): IPoint {\r\n\t\treturn {\r\n\t\t\t\"x\": ev.clientX,\r\n\t\t\t\"y\": ev.clientY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Pointer]] object that is associated with the Event.\r\n\t *\r\n\t * If no such [[Pointer]] object exists, it is created.\r\n\t *\r\n\t * @param  {MouseEvent | Touch}  ev  Event\r\n\t * @return {IPointer}                Pointer\r\n\t */\r\n\tprotected getPointer(ev: MouseEvent | Touch): IPointer {\r\n\r\n\t\t// Get pointer id\r\n\t\tlet id = this.getPointerId(ev);\r\n\r\n\t\t// Get current coordinates\r\n\t\tlet point = this.getPointerPoint(ev);\r\n\r\n\t\t// Look for the pointer in the Dictionary if it maybe already exists\r\n\t\tlet pointer: IPointer;\r\n\t\tif (this.pointers.hasKey(id)) {\r\n\r\n\t\t\t// We already have such pointer\r\n\t\t\tpointer = this.pointers.getKey(id)!;\r\n\r\n\t\t\t// We need this, because Edge reuses pointer ids across touch and mouse\r\n\t\t\tpointer.touch = this.isPointerTouch(ev);\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\t//pointer.point = point;\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Init pointer\r\n\t\t\tpointer = {\r\n\t\t\t\t\"id\": id,\r\n\t\t\t\t//\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"pointer\"),\r\n\t\t\t\t//\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"mouse\"),\r\n\t\t\t\t\"touch\": this.isPointerTouch(ev),\r\n\t\t\t\t\"startPoint\": point,\r\n\t\t\t\t\"startTime\": $time.getTime(),\r\n\t\t\t\t\"point\": point,\r\n\t\t\t\t\"track\": [],\r\n\t\t\t\t\"swipeCanceled\": false,\r\n\t\t\t\t\"dragStartEvents\": []\r\n\t\t\t};\r\n\r\n\t\t\t// Add first breadcrumb\r\n\t\t\tthis.addBreadCrumb(pointer, point);\r\n\r\n\t\t\t// Add for re-use later\r\n\t\t\tthis.pointers.setKey(id, pointer);\r\n\t\t}\r\n\r\n\t\t// Log last event\r\n\t\tpointer.lastEvent = ev;\r\n\r\n\t\treturn pointer;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if pointer event originated from a touch pointer or mouse.\r\n\t *\r\n\t * @param  {MouseEvent | Touch}  ev  Original event\r\n\t * @return {boolean}                 Touch pointer?\r\n\t */\r\n\tprotected isPointerTouch(ev: MouseEvent | Touch): boolean {\r\n\t\tif (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && $type.hasValue((<any>ev).pointerType)) {\r\n\t\t\tswitch ((<any>ev).pointerType) {\r\n\t\t\t\tcase \"touch\":\r\n\t\t\t\tcase \"pen\":\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"mouse\":\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn !(ev instanceof MouseEvent);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($type.hasValue((<any>ev).type)) {\r\n\t\t\tif ((<any>ev).type.match(/^mouse/)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the poiner to original state, i.e. cleans movement information,\r\n\t * starting point, etc.\r\n\t *\r\n\t * @param {IPointer} pointer Pointer\r\n\t */\r\n\tprotected resetPointer(pointer: IPointer, ev: MouseEvent | PointerEvent | Touch): void {\r\n\t\t// Get current coordinates\r\n\t\tlet point = this.getPointerPoint(ev);;\r\n\t\tpointer.startTime = $time.getTime();\r\n\t\tpointer.startPoint = { x: point.x, y: point.y };\r\n\t\tpointer.point = { x: point.x, y: point.y };\r\n\t\tpointer.track = [];\r\n\t\tpointer.swipeCanceled = false;\r\n\t\t//clearTimeout(pointer.swipeTimeout);\r\n\t\t//clearTimeout(pointer.holdTimeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a \"breadcrumb\" point to the [[Pointer]] to log its movement path.\r\n\t *\r\n\t * @param {IPointer}  pointer  Pointer\r\n\t * @param {IPoint}    point    Point coordinates\r\n\t */\r\n\tprotected addBreadCrumb(pointer: IPointer, point: IPoint): void {\r\n\t\tpointer.track.push({\r\n\t\t\t\"timestamp\": $time.getTime(),\r\n\t\t\t\"point\": point\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the document for various touch-related operations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockDocument(): void {\r\n\t\tthis.prepElement(this.body);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores document functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockDocument(): void {\r\n\t\tif (this.transformedObjects.length == 0) {\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Lock element (disable all touch)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockElement(io: InteractionObject): void {\r\n\t\tthis.prepElement(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores element's functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockElement(io: InteractionObject): void {\r\n\t\tthis.restoreAllStyles(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Locks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockWheel(): void {\r\n\t\twindow.addEventListener(this._pointerEvents.wheel, this.wheelLockEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockWheel(): void {\r\n\t\twindow.removeEventListener(this._pointerEvents.wheel, this.wheelLockEvent);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if top element at pointer's position belongs to the SVG.\r\n\t *\r\n\t * @ignore Exlude from docs\r\n\t * @param  {IPointer}       pointer  Pointer\r\n\t * @param  {SVGSVGElement}  svg      The <svg> element\r\n\t * @param  {id}             id       A unique identifier of the object that is checking for locality\r\n\t * @return {boolean}                 Belongs to SVG\r\n\t */\r\n\tpublic isLocalElement(pointer: IPointer, svg: SVGSVGElement, id: string): boolean {\r\n\t\tlet cached = this.getCache(\"local_pointer_\" + pointer.id);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\t\tlet target = document.elementFromPoint(pointer.point.x, pointer.point.y);\r\n\t\tlet local = target && (svg === target || $dom.contains(svg, <HTMLElement>target));\r\n\t\tthis.setCache(\"local_pointer_\" + pointer.id + \"_\" + id, local, 100);\r\n\t\treturn local;\r\n\t}\r\n\r\n\t/**\r\n\t * A function that cancels mouse wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {MouseEvent}  ev  Event object\r\n\t * @return {boolean}         Returns `false` to cancel\r\n\t */\r\n\tprotected wheelLockEvent(ev: MouseEvent): boolean {\r\n\t\tev.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a set of styles to an element. Stores the original styles so they\r\n\t * can be restored later.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}           io      Element\r\n\t * @param {Dictionary<string, string>}  styles  A Dictionary of style property and values\r\n\t */\r\n\tprotected prepElement(io: InteractionObject, permanent?: boolean): void {\r\n\r\n\t\tlet el = io.element;\r\n\r\n\t\tif (el) {\r\n\r\n\t\t\t// Define possible props\r\n\t\t\tlet props = [\r\n\t\t\t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n\t\t\t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n\t\t\t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n\t\t\t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n\t\t\t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n\t\t\t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n\t\t\t];\r\n\t\t\tfor (let i = 0; i < props.length; i++) {\r\n\t\t\t\tif (props[i] in el.style) {\r\n\t\t\t\t\tthis.setTemporaryStyle(io, props[i], \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove iOS-specific selection;\r\n\t\t\tthis.setTemporaryStyle(io, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n\t\t\t//this.setTemporaryStyle(io, \"webkitOverflowScrolling\", \"none\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hit events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getHitOption(io: InteractionObject, option: keyof IHitOptions): any {\r\n\t\tlet res = io.hitOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hitOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hover events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getHoverOption(io: InteractionObject, option: keyof IHoverOptions): any {\r\n\t\tlet res = io.hoverOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hoverOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with swipe events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getSwipeOption(io: InteractionObject, option: keyof ISwipeOptions): any {\r\n\t\tlet res = io.swipeOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.swipeOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option for keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getKeyboardOption(io: InteractionObject, option: keyof IKeyboardOptions): any {\r\n\t\tlet res = io.keyboardOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.keyboardOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with inertia.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {InteractionObject}  io      Element\r\n\t * @param  {InertiaTypes}       type    Inertia type\r\n\t * @param  {string}             option  Option key\r\n\t * @return {any}                        Option value\r\n\t */\r\n\tpublic getInertiaOption(io: InteractionObject, type: InertiaTypes, option: keyof IInertiaOptions): any {\r\n\t\tlet options: any = io.inertiaOptions.getKey(type);\r\n\t\tlet res: IInertiaOptions;\r\n\t\tif (options && $type.hasValue(options[type])) {\r\n\t\t\tres = options[type];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tres = (<any>this.inertiaOptions.getKey(type))[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops currently going on inertia. Useful if inertia is currently being\r\n\t * animated and the object is being interacted with.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tprotected stopInertia(io: InteractionObject): void {\r\n\t\tlet x: InertiaTypes;\r\n\t\tlet inertias: Array<InertiaTypes> = [\"move\", \"resize\"];\r\n\t\tfor (let i = 0; i < inertias.length; i++) {\r\n\t\t\tx = inertias[i];\r\n\t\t\tif (io.inertias.hasKey(x)) {\r\n\t\t\t\tlet inertia: $type.Optional<Inertia> = io.inertias.getKey(x);\r\n\t\t\t\tif (inertia) {\r\n\t\t\t\t\tinertia.dispose();\r\n\t\t\t\t\t//io.inertiaAnimations.removeKey(x);\r\n\t\t\t\t\t//this.processDragStop(io);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if swiping is currently being performed on an object.\r\n\t *\r\n\t * @param  {InteractionObject}  io       Element\r\n\t * @param  {IPointer}           pointer  Pointer to check\r\n\t * @return {boolean}                     `true` if swiping\r\n\t */\r\n\tpublic swiping(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = $time.getTime();\r\n\r\n\t\tif (pointer.swipeCanceled || !io.swipeable) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if a successfull swipe action was performed on an element.\r\n\t *\r\n\t * @param  {InteractionObject}  io       Element\r\n\t * @param  {IPointer}           pointer  Pointer\r\n\t * @return {boolean}                     Swiped?\r\n\t */\r\n\tpublic swiped(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = $time.getTime();\r\n\t\tif (pointer.swipeCanceled) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.x - pointer.point.x) > this.getSwipeOption(io, \"horizontalThreshold\")) &&\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}   Element\r\n\t */\r\n\tpublic applyCursorOverStyle(io: InteractionObject): void {\r\n\r\n\t\t// Get sprite's cursor ooptions\r\n\t\tlet options = io.cursorOptions;\r\n\r\n\t\tif (!$type.hasValue(options.overStyle)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Apply cursor down styles\r\n\t\tfor (let i = 0; i < options.overStyle.length; i++) {\r\n\t\t\t$dom.setStyle(io.element, options.overStyle[i].property, options.overStyle[i].value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic applyCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.setTemporaryStyle(this.body, downStyle[i].property, downStyle[i].value);\r\n\t\t\t\tthis.setTemporaryStyle(io, downStyle[i].property, downStyle[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores original cursor style for the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {InteractionObject}  io       Element\r\n\t * @param {IPointer}           pointer  Pointer\r\n\t */\r\n\tpublic restoreCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.restoreStyle(this.body, downStyle[i].property);\r\n\t\t\t\tthis.restoreStyle(io, downStyle[i].property);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions\r\n\t */\r\n\tpublic setGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.setTemporaryStyle(body, styles[i].property, styles[i].value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Array<IStyleProperty> | IStyleProperty}  style  Style definitions\r\n\t */\r\n\tpublic restoreGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.restoreStyle(body, styles[i].property);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element is a non-cahrt element.\r\n\t *\r\n\t * @param  {InteractionObject}  io  InteractionObject\r\n\t * @return {boolean}                Global element?\r\n\t */\r\n\tprotected isGlobalElement(io: InteractionObject): boolean {\r\n\t\treturn document.body === io.element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if pointer has moved since it was created.\r\n\t *\r\n\t * @param  {IPointer}  pointer    Pointer\r\n\t * @param  {number}    tolerance  Tolerance in pixels\r\n\t * @param  {number}    minTime    Minimum time required for the pointer to be down to be considered moved\r\n\t * @return {boolean}              `true` if the pointer has moved\r\n\t */\r\n\tpublic moved(pointer: IPointer, tolerance: number, minTime: number = 300): boolean {\r\n\r\n\t\t/*// If there was more time, we don't care if cursor actually moved\r\n\t\tlet duration = $time.getTime() - pointer.startTime;\r\n\t\tif ($type.hasValue(minTime) && (minTime > duration)) {\r\n\t\t\treturn false;\r\n\t\t}*/\r\n\r\n\t\t// That was quick measure shift\r\n\t\tlet shift = this.getShift(pointer);\r\n\r\n\t\treturn (Math.abs(shift.x) > tolerance) || (Math.abs(shift.y) > tolerance);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if pointer is \"old\", meaning it has been pressing for more than\r\n\t * X milliseconds.\r\n\t *\r\n\t * @ignore\r\n\t * @param  {IPointer}  pointer  Pointer\r\n\t * @param  {number}    minTime  Minimum time to consider pointer old\r\n\t * @return {boolean}            \r\n\t */\r\n\tpublic old(pointer: IPointer, minTime: number = 300): boolean {\r\n\t\treturn $time.getTime() - pointer.startTime > minTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns total a shift in pointers coordinates between its original\r\n\t * position and now.\r\n\t *\r\n\t * @param  {IPointer}  pointer  Pointer\r\n\t * @return {IPoint}             Shift in coordinates (x/y)\r\n\t */\r\n\tpublic getShift(pointer: IPointer): IPoint {\r\n\t\treturn {\r\n\t\t\t\"x\": pointer.startPoint.x - pointer.point.x,\r\n\t\t\t\"y\": pointer.startPoint.y - pointer.point.y\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a point from [[Pointer]]'s move history at a certain timetamp.\r\n\t *\r\n\t * @param  {IPointer}               pointer    Pointer\r\n\t * @param  {number}                 timestamp  Timestamp\r\n\t * @return {Optional<IBreadcrumb>}             Point\r\n\t */\r\n\tpublic getTrailPoint(pointer: IPointer, timestamp: number): $type.Optional<IBreadcrumb> {\r\n\t\tlet res: $type.Optional<IBreadcrumb>;\r\n\t\tfor (let i = 0; i < pointer.track.length; i++) {\r\n\t\t\tif (pointer.track[i].timestamp >= timestamp) {\r\n\t\t\t\tres = pointer.track[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if same pointer already exists in the list.\r\n\t *\r\n\t * @param  {List<IPointer>}  list     List to check agains\r\n\t * @param  {IPointer}        pointer  Pointer\r\n\t * @return {boolean}                  Exists?\r\n\t */\r\n\tprotected pointerExists(list: List<IPointer>, pointer: IPointer): boolean {\r\n\t\tlet exists = false;\r\n\t\tlist.each((item) => {\r\n\t\t\tif (item == pointer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\texists = item.point.x == pointer.point.x && item.point.y == pointer.point.y;\r\n\t\t});\r\n\t\treturn exists;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[InteractionObject]] representation of a DOM element.\r\n\t *\r\n\t * You can use this on any HTML or SVG element, to add interactive features\r\n\t * to it.\r\n\t *\r\n\t * @param  {HTMLElement | SVGSVGElement}  element  Element\r\n\t * @return {InteractionObject}                     InteractionObject\r\n\t */\r\n\tpublic getInteraction(element: HTMLElement | SVGSVGElement): InteractionObject {\r\n\t\treturn new InteractionObject(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a style property on an element. Stores original value to be restored\r\n\t * later with [[restoreStyle]].\r\n\t *\r\n\t * @see {@link restoreStyle}\r\n\t * @param {InteractionObject}  io        Element\r\n\t * @param {string}             property  Property\r\n\t * @param {string}             value     Value\r\n\t */\r\n\tpublic setTemporaryStyle(io: InteractionObject, property: string, value: string): void {\r\n\r\n\t\t// Get element\r\n\t\t//let el = io.element.tagName == \"g\" ? <SVGSVGElement>io.element.parentNode : io.element;\r\n\t\tlet el = io.element;\r\n\r\n\t\t// Save original property if it is set and hasn't been saved before already\r\n\t\tif ($type.hasValue((<any>el.style)[property]) && !io.replacedStyles.hasKey(property)) {\r\n\t\t\tio.replacedStyles.setKey(property, (<any>el.style)[property]);\r\n\t\t}\r\n\r\n\t\t// Replace with the new one\r\n\t\t$dom.setStyle(el, property, value);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores specific style on an element.\r\n\t *\r\n\t * @param {InteractionObject}  io        Element\r\n\t * @param {string}             property  Style property\r\n\t */\r\n\tpublic restoreStyle(io: InteractionObject, property: string): void {\r\n\r\n\t\t// Reset style\r\n\t\tif (io.replacedStyles.hasKey(property)) {\r\n\t\t\t(<any>io.element.style)[property] = io.replacedStyles.getKey(property);\r\n\t\t\tio.replacedStyles.removeKey(property);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete (<any>io.element.style)[property];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restore temporarily reset styles on an element.\r\n\t *\r\n\t * @param {InteractionObject} io Element\r\n\t */\r\n\tpublic restoreAllStyles(io: InteractionObject): void {\r\n\t\t$iter.each(io.replacedStyles.iterator(), (a) => {\r\n\t\t\tconst key = a[0];\r\n\t\t\tconst value = a[1];\r\n\t\t\t(<any>io.element.style)[key] = value;\r\n\t\t\tio.replacedStyles.removeKey(key);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object and cleans up after itself.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this.isDisposed) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t\tthis.unlockWheel();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate log(text: string, ev: MouseEvent | TouchEvent | PointerEvent, io?: InteractionObject): void {\r\n\t\tlet show = true;\r\n\t\tif (show) {\r\n\t\t\t// Touchlist?\r\n\t\t\tif ((<any>ev).changedTouches) {\r\n\t\t\t\tfor (let i = 0; i < (<any>ev).changedTouches.length; i++) {\r\n\t\t\t\t\tthis.logTouch(text, ev.type, (<any>ev).changedTouches[i])\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Get type\r\n\t\t\tlet type = \"\";\r\n\t\t\tif ((<any>ev).pointerType) {\r\n\t\t\t\tswitch ((<any>ev).pointerType) {\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\ttype = \"touch\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\ttype = \"mouse\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttype = (<any>ev).pointerType;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (typeof TouchEvent != \"undefined\" && ev instanceof TouchEvent) {\r\n\t\t\t\ttype = \"touch\";\r\n\t\t\t}\r\n\t\t\telse if (ev.type.match(/^mouse/)) {\r\n\t\t\t\ttype = \"mouse\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttype = \"???\";\r\n\t\t\t}\r\n\r\n\t\t\t// Get ID\r\n\t\t\tlet id = \"\";\r\n\t\t\tif ($type.hasValue((<any>ev).identifier)) {\r\n\t\t\t\tid = <string>(<any>ev).identifier;\r\n\t\t\t} else if ($type.hasValue((<any>ev).pointerId)) {\r\n\t\t\t\tid = <string>(<any>ev).pointerId;\r\n\t\t\t} else {\r\n\t\t\t\tid = \"???\";\r\n\t\t\t}\r\n\r\n\t\t\tif (io) {\r\n\t\t\t\tconsole.log(text + \" (\" + io.uid + \")  \" + ev.type + \"  \" + type + \"  \" + id);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(text + \"  \" + ev.type + \"  \" + type + \"  \" + id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate logTouch(text: string, type: string, ev: Touch): void {\r\n\t\tconsole.log(text + \"  \" + type + \"  \" + \"touch\" + \"  \" + ev.identifier);\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet interaction: Interaction | null = null;\r\n\r\n/**\r\n * Returns a single unified global instance of [[Interaction]].\r\n *\r\n * All code should use this function, rather than create their own instances\r\n * of [[Interaction]].\r\n */\r\nexport function getInteraction(): Interaction {\r\n\tif (interaction == null) {\r\n\t\tinteraction = new Interaction();\r\n\t}\r\n\r\n\treturn interaction;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/Interaction.ts","/**\n * A collection of DOM-related functions.\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Disposer, IDisposer } from \"./Disposer\";\nimport { readFrame, writeFrame } from \"./AsyncPending\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n\n/**\n * SVG namespace.\n *\n * @ignore Exclude from docs\n * @type {string}\n */\nexport const SVGNS: string = \"http://www.w3.org/2000/svg\";\n\n/**\n * XML namespace.\n *\n * @ignore Exclude from docs\n * @type {string}\n */\nexport const XMLNS: string = \"http://www.w3.org/2000/xmlns/\";\n\n/**\n * XLINK namespace.\n *\n * @ignore Exclude from docs\n * @type {string}\n */\nexport const XLINK: string = \"http://www.w3.org/1999/xlink\";\n\n\n/**\n * Function that adds a disposable event listener directly to a DOM element.\n *\n * @ignore Exclude from docs\n * @param {EventTarget}   dom       A DOM element to add event to\n * @param {string}        type      Event type\n * @param {Function}      listener  Event listener\n * @returns {IDisposer}             Disposable event\n */\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n\t//console.log(type, dom);\n\tdom.addEventListener(type, <EventListener>listener, options || false);\n\n\treturn new Disposer(() => {\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\n\t});\n}\n\n/**\n * Finds and returns an element reference using following logic:\n * * If we pass in an element instance, we just return it back.\n * * If we pass in a string, the function looks for an element with such id.\n * * If no element with such id is found, we grab the first element with a tag name like this.\n *\n * @ignore Exclude from docs\n * @param  {Optional<HTMLElement | string>}  el  Element definition (reference, or id, or tag name)\n * @return {Optional<HTMLElement>}               Element reference\n * @todo Review this function as it seems pretty fuzzy and hacky\n */\nexport function getElement(el: $type.Optional<HTMLElement | string>): $type.Optional<HTMLElement> {\n\tif ($type.isString(el)) {\n\t\tlet e: Element | null = document.getElementById(el);\n\n\t\tif (e == null) {\n\t\t\te = document.getElementsByClassName(el)[0];\n\t\t}\n\n\t\tif (e instanceof HTMLElement) {\n\t\t\treturn e;\n\t\t}\n\n\t} else if (el instanceof HTMLElement) {\n\t\treturn el;\n\t}\n}\n\n/**\n * Adds a class name to an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param {HTMLElement | SVGSVGElement}  element    Element\n * @param {string}                       className  Class name to add\n */\nexport function addClass(element: HTMLElement | SVGSVGElement, className: string): void {\n\tif (element.classList) {\n\t\telement.classList.add(className);\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \") + \" \" + className);\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(\"class\", className);\n\t\t}\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\n\t}\n}\n\n/**\n * Removes a class name from an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param {HTMLElement | SVGSVGElement}  element    Element\n * @param {string}                       className  Class name to add\n */\nexport function removeClass(element: HTMLElement | SVGSVGElement, className: string): void {\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \"));\n\t\t}\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\n\t}\n}\n\n/**\n * Sets style property on DOM element.\n *\n * @ignore Exclude from docs\n * @todo Still needed?\n */\nexport function setStyle(element: HTMLElement | SVGSVGElement, property: string, value: string): void {\n\t(<any>element.style)[property] = value;\n}\n\n/**\n * Removes focus from any element by shifting focus to body.\n *\n * @ignore Exclude from docs\n */\nexport function blur(): void {\n\tlet input = document.createElement(\"input\");\n\tinput.style.position = \"fixed\";\n\tinput.style.top = \"0px\";\n\tinput.style.left = \"-10000px\";\n\tdocument.body.appendChild(input);\n\tinput.focus();\n\tinput.blur();\n\tdocument.body.removeChild(input);\n}\n\n/**\n * Tries to focus the element.\n *\n * @ignore Exlude from docs\n * @param {HTMLElement | SVGSVGElement}  element  Element to focus\n */\nexport function focus(element: HTMLElement | SVGSVGElement): void {\n\n\tif (element instanceof HTMLElement) {\n\t\telement.focus();\n\t}\n\telse {\n\t\tlet input = document.createElement(\"input\");\n\t\tlet fo = <SVGSVGElement>document.createElementNS(SVGNS, \"foreignObject\");\n\t\tfo.appendChild(input);\n\t\telement.appendChild(fo);\n\t\tinput.focus();\n\t\tinput.disabled = true;\n\t\tfo.remove();\n\t}\n\n\t/*if ((<any>element).focus != undefined) {\n\t\t(<any>element).focus();\n\t}\n\telse if (element instanceof SVGSVGElement) {\n\t\t// Not implemented\n\t\t// @todo implement focus fallback\n\t}*/\n}\n\n/**\n * Returns markup for the element including the element tag itself.\n * SVG elements do not support `outerHTML` so this functions applies of\n * a workaround which creates a new temporary wrapper, clones element and uses\n * wrapper's `innerHTML`.\n *\n * @ignore Exclude from docs\n * @param  {HTMLElement | SVGSVGElement}  element  Element to get full markup for\n * @return {string}                                Markup\n * @deprecated Not in use anywhere\n */\nexport function outerHTML(element: HTMLElement | SVGSVGElement): string {\n\tif (element.outerHTML) {\n\t\treturn element.outerHTML;\n\t}\n\telse {\n\t\tlet twrap = document.createElement(\"div\");\n\t\tlet tnode = element.cloneNode(true);\n\t\ttwrap.appendChild(tnode);\n\t\tlet content = twrap.innerHTML;\n\t\treturn content;\n\t}\n}\n\n/**\n * Checks if element is a valid DOM node.\n *\n * @ignore Exclude from docs\n * @param  {HTMLElement}  el  Element\n * @return {boolean}          `true` if element is a valid DOM node\n */\nexport function isElement(el: HTMLElement): boolean {\n\treturn el instanceof Object && el && el.nodeType === 1;\n}\n\n/**\n * Checks of element `a` contains element `b`.\n * \n * @param  {HTMLElement | SVGSVGElement}  a  Aleged ascendant\n * @param  {HTMLElement | SVGSVGElement}  b  Aleged descendant\n * @return {boolean}                         Contains?\n */\nexport function contains(a: HTMLElement | SVGSVGElement, b: HTMLElement | SVGSVGElement): boolean {\n\treturn a !== b && (a.contains\n\t\t? a.contains(b)\n\t\t: a.compareDocumentPosition\n\t\t\t? !!(a.compareDocumentPosition(b) & 16)\n\t\t\t: true);\n}\n\n/**\n * Copies attributes from one element to another.\n *\n * @ignore Exclude from docs\n * @param {Element | HTMLElement |  SVGSVGElement}  source  Element to copy attributes from\n * @param {HTMLElement | SVGSVGElement}          target  Element to copy attributes to\n */\nexport function copyAttributes(source: Element | HTMLElement | SVGSVGElement, target: HTMLElement | SVGSVGElement): void {\n\tfor (let attr in source.attributes) {\n\t\tlet value = source.attributes[attr].nodeValue;\n\n\t\t// TODO what if it's null ?\n\t\tif (value != null) {\n\t\t\ttarget.setAttribute(source.attributes[attr].nodeName, value);\n\t\t}\n\t}\n}\n\n/**\n * [fixPixelPerfect description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param {HTMLElement}  el  Element\n */\nexport function fixPixelPerfect(el: HTMLElement): void {\n\treadFrame(() => {\n\t\t// sometimes IE doesn't like this\n\t\t// TODO figure out a way to remove this\n\t\ttry {\n\t\t\tconst rect = el.getBoundingClientRect();\n\n\t\t\tconst left = rect.left - Math.round(rect.left);\n\t\t\tconst top = rect.top - Math.round(rect.top);\n\n\t\t\tif (left !== 0) {\n\t\t\t\twriteFrame(() => {\n\t\t\t\t\tel.style.left = left + \"px\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (top !== 0) {\n\t\t\t\twriteFrame(() => {\n\t\t\t\t\tel.style.top = top + \"px\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t} catch (e) { }\n\t});\n}\n\n/**\n * [rootStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @type {Optional<CSSStyleSheet>}\n */\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\n\n/**\n * [getStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @return {CSSStyleSheet} [description]\n */\nfunction getStylesheet(): CSSStyleSheet {\n\tif (!$type.hasValue(rootStylesheet)) {\n\t\t// TODO use createElementNS ?\n\t\tconst e = document.createElement(\"style\");\n\t\te.type = \"text/css\";\n\t\tdocument.head.appendChild(e);\n\t\trootStylesheet = e.sheet as CSSStyleSheet;\n\t}\n\n\treturn rootStylesheet;\n}\n\n/**\n * [makeStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {string}        selector  [description]\n * @return {CSSStyleRule}            [description]\n */\nfunction makeStylesheet(selector: string): CSSStyleRule {\n\tconst root = getStylesheet();\n\n\tconst index = root.cssRules.length;\n\n\troot.insertRule(selector + \"{}\", index);\n\n\treturn root.cssRules[index] as CSSStyleRule;\n}\n\n/**\n * Defines a class for a CSS rule.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleRule extends Disposer {\n\n\t/**\n\t * CSS rule.\n\t *\n\t * @type {CSSStyleRule}\n\t */\n\tprivate _rule: CSSStyleRule;\n\n\t/**\n\t * A CSS selector text.\n\t *\n\t * E.g.: `.myClass p`\n\t *\n\t * @param {string}  selector  CSS selector\n\t */\n\tpublic set selector(selector: string) {\n\t\tthis._rule.selectorText = selector;\n\t}\n\n\t/**\n\t * @return {string} CSS selector\n\t */\n\tpublic get selector(): string {\n\t\treturn this._rule.selectorText;\n\t}\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param {string}  selector  CSS selector\n\t * @param {object}  styles    An object of style attribute - value pairs\n\t */\n\tconstructor(selector: string, styles: { [name: string]: string }) {\n\t\t// TODO test this\n\t\tsuper(() => {\n\t\t\tconst root = getStylesheet();\n\n\t\t\t// TODO a bit hacky\n\t\t\tconst index = $array.indexOf(root.cssRules, this._rule);\n\n\t\t\tif (index === -1) {\n\t\t\t\tthrow new Error(\"Could not dispose StyleRule\");\n\n\t\t\t} else {\n\t\t\t\troot.deleteRule(index);\n\t\t\t}\n\t\t});\n\n\t\tthis._rule = makeStylesheet(selector);\n\n\t\t$object.each(styles, (key, value) => {\n\t\t\tthis.setStyle(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Sets the same style properties with browser-speicifc prefixes.\n\t *\n\t * @param {string}  name   Attribute name\n\t * @param {string}  value  Attribute value\n\t */\n\tprivate _setVendorPrefixName(name: string, value: string): void {\n\t\tconst style = this._rule.style;\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\n\t\tstyle.setProperty(name, value, \"\");\n\t}\n\n\t/**\n\t * Sets a value for specific style attribute.\n\t *\n\t * @param {string}  name   Attribute\n\t * @param {string}  value  Value\n\t */\n\tpublic setStyle(name: string, value: string): void {\n\t\tif (name === \"transition\") {\n\t\t\tthis._setVendorPrefixName(name, value);\n\n\t\t} else {\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\n\t\t}\n\t}\n\n}\n\n/**\n * An internal counter for unique style ids.\n *\n * @ignore Exclude from docs\n * @type {number}\n */\nlet styleId: number = 0;\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class StyleClass extends StyleRule {\n\n\t/**\n\t * Class name.\n\t *\n\t * @type {string}\n\t */\n\tprivate _className: string;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param {object}  styles  An object of style attribute - value pairs\n\t * @param {string}  name    Class name\n\t */\n\tconstructor(styles: { [name: string]: string }, name?: string) {\n\t\tconst className =\n\t\t\t(!$type.hasValue(name)\n\t\t\t\t// TODO generate the classname randomly\n\t\t\t\t? \"__style_\" + (++styleId) + \"__\"\n\t\t\t\t: name);\n\n\t\tsuper(\".\" + className, styles);\n\n\t\tthis._className = className;\n\t}\n\n\t/**\n\t * Class name.\n\t *\n\t * @param {string}  name  Class name\n\t */\n\tpublic set className(name: string) {\n\t\tthis._className = name;\n\t\tthis.selector = \".\" + name;\n\t}\n\n\t/**\n\t * @return {string} Class name\n\t */\n\tpublic get className(): string {\n\t\treturn this._className;\n\t}\n\n\t/**\n\t * Converts the whole class to\n\t * @ignore Exclude from docs\n\t */\n\tpublic toString(): string {\n\t\treturn this._className;\n\t}\n\n}\n\n\nexport function ready(f: () => void): void {\n\tif (document.readyState !== \"loading\") {\n\t\tf();\n\n\t} else {\n\t\tconst listener = () => {\n\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\n\t\t\t\tf();\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"readystatechange\", listener);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/DOM.ts","/**\r\n * Animation module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { SVGDefaults } from \"../defs/SVGDefaults\";\r\nimport { Disposer, IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Color } from \"../utils/Color\";\r\nimport { Percent, percent } from \"../utils/Percent\";\r\nimport * as $async from \"../utils/AsyncPending\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $colors from \"../utils/Colors\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { system } from \"../System\";\r\n\r\n\r\n/**\r\n * Defines interface for animation objects.\r\n *\r\n * Should at least contain `update()` method.\r\n */\r\nexport interface IAnimationObject {\r\n\tupdate: () => void\r\n}\r\n\r\n/**\r\n * Defines interface for objects that can be animated\r\n */\r\nexport interface IAnimatable {\r\n\tanimations: Array<Animation>;\r\n}\r\n\r\n\r\nexport type IAnimationOption = Color | Percent | number | string | boolean;\r\n\r\n/**\r\n * Defines interface for animation options.\r\n */\r\nexport interface IAnimationOptions {\r\n\r\n\t/**\r\n\t * An initial value to animate from.\r\n\t *\r\n\t * If omitted, the source value will be current value.\r\n\t *\r\n\t * @type {Color | Percent | number | string | boolean}\r\n\t */\r\n\tfrom?: IAnimationOption;\r\n\r\n\t/**\r\n\t * A target value to animate from.\r\n\t *\r\n\t * @type {Color | Percent | number | string | boolean}\r\n\t */\r\n\tto: IAnimationOption;\r\n\r\n\t/**\r\n\t * Property name to animate.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tproperty?: any;\r\n\r\n\t/**\r\n\t * If current values should be taken from different object than the target\r\n\t * element of the animation, this property should be set to that object.\r\n\t *\r\n\t * @type {object}\r\n\t */\r\n\tchildObject?: { [index: string]: any };\r\n\r\n\t/**\r\n\t * A method/function reference that will be called to for updating the\r\n\t * property value.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tupdateMethod?: (progress: number, from: IAnimationOption, to: IAnimationOption) => IAnimationOption;\r\n\r\n\r\n\t/**\r\n\t * sometimes we need to pass some dummy data in animationOptions\r\n\t * @type {any}\r\n\t */\r\n\tdummyData?: any;\r\n\r\n}\r\n\r\n/**\r\n * An interface for an object defining [[Percent]] animation.\r\n */\r\nexport interface IPercentAnimationOptions extends IAnimationOptions {\r\n\r\n\t/**\r\n\t * Initial value.\r\n\t *\r\n\t * @type {Percent}\r\n\t */\r\n\tfrom?: Percent;\r\n\r\n\t/**\r\n\t * Target value.\r\n\t *\r\n\t * @type {Percent}\r\n\t */\r\n\tto: Percent;\r\n\r\n}\r\n\r\n/**\r\n * An interface for an object defining [[Color]] animation.\r\n */\r\nexport interface IColorAnimationOptions extends IAnimationOptions {\r\n\r\n\t/**\r\n\t * Initial value.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tfrom?: Color;\r\n\r\n\t/**\r\n\t * Target value.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tto: Color;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Calls a `callback` function for the `duration` of milliseconds.\r\n *\r\n * @todo Needed?\r\n * @deprecated Not used anywhere\r\n * @ignore Exclude from docs\r\n * @param  {number}     duration  Duration (ms)\r\n * @param  {function}   callback  Callback function\r\n * @return {IDisposer}            Disposer\r\n */\r\nexport function animate(duration: number, callback: (time: number) => void): IDisposer {\r\n\tlet disposed = false;\r\n\r\n\t// TODO use performance.now() ?\r\n\tconst startTime = Date.now();\r\n\r\n\tfunction loop(now: number): void {\r\n\t\tif (!disposed) {\r\n\t\t\tconst diff = now - startTime;\r\n\r\n\t\t\tif (diff >= duration) {\r\n\t\t\t\tcallback(1);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$async.nextFrame(loop);\r\n\t\t\t\tcallback(diff / duration);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t$async.nextFrame(loop);\r\n\r\n\treturn new Disposer(() => {\r\n\t\tdisposed = true;\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Defines events for [[Animation]].\r\n */\r\nexport interface IAnimationEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when animation starts playing.\r\n\t */\r\n\tanimationstarted: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation finishes playing.\r\n\t */\r\n\tanimationended: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation makes progress.\r\n\t */\r\n\tanimationprogress: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation is stopped by some other process, before it had\r\n\t * a chance to finish.\r\n\t */\r\n\tanimationstopped: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Holds the list of currently playing animations.\r\n *\r\n * @ignore Exclude from docs\r\n * @type {Array<IAnimationObject>}\r\n */\r\nexport const animations: Array<IAnimationObject> = [];\r\n\r\n\r\n/**\r\n * Returns numeric value accoring to progress between start and end values.\r\n *\r\n * @param  {number}  progress  Progress (0-1)\r\n * @param  {number}  from\r\n * @param  {number}  to\r\n * @return {number}            Value according to progress\r\n */\r\nfunction getProgressNumber(progress: number, from: number, to: number): number {\r\n\treturn from + ((to - from) * progress);\r\n}\r\n\r\n/**\r\n * Returns [[Percent]] value accoring to progress between start and end\r\n * values.\r\n *\r\n * @param  {number}   progress  Progress (0-1)\r\n * @param  {Percent}  from\r\n * @param  {Percent}  to\r\n * @return {number}             Value according to progress\r\n */\r\nfunction getProgressPercent(progress: number, from: Percent, to: Percent): Percent {\r\n\treturn new Percent(getProgressNumber(progress, from.percent, to.percent));\r\n}\r\n\r\n/**\r\n * Returns color value accoring to progress between start and end values.\r\n *\r\n * @param  {number}  progress  Progress (0-1)\r\n * @param  {Color}   from\r\n * @param  {Color}   to\r\n * @return {string}            Color according to progress\r\n */\r\nfunction getProgressColor(progress: number, from: Color, to: Color): Color {\r\n\treturn new Color($colors.interpolate(from.rgb, to.rgb, progress));\r\n}\r\n\r\n/**\r\n * [getHybridProperty description]\r\n *\r\n * @todo Description\r\n * @param  {string}     property [description]\r\n * @param  {\"pixel\" |        \"relative\"}  type [description]\r\n * @return {string}              [description]\r\n */\r\nfunction getHybridProperty(property: string, type: \"pixel\" | \"relative\"): string {\r\n\treturn type + property.charAt(0).toUpperCase() + property.substr(1);\r\n}\r\n\r\n\r\ninterface ProcessedAnimationOption {\r\n\tchildObject: any;\r\n\tproperty: any;\r\n\tupdate: (time: number) => void;\r\n}\r\n\r\nfunction processAnimationOptions<A>(\r\n\tobject: A,\r\n\tanimationOptions: IAnimationOptions[] | IAnimationOptions\r\n): Array<ProcessedAnimationOption> {\r\n\r\n\tconst processed: Array<ProcessedAnimationOption> = [];\r\n\r\n\t$array.each($array.toArray(animationOptions), (options) => {\r\n\t\tconst childObject = (options.childObject ? options.childObject : object);\r\n\r\n\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\toptions.from = childObject[options.property];\r\n\r\n\t\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\t\toptions.from = (<any>SVGDefaults)[options.property];\r\n\t\t\t}\r\n\r\n\t\t\t/*if (!$type.hasValue(options.from)) {\r\n\t\t\t\tthrow Error(\"Could not get initial transition value.\");\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\t\tif (options.from !== options.to) { // || options.to == (<any>object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue\r\n\t\t\t// Use different update methods for different value types\r\n\t\t\tif ($type.isNumber(options.to)) {\r\n\t\t\t\t// Check if initial value is not Percent\r\n\t\t\t\tif (options.from instanceof Percent) {\r\n\t\t\t\t\t// It is. Let's convert it to pixel value\r\n\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\tlet convertedFrom: number = childObject[getHybridProperty(options.property, \"pixel\")];\r\n\r\n\t\t\t\t\t// TODO better check\r\n\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\toptions.from = convertedFrom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprocessed.push({\r\n\t\t\t\t\tchildObject: childObject,\r\n\t\t\t\t\tproperty: options.property,\r\n\t\t\t\t\tupdate: (time) => {\r\n\t\t\t\t\t\tchildObject[options.property] = getProgressNumber(time, <any>options.from, <any>options.to);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Check if maybe we have a color or percent value\r\n\t\t\t} else if (options.to instanceof Color) {\r\n\t\t\t\t// Yup - set resolved named color\r\n\t\t\t\t//options.from = $colors.stringToColor(<string>options.from);\r\n\t\t\t\tif (options.from) {\r\n\t\t\t\t\tprocessed.push({\r\n\t\t\t\t\t\tchildObject: childObject,\r\n\t\t\t\t\t\tproperty: options.property,\r\n\t\t\t\t\t\tupdate: (time) => {\r\n\t\t\t\t\t\t\tchildObject[options.property] = getProgressColor(time, <any>options.from, <any>options.to);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprocessed.push({\r\n\t\t\t\t\t\tchildObject: childObject,\r\n\t\t\t\t\t\tproperty: options.property,\r\n\t\t\t\t\t\tupdate: (time) => {\r\n\t\t\t\t\t\t\tchildObject[options.property] = (time < 0.5 ? options.from : options.to);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (options.to instanceof Percent) {\r\n\t\t\t\t// Check if the initial value is maybe in pixels\r\n\t\t\t\t// TODO better check\r\n\t\t\t\tif (!isNaN(<number>options.from)) {\r\n\t\t\t\t\t// It is. Let's convert it\r\n\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\tlet convertedFrom: number = childObject[getHybridProperty(options.property, \"relative\")];\r\n\r\n\t\t\t\t\t// TODO better check\r\n\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\toptions.from = percent(convertedFrom * 100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprocessed.push({\r\n\t\t\t\t\tchildObject: childObject,\r\n\t\t\t\t\tproperty: options.property,\r\n\t\t\t\t\tupdate: (time) => {\r\n\t\t\t\t\t\tchildObject[options.property] = getProgressPercent(time, <any>options.from, <any>options.to);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\tprocessed.push({\r\n\t\t\t\t\tchildObject: childObject,\r\n\t\t\t\t\tproperty: options.property,\r\n\t\t\t\t\tupdate: (time) => {\r\n\t\t\t\t\t\tchildObject[options.property] = (time < 0.5 ? options.from : options.to);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn processed;\r\n}\r\n\r\n\r\nexport class AnimationDisposer implements IDisposer {\r\n\tprivate _disposer: Disposer;\r\n\r\n\tconstructor(array: Array<Animation>) {\r\n\t\tthis._disposer = new Disposer(() => {\r\n\t\t\twhile (array.length !== 0) {\r\n\t\t\t\tarray[0].dispose();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tisDisposed(): boolean {\r\n\t\treturn this._disposer.isDisposed();\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis._disposer.dispose();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Animation can be used to transition certain properties on an object that\r\n * implements [[IAnimatable]] interface.\r\n *\r\n * @see {@link IAnimationEvents} for a list of available events\r\n */\r\nexport class Animation extends BaseObjectEvents implements IAnimationObject {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAnimationEvents}\r\n\t */\r\n\tpublic _events!: IAnimationEvents;\r\n\r\n\t/**\r\n\t * An animation target object. [[Animation]] will update properties of\r\n\t * this object.\r\n\t *\r\n\t * @type {IAnimatable}\r\n\t */\r\n\tpublic object: IAnimatable;\r\n\r\n\t/**\r\n\t * An array of animation option objects. Each animation object represent\r\n\t * one property. Animation can animate any number of properties\r\n\t * simultaneously.\r\n\t *\r\n\t * @type {IAnimationOptions[]}\r\n\t */\r\n\tpublic animationOptions: IAnimationOptions[];\r\n\r\n\t/**\r\n\t * Duration of the animation in milliseconds.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic duration: number = 0;\r\n\r\n\t/**\r\n\t * Easing function to use.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t * @type {(value: number) => number}\r\n\t */\r\n\tpublic easing: (value: number) => number = $ease.linear;\r\n\r\n\t/**\r\n\t * Contains progress of the current animation: 0 (start) to 1 (end).\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic progress: number = 0;\r\n\r\n\t/**\r\n\t * A list of options that cannot be animated. Those will be applied when\r\n\t * Animation ends.\r\n\t *\r\n\t * @type {IAnimationOptions[]}\r\n\t */\r\n\tprotected staticOptions!: IAnimationOptions[];\r\n\r\n\t/**\r\n\t * Indicated how many times animation should loop.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _loop: number = 0;\r\n\r\n\t/**\r\n\t * Animation is paused.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _pause: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to timeout for delayed play.\r\n\t *\r\n\t * @type {IDisposer}\r\n\t */\r\n\tprotected _delayTimeout: IDisposer | null = null;\r\n\r\n\t/**\r\n\t * A timestamp of when animation started playing.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _startTime: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Elapsed time in currently playing animation.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _time: number = 0;\r\n\r\n\t// TODO verify that this is correct\r\n\tprotected debug(): void { }\r\n\r\n\tprotected _isFinished: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {IAnimatable}                              object            An object animation should run on\r\n\t * @param {IAnimationOptions[] | IAnimationOptions}  animationOptions  One or several (array) of animation options\r\n\t * @param {number}                                   duration          Duration (ms)\r\n\t * @param {(number) => number}                       easing            Easing function\r\n\t */\r\n\tconstructor(object: IAnimatable, animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Animation\";\r\n\r\n\t\t// Set parameters\r\n\t\tthis.object = object;\r\n\t\tthis.animationOptions = $array.toArray(animationOptions);\r\n\t\tthis.duration = duration;\r\n\t\tif (easing) {\r\n\t\t\tthis.easing = easing;\r\n\t\t}\r\n\r\n\t\t// Run check if there are already animations playing on the same properties\r\n\t\t// and stop them - the last animation takes precedence\r\n\t\t//this.stopSameAnimations();\r\n\r\n\t\t/*if ($type.hasValue(callback)) {\r\n\t\t\t// TODO don't use .call\r\n\t\t\tthis.events.on(\"animationended\", callback, object);\r\n\t\t}*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object, clears up after itself.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tthis.pause();\r\n\t}\r\n\r\n\t/**\r\n\t * Delays animation start by X milliseconds.\r\n\t *\r\n\t * @param  {number}     delay  Delay (ms)\r\n\t * @return {Animation}         Animation\r\n\t */\r\n\tpublic delay(delay: number): Animation {\r\n\t\t//@todo Maybe not use `bind()`\r\n\t\tif (delay > 0) {\r\n\t\t\tthis.pause();\r\n\r\n\t\t\t// This is so that it will get disposed if `this.object` is disposed\r\n\t\t\t// TODO hacky, figure out a better way\r\n\t\t\t$array.move(this.object.animations, this);\r\n\r\n\t\t\tlet id = setTimeout(() => {\r\n\t\t\t\tthis._delayTimeout = null;\r\n\t\t\t\tthis.start();\r\n\t\t\t}, delay);\r\n\r\n\t\t\tthis._delayTimeout = new Disposer(() => {\r\n\t\t\t\tclearTimeout(id);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _start() {\r\n\t\tthis._isFinished = false;\r\n\t\t// Clear delay timeout if there was one\r\n\t\tif (this._delayTimeout) {\r\n\t\t\tthis.removeDispose(this._delayTimeout);\r\n\t\t\tthis._delayTimeout = null;\r\n\t\t}\r\n\r\n\t\t// Run check if there are already animations playing on the same properties\r\n\t\t// and stop them - the last animation takes precedence\r\n\t\tthis.stopSameAnimations();\r\n\r\n\t\t// Reset counters\r\n\t\tthis._pause = false;\r\n\r\n\t\t// Register animation\r\n\t\t$array.move(animations, this);\r\n\r\n\t\t// Register this animation in object's `animations` list\r\n\t\t$array.move(this.object.animations, this);\r\n\r\n\t\tsystem.requestFrame();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts animation.\r\n\t *\r\n\t * @return {Animation} Animation\r\n\t */\r\n\tpublic start(): Animation {\r\n\t\tthis._start();\r\n\t\tthis._startTime = Date.now();\r\n\t\tthis._time = 0;\r\n\t\tthis.staticOptions = [];\r\n\r\n\t\t// Process initial property values\r\n\t\tfor (let i: number = this.animationOptions.length - 1; i >= 0; i--) {\r\n\t\t\tlet options: IAnimationOptions = this.animationOptions[i];\r\n\t\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\t\tif (options.childObject) {\r\n\t\t\t\t\toptions.from = options.childObject[options.property];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\toptions.from = (<any>this.object)[options.property];\r\n\r\n\t\t\t\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\t\t\t\toptions.from = (<any>SVGDefaults)[options.property];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*if (!$type.hasValue(options.from)) {\r\n\t\t\t\t\tthrow Error(\"Could not get initial transition value.\");\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\r\n\t\t\tif (options.from == options.to) { // || options.to == (<any>this.object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue\r\n\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use different update methods for different value types\r\n\t\t\t\tif ($type.isNumber(<number>options.to)) {\r\n\r\n\t\t\t\t\t// Numeric value\r\n\t\t\t\t\toptions.updateMethod = getProgressNumber;\r\n\r\n\t\t\t\t\t// Check if initial value is not Percent\r\n\t\t\t\t\tif (options.from instanceof Percent) {\r\n\t\t\t\t\t\t// It is. Let's convert it to pixel value\r\n\t\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\t\tlet convertedFrom: number = (<any>this.object)[getHybridProperty(options.property, \"pixel\")];\r\n\t\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\t\toptions.from = convertedFrom;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Check if maybe we have a color or percent value\r\n\t\t\t\t\tif (options.to instanceof Color) {\r\n\t\t\t\t\t\t// Yup - set resolved named color\r\n\t\t\t\t\t\t//options.from = $colors.stringToColor(<string>options.from);\r\n\t\t\t\t\t\tif (options.from) {\r\n\t\t\t\t\t\t\toptions.updateMethod = getProgressColor;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// Static value\r\n\t\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (options.to instanceof Percent) {\r\n\t\t\t\t\t\t// Percent\r\n\t\t\t\t\t\toptions.updateMethod = getProgressPercent;\r\n\r\n\t\t\t\t\t\t// Check if the initial value is maybe in pixels\r\n\t\t\t\t\t\tif (!isNaN(<number>options.from)) {\r\n\t\t\t\t\t\t\t// It is. Let's convert it\r\n\t\t\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\t\t\tlet convertedFrom: number = (<any>this.object)[getHybridProperty(options.property, \"relative\")];\r\n\t\t\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\t\t\toptions.from = percent(convertedFrom * 100);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Static value\r\n\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply static options (just in case they were reset by previous\r\n\t\t// animation loop)\r\n\t\tthis.applyStaticOptions();\r\n\r\n\t\tif (this.events.isEnabled(\"animationstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationstarted\"] = {\r\n\t\t\t\ttype: \"animationstarted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationstarted\", event);\r\n\t\t}\r\n\r\n\t\tthis.update();\r\n\r\n\t\t// If duration is 0, just end animation\r\n\t\tif (this.duration === 0) {\r\n\t\t\tthis.end();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets loop count for the animation. If parameter is not a valid number the\r\n\t * animation will keep on looping indefinitely.\r\n\t *\r\n\t * @param  {number}     count  Number of times to loop animation\r\n\t * @return {Animation}         Animation\r\n\t */\r\n\tpublic loop(count?: number): Animation {\r\n\t\tif (!$type.isNumber(count)) {\r\n\t\t\tcount = Infinity;\r\n\t\t}\r\n\t\tthis._loop = count;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Pauses animation.\r\n\t *\r\n\t * @return {Animation} Animation\r\n\t */\r\n\tpublic pause(): Animation {\r\n\t\tthis._pause = true;\r\n\r\n\t\tif (this._delayTimeout) {\r\n\t\t\tthis.removeDispose(this._delayTimeout);\r\n\t\t\tthis._delayTimeout = null;\r\n\t\t}\r\n\r\n\t\t$array.remove(animations, this);\r\n\t\t$array.remove(this.object.animations, this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Resumes paused animation.\r\n\t *\r\n\t * @return {Animation} Animation\r\n\t */\r\n\tpublic resume(): Animation {\r\n\t\tthis._start();\r\n\t\tthis._startTime = Date.now() - this._time;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Jumps to animation end. If animation is set to loop, this will start\r\n\t * another round of animation from start.\r\n\t *\r\n\t * @return {Animation} Animation\r\n\t */\r\n\tpublic end(): Animation {\r\n\r\n\t\t// Pause and complete the progress\r\n\t\tif(this._loop == 0){\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.setProgress(1);\r\n\r\n\t\t// Apply static options\r\n\t\tthis.applyStaticOptions();\r\n\r\n\t\tif (this.events.isEnabled(\"animationended\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationended\"] = {\r\n\t\t\t\ttype: \"animationended\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationended\", event);\r\n\t\t}\r\n\r\n\t\t// Check if we should loop\r\n\t\tif (this._loop > 0) {\r\n\t\t\tthis._loop--;\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.stop();\r\n\t\t\tthis._isFinished = true;\r\n\t\t}\t\t\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic kill(){\r\n\t\tthis.pause();\r\n\t\tthis._isFinished = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this animation is finished or not\r\n\t *\r\n\t * @return {boolean} Is finished?\r\n\t */\r\n\tpublic isFinished(): boolean {\r\n\t\treturn this._isFinished;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies static options that can't be animated.\r\n\t */\r\n\tprotected applyStaticOptions(): void {\r\n\t\t$array.each(this.staticOptions, (options) => {\r\n\t\t\tif (options.childObject) {\r\n\t\t\t\toptions.childObject[options.property] = this.progress == 1 ? options.to : options.from;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.object)[options.property] = this.progress == 1 ? options.to : options.from;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Stops animation.\r\n\t *\r\n\t * When animation is stopped, the properties of the target object will remain\r\n\t * where they were at the moment when `stop()` was called.\r\n\t *\r\n\t * @param  {boolean}    skipEvent  Do not trigger `animationstopped` event\r\n\t * @return {Animation}             Animation\r\n\t */\r\n\tpublic stop(skipEvent?: boolean): Animation {\r\n\t\tthis.pause();\r\n\t\tif (!skipEvent) {\r\n\t\t\tif (this.events.isEnabled(\"animationstopped\")) {\r\n\t\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationstopped\"] = {\r\n\t\t\t\t\ttype: \"animationstopped\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tprogress: this.progress\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"animationstopped\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current progress and updates object's numeric and color values.\r\n\t *\r\n\t * @param {number} progress Progress (0-1)\r\n\t */\r\n\tpublic setProgress(progress: number): void {\r\n\t\tthis._time = this.duration * progress; // just in case we call this from outside\r\n\t\t$array.each(this.animationOptions, (options) => {\r\n\t\t\tif (options.updateMethod && $type.hasValue(options.from)) {\r\n\t\t\t\tlet value = options.updateMethod(progress, options.from, options.to);\r\n\r\n\t\t\t\tif (options.childObject) {\r\n\t\t\t\t\toptions.childObject[options.property] = value;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this.object)[options.property] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.progress = progress;\r\n\t\tif (this.events.isEnabled(\"animationprogress\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationprogress\"] = {\r\n\t\t\t\ttype: \"animationprogress\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationprogress\", event);\r\n\t\t}\r\n\r\n\t\tsystem.requestFrame();\r\n\t}\r\n\r\n\t/**\r\n\t * Tracks and sets progress according to time or frames.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Animation} Animation\r\n\t */\r\n\tpublic update(): Animation {\r\n\t\tif (!this._pause) {\r\n\r\n\t\t\tlet progress;\r\n\t\t\tthis._time = $math.fitToRange(Date.now() - this._startTime!, 0, this.duration);\r\n\t\t\tprogress = this.easing(this._time / this.duration);\r\n\t\t\tif (this.duration == 0 || !$type.isNumber(progress)) {\r\n\t\t\t\tprogress = 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setProgress(progress);\r\n\r\n\t\t\tif ($math.round(this._time / this.duration, 6) == 1) {\r\n\t\t\t\tthis.end();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this animation is delayed.\r\n\t *\r\n\t * @readonly\r\n\t * @return {boolean} [description]\r\n\t */\r\n\tpublic get delayed(): boolean {\r\n\t\treturn this._delayTimeout ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks other animations currently running on the same object and removes\r\n\t * overlapping options from those other animations that are contained in\r\n\t * this animation.\r\n\t *\r\n\t * This is needed to ensure that no two confurent animations step on each\r\n\t * other's toes by trying to animate the same property.\r\n\t */\r\n\tprivate stopSameAnimations(): void {\r\n\t\t// stop animation of the same property\r\n\t\t// TODO make this more efficient\r\n\t\t// TODO don't copy the array\r\n\t\t$array.each($array.copy(this.object.animations), (animation) => {\r\n\t\t\tif (animation !== this && !animation.delayed) {\r\n\t\t\t\tconst killed: Array<IAnimationOptions> = [];\r\n\r\n\t\t\t\t$array.each(this.animationOptions, (newOptions) => {\r\n\t\t\t\t\t$array.each(animation.animationOptions, (oldOptions) => {\r\n\t\t\t\t\t\tif (newOptions.property == oldOptions.property && newOptions.childObject == oldOptions.childObject) {\r\n\t\t\t\t\t\t\tkilled.push(oldOptions);\r\n\r\n\t\t\t\t\t\t\tif (animation.animationOptions.length == 0) {\r\n\t\t\t\t\t\t\t\tanimation.kill();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$array.each(killed, (oldOptions) => {\r\n\t\t\t\t\t$array.remove(animation.animationOptions, oldOptions);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Animation.ts","/**\r\n * Text class deals with all text placed on chart.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { DataItem } from \"../DataItem\";\r\nimport { TextValign } from \"../defs/TextValign\";\r\nimport { TextAlign } from \"../defs/TextAlign\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { AMElement } from \"../rendering/AMElement\";\r\nimport { Group } from \"../rendering/Group\";\r\nimport { registry } from \"../Registry\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { Paper, getGhostPaper } from \"../rendering/Paper\";\r\n\r\n\r\n\r\n/**\r\n * Defines properties for [[Text]].\r\n */\r\nexport interface ILabelProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Horizontal align of the text.\r\n\t *\r\n\t * @default \"start\"\r\n\t * @type {TextAlign}\r\n\t */\r\n\ttextAlign?: TextAlign;\r\n\r\n\t/**\r\n\t * Vertical align of the text.\r\n\t *\r\n\t * @default \"top\"\r\n\t * @type {TextValign}\r\n\t */\r\n\ttextValign?: TextValign;\r\n\r\n\t/**\r\n\t * A plain text content.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttext?: string;\r\n\r\n\t/**\r\n\t * Should the lines wrap if they do not fit into max width?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\twrap?: boolean;\r\n\r\n\t/**\r\n\t * Should the text be selectable>\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tselectable?: boolean;\r\n\r\n\t/**\r\n\t * HTML content.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thtml?: string;\r\n\r\n\t/**\r\n\t * Should the lines be truncated (optionally with ellipsis) if they do not\r\n\t * fit into max width?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\ttruncate?: boolean;\r\n\r\n\t/**\r\n\t * If `truncate` is enabled, should Label try to break only on full words\r\n\t * (`true`), or whenever needed, including middle of the word. (`false`)\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tfullWords?: boolean;\r\n\r\n\t/**\r\n\t * If lines are truncated, this ellipsis will be added at the end.\r\n\t *\r\n\t * @default \"...\"\r\n\t * @type {string}\r\n\t */\r\n\tellipsis?: string;\r\n\r\n\t/**\r\n\t * Hide text of it does not fit into element's dimensions?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\thideOversized?: boolean;\r\n\r\n\t/**\r\n\t * If set to `true` square-bracket formatting blocks will be treated as\r\n\t * regular text.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tignoreFormatting?: boolean;\r\n}\r\n\r\n/**\r\n * Text line information.\r\n *\r\n * Objects used to hold cached information about lines in a Text element.\r\n */\r\nexport interface ITextLineInfo {\r\n\r\n\t/**\r\n\t * Measurements for the bounding box of the line.\r\n\t *\r\n\t * @type {IRectangle}\r\n\t */\r\n\t\"bbox\"?: IRectangle,\r\n\r\n\t/**\r\n\t * A reference to an SVG `<g>` element that holds line elements.\r\n\t *\r\n\t * @type {Group}\r\n\t */\r\n\t\"element\"?: Group,\r\n\r\n\t/**\r\n\t * Indicates if line contains more than one element, e.g. has multiple\r\n\t * formatted blocks.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\t\"complex\"?: boolean,\r\n\r\n\t\"text\"?: string,\r\n\r\n\t\"style\"?: string\r\n};\r\n\r\n/**\r\n * Defines events for [[Text]].\r\n */\r\nexport interface ILabelEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Adapters for [[Text]].\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelAdapters extends IContainerAdapters, ILabelProperties {\r\n\r\n\t/**\r\n\t * Applied to the final formatted label text.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttextOutput: string;\r\n\r\n\t/**\r\n\t * Applied to the final formatted label HTML.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thtmlOutput: string;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Text is used to display highly configurable, data-enabled textual elements.\r\n *\r\n * ## Data Binding\r\n *\r\n * A Text element can dynamically parse and populate its contents with values\r\n * from a [[DataItem]].\r\n *\r\n * To activate such binding, set element's `dataItem` property.\r\n *\r\n * When activated, text contents will be parsed for special tags, e.g.:\r\n *\r\n * ```TypeScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n * ```JavaScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n *\r\n * The above will automatically replace \"{title}\" in the string with the\r\n * actual data value from `myDataItem`.\r\n *\r\n * Note, that most often dataItem is set by the Component.\r\n *\r\n *\r\n * @see {@link ILabelEvents} for a list of available events\r\n * @see {@link ILabelAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/} for info on string formatting and data binding\r\n * @todo Vertical align\r\n * @important\r\n */\r\nexport class Label extends Container {\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ILabelProperties}\r\n\t */\r\n\tpublic _properties!: ILabelProperties;\r\n\r\n\t/**\r\n\t * Defines Adapter type.\r\n\t *\r\n\t * @type {ILabelAdapters}\r\n\t */\r\n\tpublic _adapter!: ILabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILabelEvents}\r\n\t */\r\n\tpublic _events!: ILabelEvents;\r\n\r\n\t/**\r\n\t * Indicates if the whole text does not fit into max dimenstions set for it.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isOversized: boolean = false;\r\n\r\n\t/**\r\n\t * Currently formatted text, read only.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic currentText: string;\r\n\r\n\t/**\r\n\t * Current format to be used for outputing text.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _currentFormat: string;\r\n\r\n\t/**\r\n\t * [_sourceDataItemEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {MultiDisposer}\r\n\t */\r\n\tprotected _sourceDataItemEvents: MultiDisposer;\r\n\r\n\r\n\tprotected _prevStatus: string;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Execute super's constructor\r\n\t\tsuper();\r\n\r\n\t\t// Set this class name\r\n\t\tthis.className = \"Label\";\r\n\r\n\t\tthis.fill = new InterfaceColorSet().getFor(\"text\");\r\n\r\n\t\t// not good to set this, as then these will appear on each label and values set on container won't be applied.\r\n\t\t//this.textDecoration = \"none\";\r\n\t\t//this.fontWeight = \"normal\";\r\n\r\n\r\n\t\t// Set defaults\r\n\t\tthis.wrap = false;\r\n\t\tthis.truncate = false;\r\n\t\tthis.fullWords = true;\r\n\t\tthis.ellipsis = \"...\";\r\n\t\tthis.textAlign = \"start\";\r\n\t\tthis.textValign = \"top\";\r\n\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\t// Set up adapters for manipulating accessibility\r\n\t\tthis.adapter.add(\"readerTitle\", (arg) => {\r\n\t\t\tif (!arg) {\r\n\r\n\t\t\t\targ = this.populateString(\r\n\t\t\t\t\t$utils.plainText(\r\n\t\t\t\t\t\t$utils.isNotEmpty(this.html)\r\n\t\t\t\t\t\t\t? this.html\r\n\t\t\t\t\t\t\t: this.text\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add events to watch for maxWidth/maxHeight changes so that we can\r\n\t\t// invalidate this\r\n\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.handleMaxSize()\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\t// this solves strange bug when text just added to svg is 0x0\r\n\t\tthis.events.once(\"validated\", this.handleValidate, this, false);\r\n\r\n\t\t// Aply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A placeholder method that is called **after** element finishes drawing\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\t// since we removed validatePosition from sprite, we still need it here to handle rotated text\r\n\t\tsuper.afterDraw();\r\n\t\tthis.validatePosition();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param {Paper} paper Paper\r\n\t * @return {boolean} true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\r\n\t\tlet changed = super.setPaper(paper);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.hardInvalidate();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleValidate() {\r\n\t\tif ((this.currentText || this.text) && (this.bbox.width == 0 || this.bbox.height == 0)) {\r\n\t\t\tregistry.events.once(\"exitframe\", this.hardInvalidate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMaxSize() {\r\n\t\tif (\r\n\t\t\t(this.bbox.width > this.availableWidth)\r\n\t\t\t|| ((this.bbox.width < this.availableWidth) && (this.isOversized || this.truncate))\r\n\t\t\t|| (this.bbox.height > this.availableHeight)\r\n\t\t\t|| ((this.bbox.height < this.availableHeight) && this.isOversized)\r\n\t\t) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.alignSVGText();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic arrange(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates current text according to data item and supported features.\r\n\t * Returns `true` if current text has changed.\r\n\t *\r\n\t * @return {boolean} Text changed?\r\n\t */\r\n\tprotected updateCurrentText(): boolean {\r\n\t\t// Determine output format\r\n\t\tlet output: string, text: string;\r\n\r\n\t\tif ($utils.isNotEmpty(this.html) && this.paper.supportsForeignObject()) {\r\n\r\n\t\t\t// We favor HTML text if it's set and browser supports `foreignObject`\r\n\t\t\toutput = \"html\";\r\n\t\t\ttext = this.html;\r\n\t\t}\r\n\t\telse {\r\n\t\t\toutput = \"svg\";\r\n\t\t\ttext = this.text;\r\n\t\t}\r\n\r\n\t\t// Need to format text all the time\r\n\t\tif ($type.hasValue(text) && text !== \"\") {\r\n\t\t\ttext = this.populateString(text, this.dataItem);\r\n\t\t}\r\n\r\n\t\tif (output == \"html\") {\r\n\t\t\ttext = this.adapter.apply(\"htmlOutput\", text);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttext = this.adapter.apply(\"textOutput\", text);\r\n\t\t}\r\n\r\n\t\t// Update the text\r\n\t\tlet changed = text != this.currentText || output != this._currentFormat;\r\n\t\tthis.currentText = text;\r\n\t\tthis._currentFormat = output;\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Hard invalidate means the text will be redrawn even if it hasn't changed. This is used when we change fontSize of fontFamily or for some other reasons.\r\n\t */\r\n\tpublic hardInvalidate() {\r\n\t\tthis._prevStatus = \"\";\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets line bbox, uses caching to save cpu\r\n\t * @ignore\r\n\t */\r\n\tprotected getLineBBox(lineInfo: ITextLineInfo) {\r\n\t\t//let cacheKey = lineInfo.text + lineInfo.style;\r\n\r\n\t\t//let lineBBox = this.getCache(cacheKey);\r\n\t\t//if (!lineBBox) {\r\n\t\t//lineBBox = lineInfo.element.getBBox();\r\n\t\t//if (lineBBox.width != 0 && lineBBox.height != 0) {\r\n\t\t//\tthis.setCache(cacheKey, lineBBox, 5000);\r\n\t\t//}\r\n\t\t//}\r\n\r\n\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the textual label.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\r\n\t\t// Draw super\r\n\t\tsuper.draw();\r\n\r\n\t\tlet topParent = this.topParent;\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\ttopParent.events.once(\"maxsizechanged\", this.hardInvalidate, this, false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Calculate max width and height\r\n\t\tlet maxWidth: number = $math.max(this.availableWidth - this.pixelPaddingLeft - this.pixelPaddingRight, 0);\r\n\t\tlet maxHeight: number = $math.max(this.availableHeight - this.pixelPaddingTop - this.pixelPaddingBottom, 0);\r\n\r\n\t\t// save\r\n\t\tlet status = maxHeight + \",\" + maxWidth + this.wrap + this.truncate + this.fullWords + this.rtl + this.ellipsis;\r\n\r\n\t\t// Update text\r\n\t\tif (!this.updateCurrentText() && this.inited && this._prevStatus == status) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._measuredWidth = 0;\r\n\t\tthis._measuredHeight = 0;\r\n\r\n\t\t// Reset\r\n\t\tthis.isOversized = false;\r\n\r\n\t\t// Determine output format\r\n\t\tlet output = this._currentFormat;\r\n\t\tlet text = this.currentText;\r\n\r\n\t\t// Empty string\r\n\t\tif (!$type.hasValue(text) || text == \"\") {\r\n\t\t\tthis.element.attr({ display: \"none\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Chop up text into lines\r\n\t\t// We're still processing SVG and HTML in the same way for now\r\n\t\tlet lines: string[] = text.split(\"\\n\");\r\n\r\n\t\t// Do we need to go through the trouble of measuring lines\r\n\t\t//let measure: boolean = true;// (lines.length > 1) || this.wrap;\r\n\r\n\t\tthis._prevStatus = status;\r\n\r\n\t\tthis.textAlign = this.textAlign;\r\n\r\n\t\t// need this to measure\r\n\t\tlet display = this.group.getAttr(\"display\");\r\n\t\tif (display == \"none\") {\r\n\t\t\tthis.group.removeAttr(\"display\");\r\n\t\t}\r\n\r\n\t\t// SVG or HTML?\r\n\t\tif (output === \"svg\") {\r\n\r\n\t\t\t/**\r\n\t\t\t * SVG\r\n\t\t\t */\r\n\r\n\t\t\tthis.element.removeAttr(\"display\");\r\n\r\n\t\t\t// Clear the element\r\n\t\t\tlet group: Group = <Group>this.element;\r\n\r\n\t\t\tthis.resetBBox();\r\n\r\n\t\t\t// Init state variables\r\n\t\t\tlet currentHeight: number = 0;\r\n\t\t\tlet currentFormat: string = \"\";\r\n\r\n\t\t\t// Process each line\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\r\n\t\t\t\t// Get line\r\n\t\t\t\tlet line: string = lines[i];\r\n\r\n\t\t\t\t// Check if line is empty\r\n\t\t\t\tif (line == \"\") {\r\n\t\t\t\t\t// It is, let's just update currentHeight and go to the next one\r\n\t\t\t\t\t// If it's the first line, we'll have to use arbirary line height,\r\n\t\t\t\t\t// since there's nothing to measure. For subsequent lines we can take\r\n\t\t\t\t\t// previous line's height\r\n\t\t\t\t\tlet tempElement = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\ttempElement.add(\r\n\t\t\t\t\t\tthis.getSvgElement(\r\n\t\t\t\t\t\t\t\".\",\r\n\t\t\t\t\t\t\tgetTextFormatter().translateStyleShortcuts(currentFormat)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tgroup.add(tempElement);\r\n\t\t\t\t\tlet offset = Math.ceil(tempElement.getBBox().height);\r\n\t\t\t\t\tif (offset > 0) {\r\n\t\t\t\t\t\tcurrentHeight += offset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.removeElement(tempElement);\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Chunk up the line and process each chunk\r\n\t\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(line, null, this.ignoreFormatting);\r\n\t\t\t\tlet currentLineHeight: number = 0;\r\n\t\t\t\tlet firstChunk: boolean = true;\r\n\t\t\t\tlet skipTextChunks: boolean = false;\r\n\r\n\t\t\t\t// Create line element or grab it from cache\r\n\t\t\t\tlet lineInfo: ITextLineInfo;\r\n\t\t\t\tif (lineInfo = this.getLineInfo(i)) {\r\n\t\t\t\t\t// Empty line\r\n\t\t\t\t\tlineInfo.element.textContent = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Init new line info\r\n\t\t\t\t\tlineInfo = {\r\n\t\t\t\t\t\t\"element\": this.getSVGLineElement(\"\", 0),\r\n\t\t\t\t\t\t\"complex\": false\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Create the line element\r\n\t\t\t\t\t//lineInfo.element = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\t//lineElement = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\tgroup.add(lineInfo.element);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlineInfo.element.removeAttr(\"display\");\r\n\t\t\t\tlineInfo.element.removeChildren(); // memory leak without this\r\n\r\n\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\tchunks.reverse();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Process each chunk\r\n\t\t\t\tfor (let x: number = 0; x < chunks.length; x++) {\r\n\r\n\t\t\t\t\t// If there's more than one chunk, means the line is \"complex\"\r\n\t\t\t\t\tif (x) {\r\n\t\t\t\t\t\tlineInfo.complex = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Get chunk\r\n\t\t\t\t\tlet chunk = chunks[x];\r\n\r\n\t\t\t\t\t// Is this chunk format or text?\r\n\t\t\t\t\tif (chunk.type === \"format\") {\r\n\r\n\t\t\t\t\t\t// Log current format, so that we can apply it to multiple lines if\r\n\t\t\t\t\t\t// necessary\r\n\t\t\t\t\t\tcurrentFormat = chunk.text;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// It's text block\r\n\r\n\t\t\t\t\t\t// Need to skip?\r\n\t\t\t\t\t\t// We do this when truncating. We can't just simply go ahead and\r\n\t\t\t\t\t\t// abandon chunk processing as they might have formatting\r\n\t\t\t\t\t\t// instructions in them that are relevant for subsequent lines\r\n\t\t\t\t\t\tif (skipTextChunks) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add chunk to the current element\r\n\t\t\t\t\t\t//lineInfo.element.content += $utils.trim(getTextFormatter().format(currentFormat + chunk.text, output));\r\n\r\n\t\t\t\t\t\tlineInfo.text = chunk.text;\r\n\t\t\t\t\t\tlineInfo.style = getTextFormatter().translateStyleShortcuts(currentFormat);\r\n\r\n\t\t\t\t\t\tlineInfo.element.add(\r\n\t\t\t\t\t\t\tthis.getSvgElement(\r\n\t\t\t\t\t\t\t\tlineInfo.text,\r\n\t\t\t\t\t\t\t\tlineInfo.style\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tthis.getLineBBox(lineInfo);\r\n\t\t\t\t\t\tlineInfo.bbox.width = Math.ceil(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t// Updated current line height\r\n\t\t\t\t\t\tif (currentLineHeight < lineInfo.bbox.height) {\r\n\t\t\t\t\t\t\tcurrentLineHeight = lineInfo.bbox.height;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Wrapping?\r\n\t\t\t\t\t\tif ((this.wrap || this.truncate) && (lineInfo.bbox.width > maxWidth)) {\r\n\r\n\t\t\t\t\t\t\t// Set oversized\r\n\t\t\t\t\t\t\tthis.isOversized = true;\r\n\r\n\t\t\t\t\t\t\t// Take temporary measurements\r\n\t\t\t\t\t\t\tlet lineText: string = lineInfo.element.textContent;\r\n\t\t\t\t\t\t\tlet avgCharWidth: number = (lineInfo.bbox.width / lineText.length); // * .9;\r\n\r\n\t\t\t\t\t\t\t// Calculate average number of symbols / width\r\n\t\t\t\t\t\t\tlet excessChars: number = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n\r\n\t\t\t\t\t\t\t// Are we truncating or auto-wrapping text?\r\n\t\t\t\t\t\t\tif (this.truncate) {\r\n\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * Processing line truncation\r\n\t\t\t\t\t\t\t\t * With the addition of each text chunk we measure if current\r\n\t\t\t\t\t\t\t\t * line does not exceed maxWidth. If it does, we will stop\r\n\t\t\t\t\t\t\t\t * addition of further chunks as well as try to truncate\r\n\t\t\t\t\t\t\t\t * current or any number of previous chunks with an added\r\n\t\t\t\t\t\t\t\t * ellipsis\r\n\t\t\t\t\t\t\t\t */\r\n\r\n\t\t\t\t\t\t\t\t// Indicator whether we need to add ellipsis to the current\r\n\t\t\t\t\t\t\t\t// element, even if it fits. This is needed to indicate\r\n\t\t\t\t\t\t\t\t// whether we have already removed some subsequent chunks in\r\n\t\t\t\t\t\t\t\t// which case we need to add ellipsis.\r\n\t\t\t\t\t\t\t\tlet addEllipsis: boolean = false;\r\n\r\n\t\t\t\t\t\t\t\t// Process each child in the temporary line, until the whole\r\n\t\t\t\t\t\t\t\t// line fits, preferably with an ellipsis\r\n\t\t\t\t\t\t\t\t// TODO use iterator instead\r\n\t\t\t\t\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\t\t\t\t\tif (node && node.childNodes) {\r\n\t\t\t\t\t\t\t\t\tfor (let e = lineInfo.element.node.childNodes.length - 1; e >= 0; e--) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Get current element\r\n\t\t\t\t\t\t\t\t\t\tlet node = lineInfo.element.node.childNodes[e];\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Add ellipsis only if previous chunk was removed in full\r\n\t\t\t\t\t\t\t\t\t\t// and this chunk already fits\r\n\t\t\t\t\t\t\t\t\t\t//if (addEllipsis && (bbox.width <= maxWidth)) {\r\n\t\t\t\t\t\t\t\t\t\tif (addEllipsis && (lineInfo.bbox.width <= maxWidth)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Add ellipsis\r\n\t\t\t\t\t\t\t\t\t\t\tnode.textContent += \" \" + this.ellipsis;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Measure again (we need to make sure ellipsis fits)\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// If it fits, we're done here\r\n\t\t\t\t\t\t\t\t\t\t\t// If it doesn't we continue rolling\r\n\t\t\t\t\t\t\t\t\t\t\tif (lineInfo.bbox.width <= maxWidth) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\taddEllipsis = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Get element text\r\n\t\t\t\t\t\t\t\t\t\tlet elementText = node.textContent;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Calculate average number of symbols / width\r\n\t\t\t\t\t\t\t\t\t\tlineText = lineInfo.element.textContent;\r\n\t\t\t\t\t\t\t\t\t\texcessChars = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Do this until we fit\r\n\t\t\t\t\t\t\t\t\t\twhile ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Calculate max available chars\r\n\t\t\t\t\t\t\t\t\t\t\tlet maxChars: number = $math.max(elementText.length - excessChars - this.ellipsis.length, 1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Is there anything left?\r\n\t\t\t\t\t\t\t\t\t\t\tif (maxChars <= 1) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Nope, let's jump to the previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Set excess characters to zero so that this loop does\r\n\t\t\t\t\t\t\t\t\t\t\t\t// not repeat when it over\r\n\t\t\t\t\t\t\t\t\t\t\t\texcessChars = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Add ellipsis to previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Subsequent iterations will check if the ellipsis fits\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e > 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Indicating to add ellipsis to previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taddEllipsis = true;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Removing this node\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlineInfo.element.node.removeChild(node);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Truncate the text\r\n\t\t\t\t\t\t\t\t\t\t\telementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, this.fullWords, this.rtl);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ((elementText.length > maxChars) && this.fullWords) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Still too long?\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Let's try truncating breaking words anyway\r\n\t\t\t\t\t\t\t\t\t\t\t\telementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, false, this.rtl);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Set truncated text\r\n\t\t\t\t\t\t\t\t\t\t\tnode.textContent = elementText;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Measure again\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Increase excess characters count, just in case it still\r\n\t\t\t\t\t\t\t\t\t\t\t// doesn't fit and we have to go at it again\r\n\t\t\t\t\t\t\t\t\t\t\texcessChars = Math.ceil(excessChars * 1.1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Do not process further chunks\r\n\t\t\t\t\t\t\t\t\t\tskipTextChunks = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * Processign auto-wrap\r\n\t\t\t\t\t\t\t\t * In this case we're going to be adding text chunks until\r\n\t\t\t\t\t\t\t\t * they don't fit into current line. Once that happens we will\r\n\t\t\t\t\t\t\t\t * inject the rest of the chunks to the next line\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t// Get last node added and measure it\r\n\t\t\t\t\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\t\t\t\tlet lastNode = lineInfo.element.node.lastChild;\r\n\r\n\t\t\t\t\t\t\t\t\t// Init split lines\r\n\t\t\t\t\t\t\t\t\tlet splitLines: string[];\r\n\t\t\t\t\t\t\t\t\twhile ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Calculate max available chars\r\n\t\t\t\t\t\t\t\t\t\tlet maxChars: number = $math.max(chunk.text.length - excessChars, 1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Don't split the words mid-word if it's not the first chunk\r\n\t\t\t\t\t\t\t\t\t\t// in the line\r\n\t\t\t\t\t\t\t\t\t\tif (firstChunk) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Split mid-word if necessary\r\n\t\t\t\t\t\t\t\t\t\t\tsplitLines = $utils.splitTextByCharCount(chunk.text, maxChars, false, this.rtl);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Don't split mid-word\r\n\t\t\t\t\t\t\t\t\t\t\tsplitLines = $utils.splitTextByCharCount(chunk.text, maxChars, true, this.rtl);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Check if the first word is too long\r\n\t\t\t\t\t\t\t\t\t\t\tif ((splitLines[0].length > maxChars) || maxChars === 1) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Yes - move the whole chunk to the next line\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Remove the element we just added\r\n\t\t\t\t\t\t\t\t\t\t\t\tlineInfo.element.node.removeChild(lastNode)\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Break out of the while on next cycle\r\n\t\t\t\t\t\t\t\t\t\t\t\texcessChars = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Use the first line to update last item\r\n\t\t\t\t\t\t\t\t\t\tif (excessChars > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tlastNode.textContent = getTextFormatter().cleanUp($utils.trim(splitLines.shift()));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Measure again, just in case\r\n\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Increase excess characters count, just in case it still\r\n\t\t\t\t\t\t\t\t\t\t// doesn't fit and we have to go at it again\r\n\t\t\t\t\t\t\t\t\t\texcessChars = Math.ceil(excessChars * 1.1);\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t// Construct the rest of the line\r\n\t\t\t\t\t\t\t\t\tif (splitLines.length > 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tlet restOfLine: string = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Add leftovers from splitting the current chunk\r\n\t\t\t\t\t\t\t\t\t\tif ($type.hasValue(splitLines)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += splitLines.join(\"\") + currentFormat;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += currentFormat + splitLines.join(\"\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Add the rest of the chunks\r\n\t\t\t\t\t\t\t\t\t\tfor (let c: number = x + 1; c < chunks.length; c++) {\r\n\t\t\t\t\t\t\t\t\t\t\trestOfLine += chunks[c].text;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Inject the rest of the lines as chunks for subsequent\r\n\t\t\t\t\t\t\t\t\t\tlines.splice(i + 1, 0, restOfLine);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Skip processing the rest of the chunks\r\n\t\t\t\t\t\t\t\t\tskipTextChunks = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Let's update the text's bbox with the line's one\r\n\t\t\t\t\t\tif (this.bbox.width < lineInfo.bbox.width) {\r\n\t\t\t\t\t\t\tthis.bbox.width = lineInfo.bbox.width;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// commented to avoid bug (seen on sankey link) where text is incorrectly aligned\r\n\t\t\t\t\t\t//if (this.bbox.x > lineInfo.bbox.x) {\r\n\t\t\t\t\t\t//this.bbox.x = lineInfo.bbox.x;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tthis.bbox.height = currentHeight + currentLineHeight;\r\n\r\n\t\t\t\t\t\t// Position current line\r\n\t\t\t\t\t\tlineInfo.element.attr({\r\n\t\t\t\t\t\t\t\"x\": \"0\",\r\n\t\t\t\t\t\t\t\"y\": currentHeight + currentLineHeight,\r\n\t\t\t\t\t\t\t\"dy\": $math.round((-0.2 * currentLineHeight), 3).toString()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfirstChunk = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trim the last item\r\n\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\tif (node) {\r\n\t\t\t\t\tlet lastNode = node.lastChild;\r\n\t\t\t\t\tif (lastNode) {\r\n\t\t\t\t\t\tlastNode.textContent = this.rtl ?\r\n\t\t\t\t\t\t\t$utils.ltrim(lastNode.textContent) :\r\n\t\t\t\t\t\t\t$utils.rtrim(lastNode.textContent);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Increment collective height\r\n\t\t\t\tcurrentHeight += currentLineHeight;\r\n\r\n\t\t\t\t// Save line cache\r\n\t\t\t\tthis.addLineInfo(lineInfo, i);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if maybe we need to hide the whole label if it doesn't fit\r\n\t\t\tif (this.hideOversized) {\r\n\t\t\t\tif ((this.availableWidth < this.bbox.width) || (this.availableHeight < this.bbox.height)) {\r\n\t\t\t\t\tthis.element.attr({ display: \"none\" });\r\n\t\t\t\t\tthis.isOversized = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.element.removeAttr(\"display\");\r\n\t\t\t\t\tthis.isOversized = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._measuredWidth = $math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);\r\n\t\t\tthis._measuredHeight = $math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n\r\n\t\t\t// Align the lines\r\n\t\t\tthis.alignSVGText();\r\n\r\n\t\t\tthis.bbox.width = this._measuredWidth;\r\n\t\t\tthis.bbox.height = this._measuredHeight;\r\n\r\n\t\t\tthis.hideUnused(lines.length);\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * HTML\r\n\t\t\t */\r\n\r\n\t\t\tlet pixelRatio = $utils.getPixelRatio();\r\n\r\n\t\t\tthis.element.removeAttr(\"display\");\r\n\t\t\tthis.resetBBox();\r\n\r\n\t\t\t// Clear the element\r\n\t\t\tlet group: Group = <Group>this.element;\r\n\t\t\tgroup.removeChildren();\r\n\r\n\t\t\t// Create a ForeignObject to use as HTML container\r\n\t\t\tlet fo = this.paper.foreignObject();\r\n\t\t\tgroup.add(fo);\r\n\r\n\t\t\t// Set group and foreignObject dimensions\r\n\t\t\tlet width: string = maxWidth > 0 ? (maxWidth).toString() + \"px\" : \"100%\";\r\n\t\t\tlet height: string = maxHeight > 0 ? (maxHeight).toString() + \"px\" : \"100%\";\r\n\t\t\t/*\t\t\tfo.attr({\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: height\r\n\t\t\t\t\t\t});*/\r\n\r\n\t\t\t// Create line element\r\n\t\t\t//let lineElement: HTMLElement = this.getHTMLLineElement(getTextFormatter().format(this.html, output));\r\n\t\t\tlet lineElement: HTMLElement = this.getHTMLLineElement(text);\r\n\t\t\tfo.node.appendChild(lineElement);\r\n\r\n\t\t\t// Temporarily set to inline-block so we can measure real width and height\r\n\t\t\tlineElement.style.display = \"inline-block\";\r\n\t\t\tlet tmpBBox = lineElement.getBoundingClientRect();\r\n\t\t\tlineElement.style.display = \"block\";\r\n\t\t\tthis._bbox = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: tmpBBox.width / pixelRatio,\r\n\t\t\t\theight: tmpBBox.height / pixelRatio\r\n\t\t\t};\r\n\r\n\t\t\t// Set exact dimensions of foreignObject so it is sized exactly as\r\n\t\t\t// the content within\r\n\t\t\tfo.attr({\r\n\t\t\t\twidth: tmpBBox.width / pixelRatio,\r\n\t\t\t\theight: tmpBBox.height / pixelRatio\r\n\t\t\t});\r\n\r\n\t\t\t// Set measurements and update bbox\r\n\t\t\tthis._measuredWidth = $math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);\r\n\t\t\tthis._measuredHeight = $math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n\r\n\t\t\tthis.bbox.width = this._measuredWidth;\r\n\t\t\tthis.bbox.height = this._measuredHeight;\r\n\r\n\t\t\t// Don't let labels bleed out of the alotted area\r\n\t\t\tif (this.truncate) {\r\n\t\t\t\tlineElement.style.overflow = \"hidden\";\r\n\t\t\t}\r\n\r\n\t\t\tif ((tmpBBox.width > maxWidth) || (tmpBBox.height > maxHeight)) {\r\n\t\t\t\tthis.isOversized = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Set applicable styles\r\n\t\tthis.setStyles();\r\n\t\tthis.updateCenter();\r\n\t\tthis.updateBackground();\r\n\r\n\t\tif (display == \"none\") {\r\n\t\t\tthis.group.attr({ display: \"none\" });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Aligns the lines horizontally ant vertically, based on properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic alignSVGText(): void {\r\n\t\t// Get Group\r\n\t\tlet group: Group = <Group>this.element;\r\n\t\tlet children = group.node.children || group.node.childNodes;\r\n\r\n\t\t// Is there anything to align?\r\n\t\tif (!children || (children && children.length == 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet width = this._measuredWidth;\r\n\t\tlet height = this._measuredHeight;\r\n\r\n\t\tlet paddingLeft = this.pixelPaddingLeft;\r\n\t\tlet paddingRight = this.pixelPaddingRight;\r\n\t\tlet paddingTop = this.pixelPaddingTop;\r\n\t\tlet paddingBottom = this.pixelPaddingBottom;\r\n\r\n\t\t// Process each line\r\n\t\t//$iter.each(group.children.backwards().iterator(), (element) => {\r\n\t\tfor (let i = children.length - 1; i >= 0; i--) {\r\n\t\t\t// Align horizontally\r\n\t\t\t// Since we are using `text-anchor` for horizontal alignment, all we need\r\n\t\t\t// to do here is move the `x` position\r\n\t\t\tlet node = <SVGElement>children[i];\r\n\r\n\t\t\tnode.setAttribute(\"text-anchor\", this.textAlign);\r\n\r\n\t\t\tswitch (this.textAlign) {\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tnode.setAttribute(\"x\", (width / 2).toString() + \"px\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t\tif (this.rtl) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.setAttribute(\"x\", width.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\t\tnode.setAttribute(\"x\", width.toString());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.removeAttribute(\"text-anchor\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet y = $type.toNumber(node.getAttribute(\"y\"));\r\n\r\n\t\t\tswitch (this.textValign) {\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tnode.setAttribute(\"y\", (y + (height - this.bbox.height) / 2).toString());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tnode.setAttribute(\"y\", (y + height - this.bbox.height).toString());\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tnode.setAttribute(\"y\", y.toString());\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Produces an SVG line element with formatted text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}     text    Text to wrap into line\r\n\t * @param  {number}     y       Current line vertical position\r\n\t * @return {AMElement}          A DOM element\r\n\t * @todo Implement HTML support\r\n\t */\r\n\tpublic getSVGLineElement(text: string, y?: number): Group {\r\n\r\n\t\t// Create a <text> node and set text\r\n\t\tlet element: Group = this.paper.addGroup(\"text\");\r\n\t\telement.textContent = text;\r\n\r\n\t\t// Set parameters\r\n\t\telement.attr({\r\n\t\t\t\"x\": \"0\"\r\n\t\t\t//\"alignment-baseline\": \"hanging\",\r\n\t\t\t//\"baseline-shift\": \"-20%\",\r\n\t\t\t//\"text-anchor\": \"center\"\r\n\t\t});\r\n\r\n\t\t// Set `y` position\r\n\t\tif ($type.hasValue(y)) {\r\n\t\t\telement.attr({\r\n\t\t\t\t\"y\": y.toString()\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Don't let labels blled out of the alotted area\r\n\t\tif (this.truncate || this.wrap) {\r\n\t\t\telement.attr({ \"overflow\": \"hidden\" });\r\n\t\t}\r\n\r\n\t\t// Add RTL?\r\n\t\tif (this.rtl) {\r\n\t\t\telement.attr({\r\n\t\t\t\t\"direction\": \"rtl\",\r\n\t\t\t\t\"unicode-bidi\": \"bidi-override\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets cached BBox.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic resetBBox(): void {\r\n\t\tthis._bbox = { x: 0, y: 0, width: 0, height: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns an HTML line element (`<div>`).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}       text  Text to add\r\n\t * @return {HTMLElement}        `<div>` element reference\r\n\t */\r\n\tpublic getHTMLLineElement(text: string): HTMLElement {\r\n\r\n\t\t// Create the <div> element\r\n\t\tlet div: HTMLElement = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = text;\r\n\r\n\t\t// Set text alignment\r\n\t\tswitch (this.textAlign) {\r\n\t\t\tcase \"middle\":\r\n\t\t\t\tdiv.style.textAlign = \"center\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"end\":\r\n\t\t\t\tdiv.style.textAlign = \"right\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// Disable or enable wrapping\r\n\t\tif (this.wrap) {\r\n\t\t\tdiv.style.wordWrap = \"break-word\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdiv.style.whiteSpace = \"nowrap\";\r\n\t\t}\r\n\r\n\t\t// Don't let labels bleed out of the alotted area\r\n\t\t// Moved to `draw()` because setting \"hidden\" kills all measuring\r\n\t\t/*if (this.truncate) {\r\n\t\t\tdiv.style.overflow = \"hidden\";\r\n\t\t}*/\r\n\r\n\t\t// Set RTL-related styles\r\n\t\tif (this.rtl) {\r\n\t\t\tdiv.style.direction = \"rtl\";\r\n\t\t\tdiv.style.unicodeBidi = \"bidi-override\";\r\n\t\t}\r\n\r\n\t\t// Translate some of the SVG styles into CSS\r\n\t\tif ($type.hasValue(this.fill)) {\r\n\t\t\tdiv.style.color = this.fill.toString();\r\n\t\t}\r\n\r\n\t\treturn div;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies specific styles to text to make it not selectable, unless it is\r\n\t * explicitly set as `selectable`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Set styles via AMElement\r\n\t */\r\n\tpublic setStyles(): void {\r\n\t\tlet group: Group = <Group>this.element;\r\n\t\tif (!this.selectable || this.draggable || this.resizable || this.swipeable) {\r\n\t\t\tgroup.addStyle({\r\n\t\t\t\t\"webkitUserSelect\": \"none\",\r\n\t\t\t\t\"msUserSelect\": \"none\"\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (this.selectable) {\r\n\t\t\tgroup.removeStyle(\"webkitUserSelect\");\r\n\t\t\tgroup.removeStyle(\"msUserSelect\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused lines\r\n\t */\r\n\tprotected hideUnused(index: number) {\r\n\t\tthis.initLineCache();\r\n\t\tlet lines: ITextLineInfo[] = this.getCache(\"lineInfo\");\r\n\t\tif (lines.length >= index) {\r\n\t\t\tfor (let i = index; i < lines.length; i++) {\r\n\t\t\t\tlet line = lines[i];\r\n\t\t\t\tif (line && line.element) {\r\n\t\t\t\t\tline.element.attr({ \"display\": \"none\" });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An SVG text.\r\n\t *\r\n\t * Please note that setting `html` will override this setting if browser\r\n\t * supports `foreignObject` in SGV, such as most modern browsers excluding\r\n\t * IEs.\r\n\t *\r\n\t * @param {string}  value  SVG Text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\t//this.setPropertyValue(\"html\", undefined);\r\n\t\tthis.setPropertyValue(\"text\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} SVG text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.getPropertyValue(\"text\");\r\n\t}\r\n\r\n\t/**\r\n\t * Enables or disables autowrapping of text.\r\n\t *\r\n\t * @param {boolean}  value  Auto-wrapping enabled\r\n\t */\r\n\tpublic set wrap(value: boolean) {\r\n\t\tthis.resetBBox();\r\n\t\tthis.setPropertyValue(\"wrap\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Auto-wrap enabled or not\r\n\t */\r\n\tpublic get wrap(): boolean {\r\n\t\treturn this.getPropertyValue(\"wrap\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if text lines need to be truncated if they do not fit, using\r\n\t * configurable `ellipsis` string.\r\n\t *\r\n\t * `truncate` overrides `wrap` if both are set to `true`.\r\n\t *\r\n\t * NOTE: For HTML text, this setting **won't** trigger a parser and actual\r\n\t * line truncation with ellipsis. It will just hide everything that goes\r\n\t * outside the label.\r\n\t *\r\n\t * @param {boolean}  value  trincate text?\r\n\t */\r\n\tpublic set truncate(value: boolean) {\r\n\t\tthis.resetBBox();\r\n\t\tthis.setPropertyValue(\"truncate\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Truncate text?\r\n\t */\r\n\tpublic get truncate(): boolean {\r\n\t\treturn this.getPropertyValue(\"truncate\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `truncate` is enabled, should Label try to break only on full words\r\n\t * (`true`), or whenever needed, including middle of the word. (`false`)\r\n\t *\r\n\t * @default true\r\n\t * @param {boolean}  value  Truncate on full words?\r\n\t */\r\n\tpublic set fullWords(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWords\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Truncate on full words?\r\n\t */\r\n\tpublic get fullWords(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWords\");\r\n\t}\r\n\r\n\t/**\r\n\t * Ellipsis character to use if `truncate` is enabled.\r\n\t *\r\n\t * @param {string} value Ellipsis string\r\n\t * @default \"...\"\r\n\t */\r\n\tpublic set ellipsis(value: string) {\r\n\t\tthis.setPropertyValue(\"ellipsis\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Ellipsis string\r\n\t */\r\n\tpublic get ellipsis(): string {\r\n\t\treturn this.getPropertyValue(\"ellipsis\");\r\n\t}\r\n\r\n\t/**\r\n\t * Forces the text to be selectable. This setting will be ignored if the\r\n\t * object has some kind of interaction attached to it, such as it is\r\n\t * `draggable`, `swipeable`, `resizable`.\r\n\t *\r\n\t * @param {boolean}  value  Text selectable?\r\n\t * @default false\r\n\t */\r\n\tpublic set selectable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"selectable\", value, true);\r\n\t\tthis.setStyles();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Text selectable?\r\n\t */\r\n\tpublic get selectable(): boolean {\r\n\t\treturn this.getPropertyValue(\"selectable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal text alignment.\r\n\t *\r\n\t * Available choices:\r\n\t * * \"start\"\r\n\t * * \"middle\"\r\n\t * * \"end\"\r\n\t *\r\n\t * @param {TextAlign}  value  Alignment\r\n\t */\r\n\tpublic set textAlign(value: TextAlign) {\r\n\t\tthis.setPropertyValue(\"textAlign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {TextAlign} Alignment\r\n\t */\r\n\tpublic get textAlign(): TextAlign {\r\n\t\treturn this.getPropertyValue(\"textAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical text alignment.\r\n\t *\r\n\t * @ignore Exclude from docs (not used)\r\n\t * @param {TextValign}  value  Alignment\r\n\t * @deprecated\r\n\t */\r\n\tpublic set textValign(value: TextValign) {\r\n\t\tthis.setPropertyValue(\"textValign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs (not used)\r\n\t * @return {TextValign} Alignment\r\n\t * @deprecated\r\n\t */\r\n\tpublic get textValign(): TextValign {\r\n\t\treturn this.getPropertyValue(\"textValign\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Raw HTML to be used as text.\r\n\t *\r\n\t * NOTE: HTML text is subject to browser support. It relies on browsers\r\n\t * supporting SVG `foreignObject` nodes. Some browsers (read IEs) do not\r\n\t * support it. On those browsers, the text will fall back to basic SVG text,\r\n\t * striping out all HTML markup and styling that goes with it.\r\n\t *\r\n\t * For more information about `foreignObject` and its browser compatibility\r\n\t * refer to [this page](https://developer.mozilla.org/en/docs/Web/SVG/Element/foreignObject#Browser_compatibility).\r\n\t *\r\n\t * @param {string} value HTML text\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tthis.setPropertyValue(\"html\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} HTML content\r\n\t */\r\n\tpublic get html(): string {\r\n\t\treturn this.getPropertyValue(\"html\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the whole text should be hidden if it does not fit into\r\n\t * its allotted space.\r\n\t *\r\n\t * @param {boolean}  value  Hide if text does not fit?\r\n\t */\r\n\tpublic set hideOversized(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideOversized\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Hide if text does not fit?\r\n\t */\r\n\tpublic get hideOversized(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideOversized\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` square-bracket formatting blocks will be treated as\r\n\t * regular text.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Ignore formatting?\r\n\t */\r\n\tpublic set ignoreFormatting(value: boolean) {\r\n\t\tthis.setPropertyValue(\"ignoreFormatting\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Ignore formatting?\r\n\t */\r\n\tpublic get ignoreFormatting(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreFormatting\");\r\n\t}\r\n\r\n\t/**\r\n\t * Override `mesaureElement` so it does not get measure again, because\r\n\t * internal `_bbox` is being updated by measuring routines in Text itself.\r\n\t */\r\n\tpublic measureElement(): void { }\r\n\r\n\t/**\r\n\t * Returns information about a line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}         index  Line index\r\n\t * @return {ITextLineInfo}         Line info object\r\n\t */\r\n\tpublic getLineInfo(index: number): ITextLineInfo {\r\n\t\tthis.initLineCache();\r\n\t\tlet lines = this.getCache(\"lineInfo\");\r\n\t\treturn lines.length > index ? lines[index] : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a line to line info cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {ITextLineInfo}  line     Line info object\r\n\t * @param {number}         index    Insert at specified index\r\n\t */\r\n\tpublic addLineInfo(line: ITextLineInfo, index: number): void {\r\n\t\tthis.initLineCache();\r\n\t\tthis.getCache(\"lineInfo\")[index] = line;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if line cache is initialized and initializes it.\r\n\t */\r\n\tprivate initLineCache(): void {\r\n\t\tif (!$type.hasValue(this.getCache(\"lineInfo\"))) {\r\n\t\t\tthis.setCache(\"lineInfo\", [], 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]] to use for populating dynamic sections of the text.\r\n\t *\r\n\t * Check the description for [[Text]] class, for data binding.\r\n\t *\r\n\t * @param {DataItem} dataItem Data item\r\n\t */\r\n\tpublic setDataItem(dataItem: DataItem): void {\r\n\t\tif (this._sourceDataItemEvents) {\r\n\t\t\tthis._sourceDataItemEvents.dispose();\r\n\t\t}\r\n\t\tif (dataItem) {\r\n\t\t\tthis._sourceDataItemEvents = new MultiDisposer([\r\n\t\t\t\tdataItem.events.on(\"valuechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"workingvaluechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"calculatedvaluechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"propertychanged\", this.invalidate, this, false)\r\n\t\t\t]);\r\n\t\t}\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns available horizontal space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Available width (px)\r\n\t */\r\n\tpublic get availableWidth(): number {\r\n\t\treturn $type.hasValue(this.maxWidth) ? this.maxWidth : this.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns available vertical space.\r\n\t *\r\n\t * @return {number} Available height (px)\r\n\t */\r\n\tpublic get availableHeight(): number {\r\n\t\treturn $type.hasValue(this.maxHeight) ? this.maxHeight : this.pixelHeight;\r\n\t}\r\n\r\n\t// temp, replacing textFormatter method\r\n\tpublic getSvgElement(text: string, style?: string): AMElement {\r\n\t\tlet element = this.paper.add(\"tspan\");\r\n\t\telement.textContent = text;\r\n\t\tif (style) {\r\n\t\t\telement.node.setAttribute(\"style\", style);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Label\"] = Label;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Label.ts","/**\r\n * This module contains ColorSet object definition\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color, color, iHSL } from \"./Color\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for objects identifying a color step.\r\n *\r\n * A \"color step\" object is used when [[ColorSet]] is generating colors, when\r\n * it has ran out of pre-set colors.\r\n *\r\n * It takes the last available color, then applies one or several of the\r\n * properties, like hue, or saturation with each subsequent generated color.\r\n */\r\nexport interface IColorSetStepOptions {\r\n\thue: number;\r\n\tbrighten: number;\r\n\tlighten: number;\r\n\tlightness: number;\r\n\tsaturation: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a set of colors. Can also generate colors according to set rules.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class ColorSet extends BaseObject {\r\n\r\n\t/**\r\n\t * Holds the list of the colors in this set. (preset or auto-generated)\r\n\t *\r\n\t * @type {Color[]}\r\n\t */\r\n\tprotected _list: Color[] = [];\r\n\r\n\t/**\r\n\t * Current step in a color generator's cycle.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _currentStep: number = 0;\r\n\r\n\t/**\r\n\t * Current pass in the color generator's cycle. Normally a generator would\r\n\t * cycle through all available hue range, then repeat it, alternating other\r\n\t * color properties, to generate distinctive colors.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _currentPass: number = 0;\r\n\r\n\t/**\r\n\t * A base color. If there are no colors pre-set in the color list, ColorSet\r\n\t * will use this color as a base when generating new ones, applying\r\n\t * `stepOptions` and `passOptions` to this base color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tpublic baseColor: Color = new Color({\r\n\t\tr: 103,\r\n\t\tg: 183,\r\n\t\tb: 220\r\n\t});\r\n\r\n\t/**\r\n\t * Modifications to apply with each new generated color.\r\n\t *\r\n\t * @type {Partial<IColorSetStepOptions>}\r\n\t */\r\n\tpublic stepOptions: Partial<IColorSetStepOptions> = {};\r\n\r\n\t/**\r\n\t * Modifications to apply on top of `stepOptions` for each \"pass\" of the\r\n\t * color generation.\r\n\t *\r\n\t * A \"pass\" is when ColorSet generates `minColors` number of colors.\r\n\t *\r\n\t * @type {Partial<IColorSetStepOptions>}\r\n\t */\r\n\tpublic passOptions: Partial<IColorSetStepOptions> = {\r\n\t\tbrighten: -0.2\r\n\t};\r\n\r\n\t/**\r\n\t * An index increment to use when iterating through color list.\r\n\t *\r\n\t * Default is 1, which means returning each and every color.\r\n\t *\r\n\t * Setting it to a bigger number will make ColorSet `next()` iterator skip\r\n\t * some colors.\r\n\t *\r\n\t * E.g. setting to 2, will return every second color in the list.\r\n\t *\r\n\t * This is useful, when the color list has colors that are too close each\r\n\t * other for contrast.\r\n\t *\r\n\t * However, having bigger number will mean that `next()` iterator will go\r\n\t * through the list quicker, and the generator will kick sooner.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic step: number = 1;\r\n\r\n\t/**\r\n\t * A number of colors to generate in one \"pass\".\r\n\t *\r\n\t * This setting can be automatically overridden, if ColorSet has a list of\r\n\t * pre-set colors. In such case ColorSet will generate exactly the same\r\n\t * number of colors with each pass as there were colors in original set.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic minColors: number = 20;\r\n\r\n\t/**\r\n\t * Do not let the \"lightness\" of generated color to fall below this\r\n\t * threshold.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic minLightness: number = 0.2;\r\n\r\n\t/**\r\n\t * Do not let the \"lightness\" of generated color to get above this threshold.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic maxLightness: number = 0.9;\r\n\r\n\t/**\r\n\t * Randomly shuffle generated colors.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic shuffle: boolean = false;\r\n\r\n\t/**\r\n\t * When colors are generated, based on `stepOptions`, each generated color\r\n\t * gets either lighter or darker.\r\n\t *\r\n\t * If this is set to `true`, color generator will switch to opposing spectrum\r\n\t * when reaching `minLightness` or `maxLightness`.\r\n\t *\r\n\t * E.g. if we start off with a red color, then gradually generate lighter\r\n\t * colors through rose shades, then switch back to dark red and gradually\r\n\t * increase the lightness of it until it reaches the starting red.\r\n\t *\r\n\t * If set to `false` it will stop there and cap lightness at whatever level\r\n\t * we hit `minLightness` or `maxLightness`, which may result in a number of\r\n\t * the same colors.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic wrap: boolean = true;\r\n\r\n\t/**\r\n\t * Re-use same colors in the pre-set list, when ColorSet runs out of colors,\r\n\t * rather than start generating new ones.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic reuse: boolean = false;\r\n\r\n\t/**\r\n\t * Saturation of colors. This will change saturation of all colors of color\r\n\t * set.\r\n\t *\r\n\t * It is recommended to set this in theme, as changing it at run time won't\r\n\t * make the items to redraw and change color.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic saturation: number = 1;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorSet\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a list of pre-defined colors to use for the iterator.\r\n\t *\r\n\t * @param {Color[]} value Color list\r\n\t */\r\n\tpublic set list(value: Color[]) {\r\n\t\tthis._list = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current list of colors.\r\n\t *\r\n\t * If there are none, a new list of colors is generated, based on various\r\n\t * ColorSet settings.\r\n\t *\r\n\t * @return {Color[]} Color list\r\n\t */\r\n\tpublic get list(): Color[] {\r\n\t\tif (!this._list) {\r\n\t\t\tthis.generate(this.minColors);\r\n\t\t}\r\n\t\treturn this._list;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns next color in the list using internal iterator counter.\r\n\t *\r\n\t * If `step` is set to something other than 1, it may return other color than\r\n\t * exact next one in the list.\r\n\t *\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic next(): Color {\r\n\t\tif (this.list.length <= this._currentStep) {\r\n\t\t\tif (this.reuse && this._currentPass == 0 && this._list.length) {\r\n\t\t\t\tthis.minColors = this._list.length;\r\n\t\t\t}\r\n\t\t\tthis.generate(this.minColors);\r\n\t\t}\r\n\t\tlet color = this.list[this._currentStep];\r\n\t\tthis._currentStep += this.step;\r\n\t\treturn color.saturate(this.saturation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a color at specific index in the list.\r\n\t *\r\n\t * @param  {number}  i  Index\r\n\t * @return {Color}      Color\r\n\t */\r\n\tpublic getIndex(i: number): Color {\r\n\t\tif (this.list.length <= i) {\r\n\t\t\tif (this.reuse && this._currentPass == 0 && this._list.length) {\r\n\t\t\t\tthis.minColors = this._list.length;\r\n\t\t\t}\r\n\t\t\tthis.generate(this.minColors);\r\n\t\t\treturn this.getIndex(i);\r\n\t\t}\r\n\t\treturn this.list[i].saturate(this.saturation);\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t *\r\n\t * Calling `next()` after this will return the very first color in the color\r\n\t * list, even if it was already returned before.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis._currentStep = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates colors based on the various ColorSet settings.\r\n\t *\r\n\t * @param {number} count Number of colors to generate\r\n\t */\r\n\tpublic generate(count: number): void {\r\n\r\n\t\t// Init\r\n\t\tlet curColor = this.currentColor;\r\n\t\tlet hsl = $colors.rgbToHsl($type.getValue(curColor.rgb));\r\n\t\tlet hueStep = $type.hasValue(this.stepOptions.hue) ? this.stepOptions.hue : 1 / count;\r\n\t\tlet mods: IColorSetStepOptions = {\r\n\t\t\tbrighten: 0,\r\n\t\t\tlighten: 0,\r\n\t\t\thue: hsl.h,\r\n\t\t\tlightness: hsl.l,\r\n\t\t\tsaturation: hsl.s\r\n\t\t};\r\n\r\n\t\t// Generate list of hues, and shuffle them\r\n\t\tlet hues: number[] = [];\r\n\t\tif (this.reuse) {\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\thues.push($colors.rgbToHsl($type.getValue(this._list[i].rgb)).h);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tlet h = hsl.h + hueStep * i;\r\n\t\t\t\tif (this.wrap && (h > 1)) {\r\n\t\t\t\t\th -= 1;\r\n\t\t\t\t}\r\n\t\t\t\thues.push(h);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Shuffle colors randomly\r\n\t\tif (this.shuffle) {\r\n\t\t\thues.sort((a: number, b: number) => {\r\n\t\t\t\treturn Math.random() - 0.5;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t// Generate colors by rotating hue\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\r\n\t\t\t// Update hue\r\n\t\t\tif (this.reuse) {\r\n\t\t\t\thsl = $colors.rgbToHsl($type.getValue(this._list[i].rgb));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thsl.h = <number>hues.shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Apply HSL mods\r\n\t\t\tthis.applyStepOptions(hsl, mods, i + 1, this._currentPass);\r\n\r\n\t\t\t// Convert back to Color\r\n\t\t\tlet c = color($colors.hslToRgb(hsl));\r\n\r\n\t\t\t// Apply regular color mods\r\n\t\t\tlet brighten = (this.stepOptions.brighten || 0) * (i + 1) + (this.passOptions.brighten || 0) * this._currentPass;\r\n\t\t\tif (brighten != 0) {\r\n\t\t\t\tif (this.wrap) {\r\n\t\t\t\t\tbrighten = $utils.fitNumberRelative(brighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbrighten = $utils.fitNumber(brighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\tc = c.brighten(brighten);\r\n\t\t\t}\r\n\r\n\t\t\tlet lighten = (this.stepOptions.lighten || 0) * (i + 1) + (this.passOptions.lighten || 0) * this._currentPass;\r\n\t\t\tif (lighten != 0) {\r\n\t\t\t\tif (this.wrap) {\r\n\t\t\t\t\tlighten = $utils.fitNumberRelative(lighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlighten = $utils.fitNumber(lighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\tc = c.lighten(lighten);\r\n\t\t\t}\r\n\t\t\tthis._list.push(c);\r\n\t\t}\r\n\r\n\t\tthis._currentPass++;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current last color. It's either the last color in the list of\r\n\t * colors, or `baseColor` if list is empty.\r\n\t *\r\n\t * @return {Color} Color\r\n\t */\r\n\tprotected get currentColor(): Color {\r\n\t\tif (this._list.length == 0) {\r\n\t\t\treturn this.baseColor.saturate(this.saturation);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._list[this._list.length - 1].saturate(this.saturation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates modifiers for color, based on what step and pass.\r\n\t *\r\n\t * @param {iHSL}                  hsl   Curren HSL value of the color to modify\r\n\t * @param {IColorSetStepOptions}  base  The modifiers that were before modification to use as a base\r\n\t * @param {number}                step  Current step\r\n\t * @param {number}                pass  Current pass\r\n\t */\r\n\tprotected applyStepOptions(hsl: iHSL, base: IColorSetStepOptions, step: number, pass: number): void {\r\n\r\n\t\t// Process lightness\r\n\t\thsl.l = base.lightness + (this.stepOptions.lightness || 0) * step + (this.passOptions.lightness || 0) * pass;\r\n\r\n\t\tif (this.wrap) {\r\n\t\t\tif (hsl.l > 1) {\r\n\t\t\t\thsl.l = hsl.l - Math.floor(hsl.l);\r\n\t\t\t}\r\n\t\t\telse if (hsl.l < 0) {\r\n\t\t\t\thsl.l = -(hsl.l - Math.floor(hsl.l));\r\n\t\t\t}\r\n\t\t\thsl.l = $utils.fitNumberRelative(hsl.l, this.minLightness, this.maxLightness);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (hsl.l > 1) {\r\n\t\t\t\thsl.l = 1\r\n\t\t\t}\r\n\t\t\telse if (hsl.l < 0) {\r\n\t\t\t\thsl.l = 0;\r\n\t\t\t}\r\n\t\t\thsl.l = $utils.fitNumber(hsl.l, this.minLightness, this.maxLightness);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/ColorSet.ts","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_has.js\n// module id = 38\n// module chunks = 302","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-iobject.js\n// module id = 39\n// module chunks = 302","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopd.js\n// module id = 40\n// module chunks = 302","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gpo.js\n// module id = 41\n// module chunks = 302","/**\r\n * Rounded rectangle module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RoundedRectangle]].\r\n */\r\nexport interface IRoundedRectangleProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Radius of the top-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadiusTopLeft?: number;\r\n\r\n\t/**\r\n\t * Radius of the top-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadiusTopRight?: number;\r\n\r\n\t/**\r\n\t * Radius of the bottom-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadiusBottomRight?: number;\r\n\r\n\t/**\r\n\t * Radius of the bottom-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadiusBottomLeft?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RoundedRectangle]].\r\n */\r\nexport interface IRoundedRectangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RoundedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRoundedRectangleAdapters extends ISpriteAdapters, IRoundedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link IRoundedRectangleEvents} for a list of available events\r\n * @see {@link IRoundedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class RoundedRectangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IRoundedRectangleProperties}\r\n\t */\r\n\tpublic _properties!: IRoundedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IRoundedRectangleAdapters}\r\n\t */\r\n\tpublic _adapter!: IRoundedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IRoundedRectangleEvents}\r\n\t */\r\n\tpublic _events!: IRoundedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RoundedRectangle\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\t//this.pixelPerfect = false;\r\n\r\n\t\tthis.cornerRadius(3, 3, 3, 3);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\r\n\t\t\tlet maxcr: number = $math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n\t\t\tlet crtl: number = $math.fitToRange(this.cornerRadiusTopLeft, 0, maxcr);\r\n\t\t\tlet crtr: number = $math.fitToRange(this.cornerRadiusTopRight, 0, maxcr);\r\n\t\t\tlet crbr: number = $math.fitToRange(this.cornerRadiusBottomRight, 0, maxcr);\r\n\t\t\tlet crbl: number = $math.fitToRange(this.cornerRadiusBottomLeft, 0, maxcr);\r\n\r\n\t\t\tlet lineT: string = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n\t\t\tlet lineB: string = \" L\" + crbl + \",\" + h;\r\n\t\t\tlet lineL: string = \" L0,\" + crtl;\r\n\t\t\tlet lineR: string = \" L\" + w + \",\" + (h - crbr);\r\n\r\n\t\t\tlet arcTR: string = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n\t\t\tlet arcBR: string = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n\t\t\tlet arcBL: string = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n\t\t\tlet arcTL: string = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n\r\n\r\n\t\t\tlet path: string = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL + \" Z\";\r\n\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets radius for all four corners at ones.\r\n\t *\r\n\t * All numbers are in pixels.\r\n\t *\r\n\t * @param {number}  tl  Top-left corner\r\n\t * @param {number}  tr  Top-right corner\r\n\t * @param {number}  bl  Bottom-left corner\r\n\t * @param {number}  br  Bottom-right corner\r\n\t */\r\n\tpublic cornerRadius(tl: number, tr: number, bl: number, br: number) {\r\n\t\tthis.cornerRadiusTopLeft = tl;\r\n\t\tthis.cornerRadiusTopRight = tr;\r\n\t\tthis.cornerRadiusBottomLeft = bl;\r\n\t\tthis.cornerRadiusBottomRight = br;\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the top-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadiusTopLeft(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadiusTopLeft\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get cornerRadiusTopLeft(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusTopLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the top-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadiusTopRight(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadiusTopRight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get cornerRadiusTopRight(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusTopRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the bottom-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadiusBottomRight(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadiusBottomRight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get cornerRadiusBottomRight(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusBottomRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the bottom-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadiusBottomLeft(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadiusBottomLeft\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get cornerRadiusBottomLeft(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusBottomLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tthis._bbox = { x: 0, y: 0, width: this.innerWidth, height: this.innerHeight };\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RoundedRectangle\"] = RoundedRectangle;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/RoundedRectangle.ts","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * LINEAR FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"linear\".\r\n */\r\nexport function linear(t: number): number {\r\n\treturn +t;\r\n}\r\n\r\n/**\r\n * Easing function: \"quadIn\".\r\n */\r\nexport function quadIn(t: number): number {\r\n\treturn t * t;\r\n}\r\n\r\n/**\r\n * Easing function: \"quadOut\".\r\n */\r\nexport function quadOut(t: number): number {\r\n\treturn t * (2 - t);\r\n}\r\n\r\n/**\r\n * Easing function: \"quadInOut\".\r\n */\r\nexport function quadInOut(t: number): number {\r\n\treturn ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\n\r\n/**\r\n * Easing function: \"polyIn\".\r\n */\r\nexport function polyIn(t: number, e: number): number {\r\n\treturn Math.pow(t, e);\r\n}\r\n\r\n/**\r\n * Easing function: \"polyOut\".\r\n */\r\nexport function polyOut(t: number, e: number): number {\r\n\treturn 1 - Math.pow(1 - t, e);\r\n}\r\n\r\n/**\r\n * Easing function: \"polyInOut\".\r\n */\r\nexport function polyInOut(t: number, e: number): number {\r\n\treturn ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n}\r\n\r\n/**\r\n * Easing function: \"polyIn3\".\r\n */\r\nexport function polyIn3(t: number): number {\r\n\treturn polyIn(t, 3);\r\n}\r\n\r\n/**\r\n * Easing function: \"polyOut3\".\r\n */\r\nexport function polyOut3(t: number): number {\r\n\treturn polyOut(t, 3);\r\n}\r\n\r\n/**\r\n * Easing function: \"polyInOut3\".\r\n */\r\nexport function polyInOut3(t: number): number {\r\n\treturn polyInOut(t, 3);\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * EXPONENTIAL FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"expIn\".\r\n */\r\nexport function expIn(t: number): number {\r\n\treturn Math.pow(2, 10 * t - 10);\r\n}\r\n\r\n/**\r\n * Easing function: \"expOut\".\r\n */\r\nexport function expOut(t: number): number {\r\n\treturn 1 - Math.pow(2, -10 * t);\r\n}\r\n\r\n/**\r\n * Easing function: \"expInOut\".\r\n */\r\nexport function expInOut(t: number): number {\r\n\treturn ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * SINE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"sinIn\".\r\n */\r\nexport function sinIn(t: number): number {\r\n\treturn 1 - Math.cos(t * $math.HALFPI);\r\n}\r\n\r\n/**\r\n * Easing function: \"sinOut\".\r\n */\r\nexport function sinOut(t: number): number {\r\n\treturn Math.sin(t * $math.HALFPI);\r\n}\r\n\r\n/**\r\n * Easing function: \"sinInOut\".\r\n */\r\nexport function sinInOut(t: number): number {\r\n\treturn (1 - Math.cos($math.PI * t)) / 2;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CUBIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"cubicIn\".\r\n */\r\nexport function cubicIn(t: number): number {\r\n\treturn t * t * t;\r\n}\r\n\r\n/**\r\n * Easing function: \"cubicOut\".\r\n */\r\nexport function cubicOut(t: number): number {\r\n\treturn --t * t * t + 1;\r\n}\r\n\r\n/**\r\n * Easing function: \"cubicInOut\".\r\n */\r\nexport function cubicInOut(t: number): number {\r\n\treturn ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CIRCLE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"circleIn\".\r\n */\r\nexport function circleIn(t: number): number {\r\n\treturn 1 - Math.sqrt(1 - t * t);\r\n}\r\n\r\n/**\r\n * Easing function: \"circleOut\".\r\n */\r\nexport function circleOut(t: number): number {\r\n\treturn Math.sqrt(1 - --t * t);\r\n}\r\n\r\n/**\r\n * Easing function: \"circleInOut\".\r\n */\r\nexport function circleInOut(t: number): number {\r\n\treturn ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * BOUNCE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11,\r\n\tb2 = 6 / 11,\r\n\tb3 = 8 / 11,\r\n\tb4 = 3 / 4,\r\n\tb5 = 9 / 11,\r\n\tb6 = 10 / 11,\r\n\tb7 = 15 / 16,\r\n\tb8 = 21 / 22,\r\n\tb9 = 63 / 64,\r\n\tb0 = 1 / b1 / b1;\r\n\r\n/**\r\n * Easing function: \"bounceIn\".\r\n */\r\nexport function bounceIn(t: number): number {\r\n\treturn 1 - bounceOut(1 - t);\r\n}\r\n\r\n/**\r\n * Easing function: \"bounceOut\".\r\n */\r\nexport function bounceOut(t: number): number {\r\n\treturn (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\n\r\n/**\r\n * Easing function: \"bounceInOut\".\r\n */\r\nexport function bounceInOut(t: number): number {\r\n\treturn ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * ELASTIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet tau = 2 * Math.PI;\r\nlet amplitude = 1;\r\nlet period = 0.3 / tau;\r\nlet s = Math.asin(1 / amplitude) * period;\r\n\r\n/**\r\n * Easing function: \"elasticIn\".\r\n *\r\n * @function elasticIn\r\n * @param {number}  a  Amplitude\r\n * @param {number}  p  period\r\n */\r\nexport function elasticIn(t: number): number {\r\n\treturn amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);\r\n}\r\n\r\n/**\r\n * Easing function: \"elasticOut\".\r\n *\r\n * @function elasticOut\r\n * @param {number}  a  Amplitude\r\n * @param {number}  p  period\r\n */\r\nexport function elasticOut(t: number): number {\r\n\treturn 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);\r\n}\r\n\r\n/**\r\n * Easing function: \"elasticInOut\".\r\n *\r\n * @function elasticInOut\r\n * @param {number}  a  Amplitude\r\n * @param {number}  p  period\r\n */\r\nexport function elasticInOut(t: number): number {\r\n\treturn ((t = t * 2 - 1) < 0\r\n\t\t? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period)\r\n\t\t: 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Ease.ts","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_ctx.js\n// module id = 44\n// module chunks = 302","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_cof.js\n// module id = 45\n// module chunks = 302","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_strict-method.js\n// module id = 46\n// module chunks = 302","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-primitive.js\n// module id = 47\n// module chunks = 302","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_defined.js\n// module id = 48\n// module chunks = 302","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-integer.js\n// module id = 49\n// module chunks = 302","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-sap.js\n// module id = 50\n// module chunks = 302","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-methods.js\n// module id = 51\n// module chunks = 302","var core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_core.js\n// module id = 52\n// module chunks = 302","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed-array.js\n// module id = 53\n// module chunks = 302","var Map = require('./es6.map');\nvar $export = require('./_export');\nvar shared = require('./_shared')('metadata');\nvar store = shared.store || (shared.store = new (require('./es6.weak-map'))());\n\nvar getOrCreateMetadataMap = function (target, targetKey, create) {\n  var targetMetadata = store.get(target);\n  if (!targetMetadata) {\n    if (!create) return undefined;\n    store.set(target, targetMetadata = new Map());\n  }\n  var keyMetadata = targetMetadata.get(targetKey);\n  if (!keyMetadata) {\n    if (!create) return undefined;\n    targetMetadata.set(targetKey, keyMetadata = new Map());\n  } return keyMetadata;\n};\nvar ordinaryHasOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);\n};\nvar ordinaryGetOwnMetadata = function (MetadataKey, O, P) {\n  var metadataMap = getOrCreateMetadataMap(O, P, false);\n  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);\n};\nvar ordinaryDefineOwnMetadata = function (MetadataKey, MetadataValue, O, P) {\n  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);\n};\nvar ordinaryOwnMetadataKeys = function (target, targetKey) {\n  var metadataMap = getOrCreateMetadataMap(target, targetKey, false);\n  var keys = [];\n  if (metadataMap) metadataMap.forEach(function (_, key) { keys.push(key); });\n  return keys;\n};\nvar toMetaKey = function (it) {\n  return it === undefined || typeof it == 'symbol' ? it : String(it);\n};\nvar exp = function (O) {\n  $export($export.S, 'Reflect', O);\n};\n\nmodule.exports = {\n  store: store,\n  map: getOrCreateMetadataMap,\n  has: ordinaryHasOwnMetadata,\n  get: ordinaryGetOwnMetadata,\n  set: ordinaryDefineOwnMetadata,\n  keys: ordinaryOwnMetadataKeys,\n  key: toMetaKey,\n  exp: exp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_metadata.js\n// module id = 54\n// module chunks = 302","/**\r\n * A collection of keyboard-related utilities accessible via `keyboard`\r\n * instance.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Represents named (usually frequently used) keyboard keys for easy referece.\r\n * \r\n * @type {string}\r\n */\r\nexport type KeyboardKeys =\r\n\t\"up\"\r\n\t| \"down\"\r\n\t| \"left\"\r\n\t| \"right\"\r\n\t| \"enter\"\r\n\t| \"esc\"\r\n\t| \"home\"\r\n\t| \"tab\"\r\n\t| \"end\"\r\n\t| \"ctrl\"\r\n\t| \"alt\"\r\n\t| \"shift\"\r\n\t| \"space\"\r\n\t| \"home\"\r\n\t| \"end\"\r\n\t| \"pgup\"\r\n\t| \"pgdn\"\r\n\t| \"ins\"\r\n\t| \"del\"\r\n\t| \"plus\"\r\n\t| \"minus\"\r\n\t| \"other\";\r\n\r\n/**\r\n * A class that represents collection of keyboard-related utilities.\r\n *\r\n * Do not instantiate this class directly, but rather use `keyboard` variable.\r\n */\r\nexport class Keyboard {\r\n\r\n\t/**\r\n\t * Returns a named key based on information contained in the event or\r\n\t * \"other\".\r\n\t * \r\n\t * @param  {KeyboardEvent}  ev  A keyboard event\r\n\t * @return {KeyboardKeys}       Keyboard named key\r\n\t */\r\n\tpublic getEventKey(ev: KeyboardEvent): KeyboardKeys {\r\n\r\n\t\t// Get the key code\r\n\t\tlet code: number = ev.keyCode || ev.which,\r\n\t\t\tkey: KeyboardKeys;\r\n\r\n\t\t// Map to internal key\r\n\t\tswitch (code) {\r\n\t\t\tcase 38:  key = \"up\";    break;\r\n\t\t\tcase 40:  key = \"down\";  break;\r\n\t\t\tcase 37:  key = \"left\";  break;\r\n\t\t\tcase 39:  key = \"right\"; break;\r\n\t\t\tcase 13:  key = \"enter\"; break;\r\n\t\t\tcase 27:  key = \"esc\";   break;\r\n\t\t\tcase 36:  key = \"home\";  break;\r\n\t\t\tcase 35:  key = \"end\";   break;\r\n\t\t\tcase 9:   key = \"tab\";   break;\r\n\t\t\tcase 17:  key = \"ctrl\";  break;\r\n\t\t\tcase 18:  key = \"alt\";   break;\r\n\t\t\tcase 16:  key = \"shift\"; break;\r\n\t\t\tcase 32:  key = \"space\"; break;\r\n\t\t\tcase 36:  key = \"home\";  break;\r\n\t\t\tcase 35:  key = \"end\";   break;\r\n\t\t\tcase 33:  key = \"pgup\";  break;\r\n\t\t\tcase 34:  key = \"pgdn\";  break;\r\n\t\t\tcase 45:  key = \"ins\";   break;\r\n\t\t\tcase 46:  key = \"del\";   break;\r\n\t\t\tcase 107: key = \"plus\";  break;\r\n\t\t\tcase 109: key = \"minus\"; break;\r\n\t\t\tdefault:  key = \"other\"; break;\r\n\t\t}\r\n\r\n\t\treturn key;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if event key is one or more of the selected named keys.\r\n\t * \r\n\t * @param  {KeyboardEvent}      ev   Keyboard event\r\n\t * @param  {string | string[]}  key  Named key or array of keys\r\n\t * @return {boolean}                 Is event key one of the list?\r\n\t */\r\n\tpublic isKey(ev: KeyboardEvent, key: string | string[]): boolean {\r\n\t\tlet eventKey = this.getEventKey(ev);\r\n\t\tif ($type.isString(key)) {\r\n\t\t\tkey = [key];\r\n\t\t}\r\n\t\treturn key.indexOf(eventKey) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if shift key was presset at the moment of the event.\r\n\t * \r\n\t * @param  {KeyboardEvent | MouseEvent}  ev  Event object\r\n\t * @return {boolean}                         Was shift pressed?\r\n\t */\r\n\tpublic shiftKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.shiftKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if ctrl key was presset at the moment of the event.\r\n\t * \r\n\t * @param  {KeyboardEvent | MouseEvent}  ev  Event object\r\n\t * @return {boolean}                         Was ctrl pressed?\r\n\t */\r\n\tpublic ctrlKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.ctrlKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if alt key was presset at the moment of the event\r\n\t * @param  {KeyboardEvent | MouseEvent}  ev  Event object\r\n\t * @return {boolean}                         Was alt pressed?\r\n\t */\r\n\tpublic altKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.altKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if meta key was presset at the moment of the event\r\n\t * @param  {KeyboardEvent | MouseEvent}  ev  Event object\r\n\t * @return {boolean}                         Was meta pressed?\r\n\t */\r\n\tpublic metaKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.metaKey;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A single [[Keyboard]] instance to be reused across all elements so that\r\n * they don't need to instantiate their own.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let keyboard = new Keyboard();\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Keyboard.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"./Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"./Sprite\";\r\nimport { List, IListEvents, ListDisposer } from \"./utils/List\";\r\nimport { OrderedListTemplate } from \"./utils/SortedList\";\r\nimport { Animation } from \"./utils/Animation\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport { Export, IExportAdapters } from \"./export/Export\";\r\nimport { DataSource } from \"./data/DataSource\";\r\nimport { Responsive } from \"./responsive/Responsive\";\r\nimport { system } from \"./System\";\r\n\r\nimport { DataItem, IDataItemEvents } from \"./DataItem\";\r\nimport { registry } from \"./Registry\";\r\nimport { Preloader } from \"./elements/Preloader\";\r\nimport { IRange } from \"./defs/IRange\";\r\n\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A list of available types for calculated values.\r\n * @todo Not finished\r\n * @todo Description\r\n */\r\nexport type CalculatedValue =\r\n\t\"value\" |\r\n\t\"percent\" |\r\n\t\"change\" |\r\n\t\"changePercent\" |\r\n\t\"previousChangePercent\" |\r\n\t\"previousChange\" |\r\n\t\"sum\" |\r\n\t\"average\" |\r\n\t\"open\" |\r\n\t\"close\" |\r\n\t\"low\" |\r\n\t\"high\" |\r\n\t\"count\" |\r\n\t\"total\" |\r\n\t\"totalPercent\" |\r\n\t\"stack\";\r\n\r\n/**\r\n * Defines properties for [[Component]].\r\n */\r\nexport interface IComponentProperties extends IContainerProperties {\r\n\t/**\r\n\t * maximum zoom factor of a component\r\n\t */\r\n\tmaxZoomFactor?: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Component]].\r\n */\r\nexport interface IComponentDataFields {\r\n\tdata?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Component]].\r\n */\r\nexport interface IComponentEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when range of the currently selected data is validated.\r\n\t *\r\n\t * @todo: change to datarangevalidated?\r\n\t */\r\n\tdatarangechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when the raw data for the component changes.\r\n\t */\r\n\tdatavalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when value(s) of the element's data items are validated.\r\n\t */\r\n\tdataitemsvalidated: {};\r\n\r\n\t/**\r\n\t * Invoked just before element is validated (after changes).\r\n\t */\r\n\tbeforedatavalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when range change animation starts\r\n\t */\r\n\trangechangestarted: {};\r\n\r\n\t/**\r\n\t * Invoked when range change animation ends\r\n\t */\r\n\trangechangeended: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IComponentAdapters extends IContainerAdapters, IComponentProperties {\r\n\r\n\t/**\r\n\t * Applied after [[Component]] retrieves data value from data context\r\n\t * (raw data), but before it is provided to [[DataItem]].\r\n\t */\r\n\tdataContextValue: {\r\n\t\tvalue: any,\r\n\t\tfield: string,\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n\t/**\r\n\t * Applied to chart's data before it is retrieved for use.\r\n\t */\r\n\tdata: any[];\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A Component represents an independent functional element or control, that\r\n * can have it's own behavior, children, data, etc.\r\n *\r\n * A few examples of a Component: [[Legend]], [[Series]], [[Scrollbar]].\r\n *\r\n * @see {@link IComponentEvents} for a list of available events\r\n * @see {@link IComponentAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Component extends Container {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t *\r\n\t * @type {IComponentDataFields}\r\n\t */\r\n\tpublic _dataFields!: IComponentDataFields;\r\n\r\n\t/**\r\n\t * Holds data field names.\r\n\t *\r\n\t * Data fields define connection beween [[DataItem]] and actual properties\r\n\t * in raw data.\r\n\t *\r\n\t * @type {IComponentDataFields}\r\n\t */\r\n\tpublic dataFields: this[\"_dataFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IComponentProperties}\r\n\t */\r\n\tpublic _properties!: IComponentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IComponentAdapters}\r\n\t */\r\n\tpublic _adapter!: IComponentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IComponentEvents}\r\n\t */\r\n\tpublic _events!: IComponentEvents;\r\n\r\n\t/**\r\n\t * Holds the data for the component.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<any[]>}\r\n\t */\r\n\tprotected _data: $type.Optional<any[]>;\r\n\r\n\t/**\r\n\t * A [[Component]] which provides data to this component (like Chart provides\r\n\t * data for Series).\r\n\t *\r\n\t * @type {Optional<Component>}\r\n\t */\r\n\tpublic dataProvider: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * A list of [[DataSource]] definitions of external data source.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _dataSources: { [index: string]: DataSource } = {};\r\n\r\n\t/**\r\n\t * An instance of [[Responsive]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Responsive>}\r\n\t */\r\n\tprotected _responsive: $type.Optional<Responsive>;\r\n\r\n\t/**\r\n\t * This is used when only new data is invalidated (if added using `addData`\r\n\t * method).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _parseDataFrom: number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<List<Component>>}\r\n\t */\r\n\tprotected _dataUsers: $type.Optional<List<Component>>;\r\n\r\n\t/**\r\n\t * Holds the disposers for the dataItems and dataUsers\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<IDisposer>}\r\n\t */\r\n\tprotected _dataDisposers: Array<IDisposer> = [];\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @deprecated Not used?\r\n\t * @type {Optional<Dictionary>}\r\n\t */\r\n\tprotected _dataMethods: $type.Optional<Dictionary<string, (value: number) => number>>;\r\n\r\n\t/**\r\n\t * Identifies the type of the [[DataItem]] used in this element.\r\n\t *\r\n\t * @type {DataItem}\r\n\t */\r\n\tpublic _dataItem!: DataItem;\r\n\r\n\t/**\r\n\t * List of element's source data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dataItems: $type.Optional<OrderedListTemplate<this[\"_dataItem\"]>>;\r\n\r\n\t/**\r\n\t * [_startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _startIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _endIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_start description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _start: number = 0;\r\n\r\n\t/**\r\n\t * [_end description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _end: number = 1;\r\n\r\n\t/**\r\n\t * [_finalStart description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _finalStart: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_finalEnd description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _finalEnd: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * If set to `true`, changing data range in element will not trigger\r\n\t * `daterangechanged` event.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic skipRangeEvent: boolean = false;\r\n\r\n\t/**\r\n\t * Whenever selected scope changes (chart is zoomed or panned), for example\r\n\t * by interaction from a Scrollbar, or API, a chart needs to reposition\r\n\t * its contents.\r\n\t *\r\n\t * `rangeChangeDuration` influences how this is performed.\r\n\t *\r\n\t * If set to zero (0), the change will happen instantenously.\r\n\t *\r\n\t * If set to non-zero value, the chart will gradually animate into new\r\n\t * position for the set amount of milliseconds.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tpublic rangeChangeDuration: number = 0;\r\n\r\n\t/**\r\n\t * An easing function to use for range change animation.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {function}\r\n\t */\r\n\tpublic rangeChangeEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * A reference to a currently playing range change [[Animation]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Animation>}\r\n\t */\r\n\tpublic rangeChangeAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * A duration (ms) of each data parsing step. A Component parses its data in\r\n\t * chunks in order to avoid completely freezing the machine when large data\r\n\t * sets are used. This setting will control how many milliseconds should pass\r\n\t * when parsing data until parser stops for a brief moment to let other\r\n\t * processes catch up.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic parsingStepDuration: number = 50;\r\n\r\n\t/**\r\n\t * [dataInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic dataInvalid: boolean = false;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rawDataInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * [dataRangeInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic dataRangeInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * [dataItemsInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic dataItemsInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * If set to a non-zero number the element will \"animate\" data values of its\r\n\t * children.\r\n\t *\r\n\t * This will happen on first load and whenever data values change.\r\n\t *\r\n\t * Enabling interpolation will mean that elements will transit smoothly into\r\n\t * new values rather than updating instantly.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tpublic interpolationDuration: number = 0;\r\n\r\n\t/**\r\n\t * An easing function to use for interpolating values when transiting from\r\n\t * one source value to another.\r\n\t *\r\n\t * @default cubicOut\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @see {@link Ease}\r\n\t * @type {function}\r\n\t */\r\n\tpublic interpolationEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Indicates whether transition between data item's values should start and\r\n\t * play out all at once, or with a small delay (as defined by\r\n\t * `sequencedInterpolationDelay`) for each subsequent data item.\r\n\t *\r\n\t * @default true\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic sequencedInterpolation: boolean = true;\r\n\r\n\t/**\r\n\t * A delay (ms) to wait between animating each subsequent data item's\r\n\t * interpolation animation.\r\n\t *\r\n\t * Relative only if `sequencedInterpolation = true`.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tpublic sequencedInterpolationDelay: number = 0;\r\n\r\n\t/**\r\n\t * A progress (0-1) for the data validation process.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic dataValidationProgress: number = 0;\r\n\r\n\t/**\r\n\t * [_prevStartIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _prevStartIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_prevEndIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _prevEndIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Sometimes we need to process more dataItems then actually is\r\n\t * selected (for example, not to cut lines at the end/beginning).\r\n\t * However when calculating averages, min, max, etc we need not to include\r\n\t * them. So we store `workingStartIndex` and `workingEndIndex` to know which\r\n\t * dataItems should be included and which should not.\r\n\t */\r\n\r\n\t/**\r\n\t * [_workingStartIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _workingStartIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_workingEndIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _workingEndIndex: $type.Optional<number>;\r\n\r\n\tprotected _addAllDataItems: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Component\";\r\n\r\n\t\tthis.invalidateData();\r\n\r\n\t\t// TODO what about remove ?\r\n\t\tthis.dataUsers.events.on(\"inserted\", this.handleDataUserAdded, this, false);\r\n\r\n\t\t// Set up disposers\r\n\t\tthis._disposers.push(new MultiDisposer(this._dataDisposers));\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {DataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new DataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataUserAdded description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param {IListEvents<Component>[\"inserted\"]} event Event object\r\n\t */\r\n\tprotected handleDataUserAdded(event: IListEvents<Component>[\"inserted\"]) {\r\n\t\tlet dataUser = event.newValue;\r\n\t\tdataUser.dataProvider = this;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic handleDataItemValueChange(dataItem?: this[\"_dataItem\"]): void {\r\n\t\tif (!this.dataItemsInvalid) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingLocationChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingLocationChange(dataItem?: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemCalculatedValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemCalculatedValueChange(dataItem?: this[\"_dataItem\"]) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Populates a [[DataItem]] width data from data source.\r\n\t *\r\n\t * Loops through all the fields and if such a field is found in raw data\r\n\t * object, a corresponding value on passed in `dataItem` is set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Object} item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\tif (dataItem) {\r\n\t\t\tif (!dataContext) {\r\n\t\t\t\tdataContext = {};\r\n\t\t\t}\r\n\r\n\t\t\t// store reference to original data item\r\n\t\t\tdataItem.dataContext = dataContext;\r\n\r\n\t\t\tlet hasSomeValues = false;\r\n\r\n\t\t\t$object.each(this.dataFields, (key, fieldValue) => {\r\n\t\t\t\tconst fieldName: string = <string>key;\r\n\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\t// Apply adapters to a retrieved value\r\n\t\t\t\tvalue = this.adapter.apply(\"dataContextValue\", {\r\n\t\t\t\t\tfield: fieldName,\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t}).value;\r\n\r\n\t\t\t\tif (dataItem.hasChildren[fieldName]) {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\thasSomeValues = true;\r\n\t\t\t\t\t\tlet children = new OrderedListTemplate<DataItem>(this.createDataItem());\r\n\t\t\t\t\t\tchildren.events.on(\"inserted\", this.handleDataItemAdded, this, false);\r\n\t\t\t\t\t\tchildren.events.on(\"removed\", this.handleDataItemRemoved, this, false);\r\n\t\t\t\t\t\tthis._dataDisposers.push(new ListDisposer(children));\r\n\t\t\t\t\t\tlet count = value.length;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet rawDataItem = value[i];\r\n\t\t\t\t\t\t\tlet childDataItem: this[\"_dataItem\"] = children.create();\r\n\t\t\t\t\t\t\tchildDataItem.parent = dataItem;\r\n\t\t\t\t\t\t\tthis.processDataItem(childDataItem, rawDataItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet anyDataItem = <any>dataItem;\r\n\t\t\t\t\t\tanyDataItem[fieldName] = <any>children;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// data is converted to numbers/dates in each dataItem\r\n\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\thasSomeValues = true;\r\n\t\t\t\t\t\t(<any>dataItem)[fieldName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$object.each(this.propertyFields, (key, fieldValue) => {\r\n\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\thasSomeValues = true;\r\n\t\t\t\t\tdataItem.setProperty(f, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @todo we might need some flag which would tell whether we should create empty data items or not. \r\n\t\t\tif (!this._addAllDataItems && !hasSomeValues) {\r\n\t\t\t\tthis.dataItems.remove(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Object} item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tif (dataItem) {\r\n\r\n\t\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\t\t$object.each(this.dataFields, (key, fieldValue) => {\r\n\t\t\t\tconst fieldName: string = <string>key;\r\n\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\t// Apply adapters to a retrieved value\r\n\t\t\t\tvalue = this.adapter.apply(\"dataContextValue\", {\r\n\t\t\t\t\tfield: fieldName,\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t}).value;\r\n\r\n\t\t\t\tif (dataItem.hasChildren[fieldName]) {\r\n\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\tlet anyDataItem = <any>dataItem;\r\n\t\t\t\t\t\tlet children = <OrderedListTemplate<this[\"_dataItem\"]>><any>(anyDataItem[fieldName]);\r\n\t\t\t\t\t\t$iter.each(children.iterator(), (child) => {\r\n\t\t\t\t\t\t\tthis.updateDataItem(child);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// data is converted to numbers/dates in each dataItem\r\n\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t(<any>dataItem)[fieldName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$object.each(this.propertyFields, (key, fieldValue) => {\r\n\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\tdataItem.setProperty(f, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tlet count = this.endIndex;\r\n\t\tfor (let i = this.startIndex; i < count; i++) {\r\n\t\t\tconst dataItem = this.dataItems.getIndex(i);\r\n\r\n\t\t\t// TODO is this correct\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates this element and its related elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.validateDataElements();\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]} dataItem [description]\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param {Object | Object[]} rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number): void {\r\n\t\t// need to check if data is invalid, as addData might be called multiple times\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._parseDataFrom = this.data.length; // save length of parsed data\r\n\t\t}\r\n\r\n\t\tif (rawDataItem instanceof Array) {\r\n\t\t\t// can't use concat because new array is returned\r\n\t\t\t$array.each(rawDataItem, (dataItem) => {\r\n\t\t\t\tthis.data.push(dataItem);\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.data.push(rawDataItem); // add to raw data array\r\n\t\t}\r\n\r\n\t\tthis.removeData(removeCount);\r\n\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes elements from the beginning of data\r\n\t *\r\n\t * @param {Optional<number>} coun number of elements to remove\r\n\t */\r\n\tpublic removeData(count: $type.Optional<number>) {\r\n\t\tif ($type.isNumber(count)) {\r\n\t\t\twhile (count > 0) {\r\n\t\t\t\tlet dataItem = this.dataItems.getIndex(0);\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tthis.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\t\t\tlet dataItem = dataUser.dataItems.getIndex(0);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataUser.dataItems.remove(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.data.shift();\r\n\t\t\t\tthis._parseDataFrom--;\r\n\r\n\t\t\t\tcount--;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggers a data (re)parsing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateData(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataInvalid){\r\n\t\tregistry.addToInvalidComponents(this);\r\n\t\tsystem.requestFrame();\r\n\t\tthis.dataInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateDataItems();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [invalidateDataUsers description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic invalidateDataUsers(): void {\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates data values. When data array is not changed, but values within\r\n\t * it changes, we invalidate data so that component would process changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateDataItems(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataItemsInvalid){\r\n\t\t$array.move(registry.invalidDataItems, this);\r\n\t\tsystem.requestFrame();\r\n\r\n\t\tthis.dataItemsInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateDataItems();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates data range. This is done when data which must be shown\r\n\t * changes (chart is zoomed for example).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateDataRange(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataRangeInvalid){\r\n\t\tthis.dataRangeInvalid = true;\r\n\t\t$array.move(registry.invalidDataRange, this);\r\n\t\tsystem.requestFrame();\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data range.\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\t\t$array.remove(registry.invalidDataRange, this);\r\n\t\tthis.dataRangeInvalid = false;\r\n\r\n\t\tif (this.startIndex != this._prevStartIndex || this.endIndex != this._prevEndIndex) {\r\n\t\t\tthis.rangeChangeUpdate();\r\n\t\t}\r\n\r\n\t\tthis.appendDataItems();\r\n\t\tthis.invalidate();\r\n\t\tthis.dispatchImmediately(\"datarangechanged\");\r\n\t}\r\n\r\n\t/**\r\n\t * [sliceData description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected sliceData() {\r\n\t\tthis._workingStartIndex = this.startIndex;\r\n\t\tthis._workingEndIndex = this.endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tthis.sliceData();\r\n\t\tthis._prevStartIndex = this.startIndex;\r\n\t\tthis._prevEndIndex = this.endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * [appendDataItems description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected appendDataItems() {\r\n\t\t// TODO use an iterator instead\r\n\t\tlet count = this.endIndex;\r\n\t\tfor (let i: number = this.startIndex; i < count; i++) {\r\n\r\n\t\t\t// data item\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\r\n\t\tfor (let i = this.endIndex; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If you want to have a smooth transition from one data values to another, you change your raw data and then you must call this method.\r\n\t * then instead of redrawing everything, the chart will check raw data and smoothly transit from previous to new data\r\n\t */\r\n\tpublic invalidateRawData(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.rawDataInvalid){\r\n\t\t$array.move(registry.invalidRawDatas, this);\r\n\t\tsystem.requestFrame();\r\n\r\n\t\tthis.rawDataInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateRawData();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateRawData() {\r\n\t\t$array.remove(registry.invalidRawDatas, this);\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tthis.updateDataItem(dataItem);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @ignoref\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tif (this.inited) {\r\n\t\t\t$array.each(this._dataDisposers, (x) => {\r\n\t\t\t\tx.dispose();\r\n\t\t\t});\r\n\r\n\t\t\t// and for all components\r\n\t\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\t\tdataUser.disposeData();\r\n\t\t\t});\r\n\r\n\t\t\tthis._dataDisposers.length = 0;\r\n\r\n\t\t\tthis._startIndex = undefined;\r\n\t\t\tthis._endIndex = undefined;\r\n\r\n\t\t\t// dispose old\r\n\t\t\tthis.dataItems.clear();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis.dispatchImmediately(\"beforedatavalidated\");\r\n\r\n\t\tthis.dataInvalid = false;\r\n\r\n\t\tregistry.removeFromInvalidComponents(this);\r\n\r\n\t\tthis.dataValidationProgress = 0;\r\n\t\t// need this to slice new data\r\n\t\tthis._prevStartIndex = undefined;\r\n\t\tthis._prevEndIndex = undefined;\r\n\r\n\t\t// todo: this needs some overthinking, maybe some extra settings like zoomOotonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n\t\tthis._startIndex = undefined;\r\n\t\tthis._endIndex = undefined;\r\n\r\n\t\tif (this.dataFields.data && this.dataItem) {\r\n\t\t\tlet dataContext = <any>this.dataItem.dataContext;\r\n\t\t\tthis._data = dataContext[this.dataFields.data];\r\n\t\t}\r\n\r\n\t\t// data items array is reset only if all data is validated, if _parseDataFrom is not 0, we append new data only\r\n\t\t// check heatmap demo if uncommented\r\n\t\t// fixed both issues by adding && this.data.length > 0 \r\n\t\t// check adding series example if changed\r\n\t\tif (this._parseDataFrom === 0 && this.data.length > 0) {\r\n\t\t\tthis.disposeData();\r\n\t\t}\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tlet preloader: $type.Optional<Preloader> = this.preloader;\r\n\r\n\t\t\t// and for all components\r\n\t\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\t\t// todo: this needs some overthinking, maybe some extra settings like zoomOUtonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n\t\t\t\tdataUser._startIndex = undefined;\r\n\t\t\t\tdataUser._endIndex = undefined;\r\n\r\n\t\t\t});\r\n\r\n\t\t\tlet counter: number = 0;\r\n\t\t\tlet startTime: number = Date.now();\r\n\t\t\t// parse data\r\n\t\t\tlet i = this._parseDataFrom;\r\n\t\t\tlet n = this.data.length;\r\n\t\t\tfor (i; i < n; i++) {\r\n\t\t\t\tlet rawDataItem = this.data[i];\r\n\r\n\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.dataItems.create();\r\n\r\n\t\t\t\tthis.processDataItem(dataItem, rawDataItem);\r\n\r\n\t\t\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\t\t\tif (dataUser.data.length == 0) { // checking if data is not set directly\r\n\t\t\t\t\t\tlet dataUserDataItem: DataItem = dataUser.dataItems.create();\r\n\t\t\t\t\t\tdataUser.processDataItem(dataUserDataItem, rawDataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcounter++;\r\n\r\n\t\t\t\t// show preloader if this takes too many time\r\n\t\t\t\tif (counter == 100) { // no need to check it on each data item\r\n\t\t\t\t\tcounter = 0;\r\n\t\t\t\t\tlet elapsed: number = Date.now() - startTime;\r\n\r\n\t\t\t\t\tif (elapsed > this.parsingStepDuration) {\r\n\t\t\t\t\t\tif (i < this.data.length - 10) {\r\n\t\t\t\t\t\t\tthis._parseDataFrom = i + 1;\r\n\r\n\t\t\t\t\t\t\t// update preloader\r\n\t\t\t\t\t\t\tif (preloader) {\r\n\t\t\t\t\t\t\t\tif (i / this.data.length > 0.5 && !preloader.visible) {\r\n\t\t\t\t\t\t\t\t\t// do not start showing\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tpreloader.progress = i / this.data.length;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.dataValidationProgress = i / this.data.length;\r\n\r\n\t\t\t\t\t\t\ti = this.data.length; // stops cycle\r\n\t\t\t\t\t\t\tthis.invalidateData();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dataValidationProgress = 1;\r\n\t\tthis._parseDataFrom = 0; // reset this index, it is set to dataItems.length if addData() method was used.\r\n\r\n\t\tthis.invalidateDataItems();\r\n\r\n\t\tif (!this._internalDefaultsApplied) {\r\n\t\t\tthis.applyInternalDefaults();\r\n\t\t}\t\t\r\n\r\n\t\tthis.dispatch(\"datavalidated\"); // can't zoom chart if dispatched immediately\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\t$array.remove(registry.invalidDataItems, this);\r\n\r\n\t\tthis.dataItemsInvalid = false;\r\n\r\n\t\tthis.invalidateDataRange();\r\n\t\tthis.dispatch(\"dataitemsvalidated\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets source (raw) data for the element. The \"data\" is always an `Array`\r\n\t * of objects.\r\n\t *\r\n\t * @param {any[]} value Data\r\n\t */\r\n\tpublic set data(value: any[]) {\r\n\t\t// array might be the same, but there might be items added\r\n\t\t// todo: check if array changed, toString maybe?\r\n\t\t//if (this._data != value) {\r\n\t\tthis.disposeData();\r\n\t\tthis._data = value;\r\n\t\tif (value && value.length > 0) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's source (raw) data.\r\n\t *\r\n\t * @return {any[]} Data\r\n\t */\r\n\tpublic get data(): any[] {\r\n\t\tif (!this._data) {\r\n\t\t\tthis._data = [];\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"data\", this._data);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (creates if necessary) a [[DataSource]] bound to any specific\r\n\t * property.\r\n\t *\r\n\t * For example if I want to bind `data` to an external JSON file, I'd create\r\n\t * a DataSource for it.\r\n\t *\r\n\t * @param  {string}      property  Property to bind external data to\r\n\t * @return {DataSource}            A DataSource for property\r\n\t */\r\n\tpublic getDataSource(property: string): DataSource {\r\n\t\tif (!$type.hasValue(this._dataSources[property])) {\r\n\t\t\tthis._dataSources[property] = new DataSource();\r\n\t\t\tthis._dataSources[property].component = this;\r\n\t\t\tthis.setDataSourceEvents(this._dataSources[property], property);\r\n\t\t\tthis._dataSources[property].adapter.add(\"dateFields\", (val) => {\r\n\t\t\t\treturn this.dataSourceDateFields(val);\r\n\t\t\t});\r\n\t\t\tthis._dataSources[property].adapter.add(\"numberFields\", (val) => {\r\n\t\t\t\treturn this.dataSourceNumberFields(val);\r\n\t\t\t});\r\n\t\t\tthis.events.on(\"inited\", () => {\r\n\t\t\t\tthis.loadData(property);\r\n\t\t\t}, this, false);\r\n\t\t}\r\n\t\treturn this._dataSources[property];\r\n\t}\r\n\r\n\t/**\r\n\t *A [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/loading-external-data/} for more on loading external data\r\n\t * @param {DataSource}  value  Data source\r\n\t */\r\n\tpublic set dataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"data\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"data\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"data\"] = value;\r\n\t\tthis._dataSources[\"data\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"data\")\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"data\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DataSource} Data source\r\n\t */\r\n\tpublic get dataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"data\"]) {\r\n\t\t\tthis.getDataSource(\"data\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"data\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates loading of the external data via [[DataSource]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected loadData(property: string): void {\r\n\t\tthis._dataSources[property].load();\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-speicifc data fields so they are parsed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string[]}  value  Array of date fields\r\n\t * @return {string[]}         Array of date fields populated with chart's date fields\r\n\t */\r\n\tprotected dataSourceDateFields(value: string[]): string[] {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-speicifc data fields so they are parsed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string[]}  value  Array of number fields\r\n\t * @return {string[]}         Array of number fields populated with chart's number fields\r\n\t */\r\n\tprotected dataSourceNumberFields(value: string[]): string[] {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {string[]}  list        [description]\r\n\t * @param  {object}    dataFields  [description]\r\n\t * @param  {string[]}  targetList  [description]\r\n\t * @return {string[]}              [description]\r\n\t */\r\n\tprotected populateDataSourceFields(list: string[], dataFields: { [index: string]: string }, targetList: string[]): string[] {\r\n\t\t$array.each(targetList, (value: string) => {\r\n\t\t\tif (dataFields[value] && $array.indexOf(list, dataFields[value]) === -1) {\r\n\t\t\t\tlist.push(dataFields[value]);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets events on a [[DataSource]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected setDataSourceEvents(ds: DataSource, property?: string): void {\r\n\t\tds.events.on(\"started\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0;\r\n\t\t\t\t//preloader.label.text = this.language.translate(\"Loading\");\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"loadstarted\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.25;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"loadended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.5;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"parseended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.75;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"ended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"error\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\t\t\tthis.openModal(ev.message);\r\n\t\t}, undefined, false);\r\n\r\n\t\tif (property) {\r\n\t\t\tds.events.on(\"done\", (ev) => {\r\n\t\t\t\tconst preloader = this.preloader;\r\n\t\t\t\tif (preloader) {\r\n\t\t\t\t\tpreloader.progress = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (property == \"data\" && !$type.isArray(ev.data)) {\r\n\t\t\t\t\tev.data = [ev.data];\r\n\t\t\t\t}\r\n\t\t\t\tif (ds.incremental && property == \"data\" && this.data.length) {\r\n\t\t\t\t\tthis.addData(ev.data, ds.keepCount ? ev.data.length : 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this)[property] = ev.data;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Responsive]] instance to be used when applying conditional\r\n\t * property values.\r\n\t *\r\n\t * NOTE: Responsive features are currently in development and may not work\r\n\t * as expected, if at all.\r\n\t *\r\n\t * @param {Responsive}  value  Data source\r\n\t */\r\n\tpublic set responsive(value: Responsive) {\r\n\t\tthis._responsive = value;\r\n\t\tthis._responsive.component = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DataSource} Data source\r\n\t */\r\n\tpublic get responsive(): Responsive {\r\n\t\tif (!this._responsive) {\r\n\t\t\tthis._responsive = new Responsive();\r\n\t\t\tthis._responsive.component = this;\r\n\t\t}\r\n\t\treturn this._responsive;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current zoom.\r\n\t *\r\n\t * The range uses relative values from 0 to 1, with 0 marking beginning and 1\r\n\t * marking end of the available data range.\r\n\t *\r\n\t * This method will not have any effect when called on a chart object.\r\n\t * Since the chart can have a number of axes and series, each with its own\r\n\t * data, the meaning of \"range\" is very ambiguous.\r\n\t *\r\n\t * To zoom the chart use `zoom*` methods on its respective axes.\r\n\t *\r\n\t * @param  {IRange}  range          Range\r\n\t * @param  {boolean} skipRangeEvent Should rangechanged event not be triggered?\r\n\t * @param  {boolean} instantly      Do not animate?\r\n\t * @return {IRange}                 Actual modidied range (taking `maxZoomFactor` into account)\r\n\t */\r\n\tpublic zoom(range: IRange, skipRangeEvent: boolean = false, instantly: boolean = false): IRange {\r\n\t\tlet start: $type.Optional<number> = range.start;\r\n\t\tlet end = range.end;\r\n\t\tlet priority = range.priority;\r\n\r\n\t\tif (!$type.isNumber(start) || !$type.isNumber(end)) {\r\n\t\t\treturn { start: this.start, end: this.end };\r\n\t\t}\r\n\r\n\t\tif (this._finalStart != start || this._finalEnd != end) {\r\n\r\n\t\t\tlet maxZoomFactor: number = this.maxZoomFactor;\r\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n\r\n\t\t\tif (priority == \"start\") {\r\n\t\t\t\t// add to the end\r\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\r\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t\t//unless end is > 0\r\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\r\n\t\t\t\t\t//end = 1;\r\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// most likely we are dragging right, so we modify left\r\n\t\t\telse {\r\n\t\t\t\t// remove from start\r\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\r\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\r\n\t\t\t\t\t//start = 0;\r\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._finalEnd = end;\r\n\t\t\tthis._finalStart = start;\r\n\r\n\t\t\tthis.skipRangeEvent = skipRangeEvent;\r\n\r\n\t\t\tif (this.rangeChangeDuration > 0 && !instantly) {\r\n\t\t\t\t// todo: maybe move this to Animation\r\n\t\t\t\tlet rangeChangeAnimation: $type.Optional<Animation> = this.rangeChangeAnimation;\r\n\t\t\t\tif (rangeChangeAnimation && rangeChangeAnimation.progress < 1) {\r\n\t\t\t\t\tlet options = rangeChangeAnimation.animationOptions;\r\n\t\t\t\t\tif (options.length > 1) {\r\n\t\t\t\t\t\tif (options[0].to == start && options[1].to == end) {\r\n\t\t\t\t\t\t\treturn { start: start, end: end };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"rangechangestarted\");\r\n\r\n\t\t\t\tif (this.rangeChangeAnimation) {\r\n\t\t\t\t\tthis.rangeChangeAnimation.kill();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeChangeAnimation = this.animate([{ property: \"start\", to: start }, { property: \"end\", to: end }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t\t\t\tthis.rangeChangeAnimation = rangeChangeAnimation;\r\n\r\n\t\t\t\tif (rangeChangeAnimation && !rangeChangeAnimation.isFinished()) {\r\n\t\t\t\t\trangeChangeAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.dispatchImmediately(\"rangechangeended\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.dispatchImmediately(\"rangechangeended\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.start = start;\r\n\t\t\t\tthis.end = end;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { start: start, end: end };\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to specific data items using their index in data.\r\n\t *\r\n\t * This method will not have any effect when called on a chart object.\r\n\t * Since the chart can have a number of axes and series, each with its own\r\n\t * data, the meaning of \"index\" is very ambiguous.\r\n\t *\r\n\t * To zoom the chart use `zoom*` methods on its respective axes.\r\n\t *\r\n\t * @param {number}  startIndex     Index of the starting data item\r\n\t * @param {number}  endIndex       Index of the ending data item\r\n\t * @param {boolean} skipRangeEvent Should rangechanged event not be triggered?\r\n\t * @param {boolean} instantly      Do not animate?\r\n\t */\r\n\tpublic zoomToIndexes(startIndex: number, endIndex: number, skipRangeEvent?: boolean, instantly?: boolean) {\r\n\t\tif (!$type.isNumber(startIndex) || !$type.isNumber(endIndex)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet start: number = startIndex / this.dataItems.length;\r\n\t\tlet end: number = endIndex / this.dataItems.length;\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A current zoom factor (0-1). 1 meaning fully zoomed out. (showing all of\r\n\t * the available data)\r\n\t *\r\n\t * @return {number} Zoom factor\r\n\t */\r\n\tpublic get zoomFactor(): number {\r\n\t\treturn $math.fitToRange(1 / (this.end - this.start), 1, this.maxZoomFactor);\r\n\t}\r\n\r\n\t/**\r\n\t * Max available `zoomFactor`.\r\n\t *\r\n\t * The element will not allow zoom to occur beyond this factor.\r\n\t *\r\n\t * @param {number}  value  Maximum `zoomFactor`\r\n\t */\r\n\tpublic set maxZoomFactor(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxZoomFactor\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Maximum `zoomFactor`\r\n\t */\r\n\tpublic get maxZoomFactor(): number {\r\n\t\treturn this.getPropertyValue(\"maxZoomFactor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current starting index.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Start index\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t\tthis._startIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n\t\t//this._workingStartIndex = this._startIndex; // not good, breaks adjusted working start index of line series\r\n\t\tthis.start = this.indexToPosition(this._startIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo:review description\r\n\t * returns item's relative position by the index of the item\r\n\t * @param {number} index\r\n\t */\r\n\tpublic indexToPosition(index: number) {\r\n\t\treturn index / this.dataItems.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Current starting index.\r\n\t *\r\n\t * @return {number} Start index\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\tif (!$type.isNumber(this._startIndex)) {\r\n\t\t\tthis._startIndex = 0;\r\n\t\t}\r\n\r\n\t\treturn this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current ending index.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value End index\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t\tthis._endIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n\t\t//this._workingEndIndex = this._endIndex; // not good, breaks adjusted workingend index of line series\r\n\t\tthis.end = this.indexToPosition(this._endIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * Current ending index.\r\n\t *\r\n\t * @return {number} End index\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\tif (!$type.isNumber(this._endIndex)) {\r\n\t\t\tthis._endIndex = this.dataItems.length;\r\n\t\t}\r\n\t\treturn this._endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets start of the current data range (zoom).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Start (0-1)\r\n\t */\r\n\tpublic set start(value: number) {\r\n\t\tvalue = $math.round(value, 5);\r\n\r\n\t\t//if (1 / (this.end - value) > this.maxZoomFactor) {\r\n\t\t//\tvalue = this.end - 1 / this.maxZoomFactor;\r\n\t\t//}\r\n\t\tif (this._start != value) {\r\n\t\t\tthis._start = value;\r\n\t\t\tlet startIndex = Math.max(0, Math.floor(this.dataItems.length * value) || 0);\r\n\t\t\tthis._startIndex = Math.min(startIndex, this.dataItems.length);\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Current relative starting position of the data range (zoom).\r\n\t *\r\n\t * @return {number} Start (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets end of the current data range (zoom).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value End (0-1)\r\n\t */\r\n\tpublic set end(value: number) {\r\n\t\tvalue = $math.round(value, 5);\r\n\r\n\t\t//if (1 / (value - this.start) > this.maxZoomFactor) {\r\n\t\t//\tvalue = 1 / this.maxZoomFactor + this.start;\r\n\t\t//}\r\n\r\n\t\tif (this._end != value) {\r\n\t\t\tthis._end = value;\r\n\t\t\tthis._endIndex = Math.min(this.dataItems.length, Math.ceil(this.dataItems.length * value) || 0);\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Current relative ending position fo the data range (zoom).\r\n\t *\r\n\t * @return {number} End (0-1)\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._end;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [removeFromInvalids description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected removeFromInvalids(): void {\r\n\t\tsuper.removeFromInvalids();\r\n\t\tregistry.removeFromInvalidComponents(this);\r\n\t\t$array.remove(registry.invalidDataItems, this);\r\n\t\t$array.remove(registry.invalidDataRange, this);\r\n\t\t$array.remove(registry.invalidRawDatas, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of source [[DataItem]] objects.\r\n\t *\r\n\t * @return {OrderedListTemplate} List of data items\r\n\t */\r\n\tpublic get dataItems(): OrderedListTemplate<this[\"_dataItem\"]> {\r\n\t\t// @todo Check if we can automatically dispose all of the data items when\r\n\t\t// Component is disposed\r\n\t\tif (!this._dataItems) {\r\n\t\t\tthis._dataItems = new OrderedListTemplate<DataItem>(this.createDataItem());\r\n\t\t\tthis._dataItems.events.on(\"inserted\", this.handleDataItemAdded, this, false);\r\n\t\t\tthis._dataItems.events.on(\"removed\", this.invalidateDataItems, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._dataItems));\r\n\t\t\tthis._disposers.push(this._dataItems.template);\r\n\t\t}\r\n\t\treturn this._dataItems;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes newly added [[DataItem]] as well as triggers data re-validation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<DataItem>[\"inserted\"]} event [description]\r\n\t */\r\n\tprotected handleDataItemAdded(event: IListEvents<DataItem>[\"inserted\"]) {\r\n\t\tevent.newValue.component = this;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * removes [[DataItem]] as well as triggers data re-validation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<DataItem>[\"inserted\"]} event [description]\r\n\t */\r\n\tprotected handleDataItemRemoved(event: IListEvents<DataItem>[\"removed\"]) {\r\n\t\tevent.oldValue.component = undefined;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * [dataMethods description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @deprecated Not used?\r\n\t * @param {Dictionary} List of data methods\r\n\t */\r\n\tpublic get dataMethods(): Dictionary<string, (value: number) => number> {\r\n\t\tif (!this._dataMethods) {\r\n\t\t\tthis._dataMethods = new Dictionary<string, (value: number) => number>();\r\n\t\t}\r\n\t\treturn this._dataMethods;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a data element's field to a specific field in raw data.\r\n\t * For example, for the very basic column chart you'd want to bind a `value`\r\n\t * field to a field in data, such as `price`.\r\n\t *\r\n\t * Some more advanced Components, like [[CandlestickSeries]] need several\r\n\t * data fields bound to data, such as ones for open, high, low and close\r\n\t * values.\r\n\t *\r\n\t * @todo Example\r\n\t * @param {Key}                       field  Field name\r\n\t * @param {this[\"_dataFields\"][Key]}  value  Field name in data\r\n\t */\r\n\tpublic bindDataField<Key extends keyof this[\"_dataFields\"]>(field: Key, value: this[\"_dataFields\"][Key]) {\r\n\t\tthis.dataFields[field] = value;\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates processed data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateProcessedData(): void {\r\n\t\tthis.resetProcessedRange();\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * [resetProcessedRange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic resetProcessedRange(): void {\r\n\t\tthis._prevEndIndex = null;\r\n\t\tthis._prevStartIndex = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all other [[Component]] objects that are using this element's\r\n\t * data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @return {List<Component>} [description]\r\n\t */\r\n\tpublic get dataUsers(): List<Component> {\r\n\t\tif (!this._dataUsers) {\r\n\t\t\tthis._dataUsers = new List<Component>();\r\n\r\n\t\t\t//this._disposers.push(new ListDisposer(this._dataUsers));\r\n\r\n\t\t\t// TODO better way of handling this? e.g. move into another module ?\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t// TODO clear the list ?\r\n\t\t\t\t$iter.each(this._dataUsers.iterator(), (x) => {\r\n\t\t\t\t\tx.dispose();\r\n\t\t\t\t});\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn this._dataUsers;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a clone of this element.\r\n\t *\r\n\t * @return {this} Clone\r\n\t */\r\n\tpublic clone(): this {\r\n\t\tlet component: this = super.clone();\r\n\t\tcomponent.dataFields = $utils.copyProperties(this.dataFields, {});\r\n\t\treturn component;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Component]].\r\n\t *\r\n\t * @param {Component} source Source Component\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.data = source.data;\r\n\t\tthis.sequencedInterpolation = source.sequencedInterpolation;\r\n\t\tthis.sequencedInterpolationDelay = source.sequencedInterpolationDelay;\r\n\t\tthis.interpolationDuration = source.interpolationDuration;\r\n\t\tthis.interpolationEasing = source.interpolationEasing;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including all its children, causing\r\n\t * complete re-parsing of data and redraw.\r\n\t *\r\n\t * Use sparingly!\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tthis._inited = false;\r\n\t\tthis.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Add an adapter for data.\r\n\t *\r\n\t * @return {Export} Exporting\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tlet _export = super.getExporting();\r\n\t\tif (!_export.adapter.has(\"data\", this._exportData, null, this)) {\r\n\t\t\t_export.adapter.add(\"data\", this._exportData, null, this);\r\n\t\t}\r\n\t\treturn _export;\r\n\t}\r\n\r\n\tprivate _exportData(arg: IExportAdapters[\"data\"]): IExportAdapters[\"data\"] {\r\n\t\targ.data = this.data;\r\n\t\treturn arg;\r\n\t}\r\n\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tsuper.setDisabled(value);\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setShowOnInit(value: boolean) {\r\n\t\tif (value != this.getPropertyValue(\"showOnInit\") && value && !this.inited && !this.hidden) {\r\n\t\t\tthis.events.once(\"dataitemsvalidated\", this.hideInitially, this, false);\r\n\t\t}\r\n\t\t// important order here\r\n\t\tsuper.setShowOnInit(value);\r\n\t}\t\r\n\r\n\tprotected setBaseId(value: string) {\r\n\t\tif (value != this._baseId) {\r\n\t\t\tif (this.dataInvalid) {\r\n\t\t\t\tthis.dataInvalid = false;\r\n\t\t\t\tregistry.removeFromInvalidComponents(this);\r\n\t\t\t\tthis._baseId = value;\t\t\t\t\r\n\t\t\t\tthis.invalidateData();\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\tsuper.setBaseId(value);\r\n\t}\t\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Component.ts","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, IDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $async from \"./AsyncPending\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines a universal type for the event object.\r\n */\r\nexport type AMEvent<Target, T> = {\r\n\t[K in keyof T]: { type: K, target: Target } & T[K];\r\n};\r\n\r\n/**\r\n * A universal interface for event listeners.\r\n */\r\nexport interface EventListener<T> {\r\n\tkilled: boolean;\r\n\tonce: boolean;\r\n\ttype: keyof T | null;\r\n\tcallback: any;\r\n\tcontext: any;\r\n\tshouldClone: boolean;\r\n\tdispatch: <Key extends keyof T>(type: Key, event: T[Key]) => void;\r\n\tdisposer: IDisposer;\r\n}\r\n\r\n/*export interface IEventDispatcher<T> {\r\n\tisDisposed(): boolean;\r\n\tdispose(): void;\r\n\thasListeners(): boolean;\r\n\tenable(): void;\r\n\tdisable(): void;\r\n\tenableType<Key extends keyof T>(type: Key): void;\r\n\tdisableType<Key extends keyof T>(type: Key, amount?: number): void;\r\n\tisEnabled<Key extends keyof T>(type: Key): boolean;\r\n\thas<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean;\r\n\tdispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n\tdispatch<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n\tonAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C): IDisposer;\r\n\ton<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n\tonce<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n\toff<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n\toff<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n\tcopyFrom(source: this): void;\r\n}*/\r\n\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @important\r\n */\r\nexport class EventDispatcher<T> implements IDisposer {\r\n\r\n\tprotected _listeners: Array<EventListener<T>>;\r\n\tprotected _killed: Array<EventListener<T>>;\r\n\tprotected _disabled: { [key in keyof T]?: number };\r\n\tprotected _iterating: number;\r\n\tprotected _enabled: boolean;\r\n\tprotected _disposed: boolean;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._listeners = [];\r\n\t\tthis._killed = [];\r\n\t\tthis._disabled = {};\r\n\t\tthis._iterating = 0;\r\n\t\tthis._enabled = true;\r\n\t\tthis._disposed = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already disposed.\r\n\t *\r\n\t * @return {boolean} Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispose (destroy) this object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\r\n\t\t\tconst a = this._listeners;\r\n\r\n\t\t\tthis._iterating = 1;\r\n\t\t\tthis._listeners = <any>null;\r\n\t\t\tthis._disabled = <any>null;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t$array.each(a, (x) => {\r\n\t\t\t\t\tx.disposer.dispose();\r\n\t\t\t\t});\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tthis._killed = <any>null;\r\n\t\t\t\tthis._iterating = <any>null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this particular event dispatcher has any listeners set.\r\n\t *\r\n\t * @return {boolean} Has listeners?\r\n\t */\r\n\tpublic hasListeners(): boolean {\r\n\t\treturn this._listeners.length !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this particular event dispatcher has any particular listeners set.\r\n\t *\r\n\t * @return {boolean} Has particular event listeners?\r\n\t */\r\n\tpublic hasListenersByType<Key extends keyof T>(type: Key): boolean {\r\n\t\treturn $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n\t}\r\n\r\n\t/**\r\n\t * Enable dispatching of events if they were previously disabled by\r\n\t * `disable()`.\r\n\t */\r\n\tpublic enable(): void {\r\n\t\tthis._enabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Disable dispatching of events until re-enabled by `enable()`.\r\n\t */\r\n\tpublic disable(): void {\r\n\t\tthis._enabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable dispatching particular event, if it was disabled before by\r\n\t * `disableType()`.\r\n\t *\r\n\t * @param {Key} type Event type\r\n\t */\r\n\tpublic enableType<Key extends keyof T>(type: Key): void {\r\n\t\tdelete this._disabled[type];\r\n\t}\r\n\r\n\t/**\r\n\t * Disable dispatching of events for a certain event type.\r\n\t *\r\n\t * Optionally, can set how many dispatches to skip before automatically\r\n\t * re-enabling the dispatching.\r\n\t *\r\n\t * @param {Key}                type    Event type\r\n\t * @param {number = Infinity}  amount  Number of event dispatches to skip\r\n\t */\r\n\tpublic disableType<Key extends keyof T>(type: Key, amount: number = Infinity): void {\r\n\t\tthis._disabled[type] = amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes listener from dispatcher.\r\n\t *\r\n\t * Will throw an exception if such listener does not exists.\r\n\t *\r\n\t * @param {EventListener<T>} listener Listener to remove\r\n\t */\r\n\tprotected _removeListener(listener: EventListener<T>): void {\r\n\t\tif (this._iterating === 0) {\r\n\t\t\tconst index = this._listeners.indexOf(listener);\r\n\r\n\t\t\tif (index === -1) {\r\n\t\t\t\tthrow new Error(\"Invalid state: could not remove listener\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._listeners.splice(index, 1);\r\n\r\n\t\t} else {\r\n\t\t\tthis._killed.push(listener);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes existing listener by certain parameters.\r\n\t *\r\n\t * @param {boolean}     once         Listener's once setting\r\n\t * @param {Key | null}  type         Listener's type\r\n\t * @param {A}           callback     Callback function\r\n\t * @param {B}           context      Callback context\r\n\t */\r\n\tprotected _removeExistingListener<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tconst index = $array.findIndex(this._listeners, (info) => {\r\n\t\t\treturn info.once === once && // TODO is this correct ?\r\n\t\t\t\tinfo.type === type &&\r\n\t\t\t\tinfo.callback === callback &&\r\n\t\t\t\tinfo.context === context;\r\n\t\t});\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tthis._listeners[index].disposer.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if dispatching for particular event type is enabled.\r\n\t *\r\n\t * @param  {Key}      type  Event type\r\n\t * @return {boolean}        Enabled?\r\n\t */\r\n\tpublic isEnabled<Key extends keyof T>(type: Key): boolean {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\t// TODO is this check correct ?\r\n\t\treturn this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] == null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's already a listener with specific parameters.\r\n\t *\r\n\t * @param   {Key | null}  type      Listener's type\r\n\t * @param   {A}           callback  Callback function\r\n\t * @param   {B}           context   Callback context\r\n\t * @return {boolean}                Has listener?\r\n\t */\r\n\tpublic has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean {\r\n\t\tconst index = $array.findIndex(this._listeners, (info) => {\r\n\t\t\treturn info.once !== true && // Ignoring \"once\" listeners\r\n\t\t\t\tinfo.type === type &&\r\n\t\t\t\t(!callback || info.callback === callback) &&\r\n\t\t\t\tinfo.context === context;\r\n\t\t});\r\n\r\n\t\treturn index !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether event of the particular type should be dispatched.\r\n\t *\r\n\t * @param  {Key}   type  Event type\r\n\t * @return {boolean}        Dispatch?\r\n\t */\r\n\tprotected _shouldDispatch<Key extends keyof T>(type: Key): boolean {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tconst count = this._disabled[type];\r\n\r\n\t\tif (!$type.isNumber(count)) {\r\n\t\t\treturn this._enabled;\r\n\r\n\t\t} else {\r\n\t\t\tif (count <= 1) {\r\n\t\t\t\tdelete this._disabled[type];\r\n\r\n\t\t\t} else {\r\n\t\t\t\t--this._disabled[type];\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_eachListener description]\r\n\t *\r\n\t * All of this extra code is needed when a listener is removed while iterating\r\n\t *\r\n\t * @todo Description\r\n\t * @param {EventListener<T>) => void} fn [description]\r\n\t */\r\n\tprotected _eachListener(fn: (listener: EventListener<T>) => void): void {\r\n\t\t++this._iterating;\r\n\r\n\t\ttry {\r\n\t\t\t$array.each(this._listeners, fn);\r\n\r\n\t\t} finally {\r\n\t\t\t--this._iterating;\r\n\r\n\t\t\t// TODO should this be inside or outside the finally ?\r\n\t\t\tif (this._iterating === 0 && this._killed.length !== 0) {\r\n\t\t\t\t// Remove killed listeners\r\n\t\t\t\t$array.each(this._killed, (killed) => {\r\n\t\t\t\t\tthis._removeListener(killed);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._killed.length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event immediately without waiting for next cycle.\r\n\t *\r\n\t * @param {Key}     type   Event type\r\n\t * @param {T[Key]}  event  Event object\r\n\t * @todo automatically add in type and target properties if they are missing\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n\t\tif (this._shouldDispatch(type)) {\r\n\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\r\n\t\t\t// TODO if the function throws, maybe it should keep going ?\r\n\t\t\tthis._eachListener((listener) => {\r\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\r\n\t\t\t\t\tlistener.dispatch(type, event);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shelves the event to be dispatched within next update cycle.\r\n\t *\r\n\t * @param {Key}     type   Event type\r\n\t * @param {T[Key]}  event  Event object\r\n\t * @todo automatically add in type and target properties if they are missing\r\n\t */\r\n\tpublic dispatch<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n\t\tif (this._shouldDispatch(type)) {\r\n\t\t\tthis._eachListener((listener) => {\r\n\t\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\r\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\r\n\t\t\t\t\t// TODO if the function throws, maybe it should keep going ?\r\n\t\t\t\t\t// TODO dispatch during the update cycle, rather than using whenIdle\r\n\t\t\t\t\t$async.whenIdle(() => {\r\n\t\t\t\t\t\tif (!listener.killed) {\r\n\t\t\t\t\t\t\tlistener.dispatch(type, event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates, catalogs and returns an [[EventListener]].\r\n\t *\r\n\t * Event listener can be disposed.\r\n\t *\r\n\t * @param   {boolean}     once         Listener's once setting\r\n\t * @param   {Key | null}  type         Listener's type\r\n\t * @param   {A}           callback     Callback function\r\n\t * @param   {B}           context      Callback context\r\n\t * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @param   {function}    dispatch\r\n\t * @returns {EventListener} An event listener\r\n\t */\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tthis._removeExistingListener(once, type, callback, context);\r\n\r\n\t\tconst info: EventListener<T> = {\r\n\t\t\ttype: type,\r\n\t\t\tcallback: callback,\r\n\t\t\tcontext: context,\r\n\t\t\tshouldClone: shouldClone,\r\n\t\t\tdispatch: <any>dispatch,\r\n\t\t\tkilled: false,\r\n\t\t\tonce: once,\r\n\t\t\tdisposer: new Disposer(() => {\r\n\t\t\t\tinfo.killed = true;\r\n\t\t\t\tthis._removeListener(info);\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tthis._listeners.push(info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on **any** event.\r\n\t *\r\n\t * @param   {A}           callback     Callback function\r\n\t * @param   {B}           context      Callback context\r\n\t * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns {IDisposer}                A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic onAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\treturn this._on(false, null, callback, context, shouldClone, (type, event) => callback.call(context, type, event)).disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on a specific event type.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.events.on(\"hidden\", (ev) => {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.events.on(\"hidden\", function(ev) {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"events\": {\r\n\t *     \t\"hidden\": function(ev) {\r\n\t *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will invoke our custom event handler whenever series we put\r\n\t * event on is hidden.\r\n\t *\r\n\t * @param   {Key | null}  type         Listener's type\r\n\t * @param   {A}           callback     Callback function\r\n\t * @param   {B}           context      Callback context\r\n\t * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns {IDisposer}                A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic on<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\treturn this._on(false, type, callback, context, shouldClone, (type, event) => callback.call(context, event)).disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on a specific event type once.\r\n\t *\r\n\t * Once the event listener is invoked, it is automatically disposed.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.events.on(\"hidden\", (ev) => {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.events.on(\"hidden\", function(ev) {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"events\": {\r\n\t *     \t\"hidden\": function(ev) {\r\n\t *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will invoke our custom event handler the first time series we\r\n\t * put event on is hidden.\r\n\t *\r\n\t * @param   {Key | null}  type         Listener's type\r\n\t * @param   {A}           callback     Callback function\r\n\t * @param   {B}           context      Callback context\r\n\t * @param   {boolean}     shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns {IDisposer}                A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic once<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\tconst x = this._on(true, type, callback, context, shouldClone, (type, event) => {\r\n\t\t\tx.disposer.dispose();\r\n\t\t\tcallback.call(context, event)\r\n\t\t});\r\n\r\n\t\t// TODO maybe this should return a different Disposer ?\r\n\t\treturn x.disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the event listener with specific parameters.\r\n\t *\r\n\t * @param   {Key | null}  type         Listener's type\r\n\t * @param   {A}           callback     Callback function\r\n\t * @param   {B}           context      Callback context\r\n\t */\r\n\tpublic off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void {\r\n\t\tthis._removeExistingListener(false, type, callback, context);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all dispatcher parameters, including listeners, from another event\r\n\t * dispatcher.\r\n\t *\r\n\t * @param {this} source Source event dispatcher\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tif (source === this) {\r\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n\t\t}\r\n\r\n\t\t$array.each(source._listeners, (x) => {\r\n\t\t\t// TODO is this correct ?\r\n\t\t\tif (!x.killed && x.shouldClone) {\r\n\t\t\t\tif (x.type === null) {\r\n\t\t\t\t\tthis.onAll(x.callback, x.context);\r\n\r\n\t\t\t\t} else if (x.once) {\r\n\t\t\t\t\tthis.once(x.type, x.callback, x.context);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.on(x.type, x.callback, x.context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @type {[type]}\r\n * @important\r\n */\r\nexport class TargetedEventDispatcher<Target, T> extends EventDispatcher<T> {\r\n\r\n\t/**\r\n\t * A target object which is originating events using this dispatcher.\r\n\t *\r\n\t * @type {Target}\r\n\t */\r\n\tpublic target: Target;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {Target} target Event dispatcher target\r\n\t */\r\n\tconstructor(target: Target) {\r\n\t\tsuper();\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all dispatcher parameters, including listeners, from another event\r\n\t * dispatcher.\r\n\t *\r\n\t * @param {this} source Source event dispatcher\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tif (source === this) {\r\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n\t\t}\r\n\r\n\t\t$array.each(source._listeners, (x) => {\r\n\t\t\t// TODO very hacky\r\n\t\t\tif (x.context === source.target) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// TODO is this correct ?\r\n\t\t\tif (!x.killed && x.shouldClone) {\r\n\t\t\t\tif (x.type === null) {\r\n\t\t\t\t\tthis.onAll(x.callback, x.context);\r\n\r\n\t\t\t\t} else if (x.once) {\r\n\t\t\t\t\tthis.once(x.type, x.callback, x.context);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.on(x.type, x.callback, x.context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/EventDispatcher.ts","/**\r\n * This module contains a base class for an SVG filter.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { registry } from \"../../Registry\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { List } from \"../../utils/List\";\r\nimport { MultiDisposer } from \"../../utils/Disposer\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for a base filter\r\n * @type {string}\r\n */\r\nexport interface FilterProperties {\r\n\r\n\t/**\r\n\t * Width of the filter in pixels.\r\n\t *\r\n\t * @default 120\r\n\t * @type {number}\r\n\t */\r\n\twidth: number;\r\n\r\n\t/**\r\n\t * Height of the filter in pixels.\r\n\t *\r\n\t * @default 120\r\n\t * @type {number}\r\n\t */\r\n\theight: number;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base filter class.\r\n *\r\n * This class while can be instantiated will not do anything. It is just a base\r\n * functionality for any other \"real\" filters to extend.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n *\r\n * @todo Example\r\n */\r\nexport class Filter extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * List of animations currently running for the filter.\r\n\t *\r\n\t * @type {Optional<Array<Animation>>}\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * Contains a list of filter primitives (effects) applied by the filter.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<AMElement>}\r\n\t */\r\n\tpublic filterPrimitives: List<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {FilterProperties}\r\n\t */\r\n\tpublic _properties!: FilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link FilterProperties}\r\n\t * @type {FilterProperties}\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = <any>{};\r\n\t//public propertyValues = new Dictionary<FilterProperties, any>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element hold primitive (effect) definitions.\r\n\t *\r\n\t * @type {Optional<Group>}\r\n\t */\r\n\tpublic filterElement: $type.Optional<Group>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * A Paper instance to add element to.\r\n\t *\r\n\t * @type {Paper}\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * [_scale description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _scale: number = 1;\r\n\r\n\t/**\r\n\t * [_nonScaling description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _nonScaling: boolean = true;\r\n\r\n\t/**\r\n\t * A target element this filter is currently attached to.\r\n\t *\r\n\t * We need to keep track of it because one filter can be used for just one\r\n\t * element, so we have to remove it from the old \"parent\" when attaching to\r\n\t * the new one.\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Filter\";\r\n\r\n\t\t// Create a list to hold primitives (effect elements)\r\n\t\tthis.filterPrimitives = new List<any>();\r\n\r\n\t\t// Automatically add added primitives to `_disposers` so they are discarded\r\n\t\t// when Filter object is destroyed (disposed)\r\n\t\tthis.filterPrimitives.events.on(\"inserted\", (ev) => {\r\n\t\t\tthis._disposers.push(ev.newValue);\r\n\t\t});\r\n\r\n\t\t// Set default dimensions\r\n\t\tthis.width = 120;\r\n\t\tthis.height = 120;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Appends actual filter elements to the filter group.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Group} filterElement An SVG `<group>` element to add filter element to\r\n\t */\r\n\tpublic appendPrimitives(filterElement: Group): void {\r\n\t\t$iter.each(this.filterPrimitives.iterator(), (filterPrimitive) => {\r\n\t\t\tfilterElement.add(filterPrimitive);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Uses Transitions filter's values from current to target. This is used to\r\n\t * smoothly appear filter, rather than it pop into effect.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options\r\n\t * @param  {number}                                   duration          Duration in milliseconds\r\n\t * @param  {(number) => number}                       easing            Easing function\r\n\t * @return {Animation}                                                  Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\tlet animation: Animation = new Animation(this, animationOptions, duration, easing).start();\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the filter element in pixels.\r\n\t *\r\n\t * @default 120\r\n\t * @param {number} value Width (px)\r\n\t */\r\n\tpublic set width(value: number) {\r\n\t\tthis.properties[\"width\"] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get width(): number {\r\n\t\treturn this.properties[\"width\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the filter element in pixels.\r\n\t *\r\n\t * @default 120\r\n\t * @param {number} value Height (px)\r\n\t */\r\n\tpublic set height(value: number) {\r\n\t\tthis.properties[\"height\"] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Height\r\n\t */\r\n\tpublic get height(): number {\r\n\t\treturn this.properties[\"height\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from another [[Filter]] object.\r\n\t *\r\n\t * @param {Filter} filter Source [[Filter]] object\r\n\t */\r\n\tpublic copyFrom(filter: this): void {\r\n\t\tsuper.copyFrom(filter);\r\n\t\t$object.each(filter.properties, (key, value) => {\r\n\t\t\t(<any>this)[key] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to create filter's elements in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * All animations currently in play.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Array<Animation>} List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * [[Sprite]] uses this method to inform filter about it's scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tthis._scale = value;\r\n\t\tthis.updateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates filter properties which depend on scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateScale() {\r\n\t\t// Dummy method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * If a filter is non scaling, it will look the same even if the sprite is\r\n\t * scaled, otherwise filter will scale together with a [[Sprite]].\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Non scaling?\r\n\t */\r\n\tpublic set nonScaling(value: boolean) {\r\n\t\tthis._nonScaling = value;\r\n\t\tif (!value) {\r\n\t\t\tthis._scale = 1;\r\n\t\t}\r\n\t\tthis.updateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Non scaling?\r\n\t */\r\n\tpublic get nonScaling(): boolean {\r\n\t\treturn this._nonScaling;\r\n\t}\r\n\r\n\t/**\r\n\t * A target element this filter is currently attached to.\r\n\t *\r\n\t * We need to keep track of it because one filter can be used for just one\r\n\t * element, so we have to remove it from the old \"parent\" when attaching to\r\n\t * the new one.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  value  Target element\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis.setSprite(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.filters.removeValue(this);\r\n\t\t}\r\n\t\tthis._sprite = value;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/Filter.ts","/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport en from \"../../../lang/en\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[Language]].\r\n */\r\nexport interface ILanguageEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when locale is changed by user.\r\n\t */\r\n\tlocalechanged: {\r\n\t\tlocale: ILocale;\r\n\t};\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines properties that exist for the locale.\r\n */\r\nexport interface ILocaleProperties {\r\n\t// number formatter related\r\n\t\"_decimalSeparator\"?: string;\r\n\t\"_thousandSeparator\"?: string;\r\n\r\n\t\"_big_number_suffix_3\"?: string;\r\n\t\"_big_number_suffix_6\"?: string;\r\n\t\"_big_number_suffix_9\"?: string;\r\n\t\"_big_number_suffix_12\"?: string;\r\n\t\"_big_number_suffix_15\"?: string;\r\n\t\"_big_number_suffix_18\"?: string;\r\n\t\"_big_number_suffix_21\"?: string;\r\n\t\"_big_number_suffix_24\"?: string;\r\n\r\n\t\"_small_number_suffix_24\"?: string;\r\n\t\"_small_number_suffix_21\"?: string;\r\n\t\"_small_number_suffix_18\"?: string;\r\n\t\"_small_number_suffix_15\"?: string;\r\n\t\"_small_number_suffix_12\"?: string;\r\n\t\"_small_number_suffix_9\"?: string;\r\n\t\"_small_number_suffix_6\"?: string;\r\n\t\"_small_number_suffix_3\"?: string;\r\n\r\n\t\"_byte_suffix_B\"?: string;\r\n\t\"_byte_suffix_KB\"?: string;\r\n\t\"_byte_suffix_MB\"?: string;\r\n\t\"_byte_suffix_GB\"?: string;\r\n\t\"_byte_suffix_TB\"?: string;\r\n\t\"_byte_suffix_PB\"?: string;\r\n\r\n\t// Default date formats for various periods\r\n\t\"_date_millisecond\"?: string;\r\n\t\"_date_second\"?: string;\r\n\t\"_date_minute\"?: string;\r\n\t\"_date_hour\"?: string;\r\n\t\"_date_day\"?: string;\r\n\t\"_date_week\"?: string;\r\n\t\"_date_month\"?: string;\r\n\t\"_date_year\"?: string;\r\n\r\n\t// Default duration formats for various base units\r\n\t\"_duration_millisecond\"?: string;\r\n\t\"_duration_millisecond_second\"?: string;\r\n\t\"_duration_millisecond_minute\"?: string;\r\n\t\"_duration_millisecond_hour\"?: string;\r\n\t\"_duration_millisecond_day\"?: string;\r\n\t\"_duration_millisecond_week\"?: string;\r\n\t\"_duration_millisecond_month\"?: string;\r\n\t\"_duration_millisecond_year\"?: string;\r\n\r\n\t\"_duration_second\"?: string;\r\n\t\"_duration_second_minute\"?: string;\r\n\t\"_duration_second_hour\"?: string;\r\n\t\"_duration_second_day\"?: string;\r\n\t\"_duration_second_week\"?: string;\r\n\t\"_duration_second_month\"?: string;\r\n\t\"_duration_second_year\"?: string;\r\n\r\n\t\"_duration_minute\"?: string;\r\n\t\"_duration_minute_hour\"?: string;\r\n\t\"_duration_minute_day\"?: string;\r\n\t\"_duration_minute_week\"?: string;\r\n\t\"_duration_minute_month\"?: string;\r\n\t\"_duration_minute_year\"?: string;\r\n\r\n\t\"_duration_hour\"?: string;\r\n\t\"_duration_hour_day\"?: string;\r\n\t\"_duration_hour_week\"?: string;\r\n\t\"_duration_hour_month\"?: string;\r\n\t\"_duration_hour_year\"?: string;\r\n\r\n\t\"_duration_day\"?: string;\r\n\t\"_duration_day_week\"?: string;\r\n\t\"_duration_day_month\"?: string;\r\n\t\"_duration_day_year\"?: string;\r\n\r\n\t\"_duration_week\"?: string;\r\n\t\"_duration_week_month\"?: string;\r\n\t\"_duration_week_year\"?: string;\r\n\r\n\t\"_duration_month\"?: string;\r\n\t\"_duration_month_year\"?: string;\r\n\r\n\t\"_duration_year\"?: string;\r\n\r\n\t// Era\r\n\t\"_era_ad\"?: string;\r\n\t\"_era_bc\"?: string;\r\n\r\n\t// Period\r\n\t\"A\"?: string;\r\n\t\"P\"?: string;\r\n\t\"AM\"?: string;\r\n\t\"PM\"?: string;\r\n\t\"A.M.\"?: string;\r\n\t\"P.M.\"?: string;\r\n\r\n\t// Dates\r\n\t\"January\"?: string;\r\n\t\"February\"?: string;\r\n\t\"March\"?: string;\r\n\t\"April\"?: string;\r\n\t\"May\"?: string;\r\n\t\"June\"?: string;\r\n\t\"July\"?: string;\r\n\t\"August\"?: string;\r\n\t\"September\"?: string;\r\n\t\"October\"?: string;\r\n\t\"November\"?: string;\r\n\t\"December\"?: string;\r\n\t\"Jan\"?: string;\r\n\t\"Feb\"?: string;\r\n\t\"Mar\"?: string;\r\n\t\"Apr\"?: string;\r\n\t\"May(short)\"?: string;\r\n\t\"Jun\"?: string;\r\n\t\"Jul\"?: string;\r\n\t\"Aug\"?: string;\r\n\t\"Sep\"?: string;\r\n\t\"Oct\"?: string;\r\n\t\"Nov\"?: string;\r\n\t\"Dec\"?: string;\r\n\t\"Sunday\"?: string;\r\n\t\"Monday\"?: string;\r\n\t\"Tuesday\"?: string;\r\n\t\"Wednesday\"?: string;\r\n\t\"Thursday\"?: string;\r\n\t\"Friday\"?: string;\r\n\t\"Saturday\"?: string;\r\n\t\"Sun\"?: string;\r\n\t\"Mon\"?: string;\r\n\t\"Tue\"?: string;\r\n\t\"Wed\"?: string;\r\n\t\"Thu\"?: string;\r\n\t\"Fri\"?: string;\r\n\t\"Sat\"?: string;\r\n\r\n\t// Chart elements\r\n\t\"Zoom Out\"?: string;\r\n\t\"Play\"?: string;\r\n\t\"Stop\"?: string;\r\n\t\"Legend\"?: string;\r\n\t\"Click, tap or press ENTER to toggle\"?: string;\r\n\t\"Loading\"?: string;\r\n\r\n\t// Chart types\r\n\t\"Chart\"?: string;\r\n\t\"Serial chart\"?: string;\r\n\t\"X/Y chart\"?: string;\r\n\t\"Pie chart\"?: string;\r\n\t\"Gauge chart\"?: string;\r\n\t\"Radar chart\"?: string;\r\n\t\"Sankey diagram\"?: string;\r\n\t\"Flow diagram\"?: string;\r\n\t\"Chord diagram\"?: string;\r\n\t\"TreeMap chart\"?: string;\r\n\t\"Sliced chart\"?: string;\r\n\r\n\t// Series types\r\n\t\"Series\"?: string;\r\n\t\"Candlestick Series\"?: string;\r\n\t\"OHLC Series\"?: string;\r\n\t\"Column Series\"?: string;\r\n\t\"Line Series\"?: string;\r\n\t\"Pie Slice Series\"?: string;\r\n\t\"Funnel Series\"?: string;\r\n\t\"Pyramid Series\"?: string;\r\n\t\"X/Y Series\"?: string;\r\n\r\n\t// Map-related\r\n\t\"Map\"?: string;\r\n\t\"Press ENTER to zoom in\"?: string;\r\n\t\"Press ENTER to zoom out\"?: string;\r\n\t\"Use arrow keys to zoom in and out\"?: string;\r\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\r\n\t\"Home\"?: string;\r\n\r\n\t// Export-related\r\n\t\"Export\"?: string;\r\n\t\"Image\"?: string;\r\n\t\"Data\"?: string;\r\n\t\"Print\"?: string;\r\n\t\"Click, tap or press ENTER to open\"?: string;\r\n\t\"Click, tap or press ENTER to print.\"?: string;\r\n\t\"Click, tap or press ENTER to export as %1.\"?: string;\r\n\t'To save the image, right-click this link and choose \"Save picture as...\"': string;\r\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': string;\r\n\t\"(Press ESC to close this message)\"?: string;\r\n\t\"Image Export Complete\"?: string;\r\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\r\n\t\"Saved from\"?: string;\r\n\t\"PNG\"?: string;\r\n\t\"JPG\"?: string;\r\n\t\"GIF\"?: string;\r\n\t\"SVG\"?: string;\r\n\t\"PDF\"?: string;\r\n\t\"JSON\"?: string;\r\n\t\"CSV\"?: string;\r\n\t\"XLSX\"?: string;\r\n\r\n\t// Scrollbar-related\r\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\r\n\t\"Use left and right arrows to move selection\"?: string;\r\n\t\"Use left and right arrows to move left selection\"?: string;\r\n\t\"Use left and right arrows to move right selection\"?: string;\r\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\r\n\t\"Use up and down arrows to move selection\"?: string;\r\n\t\"Use up and down arrows to move lower selection\"?: string;\r\n\t\"Use up and down arrows to move upper selection\"?: string;\r\n\t\"From %1 to %2\"?: string;\r\n\t\"From %1\"?: string;\r\n\t\"To %1\"?: string;\r\n\r\n\t// Data loader-related\r\n\t\"No parser available for file: %1\"?: string;\r\n\t\"Error parsing file: %1\"?: string;\r\n\t\"Unable to load file: %1\"?: string;\r\n\t\"Invalid date\"?: string;\r\n}\r\n\r\n/**\r\n * Defines functions that exist for the locale.\r\n */\r\nexport interface ILocaleFunctions {\r\n\t// ordinal function\r\n\t\"_dateOrd\": (day: number) => string;\r\n}\r\n\r\n/**\r\n * Defines all of the defaults for locale properties.\r\n */\r\nexport interface ILocaleDefault extends ILocaleProperties, ILocaleFunctions { }\r\n\r\n/**\r\n * Defines locale interface.\r\n */\r\nexport interface ILocale extends Partial<ILocaleDefault> { };\r\n\r\n/**\r\n * Represents a list of available adapters for Language.\r\n */\r\nexport interface ILanguageAdapters {\r\n\r\n\t/**\r\n\t * Applied to result whenever retrieving currently set locale.\r\n\t */\r\n\tlocale: {\r\n\t\tlocale: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to a translation.\r\n\t */\r\n\ttranslate: {\r\n\t\ttranslation: string,\r\n\t\tlocale?: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to all of the locale translations.\r\n\t */\r\n\ttranslations: {\r\n\t\ttranslations: any,\r\n\t\tlocale?: ILocale\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\r\nexport class Language extends BaseObjectEvents {\r\n\t/**\r\n\t * Defines type used in the Sprite.\r\n\t *\r\n\t * @type {ILanguageAdapters}\r\n\t */\r\n\tpublic _adapter!: ILanguageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILanguageEvents}\r\n\t */\r\n\tpublic _events!: ILanguageEvents;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<this, this[\"_adapter\"]>}\r\n\t */\r\n\tpublic adapter: Adapter<this, this[\"_adapter\"]> = new Adapter(this);\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @type {ILocale}\r\n\t */\r\n\tprotected _locale: ILocale = en;\r\n\r\n\t/**\r\n\t * Default locale. A locale to fall back to if none is specified, or\r\n\t * if there's no translation for the prompt for the current language.\r\n\t *\r\n\t * @type {ILocaleDefault}\r\n\t */\r\n\tprotected _defaultLocale: ILocaleDefault = en;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Language\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns locale that is currently used.\r\n\t *\r\n\t * @param  {ILocale}  locale  Force locale. Will use current language if not set.\r\n\t * @return {string}           Locale\r\n\t */\r\n\tprotected getLocale(locale?: ILocale): ILocale {\r\n\t\tif (locale == null) {\r\n\t\t\tlocale = this._locale;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"locale\", {\r\n\t\t\tlocale: locale\r\n\t\t}).locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the translation of the string.\r\n\t *\r\n\t * If the translation is empty, it will return untranslated prompt.\r\n\t *\r\n\t * Third parameter and up are strings that can be used to replace \"%X\"\r\n\t * placeholders in prompt.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t * ```JavaScriptScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t *\r\n\t * @param  {Key}            prompt   A string to translate\r\n\t * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  {Array<string>}  ...rest  Parameters to replace in string\r\n\t * @return {string}                  Translation\r\n\t */\r\n\tpublic translate<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Init translation\r\n\t\tlet translation: string = prompt;\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleDefault[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value === null) {\r\n\t\t\tvalue = \"\";\r\n\t\t}\r\n\t\telse if ($type.hasValue(value)) {\r\n\t\t\t// It might be an empty string\r\n\t\t\tif (value) {\r\n\t\t\t\ttranslation = value!;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (locale !== this._defaultLocale) {\r\n\t\t\t// Try to look in default language\r\n\t\t\treturn this.translate(prompt, this._defaultLocale, ...rest);\r\n\t\t}\r\n\r\n\t\t// Replace %1, %2, etc params\r\n\t\tif (rest.length) {\r\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\r\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return the translation\r\n\t\treturn this.adapter.apply(\"translate\", {\r\n\t\t\ttranslation: translation,\r\n\t\t\tlocale: locale\r\n\t\t}).translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates prompt.\r\n\t *\r\n\t * If translation is empty, it will return empty string, which is a different\r\n\t * behavior than that of regular `translate`.\r\n\t *\r\n\t * @param  {Key}            prompt   A string to translate\r\n\t * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  {Array<string>}  ...rest  Parameters to replace in string\r\n\t * @return {string}                  Translation\r\n\t */\r\n\tpublic translateEmpty<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\tlet translation = this.translate(prompt, locale, ...rest);\r\n\t\treturn translation == prompt ? \"\" : translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a function.\r\n\t *\r\n\t * This method will return a function reference, but will not run it. It's\r\n\t * up to the caller script to run the function.\r\n\t *\r\n\t * @param  {Key}                    prompt  A function id to translate\r\n\t * @param  {ILocale}                locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return {ILocaleFunctions[Key]}          A language-specific version of the function\r\n\t * @todo Apply adapter\r\n\t */\r\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleFunctions[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value != null) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Try to look in default language\r\n\t\tif (locale !== this._defaultLocale) {\r\n\t\t\treturn this.translateFunc(prompt, this._defaultLocale);\r\n\t\t}\r\n\r\n\t\t// Fail - return empty function\r\n\t\treturn (): string => {\r\n\t\t\treturn \"\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a list of prompts in one go.\r\n\t *\r\n\t * @param  {Array<Key>}     list    An array of strings to translate\r\n\t * @param  {ILocale}        locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return {Array<string>}          An array of translated strings in the same order as source list\r\n\t */\r\n\tpublic translateAll<Key extends keyof ILocaleProperties>(list: Array<Key>, locale?: ILocale): Array<string> {\r\n\t\t// Translate all items in the list\r\n\t\tif (!this.isDefault()) {\r\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\r\n\r\n\t\t} else {\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the currently selected locale is a default locale.\r\n\t *\r\n\t * @return {boolean} `true` if locale is default; `false` if it is not.\r\n\t */\r\n\tpublic isDefault(): boolean {\r\n\t\treturn this._defaultLocale === this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @param {ILocale}  value  Locale definition (translations)\r\n\t */\r\n\tpublic set locale(value: ILocale) {\r\n\t\tif (this._locale != value) {\r\n\t\t\tthis._locale = value;\r\n\r\n\r\n\t\t\tif (this.events.isEnabled(\"localechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ILanguageEvents>[\"localechanged\"] = {\r\n\t\t\t\t\ttype: \"localechanged\",\r\n\t\t\t\t\tlocale: value,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"localechanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ILocale} Locale definition\r\n\t */\r\n\tpublic get locale(): ILocale {\r\n\t\treturn this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns translations for a given locale.\r\n\t *\r\n\t * @ignore\r\n\t * @deprecated\r\n\t * @param  {ILocale}        locale  Locale\r\n\t * @return {ILocale}        Translations\r\n\t */\r\n\tpublic getTranslations(locale: ILocale): ILocale {\r\n\t\treturn this.adapter.apply(\"translations\", {\r\n\t\t\ttranslations: locale,\r\n\t\t\tlocale: locale\r\n\t\t}).translations;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Language.ts","/**\r\n * Value Axis module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Axis, AxisDataItem, IAxisProperties, IAxisDataFields, IAxisAdapters, IAxisEvents } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { AxisRendererY } from \"./AxisRendererY\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Grid } from \"./Grid\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ValueAxis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ValueAxisDataItem extends AxisDataItem {\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {ValueAxis}\r\n\t */\r\n\tpublic _component!: ValueAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.endValue = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A data point's numeric value.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values[\"value\"].value;\r\n\t}\r\n\r\n\t/**\r\n\t * Data point's numeric end value.\r\n\t *\r\n\t * @param {number}  value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tthis.setValue(\"endValue\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.values[\"endValue\"].value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n *\r\n */\r\nexport interface IMinMaxStep {\r\n\tmin: number;\r\n\tmax: number;\r\n\tstep: number;\r\n}\r\n\r\n/**\r\n * Defines data fields for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisDataFields extends IAxisDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisProperties extends IAxisProperties {\r\n\tstrictMinMax?: boolean;\r\n\tlogarithmic?: boolean;\r\n\tmaxPrecision?: number;\r\n\textraMin?: number;\r\n\textraMax?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxis]].\r\n */\r\nexport interface IValueAxisEvents extends IAxisEvents {\r\n\r\n\t/**\r\n\t * Invoked when selection/zoom on axis occurs and start/end coordinates\r\n\t * change.\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start/end coordinates of the axis change.\r\n\t */\r\n\textremeschanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[ValueAxis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisAdapters extends IAxisAdapters, IValueAxisProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a value axis for the chart.\r\n *\r\n * ```TypeScript\r\n * // Create the axis\r\n * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JavaScript\r\n * // Create the axis\r\n * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n *\r\n * // Set settings\r\n * valueAxis.title.text = \"Monthly Sales\";\r\n * ```\r\n * ```JSON\r\n * \"yAxes\": [{\r\n *   \"type\": \"ValueAxis\",\r\n *   \"title\": {\r\n *     \"text\": \"Monthly Sales\"\r\n *   }\r\n * }]\r\n * ```\r\n *\r\n * @see {@link IValueAxisEvents} for a list of available Events\r\n * @see {@link IValueAxisAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxis<T extends AxisRenderer = AxisRenderer> extends Axis<T> {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t *\r\n\t * @type {IValueAxisDataFields}\r\n\t */\r\n\tpublic _dataFields: IValueAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IValueAxisProperties}\r\n\t */\r\n\tpublic _properties!: IValueAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IValueAxisAdapters}\r\n\t */\r\n\tpublic _adapter!: IValueAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the Date Items.\r\n\t *\r\n\t * @type {ValueAxisDataItem}\r\n\t */\r\n\tpublic _dataItem: ValueAxisDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t *\r\n\t * @type {ValueAxisBreak}\r\n\t */\r\n\tpublic _axisBreak: ValueAxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IValueAxisEvents}\r\n\t */\r\n\tpublic _events!: IValueAxisEvents;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t *\r\n\t * @type {SerialChart}\r\n\t */\r\n\tpublic chart: SerialChart;\r\n\r\n\t/**\r\n\t * A list of Series that are using this Axis.\r\n\t *\r\n\t * @type {List<XYSeries>}\r\n\t */\r\n\tpublic series: List<XYSeries>;\r\n\r\n\t/**\r\n\t * Minimum value for the axis scale.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _min: number;\r\n\r\n\t/**\r\n\t * Maximum value for the axis scale.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _max: number;\r\n\r\n\t/**\r\n\t * User-defined min value for axis.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _minDefined: number;\r\n\r\n\t/**\r\n\t * User-defined max value for axis.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _maxDefined: number;\r\n\r\n\t/**\r\n\t * [_minAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _minAdjusted: number;\r\n\r\n\t/**\r\n\t * [_maxAdjusted description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _maxAdjusted: number;\r\n\r\n\t/**\r\n\t * Min real value. (lowest value of all data points)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _minReal: number;\r\n\r\n\t/**\r\n\t * Max real value. (highest value of all data points)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _maxReal: number;\r\n\r\n\t/**\r\n\t * Min value within current zoom.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _minZoomed: number;\r\n\r\n\t/**\r\n\t * Max value within current zoom.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _maxZoomed: number\r\n\r\n\t/**\r\n\t * [_step description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _step: number;\r\n\r\n\t/**\r\n\t * [_stepDecimalPlaces description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _stepDecimalPlaces: number = 0;\r\n\r\n\t/**\r\n\t * [_difference description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _difference: number;\r\n\r\n\t/**\r\n\t * Base value for the axis.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _baseValue: number = 0;\r\n\r\n\t/**\r\n\t * [_previousValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _previousValue: number;\r\n\r\n\t/**\r\n\t * [_previousPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {IPoint}\r\n\t */\r\n\tprotected _previousPoint: IPoint;\r\n\r\n\t/**\r\n\t * Adjusted start in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _adjustedStart: number = 0;\r\n\r\n\t/**\r\n\t * Adjusted end in case we have breaks.\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _adjustedEnd: number = 1;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _valueToPosition: { [key: string]: number } = {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _positionToValue: { [key: string]: number } = {};\r\n\r\n\tprotected _finalMin: number;\r\n\tprotected _finalMax: number;\r\n\r\n\tprotected _extremesChanged: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem as parameter.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tpublic fillRule: (dataItem: ValueAxisDataItem) => any = function(dataItem: ValueAxisDataItem) {\r\n\t\tlet value = dataItem.value;\r\n\t\tlet axis = dataItem.component;\r\n\t\tif (!dataItem.axisFill.disabled) {\r\n\t\t\t// rounding in left to solve floating point number\r\n\t\t\tif ($math.round(value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {\r\n\t\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, we\r\n\t * don't do it by default.\r\n\t *\r\n\t * In case you use `totalPercent` or `total` in your charts, this must be set\r\n\t * to `true`.\r\n\t *\r\n\t * @default false\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic calculateTotals: boolean = false;\r\n\r\n\r\n\tprotected _minMaxAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxis\";\r\n\r\n\t\t// Set field name\r\n\t\tthis.axisFieldName = \"value\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"maxZoomFactor\", 1000);\r\n\t\tthis.setPropertyValue(\"extraMin\", 0);\r\n\t\tthis.setPropertyValue(\"extraMax\", 0);\r\n\t\tthis.setPropertyValue(\"strictMinMax\", false);\r\n\t\tthis.setPropertyValue(\"maxPrecision\", Number.MAX_VALUE);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[DataItem]] of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {ValueAxisDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ValueAxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty [[AxisBreak]] of the appropriate type.\r\n\t *\r\n\t * @return {ValueAxisBreak} Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new ValueAxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates Axis' data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\r\n\t\tthis._positionToValue = {};\r\n\r\n\t\tsuper.validateDataItems();\r\n\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\tthis.getMinMax();\r\n\r\n\t\t// note, not zoomMin and zoomMax, but actual position\r\n\t\tlet minZoomed: number = this.positionToValue(this.start);\r\n\t\tlet maxZoomed: number = this.positionToValue(this.end);\r\n\r\n\t\tif (this.interpolationDuration > 0) {\r\n\t\t\tif ($type.isNumber(minZoomed) && $type.isNumber(maxZoomed)) {\r\n\t\t\t\tthis.zoomToValues(minZoomed, maxZoomed, true, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\t\tthis._start = 0;\r\n\t\tthis._end = 1;\r\n\t\tthis._maxZoomed = this._maxDefined;\r\n\t\tthis._minZoomed = this._minDefined;\r\n\t\tthis._maxAdjusted = this._maxDefined;\r\n\t\tthis._minAdjusted = this._minDefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data items of the related Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\t\t// @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu\r\n\t\tif (this.calculateTotals) {\r\n\t\t\tlet series: XYSeries = this.series.getIndex(0);\r\n\t\t\tlet startIndex: number = series.startIndex;\r\n\r\n\t\t\tif (series.dataItems.length > 0) {\r\n\r\n\t\t\t\tif (startIndex > 0) {\r\n\t\t\t\t\tstartIndex--;\r\n\t\t\t\t}\r\n\t\t\t\tlet endIndex: number = series.endIndex;\r\n\t\t\t\tif (endIndex < series.dataItems.length) {\r\n\t\t\t\t\tendIndex++;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\tfor (var i: number = startIndex; i < endIndex; ++i) {\r\n\t\t\t\t\t// This has to be `var` in order to avoid garbage collection\r\n\t\t\t\t\tvar total: { [index: string]: number } = {};\r\n\r\n\t\t\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\r\n\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\tif (!$type.isNumber(total[key])) {\r\n\t\t\t\t\t\t\t\t\t\ttotal[key] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttotal[key] += value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\t\t\tlet dataItem: XYSeriesDataItem = series.dataItems.getIndex(i);\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\t\t\tlet value: number = dataItem.values[key].workingValue; // can not use getWorkingValue here!\r\n\t\t\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, total[key], \"total\");\r\n\t\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 100 * value / total[key], \"totalPercent\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the data range.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\t\tsuper.validateDataRange();\r\n\r\n\t\t// not using default caching for a better performance\r\n\t\tthis._valueToPosition = {};\r\n\t\tthis._positionToValue = {};\r\n\r\n\t\t// it's important to fix axis breaks in the beginning, as positionToValue and adjustDifference depends on breaks values\r\n\t\tthis.fixAxisBreaks();\r\n\r\n\t\t// calculate zoom values\r\n\t\tthis.calculateZoom();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the whole axis. Causes it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif (this.axisLength <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// this is moved to a separate method because it differs in DateAxis\r\n\t\tthis.validateAxisElements();\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.hideUnusedDataItems();\r\n\r\n\t\t// hide too close\r\n\t\t//this.hideTooCloseDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates all positions, related to axis as per current zoom.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic calculateZoom(): void {\r\n\t\tif ($type.isNumber(this.min) && $type.isNumber(this.max)) {\r\n\t\t\tlet min: number = this.positionToValue(this.start);\r\n\t\t\tlet max: number = this.positionToValue(this.end);\r\n\r\n\r\n\t\t\tlet differece: number = this.adjustDifference(min, max);\r\n\t\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);\r\n\r\n\t\t\tmin = minMaxStep.min;\r\n\t\t\tmax = minMaxStep.max;\r\n\r\n\t\t\tthis._adjustedStart = $math.round((min - this.min) / (this.max - this.min), 5);\r\n\t\t\tthis._adjustedEnd = $math.round((max - this.min) / (this.max - this.min), 5);\r\n\r\n\t\t\tthis._step = minMaxStep.step;\r\n\t\t\tthis._stepDecimalPlaces = $utils.decimalPlaces(this._step);\r\n\r\n\t\t\tif (this._minZoomed != min || this._maxZoomed != max) {\r\n\t\t\t\tthis._minZoomed = min;\r\n\t\t\t\tthis._maxZoomed = max;\r\n\t\t\t\tthis.dispatchImmediately(\"selectionextremeschanged\");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._adjustedStart = this.start;\r\n\t\t\tthis._adjustedEnd = this.end;\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t\tfixAxisBreaks() {\r\n\t\t\tlet axisBreaks: List<ValueAxisBreak> = <List<ValueAxisBreak>>this.axisBreaks;\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\r\n\t\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t\tfor (let i: number = 0; i < axisBreaks.length; i++) {\r\n\t\t\t\t\tlet axisBreak: ValueAxisBreak = axisBreaks.get(i);\r\n\t\t\t\t\tlet startValue: number = $math.min(axisBreak.value, axisBreak.endValue);\r\n\t\t\t\t\tlet endValue: number = $math.max(axisBreak.value, axisBreak.endValue);\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// sort by adjustedStartValue\r\n\t\t\t\tthis.axisBreaks.sortByKey(\"adjustedStartValue\");\r\n\r\n\t\t\t\tlet firstAxisBreak: ValueAxisBreak = axisBreaks.get(0);\r\n\t\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t\t// process breaks\r\n\t\t\t\tfor (let i: number = 0; i < this.axisBreaks.length; i++) {\r\n\t\t\t\t\tlet axisBreak: ValueAxisBreak = axisBreaks.get(i);\r\n\r\n\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t// breaks can't overlap\r\n\t\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\t\t// break difference\r\n\t\t\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif / this._step * axisBreak.breakSize);\r\n\r\n\t\t\t\t\t// calculate min, max and step for axis break\r\n\t\t\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount);\r\n\t\t\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t\t\t\tpreviousEndValue = endValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t\t}\r\n\t*/\r\n\r\n\t/**\r\n\t * Validates Axis elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic validateAxisElements(): void {\r\n\t\tif ($type.isNumber(this.max) && $type.isNumber(this.min)) {\r\n\t\t\t// first regular items\r\n\t\t\tlet value: number = this.minZoomed - this._step * 2;\r\n\r\n\t\t\tif (!this.logarithmic) {\r\n\t\t\t\tvalue = Math.floor(value / this._step) * this._step;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = Math.floor(this.minZoomed / this._step) * this._step;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet maxZoomed = this._maxZoomed + this._step;\r\n\r\n\t\t\tthis.resetIterators();\r\n\r\n\t\t\tlet dataItemsIterator = this._dataItemsIterator;\r\n\r\n\t\t\tlet i: number = 0;\r\n\t\t\twhile (value <= maxZoomed) {\r\n\t\t\t\tlet axisBreak: ValueAxisBreak = <ValueAxisBreak>this.isInBreak(value);\r\n\r\n\t\t\t\tif (!axisBreak) {\r\n\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === value);\r\n\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\tdataItem.axisBreak = undefined;\r\n\t\t\t\t\tif (dataItem.value != value) {\r\n\t\t\t\t\t\tdataItem.value = value;\r\n\r\n\t\t\t\t\t\tdataItem.text = this.formatLabel(value);\r\n\t\t\t\t\t\tif (dataItem.label.invalid) {\r\n\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.label.measuredWidth > this.ghostLabel.measuredWidth || dataItem.label.measuredHeight > this.ghostLabel.measuredHeight) {\r\n\t\t\t\t\t\t\tthis.ghostLabel.text = dataItem.label.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;\r\n\t\t\t\t\tif (differencePower > 1) {\r\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue += this._step;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet axisBreaks = this.axisBreaks;\r\n\r\n\t\t\t// breaks later\r\n\t\t\tlet renderer: AxisRenderer = this.renderer;\r\n\r\n\t\t\t$iter.each(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tif (axisBreak.breakSize > 0) {\r\n\t\t\t\t\t// only add grid if gap is bigger then minGridDistance\r\n\t\t\t\t\tif ($math.getDistance(axisBreak.startPoint, axisBreak.endPoint) > renderer.minGridDistance) {\r\n\t\t\t\t\t\tlet breakValue: number = axisBreak.adjustedMin;\r\n\r\n\t\t\t\t\t\twhile (breakValue <= axisBreak.adjustedMax) {\r\n\t\t\t\t\t\t\tif (breakValue >= axisBreak.adjustedStartValue && breakValue <= axisBreak.adjustedEndValue) {\r\n\t\t\t\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = dataItemsIterator.find((x) => x.value === breakValue);\r\n\t\t\t\t\t\t\t\t//this.processDataItem(dataItem);\r\n\t\t\t\t\t\t\t\tthis.appendDataItem(dataItem);\r\n\t\t\t\t\t\t\t\tdataItem.axisBreak = axisBreak;\r\n\t\t\t\t\t\t\t\tif (dataItem.value != breakValue) {\r\n\t\t\t\t\t\t\t\t\tdataItem.value = breakValue;\r\n\t\t\t\t\t\t\t\t\tdataItem.text = this.formatLabel(breakValue);\r\n\t\t\t\t\t\t\t\t\tif (dataItem.label.invalid) {\r\n\t\t\t\t\t\t\t\t\t\tdataItem.label.validate();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreakValue += axisBreak.adjustedStep;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates axis data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param {ValueAxisDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t//dataItem.__disabled = false;\r\n\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tlet value: number = dataItem.value;\r\n\t\tlet endValue: number = dataItem.endValue;\r\n\r\n\t\tlet position: number = this.valueToPosition(value);\r\n\t\tdataItem.position = position;\r\n\r\n\t\tlet endPosition: number = position;\r\n\t\tlet fillEndPosition: number = this.valueToPosition(value + this._step);\r\n\r\n\t\tif ($type.isNumber(endValue)) {\r\n\t\t\tendPosition = this.valueToPosition(endValue);\r\n\t\t\tfillEndPosition = endPosition;\r\n\t\t}\r\n\r\n\t\t// this point is needed to calculate distance to satisfy minGridDistance\r\n\t\tdataItem.point = renderer.positionToPoint(position);\r\n\r\n\t\tlet tick: AxisTick = dataItem.tick;\r\n\t\tif (tick && !tick.disabled) {\r\n\t\t\trenderer.updateTickElement(tick, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet grid: Grid = dataItem.grid;\r\n\t\tif (grid && !grid.disabled) {\r\n\t\t\trenderer.updateGridElement(grid, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet label: AxisLabel = dataItem.label;\r\n\t\tif (label && !label.disabled) {\r\n\t\t\trenderer.updateLabelElement(label, position, endPosition);\r\n\t\t}\r\n\r\n\t\tlet fill: AxisFill = dataItem.axisFill;\r\n\t\tif (fill && !fill.disabled) {\r\n\t\t\trenderer.updateFillElement(fill, position, fillEndPosition);\r\n\t\t\tif (!dataItem.isRange) {\r\n\t\t\t\tthis.fillRule(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet mask: AxisFill = dataItem.mask;\r\n\t\tif (mask) {\r\n\t\t\trenderer.updateFillElement(mask, position, fillEndPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the value according to axis' own [[NumberFormatter]].\r\n\t *\r\n\t * @param  {number}  value  Source value\r\n\t * @return {string}         Formatted value\r\n\t */\r\n\tpublic formatLabel(value: number): string {\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {IPoint} Base point\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\tlet baseValue: number = this._baseValue;\r\n\t\tlet position: number = this.valueToPosition(baseValue);\r\n\t\tlet basePoint: IPoint = this.renderer.positionToPoint(position);\r\n\t\treturn basePoint;\r\n\t}\r\n\r\n\t/**\r\n\t * A base value.\r\n\t *\r\n\t * This is a threshold value that will divide \"positive\" and \"negative\"\r\n\t * value ranges.\r\n\t *\r\n\t * Other scale-related functionality also depend on base value. E.g. stacks,\r\n\t * value-dependent coloring, etc.\r\n\t *\r\n\t * @param {number} value Base value\r\n\t */\r\n\tpublic set baseValue(value: number) {\r\n\t\tthis._baseValue = value;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} base value\r\n\t */\r\n\tpublic get baseValue(): number {\r\n\t\tif (this.logarithmic) {\r\n\t\t\treturn this.min;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._baseValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis\r\n\t *\r\n\t * An alias to `valueToPosition()`.\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {number}         Position\r\n\t */\r\n\tpublic anyToPosition(value: number): number {\r\n\t\treturn this.valueToPosition(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation point (x, y, angle) on axis\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {IOrientationPoint}  Orientation point\r\n\t */\r\n\tpublic valueToPoint(value: number): IOrientationPoint {\r\n\t\tlet position = this.valueToPosition(value);\r\n\t\tlet point = this.renderer.positionToPoint(position);\r\n\t\tlet angle = this.renderer.positionToAngle(position);\r\n\t\treturn { x: point.x, y: point.y, angle: angle };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a numeric value to orientation (x, y, angle) point on axis\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {IOrientationPoint}  Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: number): IOrientationPoint {\r\n\t\treturn this.valueToPoint(value);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a numeric value to relative position on axis.\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {number}  relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\t//let strValue: string = value.toString();\r\n\t\t\t//let cachedPosition: number = this._valueToPosition[strValue];\r\n\r\n\t\t\t//if ($type.isNumber(cachedPosition)) {\r\n\t\t\t//\t\t\t\treturn cachedPosition;\r\n\t\t\t//\t\t\t}\r\n\t\t\t//\t\t\telse {\r\n\t\t\t// todo: think if possible to take previous value and do not go through all previous breaks\r\n\t\t\tlet min: number = this.min;\r\n\t\t\tlet max: number = this.max;\r\n\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\t\t\t\tlet difference: number = this._difference;\r\n\t\t\t\tif (!$type.isNumber(difference)) {\r\n\t\t\t\t\tdifference = this.adjustDifference(min, max);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet axisBreaks = this.axisBreaks;\r\n\t\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\r\n\t\t\t\t\t\t\tif (value < startValue) {\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($math.intersect({ start: startValue, end: endValue }, { start: min, end: max })) { // todo: check this once and set some flag in axisBreak\r\n\t\t\t\t\t\t\t\tstartValue = Math.max(startValue, min);\r\n\t\t\t\t\t\t\t\tendValue = Math.min(endValue, max);\r\n\r\n\t\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\t\t// value to the right of break end\r\n\t\t\t\t\t\t\t\tif (value > endValue) {\r\n\t\t\t\t\t\t\t\t\tmin += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value to the left of break start\r\n\t\t\t\t\t\t\t\telse if (value < startValue) {\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvalue = startValue + (value - startValue) * breakSize;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position;\r\n\r\n\t\t\t\tif (!this.logarithmic) {\r\n\t\t\t\t\tposition = (value - min) / difference;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tposition = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tposition = $math.round(position, 5);\r\n\r\n\t\t\t\t//this._valueToPosition[strValue] = position;\r\n\t\t\t\treturn position;\r\n\t\t\t}\r\n\t\t\t//}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an relative position to a corresponding value within\r\n\t * axis' scale.\r\n\t *\r\n\t * @param  {number}  position  Position (px)\r\n\t * @return {number}            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tposition = $math.round(position, 10);\r\n\t\tlet strPosition: string = position.toString();\r\n\t\t//let cachedValue: number = this._positionToValue[strPosition];\r\n\r\n\t\t//if ($type.isNumber(cachedValue)) {\r\n\t\t//\t\t\treturn cachedValue;\r\n\t\t//\t\t}\r\n\t\t//\t\telse {\r\n\r\n\t\tlet min: number = this.min;\r\n\t\tlet max: number = this.max;\r\n\r\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet difference: number = max - min; //no need to adjust!\r\n\r\n\t\t\tlet axisBreaks = this.axisBreaks;\r\n\r\n\t\t\tlet value: number = null;\r\n\r\n\t\t\t// in case we have some axis breaks\r\n\t\t\tif (axisBreaks.length > 0) {\r\n\t\t\t\t$iter.eachContinue(axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\t\tlet breakStartPosition: number = axisBreak.startPosition;\r\n\t\t\t\t\tlet breakEndPosition: number = axisBreak.endPosition;\r\n\r\n\t\t\t\t\tlet breakStartValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\t\tlet breakEndValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t\tif ($type.isNumber(breakStartValue) && $type.isNumber(breakEndValue)) {\r\n\r\n\t\t\t\t\t\tif (breakStartValue > max) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ($math.intersect({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {\r\n\r\n\t\t\t\t\t\t\tbreakStartValue = $math.max(breakStartValue, min);\r\n\t\t\t\t\t\t\tbreakEndValue = $math.min(breakEndValue, max);\r\n\r\n\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\tdifference -= (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\r\n\t\t\t\t\t\t\t// position to the right of break end\r\n\t\t\t\t\t\t\tif (position > breakEndPosition) {\r\n\t\t\t\t\t\t\t\tmin += (breakEndValue - breakStartValue) * (1 - breakSize);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// position to the left of break start\r\n\t\t\t\t\t\t\telse if (position < breakStartPosition) {\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// value within break\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlet breakPosition: number = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);\r\n\t\t\t\t\t\t\t\tvalue = breakStartValue + breakPosition * (breakEndValue - breakStartValue);\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tvalue = position * difference + min;\r\n\t\t\t}\r\n\r\n\t\t\t//this._positionToValue[strPosition] = value;\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an X coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param  {number}  x  X (px)\r\n\t * @return {number}     Value\r\n\t */\r\n\tpublic xToValue(x: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: x, y: 0 }));\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an Y coordinate to a relative value in axis' scale.\r\n\t *\r\n\t * @param  {number}  y  Y (px)\r\n\t * @return {number}     Value\r\n\t */\r\n\tpublic yToValue(y: number): number {\r\n\t\treturn this.positionToValue(this.pointToPosition({ x: 0, y: y }));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param {IPoint}   point  Coorinates (px)\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\tif (this.renderer instanceof AxisRendererY) {\r\n\t\t\treturn 1 - this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderer.pointToPosition(point);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates smallest and biggest value for the axis scale.\r\n\t *\r\n\t * @todo Description (review)\r\n\t */\r\n\tprotected getMinMax() {\r\n\r\n\t\tthis.updateGridCount();\r\n\r\n\t\tlet min: number = Number.POSITIVE_INFINITY;\r\n\t\tlet max: number = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t// only if min and max are not set from outside, we go through min and max influencers\r\n\t\tif (!$type.isNumber(this._minDefined) || !$type.isNumber(this._maxDefined)) {\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.ignoreMinMax) {\r\n\t\t\t\t\t// check min\r\n\t\t\t\t\tlet seriesMin: number = series.min(this);\r\n\t\t\t\t\tif ($type.isNumber(seriesMin) && (seriesMin < min)) {\r\n\t\t\t\t\t\tmin = seriesMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// check max\r\n\t\t\t\t\tlet seriesMax: number = series.max(this);\r\n\r\n\t\t\t\t\tif ($type.isNumber(seriesMax) && (seriesMax > max)) {\r\n\t\t\t\t\t\tmax = seriesMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.logarithmic) {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\tthrow Error(\"Logarithmic value axis can not have vales <= 0.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (min == 0 && max == 0) {\r\n\t\t\tmax = 0.9;\r\n\t\t\tmin = -0.9;\r\n\t\t}\r\n\r\n\t\t// if defined from outside\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(min) || !$type.isNumber(max)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._minReal = min;\r\n\t\tthis._maxReal = max;\r\n\r\n\t\tif (min == Number.POSITIVE_INFINITY) {\r\n\t\t\tmin = undefined;\r\n\t\t}\r\n\t\tif (max == Number.NEGATIVE_INFINITY) {\r\n\t\t\tmax = undefined;\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(min, max); // previously it was max-min, but not worked well\r\n\r\n\t\tmin = this.fixMin(min);\r\n\t\tmax = this.fixMax(max);\r\n\r\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\r\n\t\tif (min == max) {\r\n\t\t\tmin -= 1;\r\n\t\t\tmax += 1;\r\n\t\t}\r\n\r\n\t\tmin -= (max - min) * this.extraMin;\r\n\t\tmax += (max - min) * this.extraMax;\r\n\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, this.strictMinMax);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\tdif = max - min;  //new\r\n\r\n\t\t// do it for the second time (importat!)\r\n\t\tminMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);\r\n\r\n\t\tmin = minMaxStep.min;\r\n\t\tmax = minMaxStep.max;\r\n\r\n\t\t// return min max if strict\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\t\tmin = this._minDefined;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\t\tmax = this._maxDefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// checking isNumber is good when all series are hidden\r\n\t\tif ((this._minAdjusted != min || this._maxAdjusted != max) && $type.isNumber(min) && $type.isNumber(max)) {\r\n\r\n\t\t\tlet animation = this._minMaxAnimation;\r\n\r\n\t\t\tif (this._extremesChanged && $type.isNumber(this._minAdjusted) && $type.isNumber(this._maxAdjusted) && this.inited) {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tanimation = this.animate([{ property: \"_minAdjusted\", from: this._minAdjusted, to: min }, { property: \"_maxAdjusted\", from: this._maxAdjusted, to: max }], this.rangeChangeDuration);\r\n\r\n\t\t\t\t\tanimation.events.on(\"animationprogress\", this.validateDataItems, this);\r\n\r\n\t\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tthis._minMaxAnimation = animation;\r\n\r\n\t\t\t\t\tthis.validateDataItems();\r\n\t\t\t\t\tthis.handleSelectionExtremesChange();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._minAdjusted = min;\r\n\t\t\t\t\tthis._maxAdjusted = max;\r\n\r\n\t\t\t\t\tthis._finalMin = min;\r\n\t\t\t\t\tthis._finalMax = max;\r\n\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\tthis.dispatchImmediately(\"extremeschanged\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._extremesChanged = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the minimum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {number}         Adjusted value\r\n\t */\r\n\tprotected fixMin(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the maximum value.\r\n\t *\r\n\t * This is a placeholder method for extending classes to override.\r\n\t *\r\n\t * For numeric values this does nothing, however for more complex types, like\r\n\t * dates, it may be necessary to adjust.\r\n\t *\r\n\t * @param  {number}  value  Value\r\n\t * @return {number}         Adjusted value\r\n\t */\r\n\tprotected fixMax(value: number): number {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts actual min and max scale values so that the axis starts and ends\r\n\t * at \"nice\" values, unless `strictMinMax` is set.\r\n\t *\r\n\t * The `difference` can be something else than `max - min`, because of the\r\n\t * axis breaks.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}      min        [description]\r\n\t * @param  {number}      max        [description]\r\n\t * @param  {number}      difference [description]\r\n\t * @param  {number}      gridCount  [description]\r\n\t * @param  {boolean}     strictMode [description]\r\n\t * @return {IMinMaxStep}            [description]\r\n\t */\r\n\tpublic adjustMinMax(min: number, max: number, difference: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\r\n\r\n\t\t// will fail if 0\r\n\t\tif (gridCount <= 1) {\r\n\t\t\tgridCount = 1;\r\n\t\t}\r\n\r\n\t\tgridCount = Math.round(gridCount);\r\n\r\n\t\tlet initialMin: number = min;\r\n\t\tlet initialMax: number = max;\r\n\r\n\t\t// in case min and max is the same, use max\r\n\t\tif (difference === 0) {\r\n\t\t\tdifference = Math.abs(max);\r\n\t\t}\r\n\r\n\t\t// the number by which we need to raise 10 to get difference\r\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\r\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\r\n\t\tlet power = Math.pow(10, Math.floor(exponent));\r\n\r\n\t\t// reduce this number by 10 times\r\n\t\tpower = power / 10;\r\n\r\n\t\tlet extra: number = power;\r\n\t\tif (strictMode) {\r\n\t\t\textra = 0;\r\n\t\t}\r\n\r\n\t\tif (!this.logarithmic) {\r\n\r\n\t\t\t// round down min\r\n\t\t\tif (strictMode) {\r\n\t\t\t\tmin = Math.floor(min / power) * power;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.ceil(max / power) * power;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\r\n\t\t\t\t// round up max\r\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\r\n\t\t\t}\r\n\r\n\t\t\t// don't let min go below 0 if real min is >= 0\r\n\t\t\tif (min < 0 && initialMin >= 0) {\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\t// don't let max go above 0 if real max is <= 0\r\n\t\t\tif (max > 0 && initialMax <= 0) {\r\n\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (min <= 0) {\r\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have vales <= 0.\");\r\n\t\t\t\tmin = this.baseValue;\r\n\t\t\t}\r\n\r\n\t\t\t// @todo: think of a better way or to restrict zooming when no series are selected\r\n\t\t\tif (min == Infinity) {\r\n\t\t\t\tmin = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (max == -Infinity) {\r\n\t\t\t\tmax = 10;\r\n\t\t\t}\r\n\r\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\r\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\r\n\t\t}\r\n\t\t// repeat diff, exponent and power again with rounded values\r\n\t\t//difference = this.adjustDifference(min, max);\r\n\t\t/*\r\n\r\n\t\t\t\tif(min > initialMin){\r\n\t\t\t\t\tmin = initialMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(max < initialMax){\r\n\t\t\t\t\tmax = initialMax;\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n\t\tpower = Math.pow(10, Math.floor(exponent));\r\n\t\tpower = power / 10;\r\n\r\n\t\t// approximate difference between two grid lines\r\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\r\n\r\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n\r\n\t\t// TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution\r\n\t\t// the step should divide by  2, 5, and 10.\r\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\r\n\r\n\t\tif (stepDivisor > 5) {\r\n\t\t\tstepDivisor = 10;\r\n\t\t}\r\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\r\n\t\t\tstepDivisor = 5;\r\n\t\t}\r\n\r\n\t\t// now get real step\r\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n\r\n\t\tif (this.maxPrecision < Number.MAX_VALUE && step != $math.ceil(step, this.maxPrecision)) {\r\n\t\t\tstep = $math.ceil(step, this.maxPrecision);\r\n\t\t}\r\n\r\n\t\tlet decCount: number = 0;\r\n\t\t// in case numbers are smaller than 1\r\n\t\tif (stepPower < 1) {\r\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\r\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n\t\t\t// round step\r\n\t\t\tstep = $math.round(step, decCount);\r\n\t\t}\r\n\t\tif (!this.logarithmic) {\r\n\t\t\t// final min and max\r\n\t\t\tlet minCount = Math.floor(min / step);\r\n\r\n\t\t\tmin = $math.round(step * minCount, decCount);\r\n\r\n\t\t\tlet maxCount: number;\r\n\r\n\t\t\tif (!strictMode) {\r\n\t\t\t\tmaxCount = Math.ceil(max / step);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxCount = Math.floor(max / step);\r\n\t\t\t}\r\n\r\n\t\t\tif (maxCount == minCount) {\r\n\t\t\t\tmaxCount++;\r\n\t\t\t}\r\n\r\n\t\t\tmax = $math.round(step * maxCount, decCount);\r\n\r\n\t\t\tif (max < initialMax) {\r\n\t\t\t\tmax = max + step;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (min > initialMin) {\r\n\t\t\t\tmin = min - step;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { min: min, max: max, step: step };\r\n\t}\r\n\r\n\t/**\r\n\t * A minimum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param {number}  value  Min value\r\n\t */\r\n\tpublic set min(value: number) {\r\n\t\tthis._minDefined = value;\r\n\t\t//this.getMinMax();\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Min value\r\n\t */\r\n\tpublic get min(): number {\r\n\t\tlet min = this._minAdjusted;\r\n\t\tif (!$type.isNumber(min)) {\r\n\t\t\tmin = this._minDefined;\r\n\t\t}\r\n\t\treturn min;\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting minimum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 50 to 200 because\r\n\t * we asked to expand minimum value by 50% (0.5).\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set extraMin(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMin\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} \r\n\t */\r\n\tpublic get extraMin(): number {\r\n\t\treturn this.getPropertyValue(\"extraMin\");\r\n\t}\r\n\r\n\t/**\r\n\t * Allows relatively adjusting maximum value of the axis' scale.\r\n\t *\r\n\t * The value is relative to the actual range of values currently displayed\r\n\t * on the axis.\r\n\t *\r\n\t * E.g.: 0.5 will mean half of the current range. If we have axis displaying\r\n\t * from 100 to 200, we will now have axis displaying from 100 to 250 because\r\n\t * we asked to expand maximum value by 50% (0.5).\r\n\t * \r\n\t * @param {number} \r\n\t */\r\n\tpublic set extraMax(value: number) {\r\n\t\tif (this.setPropertyValue(\"extraMax\", value)) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Min multiplier\r\n\t */\r\n\tpublic get extraMax(): number {\r\n\t\treturn this.getPropertyValue(\"extraMax\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Current calculated delta in values between two adjacent grid lines (step).\r\n\t *\r\n\t * This is a read-only value and cannot be used to set actual step.\r\n\t *\r\n\t * @readonly\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this._step;\r\n\t}\r\n\r\n\t/**\r\n\t * A maximum value for the axis scale.\r\n\t *\r\n\t * This value might be auto-adjusted by the Axis in order to accomodate the\r\n\t * grid nicely, i.e. plot area is divided by grid in nice equal cells.\r\n\t *\r\n\t * The above might be overridden by `strictMinMax` which will force exact\r\n\t * user-defined min and max values to be used for scale.\r\n\t *\r\n\t * @param {number}  value  Max value\r\n\t */\r\n\tpublic set max(value: number) {\r\n\t\tthis._maxDefined = value;\r\n\t\t//this.getMinMax();\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Max value\r\n\t */\r\n\tpublic get max(): number {\r\n\t\tlet max = this._maxAdjusted;\r\n\t\tif (!$type.isNumber(max)) {\r\n\t\t\tmax = this._maxDefined;\r\n\t\t}\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * Used for the Series to register itself as the user of this Axis.\r\n\t *\r\n\t * This will also decorate both the Series and Axis with event handlers, used\r\n\t * to redraw on Axis position/zoom change.\r\n\t *\r\n\t * A disposer for those events is returned, so that they can be disposed\r\n\t * together with Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {XYSeries}   series  Series\r\n\t * @return {IDisposer}          Disposer for events\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\treturn new MultiDisposer([\r\n\t\t\tsuper.registerSeries(series),\r\n\r\n\t\t\tseries.events.on(\"extremeschanged\", this.handleExtremesChange, this, false),\r\n\t\t\tseries.events.on(\"selectionextremeschanged\", this.handleSelectionExtremesChange, this, false),\r\n\r\n\t\t\tthis.events.on(\"datarangechanged\", series.invalidateDataRange, series, false),\r\n\t\t\tthis.events.on(\"extremeschanged\", series.invalidate, series, false)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * Perform tasks after Axis zoom.\r\n\t */\r\n\tprotected handleSelectionExtremesChange(): void {\r\n\t\tlet selectionMin: number;\r\n\t\tlet selectionMax: number;\r\n\r\n\t\tlet allHidden: boolean = true;\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.ignoreMinMax) {\r\n\r\n\t\t\t\tif (series.visible && !series.isHiding) {\r\n\t\t\t\t\tallHidden = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet seriesSelectionMin: number = series.selectionMin(this);\r\n\t\t\t\tlet seriesSelectionMax: number = series.selectionMax(this);\r\n\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMin)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMin) || (seriesSelectionMin < selectionMin)) {\r\n\t\t\t\t\t\tselectionMin = seriesSelectionMin;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check max\r\n\t\t\t\tif ($type.isNumber(seriesSelectionMax)) {\r\n\t\t\t\t\tif (!$type.isNumber(selectionMax) || (seriesSelectionMax > selectionMax)) {\r\n\t\t\t\t\t\tselectionMax = seriesSelectionMax;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tif (!series.appeared) {\r\n\t\t\t\tallHidden = true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif ($type.isNumber(this._minDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMin = this._minDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMin = this.min;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ($type.isNumber(this._maxDefined)) {\r\n\t\t\tif (this.strictMinMax) {\r\n\t\t\t\tselectionMax = this._maxDefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectionMax = this.max;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet dif: number = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tlet minMaxStep: IMinMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);\r\n\t\tselectionMin = $math.fitToRange(minMaxStep.min, this.min, this.max);\r\n\t\tselectionMax = $math.fitToRange(minMaxStep.max, this.min, this.max);\r\n\r\n\t\tselectionMin -= (selectionMax - selectionMin) * this.extraMin;\r\n\t\tselectionMax += (selectionMax - selectionMin) * this.extraMax;\r\n\r\n\t\t// do it for the second time !important\r\n\t\tdif = this.adjustDifference(selectionMin, selectionMax);\r\n\t\tminMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);\r\n\t\tselectionMin = minMaxStep.min;\r\n\t\tselectionMax = minMaxStep.max;\r\n\r\n\t\tif (this.strictMinMax) {\r\n\t\t\tselectionMin = $math.max(selectionMin, this._minDefined);\r\n\t\t\tselectionMax = $math.min(selectionMax, this._maxDefined);\r\n\t\t}\r\n\r\n\t\tlet start: number = this.valueToPosition(selectionMin);\r\n\t\tlet end: number = this.valueToPosition(selectionMax);\r\n\r\n\t\t// in case all series are hidden or hiding, full zoomout\r\n\t\tif (allHidden) {\r\n\t\t\tstart = 0;\r\n\t\t\tend = 1;\r\n\t\t}\r\n\r\n\t\tthis.zoom({ start: start, end: end }, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether to blindly use exact `min` and `max` values set by user\r\n\t * when generating Axis scale.\r\n\t *\r\n\t * If not set, the Axis might slightly adjust those values to accomodate a\r\n\t * better looking grid.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} value Use exact values?\r\n\t */\r\n\tpublic set strictMinMax(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"strictMinMax\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use exact values?\r\n\t */\r\n\tpublic get strictMinMax(): boolean {\r\n\t\treturn this.getPropertyValue(\"strictMinMax\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this axis should use a logarithmic scale.\r\n\t *\r\n\t * Please note that logarithmic axis can **only** accommodate values bigger\r\n\t * than zero.\r\n\t *\r\n\t * Having zero or negative values will result in error and failure of the\r\n\t * whole chart.\r\n\t *\r\n\t * @param {boolean} value Logarithmic scale?\r\n\t */\r\n\tpublic set logarithmic(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"logarithmic\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Logarithmic scale?\r\n\t */\r\n\tpublic get logarithmic(): boolean {\r\n\t\treturn this.getPropertyValue(\"logarithmic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Maximum number of decimals to allow when placing grid lines and labels\r\n\t * on axis.\r\n\t *\r\n\t * Set it to `0` (zero) to force integer-only axis labels.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxPrecision(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxPrecision\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} max precision\r\n\t */\r\n\tpublic get maxPrecision(): number {\r\n\t\treturn this.getPropertyValue(\"maxPrecision\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates axis data items when series extremes change\r\n\t */\r\n\tprotected handleExtremesChange() {\r\n\t\tthis._extremesChanged = true;\r\n\t\tthis.getMinMax();\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tlet min = this.min;\r\n\t\t\tlet max = this.max;\r\n\t\t\tlet text = 0;\r\n\t\t\tif ($type.isNumber(min) && $type.isNumber(max) && min.toString().length > max.toString().length) {\r\n\t\t\t\ttext = min;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttext = max;\r\n\t\t\t}\r\n\r\n\t\t\tthis.ghostLabel.text = this.formatLabel(text);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the X coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem}  dataItem  Data item\r\n\t * @param  {string}            key       Data field to get value from\r\n\t * @param  {number}            location  Location (0-1)\r\n\t * @param  {string}            stackKey  ?\r\n\t * @return {number}                      X coordinate (px)\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueX\";\r\n\t\t}\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.renderer.positionToPoint(this.valueToPosition(value + stack)).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the Y coordinate for series' data item's value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem}  dataItem  Data item\r\n\t * @param  {string}            key       Data field to get value from\r\n\t * @param  {number}            location  Location (0-1)\r\n\t * @param  {string}            stackKey  Stack ID\r\n\t * @return {number}                      Y coordinate (px)\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\r\n\t\tif (!$type.hasValue(stackKey)) {\r\n\t\t\tstackKey = \"valueY\";\r\n\t\t}\r\n\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\r\n\t\t\tif (this.logarithmic) {\r\n\t\t\t\tif (stack > 0) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.renderer.positionToPoint(this.valueToPosition(value + stack)).y;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle for series data item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem}  dataItem  Data item\r\n\t * @param  {string}            key       Data field to get value from\r\n\t * @param  {number}            location  Location (0-1)\r\n\t * @param  {string}            stackKey  Stack ID\r\n\t * @return {number}                      Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\tlet value: number = dataItem.getWorkingValue(key);\r\n\t\tlet stack: number = dataItem.getValue(stackKey, \"stack\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.baseValue;\r\n\t\t}\r\n\r\n\t\treturn this.positionToAngle(this.valueToPosition(value + stack));\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}  start     [description]\r\n\t * @param  {number}  end       [description]\r\n\t * @param  {number}  location  [description]\r\n\t * @return {string}            [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: number, end: number, location?: number): string {\r\n\t\tlet startPosition: number = this.valueToPosition(start);\r\n\t\tlet endPosition: number = this.valueToPosition(end);\r\n\r\n\t\treturn this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to show in a axis tooltip, based on specific position within\r\n\t * axis.\r\n\t *\r\n\t * The label will be formatted as per [[NumberFormatter]] set for the whole\r\n\t * chart, or explicitly for this Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  position  Position (px)\r\n\t * @return {string}            Label (numeric value)\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\tlet value: number = $math.round(this.positionToValue(position), this._stepDecimalPlaces);\r\n\t\treturn this.adapter.apply(\"getTooltipText\", this.tooltip.numberFormatter.format(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms axis to specific values.\r\n\t *\r\n\t * @param {number}   startValue      Start value\r\n\t * @param {number}   endValue        End value\r\n\t * @param {boolean}  skipRangeEvent  Do not invoke events\r\n\t * @param {boolean}  instantly       Do not play zoom animations\r\n\t */\r\n\tpublic zoomToValues(startValue: number, endValue: number, skipRangeEvent?: boolean, instantly?: boolean): void {\r\n\t\tlet start: number = (startValue - this.min) / (this.max - this.min);\r\n\t\tlet end: number = (endValue - this.min) / (this.max - this.min);\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A smallest value in axis scale within current zoom.\r\n\t *\r\n\t * @return {number} Min zoom value\r\n\t */\r\n\tpublic get minZoomed(): number {\r\n\t\treturn $math.max(this.min, this._minZoomed);\r\n\t}\r\n\r\n\t/**\r\n\t * A biggest value in axis scale within current zoom.\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get maxZoomed(): number {\r\n\t\treturn $math.min(this.max, this._maxZoomed);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positioning of Axis breaks after something changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic fixAxisBreaks(): void {\r\n\r\n\t\tsuper.fixAxisBreaks();\r\n\r\n\t\t// process breaks\r\n\t\t$iter.each(this.axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t// break difference\r\n\t\t\tlet axisBreakDif: number = endValue - startValue;\r\n\t\t\tlet axisBreakGridCount: number = Math.ceil(axisBreakDif / this._step * axisBreak.breakSize);\r\n\r\n\t\t\t// calculate min, max and step for axis break\r\n\t\t\tlet breakMinMaxStep = this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount);\r\n\t\t\taxisBreak.adjustedStep = breakMinMaxStep.step;\r\n\t\t\taxisBreak.adjustedMin = breakMinMaxStep.min;\r\n\t\t\taxisBreak.adjustedMax = breakMinMaxStep.max;\r\n\t\t});\r\n\r\n\t\tthis._difference = this.adjustDifference(this.min, this.max);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value based on position.\r\n\t *\r\n\t * @param  {number}  position  Relative position on axis (0-1)\r\n\t * @return {string}            Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\tlet value: number = this.positionToValue(position);\r\n\t\treturn this.numberFormatter.format(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific value\r\n\t *\r\n\t * @param {number} value Value\r\n\t */\r\n\tpublic showTooltipAt(value: number) {\r\n\t\tthis.showTooltipAtPosition(this.valueToPosition(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param {this} source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.min = source.min;\r\n\t\tthis.max = source.max;\r\n\t\tthis.calculateTotals = source.calculateTotals;\r\n\t\tthis._baseValue = source.baseValue;\r\n\t}\r\n\r\n\r\n\t//public disposeData(){\r\n\t// reseting is not good for tree map\r\n\t//\tsuper.disposeData();\r\n\r\n\t//this._minAdjusted = undefined;\r\n\t//this._maxAdjusted = undefined;\r\n\t//this._minZoomed = undefined;\r\n\t//this._maxZoomed = undefined;\r\n\t//}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxis\"] = ValueAxis;\r\nregistry.registeredClasses[\"ValueAxisDataItem\"] = ValueAxisDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/ValueAxis.ts","/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column]].\r\n */\r\nexport interface IColumnProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Column]].\r\n */\r\nexport interface IColumnEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnAdapters extends IContainerAdapters, IColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IColumnProperties}\r\n\t */\r\n\tpublic _properties!: IColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IColumnAdapters}\r\n\t */\r\n\tpublic _adapter!: IColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IColumnEvents}\r\n\t */\r\n\tpublic _events!: IColumnEvents;\r\n\r\n\t/**\r\n\t * column element\r\n\t * @type {RoundedRectangle}\r\n\t */\r\n\tpublic column: RoundedRectangle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realX: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realY: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column\";\r\n\r\n\t\tthis.width = percent(80);\r\n\t\tthis.height = percent(80);\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.createAssets();\r\n\r\n\t\t// otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n\t\tthis.events.on(\"childadded\", this.handleKidAdded, this, false);\r\n\t}\r\n\r\n\tprotected handleKidAdded() {\r\n\t\tif (this.layout == \"none\") {\r\n\t\t\tthis.layout = \"absolute\";\r\n\t\t}\r\n\t}\r\n\r\n\tprotected createAssets() {\r\n\t\tthis.column = this.createChild(RoundedRectangle);\r\n\t\tthis.column.shouldClone = false;\r\n\t\tthis.column.cornerRadius(0, 0, 0, 0);\r\n\t\tthis._disposers.push(this.column);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column) {\r\n\t\t\tthis.column.width = $math.min(this.pixelWidth, this.maxWidth);\r\n\t\t\tthis.column.height = $math.min(this.pixelHeight, this.maxHeight);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param {Sprite} source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.column) {\r\n\t\t\tthis.column.copyFrom(source.column);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IRectangle}\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tif (this.column) {\r\n\t\t\treturn { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/Column.ts","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_meta.js\n// module id = 62\n// module chunks = 302","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_add-to-unscopables.js\n// module id = 63\n// module chunks = 302","/**\r\n * Paper class just like the white sheet of pressed fiber it draws its name\r\n * inspiration from is used as a starting point to start a drawing.\r\n *\r\n * Before we can start adding elements (drawing) we need to take out a new sheet\r\n * of paper, or in this instance create a blank SVG element.\r\n *\r\n * This class creates such element, as well as implements methods needed to\r\n * start adding elements to it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\nimport { Group } from \"./Group\";\r\nimport { SVGContainer } from \"./SVGContainer\";\r\nimport * as $dom from \"../utils/DOM\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents available SVG elements that can be added to paper.\r\n *\r\n * @type {string}\r\n * @todo Review if we can remove commented out methods\r\n */\r\nexport type SVGElementNames = \"a\" | \"altGlyph\" | \"altGlyphDef\" | \"altGlyphItem\" | \"animate\" | \"animateColor\" | \"animateMotion\" | \"animateTransform\" | \"circle\" | \"clipPath\" | \"color-profile\" | \"cursor\" | \"defs\" | \"desc\" | \"ellipse\" | \"feBlend\" | \"feColorMatrix\" | \"feComponentTransfer\" | \"feComposite\" | \"feConvolveMatrix\" | \"feDiffuseLighting\" | \"feDisplacementMap\" | \"feDistantLight\" | \"feFlood\" | \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\" | \"feGaussianBlur\" | \"feImage\" | \"feMerge\" | \"feMergeNode\" | \"feMorphology\" | \"feOffset\" | \"fePointLight\" | \"feSpecularLighting\" | \"feSpotLight\" | \"feTile\" | \"feTurbulence\" | \"feConvolveMatrix\" | \"filter\" | \"font\" | \"font-face\" | \"font-face-format\" | \"font-face-name\" | \"font-face-src\" | \"font-face-uri\" | \"foreignObject\" | \"g\" | \"glyph\" | \"glyphRef\" | \"hkern\" | \"image\" | \"line\" | \"linearGradient\" | \"marker\" | \"mask\" | \"metadata\" | \"missing-glyph\" | \"mpath\" | \"path\" | \"pattern\" | \"polygon\" | \"polyline\" | \"radialGradient\" | \"rect\" | \"script\" | \"set\" | \"stop\" | \"style\" | \"svg\" | \"switch\" | \"symbol\" | \"text\" | \"textPath\" | \"title\" | \"tref\" | \"tspan\" | \"use\" | \"view\" | \"vkern\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Paper class which when instantiated will create an SVG element as well as\r\n * some of the sub-elements like `<desc>`, `<defs>`.\r\n *\r\n * Use its methods like `addGroup` and `append` to add elements to the paper.\r\n */\r\nexport class Paper {\r\n\r\n\t/**\r\n\t * A reference `<svg>` element.\r\n\t *\r\n\t * @type {SVGSVGElement}\r\n\t */\r\n\tpublic svg: SVGSVGElement;\r\n\r\n\t/**\r\n\t * A reference to the HTML container the `<svg>` element is placed in.\r\n\t *\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tpublic container: HTMLElement;\r\n\r\n\t/**\r\n\t * A reference to the `<defs>` element.\r\n\t *\r\n\t * @type {SVGDefsElement}\r\n\t */\r\n\tpublic defs: SVGDefsElement;\r\n\r\n\t/**\r\n\t * An id of the element.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic id: string;\r\n\r\n\t/**\r\n\t * Creates main `<svg>` container and related elements.\r\n\t *\r\n\t * @param {HTMLElement} container A reference to HTML element to create `<svg>` in\r\n\t */\r\n\tconstructor(container: HTMLElement, id: string) {\r\n\r\n\t\t// Store container reference\r\n\t\tthis.container = container;\r\n\t\tthis.id = id;\r\n\r\n\t\t// Create SVG element\r\n\t\tlet svg = <SVGSVGElement>document.createElementNS($dom.SVGNS, \"svg\");\r\n\t\tsvg.setAttribute(\"version\", \"1.1\");\r\n\t\tsvg.setAttributeNS($dom.XMLNS, \"xmlns\", $dom.SVGNS);\r\n\t\tsvg.setAttributeNS($dom.XMLNS, \"xmlns:xlink\", $dom.XLINK);\r\n\t\tsvg.setAttribute(\"role\", \"group\");\r\n\t\tthis.container.appendChild(svg);\r\n\r\n\t\t// Add description\r\n\t\tlet desc: SVGElement = <SVGElement>document.createElementNS($dom.SVGNS, \"desc\");\r\n\t\tdesc.appendChild(document.createTextNode(\"JavaScript chart by amCharts\"));\r\n\t\tsvg.appendChild(desc);\r\n\r\n\t\t// Add defs\r\n\t\tthis.defs = <SVGDefsElement>document.createElementNS($dom.SVGNS, \"defs\");\r\n\t\tsvg.appendChild(this.defs);\r\n\r\n\t\t// Set width and height to fit container\r\n\t\tsvg.style.width = \"100%\";\r\n\t\tsvg.style.height = \"100%\";\r\n\t\tsvg.style.overflow = \"visible\";\r\n\r\n\t\t// Store variable\r\n\t\tthis.svg = svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new element. Does not attach it to Paper yet.\r\n\t *\r\n\t * @param  {SVGElementNames}  elementName  Element name\r\n\t * @return {AMElement}                     New element\r\n\t */\r\n\tpublic add(elementName: SVGElementNames): AMElement {\r\n\t\treturn new AMElement(elementName);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Group element. Does not attach it to Paper.\r\n\t *\r\n\t * @param  {SVGElementNames}  groupName  Element name\r\n\t * @return {Group}                       New Group\r\n\t */\r\n\tpublic addGroup(groupName: SVGElementNames): Group {\r\n\t\treturn new Group(groupName);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an element to Paper.\r\n\t *\r\n\t * @param {AMElement} element Element to append\r\n\t */\r\n\tpublic append(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tthis.svg.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an element to `<defs>` block of the Paper.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic appendDef(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tthis.defs.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns new `<foreignObject>` element. Does not append it to\r\n\t * Paper.\r\n\t *\r\n\t * @return {AMElement} A foreignObject element\r\n\t */\r\n\tpublic foreignObject(): AMElement {\r\n\t\tlet element = new AMElement(\"foreignObject\");\r\n\t\t//this.append(element);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if browser supports `<foreignObject>` elements.\r\n\t *\r\n\t * @return {boolean} Supports `foreignObject`?\r\n\t */\r\n\tpublic supportsForeignObject(): boolean {\r\n\t\treturn document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Extensibility\", \"1.1\");\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet ghostPaper: Paper | null = null;\r\n\r\n/**\r\n * A [[Paper]] instance to create elements, that are not yet ready to be\r\n * placed in visible DOM.\r\n *\r\n * @ignore Exclude from docs\r\n * @type {Paper}\r\n */\r\nexport function getGhostPaper(): Paper {\r\n\tif (ghostPaper === null) {\r\n\t\t// ghost is used to draw elements while real paper is not yet created or Sprite doesn't know parent yet\r\n\t\tlet ghostDiv: HTMLDivElement = document.createElement(\"div\");\r\n\t\tghostDiv.hidden = true;\r\n\t\tdocument.body.appendChild(ghostDiv);\r\n\t\tlet ghostSvgContainer = new SVGContainer(ghostDiv);\r\n\t\tghostPaper = new Paper(ghostSvgContainer.SVGContainer, \"ghost\");\r\n\t}\r\n\r\n\treturn ghostPaper;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/Paper.ts","/**\r\n * A collection of String-based constants.\r\n * @hidden\r\n * @ignore Exclude from docs\r\n */\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let PX: string = \"px\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let STRING: string = \"string\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let NUMBER: string = \"number\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let DATE: string = \"date\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let DURATION: string = \"duration\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let PLACEHOLDER: string = \"__§§§__\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @type {string}\r\n */\r\nexport let PLACEHOLDER2: string = \"__§§§§__\";\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Strings.ts","/**\r\n * Contains code and logic for generating linear gradients.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an object describing color switching point in a gradiend.\r\n */\r\nexport interface IGradientStop {\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcolor: Color;\r\n\r\n\t/**\r\n\t * Offset defines where in the gradient the color should kick in. Values\r\n\t * from 0 to 1 are possible with 0 meaning start, 0.5 half-way through the\r\n\t * gradient, etc.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\toffset?: number;\r\n\r\n\t/**\r\n\t * Transparency of the color. 0 - completely transparent, 1 - fully opaque.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\topacity?: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Linear gradient class.\r\n */\r\nexport class LinearGradient extends BaseObject {\r\n\r\n\t/**\r\n\t * List of colors switch definitions in a gradient.\r\n\t *\r\n\t * @type {List<IGradientStop>}\r\n\t */\r\n\tprotected _stops: List<IGradientStop> = new List<IGradientStop>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element used to draw gradient.\r\n\t *\r\n\t * @type {Group}\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to Paper to add element to.\r\n\t *\r\n\t * @type {Paper}\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * Gradient direction.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _rotation: number = 0;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"LinearGradient\";\r\n\r\n\t\tthis._stops.events.on(\"setIndex\", this.validate, this);\r\n\t\tthis._stops.events.on(\"inserted\", this.validate, this);\r\n\t\t// Create element\r\n\t\tthis.element = this.paper.addGroup(\"linearGradient\");\r\n\t\tthis.id = \"gradient-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet rotation = (this._rotation + 90) * $math.RADIANS;\r\n\r\n\t\tlet x1: string = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\r\n\t\tlet y1: string = Math.round(50 + Math.cos(rotation) * 50) + '%';\r\n\r\n\t\tlet x2: string = Math.round(50 + Math.sin(rotation) * 50) + '%';\r\n\t\tlet y2: string = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\r\n\r\n\r\n\t\tlet gradientElement: Group = this.element;\r\n\t\tgradientElement.removeChildNodes();\r\n\t\tgradientElement.attr({\"x1\": x1, \"x2\":x2, \"y1\": y1, \"y2\":y2});\r\n\r\n\t\t$iter.each($iter.indexed(this._stops.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet stop = a[1];\r\n\t\t\tlet offset: $type.Optional<number> = stop.offset;\r\n\r\n\t\t\tif (!$type.isNumber(offset)) {\r\n\t\t\t\toffset = i / (this._stops.length - 1)\r\n\t\t\t}\r\n\r\n\t\t\tlet gradientStop: AMElement = this.paper.add(\"stop\");\r\n\t\t\tgradientStop.attr({ \"stop-color\": stop.color });\r\n\t\t\tif ($type.isNumber(stop.opacity)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(offset)) {\r\n\t\t\t\tgradientStop.attr({ \"offset\": offset });\r\n\t\t\t}\r\n\r\n\t\t\tgradientElement.add(gradientStop);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._stops.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a color step to the gradient.\r\n\t *\r\n\t * @param {Color}   color    Color (hex code or named color)\r\n\t * @param {number}  opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n\t * @param {number}  offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n\t */\r\n\tpublic addColor(color: Color, opacity?: number, offset?: number): void {\r\n\t\tthis._stops.push({ color: color, opacity: opacity, offset: offset });\r\n\t}\r\n\r\n\t/**\r\n\t * A list of color stops in the gradient.\r\n\t *\r\n\t * @return {List<IGradientStop>} Stops\r\n\t */\r\n\tpublic get stops(): List<IGradientStop> {\r\n\t\treturn this._stops;\r\n\t}\r\n\r\n\t/**\r\n\t * [[Paper]] instace to use for the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.validate();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation (direction) of the gradient in degrees.\r\n\t *\r\n\t * @param {number}  value  Rotation\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\t//this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\r\n\t\tthis._rotation = value;\r\n\t\tthis.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\r\n\tpublic copyFrom(source:this){\r\n\t\tsuper.copyFrom(source);\r\n\t\t\r\n\t\tthis.stops.copyFrom(source.stops);\r\n\r\n\t\tthis._rotation = source.rotation;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/LinearGradient.ts","/**\r\n * Mouse-related functionality\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IStyleProperty } from \"../defs/IStyleProperty\";\r\n\r\n/**\r\n * Defines static methods that hold style list for various mouse cursor styles,\r\n * maintaining browser compatibility.\r\n */\r\nexport class MouseCursorStyle {\r\n\r\n\t/**\r\n\t * Styles for \"grab\" mouse cursor.\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic grab: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"move\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"grab\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-moz-grab\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-webkit-grab\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"grabbing\" mouse cursor.\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic grabbing: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"move\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"grabbing\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-moz-grabbing\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-webkit-grabbing\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"pointer\" mouse cursor. (usually used for links)\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic pointer: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"pointer\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for default mouse cursor. (browser determines style)\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic default: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"default\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for horizontal bi-directional resize mouse cursor.\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic horizontalResize: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"ew-resize\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for vertical bi-directional mouse cursor.\r\n\t * \r\n\t * @type {Array<IStyleProperty>}\r\n\t */\r\n\tstatic verticalResize: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"ns-resize\"\r\n\t}];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/Mouse.ts","/**\r\n * Line drawing functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\nimport { IPoint, IOrientationPoint } from \"../defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Line]].\r\n */\r\nexport interface ILineProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * X coordinate of first end.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tx1?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of first end.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ty1?: number;\r\n\r\n\t/**\r\n\t * X coordinate of second end.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tx2?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of second end.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ty2?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Line]].\r\n */\r\nexport interface ILineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Line]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineAdapters extends ISpriteAdapters, ILineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link ILineEvents} for a list of available events\r\n * @see {@link ILineAdapters} for a list of available Adapters\r\n */\r\nexport class Line extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ILineProperties}\r\n\t */\r\n\tpublic _properties!: ILineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ILineAdapters}\r\n\t */\r\n\tpublic _adapter!: ILineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILineEvents}\r\n\t */\r\n\tpublic _events!: ILineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Line\";\r\n\t\tthis.element = this.paper.add(\"line\");\r\n\t\tthis.fill = color(); //\"none\";\r\n\r\n\t\tthis.x1 = 0;\r\n\t\tthis.y1 = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.x1 == this.x2 || this.y1 == this.y2) {\r\n\t\t\tthis.pixelPerfect = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.pixelPerfect = false;\r\n\t\t}\r\n\r\n\t\tthis.x1 = this.x1;\r\n\t\tthis.x2 = this.x2;\r\n\r\n\t\tthis.y1 = this.y1;\r\n\t\tthis.y2 = this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of first end.\r\n\t *\r\n\t * @param {number} value X\r\n\t */\r\n\tpublic set x1(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tlet delta = 0;\r\n\t\tif (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n\t\t\tdelta = 0.00001;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"x1\", value, true);\r\n\t\tthis.element.attr({ \"x1\": value + delta });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} X\r\n\t */\r\n\tpublic get x1(): number {\r\n\t\treturn this.getPropertyValue(\"x1\");\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of second end.\r\n\t *\r\n\t * @param {number} value X\r\n\t */\r\n\tpublic set x2(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"x2\", value, true);\r\n\t\tthis.element.attr({ \"x2\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} X\r\n\t */\r\n\tpublic get x2(): number {\r\n\t\tlet value = this.getPropertyValue(\"x2\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.pixelWidth;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of first end.\r\n\t *\r\n\t * @param {number} value Y\r\n\t */\r\n\tpublic set y1(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\r\n\t\tlet delta = 0;\r\n\t\tif (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n\t\t\tdelta = 0.00001;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"y1\", value, true);\r\n\t\tthis.element.attr({ \"y1\": value + delta });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Y\r\n\t */\r\n\tpublic get y1(): number {\r\n\t\treturn this.getPropertyValue(\"y1\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of second end.\r\n\t *\r\n\t * @param {number} value Y\r\n\t */\r\n\tpublic set y2(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"y2\", value, true);\r\n\t\tthis.element.attr({ \"y2\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Y\r\n\t */\r\n\tpublic get y2(): number {\r\n\t\tlet value = this.getPropertyValue(\"y2\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.pixelHeight;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param  {number}             position  Position (0-1)\r\n\t * @return {IOrientationPoint}            Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tlet point1 = { x: this.x1, y: this.y1 };\r\n\t\tlet point2 = { x: this.x2, y: this.y2 };\r\n\t\tlet point = $math.getMidPoint(point1, point2, position);\r\n\t\tlet angle = $math.getAngle(point1, point2);\r\n\r\n\t\treturn {x:point.x, y:point.y, angle:angle};\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Line\"] = Line;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Line.ts","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { registry } from \"../Registry\";\nimport * as $path from \"./Path\";\nimport * as $array from \"../utils/Array\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $math from \"../utils/Math\";\nimport { IPoint } from \"../defs/IPoint\";\n\n\n/**\n * ============================================================================\n * PATH FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface ISmoothing {\n\tsmooth(points: Array<IPoint>): string;\n}\n\n/**\n * [sign description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @todo Move this someplace else\n * @param {number} x [description]\n */\nfunction sign(x: number): -1 | 1 {\n\treturn x < 0 ? -1 : 1;\n}\n\n/**\n * [slope2 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {number} x0 [description]\n * @param  {number} x1 [description]\n * @param  {number} y0 [description]\n * @param  {number} y1 [description]\n * @param  {number} t  [description]\n * @return {number}    [description]\n */\nfunction slope2(x0: number, x1: number, y0: number, y1: number, t: number): number {\n\tconst h = x1 - x0;\n\treturn h ? (3 * (y1 - y0) / h - t) / 2 : t;\n}\n\n/**\n * [slope3 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {number} x0 [description]\n * @param  {number} x1 [description]\n * @param  {number} y0 [description]\n * @param  {number} y1 [description]\n * @param  {number} x2 [description]\n * @param  {number} y2 [description]\n * @return {number}    [description]\n */\nfunction slope3(x0: number, x1: number, y0: number, y1: number, x2: number, y2: number): number {\n\tconst h0 = x1 - x0;\n\tconst h1 = x2 - x1;\n\tconst s0 = (y1 - y0) / <any>(h0 || h1 < 0 && -0);\n\tconst s1 = (y2 - y1) / <any>(h1 || h0 < 0 && -0);\n\tconst p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\treturn (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class Tension implements ISmoothing {\n\n\t/**\n\t * [_tensionX description]\n\t *\n\t * @todo Description\n\t * @type {number}\n\t */\n\tprivate _tensionX: number;\n\n\t/**\n\t * [_tensionY description]\n\t *\n\t * @todo Description\n\t * @type {number}\n\t */\n\tprivate _tensionY: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param {number} tensionX [description]\n\t * @param {number} tensionY [description]\n\t */\n\tconstructor(tensionX: number, tensionY: number) {\n\t\tthis._tensionX = tensionX;\n\t\tthis._tensionY = tensionY;\n\t}\n\n\t/**\n\t * [smooth description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t * @param  {Array<IPoint>}  points  [description]\n\t * @return {string}                 [description]\n\t */\n\tpublic smooth(points: Array<IPoint>): string {\n\t\tlet tensionX = this._tensionX;\n\t\tlet tensionY = this._tensionY;\n\n\t\tif (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\n\t\t\treturn $path.polyline(points);\n\t\t}\n\n\t\tlet first: IPoint = points[0];\n\t\tlet last: IPoint = points[points.length - 1];\n\n\t\tlet closed: boolean = false;\n\n\t\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\n\t\t\tclosed = true;\n\t\t}\n\n\t\t// Can't moveTo here, as it wont be possible to have fill then.\n\t\tlet path: string = \"\";\n\n\t\tfor (let i = 0, len = points.length - 1; i < len; i++) {\n\t\t\tlet p0: IPoint = points[i - 1];\n\n\t\t\tlet p1: IPoint = points[i];\n\n\t\t\tlet p2: IPoint = points[i + 1];\n\n\t\t\tlet p3: IPoint = points[i + 2];\n\n\t\t\tif (i === 0) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tp0 = points[points.length - 2];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tp0 = points[i];\n\t\t\t\t}\n\t\t\t} else if (i == points.length - 2) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tp3 = points[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tp3 = points[i + 1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet controlPointA: IPoint = $math.getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY);\n\t\t\tlet controlPointB: IPoint = $math.getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY);\n\n\t\t\tpath += $path.cubicCurveTo(p2, controlPointA, controlPointB);\n\t\t}\n\n\t\treturn path;\n\t}\n}\n\n\n/**\n * Returns a waved line SVG path between two points.\n *\n * @ignore Exclude from docs\n * @param  {IPoint}   point1            Starting point\n * @param  {IPoint}   point2            Ending point\n * @param  {number}   waveLength        Wave length\n * @param  {number}   waveHeight        Wave height\n * @param  {boolean}  adjustWaveLength  Adjust wave length based on the actual line length\n * @return {string}                     SVG path\n */\nexport function wavedLine(point1: IPoint, point2: IPoint, waveLength: number, waveHeight: number, tension: number, adjustWaveLength?: boolean): string {\n\n\tlet x1: number = point1.x;\n\tlet y1: number = point1.y;\n\n\tlet x2: number = point2.x;\n\tlet y2: number = point2.y;\n\n\tlet distance: number = $math.getDistance(point1, point2);\n\n\tif (adjustWaveLength) {\n\t\twaveLength = distance / Math.round(distance / waveLength);\n\t}\n\n\tlet d: string = registry.getCache($utils.stringify([\"wavedLine\", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]));\n\tif (!d) {\n\t\tif (distance > 0) {\n\t\t\tlet angle: number = Math.atan2(y2 - y1, x2 - x1);\n\n\t\t\tlet cos: number = Math.cos(angle);\n\t\t\tlet sin: number = Math.sin(angle);\n\n\t\t\tlet waveLengthX: number = waveLength * cos;\n\t\t\tlet waveLengthY: number = waveLength * sin;\n\n\t\t\tif (waveLength <= 1 || waveHeight <= 1) {\n\t\t\t\td = $path.lineTo(point2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet halfWaveCount: number = Math.round(2 * distance / waveLength);\n\n\t\t\t\tlet points: IPoint[] = [];\n\t\t\t\tlet sign: number = 1;\n\n\t\t\t\tif (x2 < x1) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t}\n\n\t\t\t\tif (y2 < y1) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t}\n\n\t\t\t\tfor (let i: number = 0; i <= halfWaveCount; i++) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t\tlet x: number = x1 + i * waveLengthX / 2 + sign * waveHeight / 2 * sin;\n\t\t\t\t\tlet y: number = y1 + i * waveLengthY / 2 - sign * waveHeight / 2 * cos;\n\t\t\t\t\tpoints.push({ x: x, y: y });\n\t\t\t\t}\n\n\t\t\t\td = new Tension(tension, tension).smooth(points);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\td = \"\";\n\t\t}\n\n\t\tregistry.setCache($utils.stringify([\"wavedLine\", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]), d);\n\t}\n\n\treturn d;\n}\n\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class Basis implements ISmoothing {\n\n\t/**\n\t * [_closed description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t * @type {boolean}\n\t */\n\tprivate _closed: boolean;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param {object}  info  [description]\n\t */\n\tconstructor(info: { closed: boolean }) {\n\t\tthis._closed = info.closed;\n\t}\n\n\t/**\n\t * [smooth description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t * @param  {Array<IPoint>}  points  [description]\n\t * @return {string}                 [description]\n\t */\n\tpublic smooth(points: Array<IPoint>): string {\n\t\tlet x0: number = NaN;\n\t\tlet x1: number = NaN;\n\t\tlet x2: number = NaN;\n\t\tlet x3: number = NaN;\n\t\tlet x4: number = NaN;\n\t\tlet y0: number = NaN;\n\t\tlet y1: number = NaN;\n\t\tlet y2: number = NaN;\n\t\tlet y3: number = NaN;\n\t\tlet y4: number = NaN;\n\t\tlet point: number = 0;\n\n\t\tlet output = \"\";\n\n\t\tconst pushCurve = (x: number, y: number): void => {\n\t\t\toutput += $path.cubicCurveTo(\n\t\t\t\t{\n\t\t\t\t\tx: (x0 + 4 * x1 + x) / 6\n\t\t\t\t\t, y: (y0 + 4 * y1 + y) / 6\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tx: (2 * x0 + x1) / 3\n\t\t\t\t\t, y: (2 * y0 + y1) / 3\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tx: (x0 + 2 * x1) / 3\n\t\t\t\t\t, y: (y0 + 2 * y1) / 3\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tconst pushPoint = ({ x, y }: IPoint): void => {\n\t\t\tswitch (point) {\n\t\t\t\tcase 0:\n\t\t\t\t\tpoint = 1;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx2 = x;\n\t\t\t\t\t\ty2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutput += $path.lineTo({ x, y });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tpoint = 2;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx3 = x;\n\t\t\t\t\t\ty3 = y;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tpoint = 3;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx4 = x;\n\t\t\t\t\t\ty4 = y;\n\t\t\t\t\t\toutput += $path.moveTo({ x: (x0 + 4 * x1 + x) / 6, y: (y0 + 4 * y1 + y) / 6 });\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutput += $path.lineTo({ x: (5 * x0 + x1) / 6, y: (5 * y0 + y1) / 6 });\n\t\t\t\t\t\t// fall-through\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tpushCurve(x, y);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tx0 = x1;\n\t\t\tx1 = x;\n\t\t\ty0 = y1;\n\t\t\ty1 = y;\n\t\t};\n\n\t\t$array.each(points, pushPoint);\n\n\t\tif (this._closed) {\n\t\t\tswitch (point) {\n\t\t\t\tcase 1:\n\t\t\t\t\toutput += $path.moveTo({ x: x2, y: y2 });\n\t\t\t\t\toutput += $path.closePath();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\toutput += $path.moveTo({ x: (x2 + 2 * x3) / 3, y: (y2 + 2 * y3) / 3 });\n\t\t\t\t\toutput += $path.lineTo({ x: (x3 + 2 * x2) / 3, y: (y3 + 2 * y2) / 3 });\n\t\t\t\t\toutput += $path.closePath();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tpushPoint({ x: x2, y: y2 });\n\t\t\t\t\tpushPoint({ x: x3, y: y3 });\n\t\t\t\t\tpushPoint({ x: x4, y: y4 });\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t} else {\n\t\t\tswitch (point) {\n\t\t\t\tcase 3:\n\t\t\t\t\tpushCurve(x1, y1);\n\t\t\t\t// fall-through\n\t\t\t\tcase 2:\n\t\t\t\t\toutput += $path.lineTo({ x: x1, y: y1 });\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toutput += $path.closePath();\n\t\t}\n\n\t\treturn output;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/Smoothing.ts","/**\r\n * Defines functionality for \"Data Item\"\r\n *\r\n * A Data Item can be any object that can hold data. For example [[LineSeries]]\r\n * holds a number of values, that comprise a line graph. Each of those values\r\n * (data points) is a {DataItem}.\r\n *\r\n * Furthermore the [[LineSeries]] itself can be represented as a entry in the\r\n * legend. Since legend needs access to Line Series' value, a DataItem is\r\n * created for the series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"./Base\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Component, CalculatedValue } from \"./Component\";\r\nimport { IAnimatable, Animation, IAnimationOptions, IAnimationEvents, AnimationDisposer } from \"./utils/Animation\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { IDisposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n *\r\n * @todo Description\r\n  */\r\nexport interface IValues { }\r\n\r\n/**\r\n * Defines data events for [[DataItem]]\r\n */\r\nexport interface IDataItemEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when the visibility of the Data Item changes, i.e. Series is\r\n\t * hidden\r\n\t */\r\n\tvisibilitychanged: {\r\n\t\tvisible: boolean;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the value is changed\r\n\t */\r\n\tvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the internal/intermediate value has changed\r\n\t */\r\n\tworkingvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the calculated value has changed\r\n\t */\r\n\tcalculatedvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the location of Data Item changes\r\n\t */\r\n\tlocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when working location of Data Item changes\r\n\t */\r\n\tworkinglocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a property of the Data Item changes\r\n\t */\r\n\tpropertychanged: {\r\n\t\tproperty: string;\r\n\t\tvalue: any; // TODO don't make this any\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDataItemAdapters {\r\n\r\n\tduration: number;\r\n\r\n\tvalue: {\r\n\t\tvalue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tworkingValue: {\r\n\t\tworkingValue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tdate: {\r\n\t\tdate: Date,\r\n\t\tfield: string\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * DataItem represents single element in data, for example a data point in a\r\n * Serial Chart Series, e.g. a column.\r\n *\r\n * DataItem defines relationship between structured data, required for specific\r\n * chart type or task, and raw source data.\r\n *\r\n * It also implements required calculations, updates related visual elements,\r\n * etc.\r\n *\r\n * @todo Description\r\n * @important\r\n */\r\nexport class DataItem extends BaseObjectEvents implements IAnimatable {\r\n\r\n\t/**\r\n\t * When we are using a nested data structure, like for example in a TreeMap,\r\n\t * this property points to a parent Data Item of this one.\r\n\t *\r\n\t * @type {Optional<this>}\r\n\t */\r\n\tpublic parent: $type.Optional<this>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IDataItemEvents}\r\n\t */\r\n\tpublic _events!: IDataItemEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IDataItemAdapters;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t *\r\n\t * @type {Adapter<DataItem, IDataItemAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<DataItem, IDataItemAdapters>(this);\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this Data Item is used for.\r\n\t *\r\n\t * @type {Component}\r\n\t */\r\n\tpublic _component!: Component;\r\n\r\n\t/**\r\n\t * A reference to a [[Component]] this Data Item belongs to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Component>}\r\n\t */\r\n\tpublic component: $type.Optional<this[\"_component\"]>;\r\n\r\n\t/**\r\n\t * A reference to the original Data Item in raw data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _dataContext: Object;\r\n\r\n\t/**\r\n\t * This Data Item is currently disabled.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _disabled: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether Data Item has any properties set.\r\n\t *\r\n\t * If it does not have any, the code can use this property to check whether\r\n\t * they need to apply costly operation of re-applying properties, whenever\r\n\t * Data Item-related element is redrawn, e.g. series.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic hasProperties: boolean = false;\r\n\r\n\t/**\r\n\t * An object containing calculated values.\r\n\t */\r\n\tpublic readonly values: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object container current working values.\r\n\t */\r\n\t//public readonly workingValues: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object containing categories.\r\n\t */\r\n\tpublic readonly categories: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * An object containing dates.\r\n\t */\r\n\tpublic readonly dates: { [index: string]: Date } = {};\r\n\r\n\t/**\r\n\t * An object containing locations for the Data Item.\r\n\t *\r\n\t * A location is a position within date or category, or, in some other cases,\r\n\t * where there is no single point but rather some period.\r\n\t */\r\n\tpublic readonly locations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * Current working locations.\r\n\t */\r\n\tpublic readonly workingLocations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * An object containing Data Item specific appearance properties in key-value\r\n\t * pairs.\r\n\t *\r\n\t * Sometimes a single Data Item needs to apply different properties than the\r\n\t * rest of the data [[Series]] it is part of. E.g. a single column,\r\n\t * represented by a Data Item needs to be filled with a different color than\r\n\t * the reset of the [[ColumnSeries]] it belongs to.\r\n\t *\r\n\t * That's where Data Item's `properties` come into play.\r\n\t *\r\n\t * Please note that you should set Data Item-specific properties using\r\n\t * `setProperty()` method, rather than access `properties` object directly.\r\n\t */\r\n\tpublic readonly properties: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that are associated with this Data Item.\r\n\t *\r\n\t * E.g. an [[Axis]] Data Item has several separate elements associated with\r\n\t * it, like [[AxisTick]], [[AxisLabel]], and [[Grid]].\r\n\t *\r\n\t * Data Item keeps track of all of them, so it can toggle all related visual\r\n\t * elements when it itself is toggled.\r\n\t *\r\n\t * @type {Sprite[]}\r\n\t */\r\n\tpublic sprites: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * List of animations currently animating Data Item's values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Array<Animation>>}\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * Is Data Item currently visible?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _visible: boolean = true;\r\n\r\n\t/**\r\n\t * Is Data Item currently hidden?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _hidden: boolean = false;\t\r\n\r\n\t/**\r\n\t * Should this Data Item be used when calculating data ranges and scales?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Some of the Data Item's data fields may contain an array of children. This\r\n\t * property contains an object indicating which fields hold an array, so that\r\n\t * they can be processed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hasChildren: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Indicates whether Data Item is currently animiting from visible to hidden\r\n\t * state.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isHiding: boolean = false;\r\n\r\n\t/**\r\n\t * Holds a Disposer reference to hiding [[Animation]] currently playing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprotected _hideDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _valueAnimations: { [key: string]: Animation } = {};\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _locationAnimations: { [key: string]: Animation } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * @todo Adding events to disposers produces errors in some cases, which means that chart is using disposed Data Items which is not right\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Data Item's position index in Component's data.\r\n\t *\r\n\t * @return {number} Index\r\n\t */\r\n\tpublic get index(): number {\r\n\t\tif (this.component) {\r\n\t\t\treturn this.component.dataItems.indexOf(this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of [[Animations]] objects currently mutating Data Item's values.\r\n\t *\r\n\t * @return {Array<Animation>} [description]\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param {boolean} value Visible?\r\n\t */\r\n\tpublic set visible(value: boolean) {\r\n\t\tif(value){\r\n\t\t\tthis.hidden = false;\r\n\t\t}\t\t\r\n\t\tif (this._visible != value) {\r\n\t\t\tthis.setVisibility(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets hidden flag for data item. Mostly used to initially hide data item.\r\n\t *\r\n\t * @param {boolean} value Hidden?\r\n\t */\r\n\tpublic set hidden(value: boolean) {\r\n\t\tif(this._hidden != value){\r\n\t\t\tthis._hidden = value;\r\n\t\t\tif(value){\r\n\t\t\t\tthis.setVisibility(false);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.setVisibility(true, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * Returns `true` if this Data Item is currently hidden.\r\n\t *\r\n\t * @return {boolean} Hidden?\r\n\t */\r\n\tpublic get hidden():boolean{\r\n\t\treturn this._hidden;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables all Sprites associated with this Data Item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic set __disabled(value: boolean) {\r\n\t\t//\tif (this._disabled != value) { // not good\r\n\t\tthis._disabled = value;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.__disabled = value;\r\n\t\t});\r\n\t\t//\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Is this Data Item currently disabled?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic get __disabled(): boolean {\r\n\t\treturn this._disabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param {boolean} value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\t\t\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tif (value) {\r\n\t\t\t\tsprite.visible = sprite.defaultState.properties.visible;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (sprite.hiddenState) {\r\n\t\t\t\t\tsprite.visible = sprite.hiddenState.properties.visible;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._visible = value;\r\n\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: value\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this Data Item is currently visible.\r\n\t *\r\n\t * @return {boolean} Visible?\r\n\t */\r\n\tpublic get visible(): boolean {\r\n\t\tif(this._hidden){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this._visible;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param {number}    duration  Animation duration (ms)\r\n\t * @param {number}    delay     Delay animation (ms)\r\n\t * @param {string[]}  fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif(!this.hidden){\r\n\t\t\tthis.setVisibility(true, true);\r\n\r\n\t\t\tthis.isHiding = false;\r\n\r\n\t\t\tif (this._hideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._hideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\tlet animation: $type.Optional<Animation>;\r\n\r\n\t\t\tif (fields) {\r\n\t\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\t\tanimation = this.setWorkingValue(field, this.values[field].value, duration, delay);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\t\tlet animation = sprite.show(duration);\r\n\r\n\t\t\t\tif (animation != null && !animation.isFinished()) {\r\n\t\t\t\t\tthis._disposers.push(animation);\r\n\r\n\t\t\t\t\tif (delay != null && delay > 0) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn animation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tsuper.dispose();\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.dispose();\r\n\t\t});\r\n\r\n\t\tthis.sprites = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param {number}    duration  Animation duration (ms)\r\n\t * @param {number}    delay     Delay animation (ms)\r\n\t * @param {number}    toValue   A value to set to `fields` when hiding\r\n\t * @param {string[]}  fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.isHiding = true;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\r\n\t\t\tlet animation = sprite.hide(duration);\r\n\r\n\t\t\tif (animation != null && !animation.isFinished()) {\r\n\t\t\t\tthis._disposers.push(animation);\r\n\r\n\t\t\t\tif (delay != null && delay > 0) {\r\n\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif ($type.isNumber(toValue) && fields) {\r\n\t\t\tlet animation: $type.Optional<Animation>;\r\n\r\n\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\tlet anim = this.setWorkingValue(field, toValue, duration, delay);\r\n\t\t\t\tif (anim) {\r\n\t\t\t\t\tanimation = anim;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\tthis._hideDisposer = animation.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.setVisibility(false, true);\r\n\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._disposers.push(this._hideDisposer);\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isHiding = false;\r\n\t\t\t\tthis.setVisibility(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isHiding = false;\r\n\t\t\tthis.setVisibility(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a duration (ms) the Data Item should take to animate from one\r\n\t * value to another.\r\n\t *\r\n\t * If the duration is not specified via parameter, this method will try to\r\n\t * request a default duration from the related `Component`.\r\n\t *\r\n\t * @param  {number}  duration  Default duration (ms)\r\n\t * @return {number}            Duration (ms)\r\n\t */\r\n\tpublic getDuration(duration?: number): $type.Optional<number> {\r\n\t\tlet component: $type.Optional<Component> = this.component;\r\n\t\tif (component) {\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = component.interpolationDuration;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (duration != null) {\r\n\t\t\treturn this.adapter.apply(\"duration\", duration);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a numeric value for specific data field.\r\n\t *\r\n\t * If `calculated` is not set, it will return a raw value, as it is in\r\n\t * source data.\r\n\t *\r\n\t * If `calculated` is set, it will return a pre-calculated specific value.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {CalculatedValue}  calculated  A calculated value name\r\n\t * @return {Optional<number>}             Value\r\n\t */\r\n\tpublic getValue(name: string, calculated?: CalculatedValue): $type.Optional<number> {\r\n\t\tif (name && this.component) {\r\n\t\t\tif (!calculated) {\r\n\t\t\t\tcalculated = (<any>this.component.dataFields)[name + \"Show\"];\r\n\t\t\t\tif (!calculated) {\r\n\t\t\t\t\tcalculated = \"value\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst value = this.values[name][calculated];\r\n\r\n\t\t\tif (this.adapter.isEnabled(\"value\")) {\r\n\t\t\t\treturn this.adapter.apply(\"value\", {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tfield: name\r\n\t\t\t\t}).value;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a current working value for a specific data field.\r\n\t *\r\n\t * The actual value may differ from the one returned by `getValue()`. The\r\n\t * latter returns static values from the data source.\r\n\t *\r\n\t * `getWorkingValue()` returns current value, which is usually different if\r\n\t * Data Item is animating from one state to another.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {CalculatedValue}  calculated  A calculated value name\r\n\t * @return {Optional<number>}             Value\r\n\t */\r\n\tpublic getWorkingValue(name: string): $type.Optional<number> {\r\n\t\tif (name && this.component) {\r\n\t\t\tlet realName = (<any>this.component.dataFields)[name + \"Show\"];\r\n\r\n\t\t\tif (!realName) {\r\n\t\t\t\trealName = \"workingValue\";\r\n\t\t\t}\r\n\r\n\t\t\treturn this.adapter.apply(\"workingValue\", {\r\n\t\t\t\tworkingValue: this.values[name][realName],\r\n\t\t\t\tfield: name\r\n\t\t\t}).workingValue;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets a numeric value for specific data field.\r\n\t *\r\n\t * @param {string}           name        Data field name\r\n\t * @param {number}           value       Value\r\n\t * @param {CalculatedValue}  calculated  Calculated data field name\r\n\t * @param {number}           duration    Duration (ms) to animate to new value to\r\n\t * @param {number}           delay       Delay animation (ms)\r\n\t */\r\n\tpublic setValue(name: string, value: number, duration?: number, delay?: number): void {\r\n\t\tlet currentValue: number = this.values[name].value;\r\n\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (currentValue !== value) {\r\n\t\t\tthis.values[name].value = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"valuechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"valuechanged\"] = {\r\n\t\t\t\t\ttype: \"valuechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"valuechanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemValueChange(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setWorkingValue(name, value, newDuration, delay);\r\n\t}\r\n\r\n\tsetCalculatedValue(name: string, value: number, calculated: CalculatedValue): void {\r\n\t\tlet currentValue: number = this.values[name][calculated];\r\n\r\n\t\tif (currentValue !== value && $type.isNumber(value)) {\r\n\t\t\tthis.values[name][calculated] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"calculatedvaluechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"calculatedvaluechanged\"] = {\r\n\t\t\t\t\ttype: \"calculatedvaluechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"calculatedvaluechanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemCalculatedValueChange(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set current working numeric value for a specific data field.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {number}           value       Value\r\n\t * @param  {CalculatedValue}  calculated  Calculated data field name\r\n\t * @param  {number}           duration    Duration (ms) to animate to new value to\r\n\t * @param  {number}           delay       Delay animation (ms)\r\n\t * @return {Optional<Animation>}          An [[Animation]] object used for transition to new values\r\n\t */\r\n\tpublic setWorkingValue(name: string, value: number, duration?: number, delay?: number): $type.Optional<Animation> {\r\n\t\tif ($type.isNumber(this.values[name].value)) {\r\n\t\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\t\t\tlet workingValue: number = this.values[name].workingValue;\r\n\r\n\t\t\tif (newDuration != null && newDuration > 0 && $type.isNumber(workingValue) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\r\n\t\t\t\tif (workingValue != value) {\r\n\t\t\t\t\tlet animation: Animation = this.animate({ childObject: this.values[name], property: \"workingValue\", from: workingValue, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n\t\t\t\t\tif (delay != null) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tanimation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tthis._valueAnimations[name] = animation;\r\n\t\t\t\t\treturn animation;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet valueAnimation = this._valueAnimations[name];\r\n\t\t\t\t\tif (valueAnimation) {\r\n\t\t\t\t\t\tvalueAnimation.stop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.values[name].workingValue = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet valueAnimation = this._valueAnimations[name];\r\n\t\t\t\tif (valueAnimation) {\r\n\t\t\t\t\tvalueAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.values[name].workingValue = value;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workingvaluechanged\"] = {\r\n\t\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.handleDataItemWorkingValueChange(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a relative location for a data field.\r\n\t *\r\n\t * A location is always relative on a 0 to 1 scale, with 0 being beginning,\r\n\t * 0.5 middle and 1 end.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param {string}  name      Data field name\r\n\t * @param {number}  value     Location (0-1)\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t * @param {number}  delay     Delay animation (ms)\r\n\t */\r\n\tpublic setLocation(name: string, value: number, duration?: number, delay?: number) {\r\n\t\tlet currentLocation: number = this.locations[name];\r\n\r\n\t\tif (currentLocation !== value) {\r\n\t\t\tthis.locations[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"locationchanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"locationchanged\"] = {\r\n\t\t\t\t\ttype: \"locationchanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"locationchanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemValueChange(this); // correct\r\n\t\t\t}\r\n\r\n\t\t\tthis.setWorkingLocation(name, value, duration, delay);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a current working location for a data field.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param {string}  name      Data field name\r\n\t * @param {number}  value     Location (0-1)\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t * @param {number}  delay     Delay animation (ms)\r\n\t */\r\n\tpublic setWorkingLocation(name: string, value: number, duration?: number, delay?: number): $type.Optional<Animation> {\r\n\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\t\tlet workingLocation: number = this.workingLocations[name];\r\n\r\n\t\tif (newDuration != null && newDuration > 0 && $type.isNumber(workingLocation) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\t\t\tif (workingLocation != value) {\r\n\t\t\t\tlet animation: Animation = this.animate({ childObject: this.workingLocations, property: name, from: workingLocation, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n\t\t\t\tif (delay != null) {\r\n\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t}\r\n\t\t\t\tanimation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n\t\t\t\tthis._locationAnimations[name] = animation;\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet locationAnimation = this._locationAnimations[name];\r\n\t\t\t\tif (locationAnimation) {\r\n\t\t\t\t\tlocationAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.workingLocations[name] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet locationAnimation = this._locationAnimations[name];\r\n\t\t\tif (locationAnimation) {\r\n\t\t\t\tlocationAnimation.stop();\r\n\t\t\t}\r\n\r\n\t\t\tthis.workingLocations[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"workinglocationchanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workinglocationchanged\"] = {\r\n\t\t\t\t\ttype: \"workinglocationchanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"workinglocationchanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemWorkingLocationChange(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets Date value to a data field.\r\n\t *\r\n\t * @param {string}  name      Data field name\r\n\t * @param {Date}    date      Date object\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t */\r\n\tpublic setDate(name: string, date: Date, duration?: number) {\r\n\t\tif (!$type.isDate(date) && this.component) {\r\n\t\t\tdate = this.component.dateFormatter.parse(date);\r\n\t\t}\r\n\r\n\t\tlet currentDate: Date = this.dates[name];\r\n\t\tif (currentDate !== date) {\r\n\t\t\tthis.dates[name] = date;\r\n\t\t\tthis.setValue(name, date.getTime(), duration);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Date value of the data field.\r\n\t *\r\n\t * @param  {string}  name  Data field name\r\n\t * @return {Date}          Date object\r\n\t */\r\n\tpublic getDate(name: string): Date {\r\n\t\treturn this.adapter.apply(\"date\", {\r\n\t\t\tdate: this.dates[name],\r\n\t\t\tfield: name\r\n\t\t}).date;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a Data Item-specific visual properties to apply to related elements.\r\n\t *\r\n\t * @param {string}  name   Property name\r\n\t * @param {any}     value  Property value\r\n\t */\r\n\tpublic setProperty(name: string, value: any) {\r\n\t\tif (this.properties[name] !== value) {\r\n\t\t\tthis.hasProperties = true;\r\n\t\t\tthis.properties[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"propertychanged\"] = {\r\n\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemPropertyChange(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a related category for this Data Item.\r\n\t *\r\n\t * @todo Review description\r\n\t * @param {string}  name   Data field name\r\n\t * @param {string}  value  Category\r\n\t */\r\n\tpublic setCategory(name: string, value: string) {\r\n\t\tif (!$type.isString(value)) {\r\n\t\t\tvalue = $type.castString(value);\r\n\t\t}\r\n\r\n\t\tif (this.categories[name] !== value) {\r\n\t\t\tthis.categories[name] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the Data Item, including all related data.\r\n\t *\r\n\t * @return {this} New Data Item clone\r\n\t */\r\n\tpublic clone(cloneId?: string): this {\r\n\t\tlet dataItem: this = super.clone(cloneId);\r\n\t\tif (this.dataContext) {\r\n\t\t\tdataItem.dataContext = $utils.copy(this.dataContext, {});\r\n\t\t}\r\n\r\n\t\t$utils.copyProperties(this.locations, dataItem.locations);\r\n\t\t$utils.copyProperties(this.properties, dataItem.properties);\r\n\t\t$utils.copyProperties(this.categories, dataItem.categories);\r\n\t\t$utils.copyProperties(this.values, dataItem.values);\r\n\t\t$utils.copyProperties(this.dates, dataItem.dates);\r\n\r\n\t\t$object.each(this.values, (name, value) => {\r\n\t\t\t//for (let name in this.values) {\r\n\t\t\tdataItem.values[name] = $object.copy(value);\r\n\t\t});\r\n\r\n\t\tdataItem.events.copyFrom(this.events);\r\n\t\tdataItem.component = this.component;\r\n\r\n\t\treturn dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets opacity for all Data Item's related elements (Sprites).\r\n\t *\r\n\t * @param {number} value Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.opacity = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets whether this data point should not be included in the scale and\r\n\t * minimum/maximum calculations.\r\n\t *\r\n\t * E.g. some we may want to exclude a particular data point from influencing\r\n\t * [[ValueAxis]] scale.\r\n\t *\r\n\t * @param {boolean}  value  Exclude from min/max calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\r\n\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"propertychanged\"] = {\r\n\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tproperty: \"ignoreMinMax\",\r\n\t\t\t\tvalue: value\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t}\r\n\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.handleDataItemPropertyChange(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Exclude from min/max calculations?\r\n\t * @return {boolean} Exclude from min/max calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and starts an [[Animation]] to interpolate (morph) Data Item's\r\n\t * properties and/or values.\r\n\t *\r\n\t * @see {@link Animation}\r\n\t * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options\r\n\t * @param  {number}                                   duration          Animation duration (ms)\r\n\t * @param  {function}                                 easing            Easing function\r\n\t * @return {Animation}                                                  Animation\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles intermediate steps when Data Item is interpolating (morphing) from\r\n\t * one value to another.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Animation, IAnimationEvents>[\"animationstarted\" | \"animationended\" | \"animationprogress\"]} event Event object\r\n\t */\r\n\tpublic handleInterpolationProgress(event: AMEvent<Animation, IAnimationEvents>[\"animationstarted\" | \"animationended\" | \"animationprogress\"]) {\r\n\t\tlet animation: Animation = event.target;\r\n\r\n\t\t// it's always only one options, no need cycle\r\n\t\tlet animationOptions: IAnimationOptions = animation.animationOptions[0];\r\n\t\tif (animationOptions) {\r\n\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workingvaluechanged\"] = {\r\n\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: animationOptions.dummyData\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemWorkingValueChange(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether Data Item has values set for all of the data fields,\r\n\t * supplied via argument.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string[]}  fields  Field list to check\r\n\t * @return {boolean}           Has values for all fields?\r\n\t */\r\n\tpublic hasValue(fields: string[]): boolean {\r\n\t\t// todo: what about categories?\r\n\t\tfor (let i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tif (!$type.hasValue(this.values[fields[i]].value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the Data Item.\r\n\t *\r\n\t * In nested data structures, like TreeMap, this indicates the level this\r\n\t * data point is at, in relation to the parent Data Item.\r\n\t *\r\n\t * @return {number} Depth\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\r\n\t\t} else {\r\n\t\t\treturn this.parent.depth + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets to a reference to an original object from Component's data.\r\n\t *\r\n\t * @return {Object} [description]\r\n\t */\r\n\tpublic get dataContext(): Object {\r\n\t\treturn this._dataContext;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to an original object in Component's data, that this Data Item\r\n\t * is derived from.\r\n\t *\r\n\t * @param {Object} value Original data object\r\n\t */\r\n\tpublic set dataContext(value: Object) {\r\n\t\tthis._dataContext = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * adds a sprite to dataItem.sprites array\r\n\t * @ignore\r\n\t */\r\n\taddSprite(sprite: Sprite) {\r\n\t\tif (sprite.dataItem && sprite.dataItem != this) {\r\n\t\t\t$array.remove(sprite.dataItem.sprites, sprite);\r\n\t\t}\r\n\t\tif(!this.visible){\r\n\t\t\tsprite.hide(0);\r\n\t\t}\r\n\r\n\t\tif(this.isHiding){\r\n\t\t\tsprite.hide();\t\r\n\t\t}\r\n\t\tthis.sprites.push(sprite);\r\n\t\tsprite.dataItem = this;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/DataItem.ts","/**\r\n * Slice module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../utils/Dictionary\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport { Percent, percent } from \"../utils/Percent\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { RadialGradient } from \"../rendering/fills/RadialGradient\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slice]].\r\n */\r\nexport interface ISliceProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Radius of the slice in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tradius?: number;\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tradiusY?: number;\r\n\r\n\t/**\r\n\t * Inner radius of the slice for creating cut out (donut) slices, in px or %\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * The angle at which left edge of the slice is drawn. (0-360)\r\n\t *\r\n\t * 0 is to the right of the center.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tarc?: number;\r\n\r\n\t/**\r\n\t * [shiftRadius description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tshiftRadius?: number;\r\n\r\n\t/**\r\n\t * Radius of slice's outer corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n\t/**\r\n\t * Radius of slice's inner corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tinnerCornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Slice]].\r\n */\r\nexport interface ISliceEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slice]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliceAdapters extends IContainerAdapters, ISliceProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a wedged semi-circle - slice. Usually used for Pie/Donut charts.\r\n *\r\n * @see {@link ISliceEvents} for a list of available events\r\n * @see {@link ISliceAdapters} for a list of available Adapters\r\n */\r\nexport class Slice extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISliceProperties}\r\n\t */\r\n\tpublic _properties!: ISliceProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISliceAdapters}\r\n\t */\r\n\tpublic _adapter!: ISliceAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISliceEvents}\r\n\t */\r\n\tpublic _events!: ISliceEvents;\r\n\r\n\t/**\r\n\t * Main slice element.\r\n\t *\r\n\t * Slice itself is a [[Container]] so that [[Slice3D]] could extend it and\r\n\t * add 3D elements to it.\r\n\t *\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic slice: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Slice\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"cornerRadius\", 0);\r\n\t\tthis.setPropertyValue(\"startAngle\", 0);\r\n\t\tthis.setPercentProperty(\"innerRadius\", 0);\r\n\t\tthis.setPercentProperty(\"radius\", 0);\r\n\t\tthis.setPropertyValue(\"arc\", 0);\r\n\t\tthis.setPropertyValue(\"shiftRadius\", 0);\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"layout\", \"none\");\r\n\r\n\t\t// Create a slice wedge element\r\n\t\tthis.slice = this.createChild(Sprite);\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tthis._disposers.push(this.slice);\r\n\r\n\t\t//this.element.attr({ \"stroke-linejoin\": \"round\" });\r\n\t\t//this.element.attr({ \"stroke-linecap\": \"round\" });\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tthis.slice.path = $path.arc(this.startAngle, this.arc, this.radius, this.pixelInnerRadius, this.radiusY, this.cornerRadius, this.innerCornerRadius);\r\n\t\tthis.slice.invalidate();\r\n\t\tthis.shiftRadius = this.shiftRadius;\r\n\r\n\t\tif (this.realFill instanceof RadialGradient) {\r\n\t\t\tthis.updateGradient(this.realFill);\r\n\t\t}\r\n\t\tif (this.realStroke instanceof RadialGradient) {\r\n\t\t\tthis.updateGradient(this.realStroke);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateGradient(gradient: RadialGradient) {\r\n\t\tgradient.element.attr({ \"gradientUnits\": \"userSpaceOnUse\" });\r\n\t\tgradient.element.attr({ \"r\": this.radius });\r\n\t\tgradient.cx = 0;\r\n\t\tgradient.cy = 0;\r\n\t\tgradient.element.attr({ radius: this.radius });\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IRectangle}\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\r\n\t\tif (this.isMeasured) {\r\n\t\t\tlet innerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.pixelInnerRadius);\r\n\t\t\tlet outerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.radius);\r\n\t\t\treturn $math.getCommonRectangle([innerRect, outerRect]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The angle at which left edge of the slice is drawn. (0-360)\r\n\t *\r\n\t * 0 is to the right of the center.\r\n\t *\r\n\t * @param {number}  value  Angle (0-360)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Angle (0-360)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} value [description]\r\n\t */\r\n\tpublic set arc(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"arc\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get arc(): number {\r\n\t\treturn this.getPropertyValue(\"arc\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the slice in pixels.\r\n\t *\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\tlet radius: number = this.getPropertyValue(\"radius\");\r\n\t\tif (!$type.isNumber(radius)) {\r\n\t\t\tradius = 0;\r\n\t\t}\r\n\t\treturn radius;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @param {number} value Vertical radius (0-1)\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.setPropertyValue(\"radiusY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Vertical radius (0-1)\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\tlet value: number = this.getPropertyValue(\"radiusY\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.radius;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the slice for creating cut out (donut) slices.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number | Percent}  value  Radius (px or %)\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number | Percent} Radius (px or %)\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius px\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of slice's outer corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of slice's inner corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  Radius (px)\r\n\t */\r\n\tpublic set innerCornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"innerCornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get innerCornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"innerCornerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * [shiftRadius description]\r\n\t *\r\n\t * 0-1\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} value [description]\r\n\t */\r\n\tpublic set shiftRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"shiftRadius\", value);\r\n\t\tthis.dx = value * this.radius * this.ix;\r\n\t\tthis.dy = value * this.radiusY * this.iy;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get shiftRadius(): number {\r\n\t\treturn this.getPropertyValue(\"shiftRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * [ix description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get ix(): number {\r\n\t\treturn $math.cos(this.middleAngle);\r\n\t}\r\n\r\n\t/**\r\n\t * [iy description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get iy(): number {\r\n\t\tif (this.radius > 0) {\r\n\t\t\treturn $math.sin(this.middleAngle) * this.radiusY / this.radius;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn $math.sin(this.middleAngle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An angle of the slice's middle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Angle\r\n\t */\r\n\tpublic get middleAngle(): number {\r\n\t\treturn this.startAngle + this.arc / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @return {number} X\r\n\t */\r\n\tprotected getTooltipX(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tlet innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t\t\tvalue = this.ix * (innerRadius + (this.radius - innerRadius) / 2);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @return {number} Y\r\n\t */\r\n\tprotected getTooltipY(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tlet innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t\t\tvalue = this.iy * (innerRadius + (this.radius - innerRadius) / 2);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slice\"] = Slice;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Slice.ts","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_property-desc.js\n// module id = 73\n// module chunks = 302","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_uid.js\n// module id = 74\n// module chunks = 302","module.exports = false;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_library.js\n// module id = 75\n// module chunks = 302","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-keys.js\n// module id = 76\n// module chunks = 302","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-absolute-index.js\n// module id = 77\n// module chunks = 302","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-create.js\n// module id = 78\n// module chunks = 302","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopn.js\n// module id = 79\n// module chunks = 302","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-species.js\n// module id = 80\n// module chunks = 302","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_an-instance.js\n// module id = 81\n// module chunks = 302","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_for-of.js\n// module id = 82\n// module chunks = 302","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_redefine-all.js\n// module id = 83\n// module chunks = 302","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { Axis } from \"./Axis\";\r\nimport { HorizontalCenter } from \"../../core/defs/HorizontalCenter\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererY]].\r\n */\r\nexport interface IAxisRendererYEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererYAdapters extends IAxisRendererAdapters, IAxisRendererYProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for vertical axis.\r\n *\r\n * @see {@link IAxisRendererYEvents} for a list of available events\r\n * @see {@link IAxisRendererYAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisRendererYProperties}\r\n\t */\r\n\tpublic _properties!: IAxisRendererYProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisRendererYAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisRendererYAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisRendererYEvents}\r\n\t */\r\n\tpublic _events!: IAxisRendererYEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {Axis} axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRendererY\";\r\n\t\tthis.minGridDistance = 40;\r\n\t\tthis.opposite = false;\r\n\t\tthis.height = percent(100);\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"horizontal\";\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.valign = \"middle\";\r\n\r\n\t\t\taxis.height = percent(100);\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\ttitle.rotation = 90;\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.rotation = -90;\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\r\n\t\t\tlet bigNum: number = 2000;\r\n\t\t\tlet bbx: number = 0;\r\n\t\t\tlet bby: number = 0;\r\n\t\t\tlet bbw: number = bigNum;\r\n\t\t\tlet bbh: number = this.axisLength;\r\n\r\n\t\t\t// right\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\telse {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbbx = - bigNum;\r\n\t\t\t\t\tbbw = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.axis.updateTooltip(\"horizontal\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return {number} Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.pixelHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {IPoindt}            Point\r\n\t */\r\n\tpublic positionToPoint(position: number): IPoint {\r\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param  {IPoint}  point  Point\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.y);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}  startPosition  Starting position\r\n\t * @param  {number}  endPosition    End position\r\n\t * @return {string}                 SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet y1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet y2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet h: number = Math.abs(y2 - y1);\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet y: number = Math.min(y1, y2);\r\n\t\tlet x: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Grid}    grid         Grid element\r\n\t * @param {number}  position     Starting position\r\n\t * @param {number}  endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number) {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.getWidth(), y: 0 });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisTick}  tick         Tick element\r\n\t * @param {number}    position     Starting position\r\n\t * @param {number}    endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number) {\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\r\n\t\tlet titleWidth = 0;\r\n\t\ttry {\r\n\t\t\ttitleWidth = this.axis.title.measuredWidth;\r\n\t\t} catch{\r\n\t\t\t// void\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.opposite) {\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t\tpoint.x = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpoint.x = this.gridContainer.pixelWidth;\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: tickLength, y: 0 });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine() {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.axisLength });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet y: number = axis.basePoint.y;\r\n\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tif (y < 0 || y > h) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet x = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;\r\n\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisLabel}  label        Label element\r\n\t * @param {number}     position     Starting position\r\n\t * @param {number}     endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number) {\r\n\r\n\t\tif (!$type.hasValue(location)) {\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet horizontalCenter: HorizontalCenter;\r\n\t\tlet deltaX = 0;\r\n\t\tif (this.opposite) {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tif (label.align == \"left\") {\r\n\t\t\t\t\tdeltaX = -this.gridContainer.maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpoint.x = 0 + deltaX;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (label.inside) {\r\n\t\t\t\thorizontalCenter = \"left\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tif (label.inside) {\r\n\t\t\t\tif (label.align == \"right\") {\r\n\t\t\t\t\tdeltaX = this.gridContainer.maxWidth;\r\n\t\t\t\t\thorizontalCenter = \"right\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpoint.x = this.measuredWidth + deltaX;\r\n\t\t}\r\n\t\tlabel.horizontalCenter = horizontalCenter;\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak) {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet x1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet x2: number = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;\r\n\r\n\t\tstartPoint.y = $math.fitToRange(startPoint.y, -1, this.pixelHeight + 1);\r\n\t\tendPoint.y = $math.fitToRange(endPoint.y, -1, this.pixelHeight + 1);\r\n\r\n\t\tif (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.pixelHeight)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet w = Math.abs(x2 - x1);\r\n\r\n\t\tstartLine.x = x1;\r\n\t\tstartLine.height = 0;\r\n\t\tstartLine.width = w;\r\n\r\n\t\tendLine.x = x1;\r\n\t\tendLine.height = 0;\r\n\t\tendLine.width = w;\r\n\r\n\t\tfillShape.width = w;\r\n\t\tfillShape.height = Math.abs(endPoint.y - startPoint.y);\r\n\t\tfillShape.x = x1;\r\n\t\tfillShape.y = endPoint.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(true, false, true, false);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position on the axis to a coordinate in pixels.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {number}            Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (!axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn $math.round(coordinate, 1);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererY\"] = AxisRendererY;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisRendererY.ts","/**\r\n * Functionality for drawing simple buttons.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Label } from \"./Label\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Button]].\r\n */\r\nexport interface IButtonProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Icon (if available) position - left or right.\r\n\t */\r\n\ticonPosition?: \"left\" | \"right\";\r\n\r\n\t/**\r\n\t * Icon sprite\r\n\t */\r\n\ticon?: Sprite;\r\n}\r\n\r\n/**\r\n * Defines events for [[Button]].\r\n */\r\nexport interface IButtonEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Button]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IButtonAdapters extends IContainerAdapters, IButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Button class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IButtonEvents} for a list of available events\r\n * @see {@link IButtonAdapters} for a list of available Adapters\r\n */\r\nexport class Button extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IButtonProperties}\r\n\t */\r\n\tpublic _properties!: IButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IButtonAdapters}\r\n\t */\r\n\tpublic _adapter!: IButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IButtonEvents}\r\n\t */\r\n\tpublic _events!: IButtonEvents;\r\n\r\n\t/**\r\n\t * Icon reference.\r\n\t *\r\n\t * @type {Sprite}\r\n\t */\r\n\tprotected _icon: Sprite;\r\n\r\n\t/**\r\n\t * [[Label]] element for button content.\r\n\t *\r\n\t * @type {Optional<Label>}\r\n\t */\r\n\tprotected _label: $type.Optional<Label>;\r\n\r\n\t/**\r\n\t * A type for background.\r\n\t *\r\n\t * @type {RoundedRectangle}\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Button\";\r\n\r\n\t\tthis.tooltipY = 0;\r\n\r\n\t\t// Set defaults\r\n\t\tthis.iconPosition = \"left\";\r\n\t\tthis.layout = \"horizontal\";\r\n\t\tthis.contentAlign = \"center\";\r\n\t\tthis.contentValign = \"middle\";\r\n\t\tthis.padding(8, 16, 8, 16);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create background\r\n\t\tlet background = this.background;\r\n\t\tbackground.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tbackground.fillOpacity = 1;\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.cornerRadius(3, 3, 3, 3);\r\n\r\n\t\t// Create the label element\r\n\t\tthis.label = new Label();\r\n\t\tthis.label.fill = interfaceColors.getFor(\"secondaryButtonText\");;\r\n\r\n\t\t// Create default states\r\n\t\tlet hoverState = background.states.create(\"hover\");\r\n\t\thoverState.properties.fillOpacity = 1;\r\n\t\thoverState.properties.fill = interfaceColors.getFor(\"secondaryButtonHover\");\r\n\r\n\t\tlet downState = background.states.create(\"down\");\r\n\t\tdownState.transitionDuration = 100;\r\n\t\tdownState.properties.fill = interfaceColors.getFor(\"secondaryButtonDown\");\r\n\t\tdownState.properties.fillOpacity = 1;\r\n\t\t// Set up accessibility\r\n\t\t// A button should be always focusable\r\n\t\tthis.role = \"button\";\r\n\t\tthis.focusable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] to be used as an icon on button.\r\n\t *\r\n\t * @param {Sprite} icon Icon Sprite\r\n\t */\r\n\tpublic set icon(icon: Sprite) {\r\n\t\tlet currentIcon = this.getPropertyValue(\"icon\");\r\n\t\tif (currentIcon) {\r\n\t\t\t//this._icon.dispose();\r\n\t\t\t//this.removeDispose(currentIcon);\r\n\t\t\tcurrentIcon.parent = undefined;\r\n\t\t}\r\n\t\tif (icon) {\r\n\t\t\tthis.setPropertyValue(\"icon\", icon);\r\n\t\t\ticon.parent = this;\r\n\t\t\ticon.interactionsEnabled = false;\r\n\t\t\tthis.iconPosition = this.iconPosition;\r\n\t\t\tthis._disposers.push(icon);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Sprite} Icon Sprite\r\n\t */\r\n\tpublic get icon(): Sprite {\r\n\t\treturn this.getPropertyValue(\"icon\");\r\n\t}\r\n\r\n\t/**\r\n\t * Icon position: \"left\" or \"right\".\r\n\t *\r\n\t * @default \"left\"\r\n\t * @param {\"left\" | \"right\"}  position  Icon position\r\n\t */\r\n\tpublic set iconPosition(position: \"left\" | \"right\") {\r\n\t\tthis.setPropertyValue(\"iconPosition\", position);\r\n\r\n\t\tif (this.icon) {\r\n\t\t\tif (position == \"left\") {\r\n\t\t\t\tthis.icon.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.icon.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {\"left\" | \"right\"} Icon position\r\n\t */\r\n\tpublic get iconPosition(): \"left\" | \"right\" {\r\n\t\treturn this.getPropertyValue(\"iconPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element to be used for text.\r\n\t *\r\n\t * @param {Optional<Label>}  label element\r\n\t */\r\n\tpublic set label(label: $type.Optional<Label>) {\r\n\t\tif (this._label) {\r\n\t\t\t//this._label.dispose();\r\n\t\t\tthis.removeDispose(this._label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t\tif (label) {\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.interactionsEnabled = false;\r\n\t\t\tthis._disposers.push(this._label);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Label>} Label element\r\n\t */\r\n\tpublic get label(): $type.Optional<Label> {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for the button.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {RoundedRectangle} Background element\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Button\"] = Button;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Button.ts","/**\r\n * A collection of low-level async operation stuff.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n\r\n/**\r\n * [Listener description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport type Listener = (now: number) => void;\r\n\r\nlet pendingFrame = false;\r\n\r\nconst nextQueue: Array<Listener> = [];\r\nconst readQueue: Array<Listener> = [];\r\nconst writeQueue: Array<Listener> = [];\r\nconst idleQueue: Array<Listener> = [];\r\n\r\n\r\nconst fps = 1000 / 60;\r\n\r\n/**\r\n * [raf description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport const raf =\r\n\t(typeof requestAnimationFrame === \"function\"\r\n\t\t? function(fn: () => void): void {\r\n\t\t\trequestAnimationFrame(fn);\r\n\t\t}\r\n\t\t: function(fn: () => void): void {\r\n\t\t\tsetTimeout(fn, fps);\r\n\t\t});\r\n\r\n/**\r\n * [frameLoop description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction frameLoop(): void {\r\n\tconst now = Date.now();\r\n\r\n\r\n\tconst length = nextQueue.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tnextQueue[i](now);\r\n\t}\r\n\r\n\t$array.shiftLeft(nextQueue, length);\r\n\r\n\r\n\tfor (let i = 0; i < readQueue.length; ++i) {\r\n\t\treadQueue[i](now);\r\n\t}\r\n\r\n\treadQueue.length = 0;\r\n\r\n\r\n\tfor (let i = 0; i < writeQueue.length; ++i) {\r\n\t\twriteQueue[i](now);\r\n\t}\r\n\r\n\twriteQueue.length = 0;\r\n\r\n\r\n\tif (nextQueue.length === 0 && readQueue.length === 0) {\r\n\t\tpendingFrame = false;\r\n\r\n\t} else {\r\n\t\traf(frameLoop);\r\n\t}\r\n}\r\n\r\n/**\r\n * [pendFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction pendFrame(): void {\r\n\tif (!pendingFrame) {\r\n\t\tpendingFrame = true;\r\n\r\n\t\traf(frameLoop);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * [nextFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param {Listener} fn [description]\r\n */\r\nexport function nextFrame(fn: Listener): void {\r\n\tnextQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [readFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param {Listener} fn [description]\r\n */\r\nexport function readFrame(fn: Listener): void {\r\n\treadQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [writeFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param {Listener} fn [description]\r\n */\r\nexport function writeFrame(fn: Listener): void {\r\n\twriteQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [whenIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param {Listener} fn [description]\r\n */\r\nexport function whenIdle(fn: Listener): void {\r\n\tidleQueue.push(fn);\r\n}\r\n\r\n/**\r\n * [triggerIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo Maybe don't trigger a callback which was added while in the middle of triggering?\r\n */\r\nexport function triggerIdle(): void {\r\n\tconst now = Date.now();\r\n\r\n\tconst length = idleQueue.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t(<any>idleQueue.shift())(now);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/AsyncPending.ts","/**\r\n * A collection of color-related functions\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Define named colors for easy resolution to RGB.\r\n *\r\n * @type {Object}\r\n */\r\nlet namedColors = {\r\n\taliceblue: { r: 240, g: 248, b: 255 },\r\n\tantiquewhite: { r: 250, g: 235, b: 215 },\r\n\taqua: { r: 0, g: 255, b: 255 },\r\n\taquamarine: { r: 127, g: 255, b: 212 },\r\n\tazure: { r: 240, g: 255, b: 255 },\r\n\tbeige: { r: 245, g: 245, b: 220 },\r\n\tbisque: { r: 255, g: 228, b: 196 },\r\n\tblack: { r: 0, g: 0, b: 0 },\r\n\tblanchedalmond: { r: 255, g: 235, b: 205 },\r\n\tblue: { r: 0, g: 0, b: 255 },\r\n\tblueviolet: { r: 138, g: 43, b: 226 },\r\n\tbrown: { r: 165, g: 42, b: 42 },\r\n\tburlywood: { r: 222, g: 184, b: 135 },\r\n\tcadetblue: { r: 95, g: 158, b: 160 },\r\n\tchartreuse: { r: 127, g: 255, b: 0 },\r\n\tchocolate: { r: 210, g: 105, b: 30 },\r\n\tcoral: { r: 255, g: 127, b: 80 },\r\n\tcornflowerblue: { r: 100, g: 149, b: 237 },\r\n\tcornsilk: { r: 255, g: 248, b: 220 },\r\n\tcrimson: { r: 220, g: 20, b: 60 },\r\n\tcyan: { r: 0, g: 255, b: 255 },\r\n\tdarkblue: { r: 0, g: 0, b: 139 },\r\n\tdarkcyan: { r: 0, g: 139, b: 139 },\r\n\tdarkgoldenrod: { r: 184, g: 134, b: 11 },\r\n\tdarkgray: { r: 169, g: 169, b: 169 },\r\n\tdarkgrey: { r: 169, g: 169, b: 169 },\r\n\tdarkgreen: { r: 0, g: 100, b: 0 },\r\n\tdarkkhaki: { r: 189, g: 183, b: 107 },\r\n\tdarkmagenta: { r: 139, g: 0, b: 139 },\r\n\tdarkolivegreen: { r: 85, g: 107, b: 47 },\r\n\tdarkorange: { r: 255, g: 140, b: 0 },\r\n\tdarkorchid: { r: 153, g: 50, b: 204 },\r\n\tdarkred: { r: 139, g: 0, b: 0 },\r\n\tdarksalmon: { r: 233, g: 150, b: 122 },\r\n\tdarkseagreen: { r: 143, g: 188, b: 143 },\r\n\tdarkslateblue: { r: 72, g: 61, b: 139 },\r\n\tdarkslategray: { r: 47, g: 79, b: 79 },\r\n\tdarkslategrey: { r: 47, g: 79, b: 79 },\r\n\tdarkturquoise: { r: 0, g: 206, b: 209 },\r\n\tdarkviolet: { r: 148, g: 0, b: 211 },\r\n\tdeeppink: { r: 255, g: 20, b: 147 },\r\n\tdeepskyblue: { r: 0, g: 191, b: 255 },\r\n\tdimgray: { r: 105, g: 105, b: 105 },\r\n\tdimgrey: { r: 105, g: 105, b: 105 },\r\n\tdodgerblue: { r: 30, g: 144, b: 255 },\r\n\tfirebrick: { r: 178, g: 34, b: 34 },\r\n\tfloralwhite: { r: 255, g: 250, b: 240 },\r\n\tforestgreen: { r: 34, g: 139, b: 34 },\r\n\tfuchsia: { r: 255, g: 0, b: 255 },\r\n\tgainsboro: { r: 220, g: 220, b: 220 },\r\n\tghostwhite: { r: 248, g: 248, b: 255 },\r\n\tgold: { r: 255, g: 215, b: 0 },\r\n\tgoldenrod: { r: 218, g: 165, b: 32 },\r\n\tgray: { r: 128, g: 128, b: 128 },\r\n\tgrey: { r: 128, g: 128, b: 128 },\r\n\tgreen: { r: 0, g: 128, b: 0 },\r\n\tgreenyellow: { r: 173, g: 255, b: 47 },\r\n\thoneydew: { r: 240, g: 255, b: 240 },\r\n\thotpink: { r: 255, g: 105, b: 180 },\r\n\tindianred: { r: 205, g: 92, b: 92 },\r\n\tindigo: { r: 75, g: 0, b: 130 },\r\n\tivory: { r: 255, g: 255, b: 240 },\r\n\tkhaki: { r: 240, g: 230, b: 140 },\r\n\tlavender: { r: 230, g: 230, b: 250 },\r\n\tlavenderblush: { r: 255, g: 240, b: 245 },\r\n\tlawngreen: { r: 124, g: 252, b: 0 },\r\n\tlemonchiffon: { r: 255, g: 250, b: 205 },\r\n\tlightblue: { r: 173, g: 216, b: 230 },\r\n\tlightcoral: { r: 240, g: 128, b: 128 },\r\n\tlightcyan: { r: 224, g: 255, b: 255 },\r\n\tlightgoldenrodyellow: { r: 250, g: 250, b: 210 },\r\n\tlightgray: { r: 211, g: 211, b: 211 },\r\n\tlightgrey: { r: 211, g: 211, b: 211 },\r\n\tlightgreen: { r: 144, g: 238, b: 144 },\r\n\tlightpink: { r: 255, g: 182, b: 193 },\r\n\tlightsalmon: { r: 255, g: 160, b: 122 },\r\n\tlightseagreen: { r: 32, g: 178, b: 170 },\r\n\tlightskyblue: { r: 135, g: 206, b: 250 },\r\n\tlightslategray: { r: 119, g: 136, b: 153 },\r\n\tlightslategrey: { r: 119, g: 136, b: 153 },\r\n\tlightsteelblue: { r: 176, g: 196, b: 222 },\r\n\tlightyellow: { r: 255, g: 255, b: 224 },\r\n\tlime: { r: 0, g: 255, b: 0 },\r\n\tlimegreen: { r: 50, g: 205, b: 50 },\r\n\tlinen: { r: 250, g: 240, b: 230 },\r\n\tmagenta: { r: 255, g: 0, b: 255 },\r\n\tmaroon: { r: 128, g: 0, b: 0 },\r\n\tmediumaquamarine: { r: 102, g: 205, b: 170 },\r\n\tmediumblue: { r: 0, g: 0, b: 205 },\r\n\tmediumorchid: { r: 186, g: 85, b: 211 },\r\n\tmediumpurple: { r: 147, g: 112, b: 219 },\r\n\tmediumseagreen: { r: 60, g: 179, b: 113 },\r\n\tmediumslateblue: { r: 123, g: 104, b: 238 },\r\n\tmediumspringgreen: { r: 0, g: 250, b: 154 },\r\n\tmediumturquoise: { r: 72, g: 209, b: 204 },\r\n\tmediumvioletred: { r: 199, g: 21, b: 133 },\r\n\tmidnightblue: { r: 25, g: 25, b: 112 },\r\n\tmintcream: { r: 245, g: 255, b: 250 },\r\n\tmistyrose: { r: 255, g: 228, b: 225 },\r\n\tmoccasin: { r: 255, g: 228, b: 181 },\r\n\tnavajowhite: { r: 255, g: 222, b: 173 },\r\n\tnavy: { r: 0, g: 0, b: 128 },\r\n\toldlace: { r: 253, g: 245, b: 230 },\r\n\tolive: { r: 128, g: 128, b: 0 },\r\n\tolivedrab: { r: 107, g: 142, b: 35 },\r\n\torange: { r: 255, g: 165, b: 0 },\r\n\torangered: { r: 255, g: 69, b: 0 },\r\n\torchid: { r: 218, g: 112, b: 214 },\r\n\tpalegoldenrod: { r: 238, g: 232, b: 170 },\r\n\tpalegreen: { r: 152, g: 251, b: 152 },\r\n\tpaleturquoise: { r: 175, g: 238, b: 238 },\r\n\tpalevioletred: { r: 219, g: 112, b: 147 },\r\n\tpapayawhip: { r: 255, g: 239, b: 213 },\r\n\tpeachpuff: { r: 255, g: 218, b: 185 },\r\n\tperu: { r: 205, g: 133, b: 63 },\r\n\tpink: { r: 255, g: 192, b: 203 },\r\n\tplum: { r: 221, g: 160, b: 221 },\r\n\tpowderblue: { r: 176, g: 224, b: 230 },\r\n\tpurple: { r: 128, g: 0, b: 128 },\r\n\trebeccapurple: { r: 102, g: 51, b: 153 },\r\n\tred: { r: 255, g: 0, b: 0 },\r\n\trosybrown: { r: 188, g: 143, b: 143 },\r\n\troyalblue: { r: 65, g: 105, b: 225 },\r\n\tsaddlebrown: { r: 139, g: 69, b: 19 },\r\n\tsalmon: { r: 250, g: 128, b: 114 },\r\n\tsandybrown: { r: 244, g: 164, b: 96 },\r\n\tseagreen: { r: 46, g: 139, b: 87 },\r\n\tseashell: { r: 255, g: 245, b: 238 },\r\n\tsienna: { r: 160, g: 82, b: 45 },\r\n\tsilver: { r: 192, g: 192, b: 192 },\r\n\tskyblue: { r: 135, g: 206, b: 235 },\r\n\tslateblue: { r: 106, g: 90, b: 205 },\r\n\tslategray: { r: 112, g: 128, b: 144 },\r\n\tslategrey: { r: 112, g: 128, b: 144 },\r\n\tsnow: { r: 255, g: 250, b: 250 },\r\n\tspringgreen: { r: 0, g: 255, b: 127 },\r\n\tsteelblue: { r: 70, g: 130, b: 180 },\r\n\ttan: { r: 210, g: 180, b: 140 },\r\n\tteal: { r: 0, g: 128, b: 128 },\r\n\tthistle: { r: 216, g: 191, b: 216 },\r\n\ttomato: { r: 255, g: 99, b: 71 },\r\n\tturquoise: { r: 64, g: 224, b: 208 },\r\n\tviolet: { r: 238, g: 130, b: 238 },\r\n\twheat: { r: 245, g: 222, b: 179 },\r\n\twhite: { r: 255, g: 255, b: 255 },\r\n\twhitesmoke: { r: 245, g: 245, b: 245 },\r\n\tyellow: { r: 255, g: 255, b: 0 },\r\n\tyellowgreen: { r: 154, g: 205, b: 50 }\r\n};\r\n\r\n\r\n/**\r\n * Tries to resolve a named color into a hex color representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  value  Color name\r\n * @return {string}         Color\r\n * @deprecated\r\n * @hidden\r\n */\r\n/*export function resolveNamedColor(value: string): Color {\r\n\treturn (<any>namedColors)[value] ? (<any>namedColors)[value] : undefined;\r\n}*/\r\n\r\n/**\r\n * Converts a proper color hex code (i.e. \"#FF5500\") or named color (i.e. \"red\")\r\n * into an {iRGB} object. If the code is not correctly formatted, an RGB of\r\n * black is returned.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  color  Color code\r\n * @param  {number}  alpha  Alpha (0-1)\r\n * @return {iRGB}           RGB\r\n */\r\nexport function rgb(color: string, alpha?: number): iRGB {\r\n\r\n\t// Init return value\r\n\tlet rgb: $type.Optional<iRGB>;\r\n\r\n\t// Try resolving color format\r\n\r\n\t// Named color?\r\n\tif ((<any>namedColors)[color]) {\r\n\t\trgb = (<any>namedColors)[color];\r\n\t}\r\n\r\n\t// Hex code?\r\n\telse if (color.charAt(0) === \"#\") {\r\n\t\trgb = hexToRgb(color);\r\n\t}\r\n\r\n\t// rgb() format?\r\n\telse if (color.match(/^rgba?\\(/)) {\r\n\t\trgb = rgbaToRgb(color);\r\n\t}\r\n\r\n\t// Was not able to resolve?\r\n\tif (!rgb) {\r\n\t\trgb = { r: 0, g: 0, b: 0, a: 1 };\r\n\t}\r\n\r\n\t// Set alpha\r\n\tif ($type.hasValue(alpha)) {\r\n\t\trgb.a = alpha;\r\n\t}\r\n\r\n\treturn rgb;\r\n}\r\n\r\n/**\r\n * Converts a hex color code (i.e. \"#FF5500\") to an [[iRGB]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  hex  Hex color code\r\n * @return {iRGB}         RGB\r\n */\r\nexport function hexToRgb(hex: string): $type.Optional<iRGB> {\r\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n\tlet shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\r\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result ? {\r\n\t\tr: parseInt(result[1], 16),\r\n\t\tg: parseInt(result[2], 16),\r\n\t\tb: parseInt(result[3], 16)\r\n\t} : undefined;\r\n}\r\n\r\n/**\r\n * Converts color strings in format like `rgb()` and `rgba()` to [[iRGB]].\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  color  Color code\r\n * @return {iRGB}           RGB\r\n */\r\nexport function rgbaToRgb(color: string): $type.Optional<iRGB> {\r\n\r\n\t// Init\r\n\tlet matches: string[] | null;\r\n\tcolor = color.replace(/[ ]/g, \"\");\r\n\r\n\t// Try rgb() format\r\n\tif (matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i)) {\r\n\t\tmatches.push(\"1\");\r\n\t}\r\n\telse if (matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i)) {\r\n\t\t// nothing\r\n\t}\r\n\telse {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: parseInt(matches[1]),\r\n\t\tg: parseInt(matches[2]),\r\n\t\tb: parseInt(matches[3]),\r\n\t\ta: parseFloat(matches[4])\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an [[iRGB]] object into a hex color code.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}    rgb  RGB\r\n * @return {string}       Hex color code\r\n */\r\nexport function rgbToHex(rgb: iRGB): string {\r\n\treturn \"#\" + pad2(rgb.r.toString(16)) + pad2(rgb.g.toString(16)) + pad2(rgb.b.toString(16));\r\n}\r\n\r\n/**\r\n * Converts an [[iRGB]] object into its `rgb()` or `rgba()` representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}    rgb  RGB\r\n * @return {string}       `rgba()` syntax\r\n */\r\nexport function rgbToRGBA(rgb: iRGB): string {\r\n\tif ($type.hasValue(rgb.a) && rgb.a !== 1) {\r\n\t\treturn \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + rgb.a + \")\";\r\n\t}\r\n\telse {\r\n\t\treturn \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\r\n\t}\r\n}\r\n\r\n/**\r\n * Pads a 1-digit string with a zero.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}  c  Input string\r\n * @return {string}     Padded string\r\n */\r\nexport function pad2(c: string): string {\r\n\treturn c.length == 1 ? \"0\" + c : \"\" + c;\r\n}\r\n\r\n/**\r\n * Returns an intermediate color between two colors based on the relative\r\n * position. Position needs to be in range between 0 and 1. Zero meaning the\r\n * resulting color will be closest to the first reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {Optional<iRGB>}    color1   First reference color\r\n * @param  {Optional<iRGB>}    color2   Second reference color\r\n * @param  {number}            percent  Relative position (0-1)\r\n * @return {Optional<iRGB>}             Interpolated color\r\n */\r\nexport function interpolate(rgb1: $type.Optional<iRGB>, rgb2: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tpercent = $math.fitToRange(percent, 0, 1);\r\n\r\n\tif (rgb1) {\r\n\t\tif (rgb2) {\r\n\t\t\treturn {\r\n\t\t\t\tr: rgb1.r + Math.round((rgb2.r - rgb1.r) * percent),\r\n\t\t\t\tg: rgb1.g + Math.round((rgb2.g - rgb1.g) * percent),\r\n\t\t\t\tb: rgb1.b + Math.round((rgb2.b - rgb1.b) * percent),\r\n\t\t\t\ta: (rgb1.a || 1) + Math.round(((rgb2.a || 1) - (rgb1.a || 1)) * percent)\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\t\t\treturn rgb1;\r\n\t\t}\r\n\r\n\t} else if (rgb2) {\r\n\t\treturn rgb2;\r\n\r\n\t} else {\r\n\t\treturn rgb1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}    color    Reference color\r\n * @param  {number}  percent  Brightness percent\r\n * @return {iRGB}             Hex code of the new color\r\n */\r\nexport function lighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tif (rgb) {\r\n\t\treturn {\r\n\t\t\tr: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n\t\t\tg: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n\t\t\tb: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n\t\t\ta: rgb.a\r\n\t\t};\r\n\r\n\t} else {\r\n\t\t// TODO is this correct ?\r\n\t\treturn rgb;\r\n\t}\r\n};\r\n\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {number}  value    Value\r\n * @param  {number}  percent  Percent\r\n * @return {number}           Step\r\n */\r\nexport function getLightnessStep(value: number, percent: number): number {\r\n\tlet base = percent > 0 ? 255 - value : value;\r\n\treturn Math.round(base * percent);\r\n}\r\n\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}    color    Source color\r\n * @param  {number}  percent  Brightness percent\r\n * @return {iRGB}             New color\r\n */\r\nexport function brighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tif (rgb) {\r\n\t\tlet base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n\t\t//let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n\t\tlet step = getLightnessStep(base, percent);\r\n\t\treturn {\r\n\t\t\tr: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n\t\t\tg: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n\t\t\tb: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n\t\t\ta: rgb.a\r\n\t\t};\r\n\r\n\t} else {\r\n\t\t// TODO is this correct ?\r\n\t\treturn rgb;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {number}  value    Value\r\n * @param  {number}  percent  Percent\r\n * @return {number}           Step\r\n */\r\nexport function getBrightnessStep(value: number, percent: number): number {\r\n\tlet base = 255; //percent > 0 ? 255 - value : value;\r\n\treturn Math.round(base * percent);\r\n}\r\n\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}    color       Base color\r\n * @param  {number}  saturation  Saturation (0-1)\r\n * @return {iRGB}                New color\r\n */\r\nexport function saturate(rgb: $type.Optional<iRGB>, saturation: number): $type.Optional<iRGB> {\r\n\tif (rgb == null || saturation == 1) {\r\n\t\treturn rgb;\r\n\t}\r\n\r\n\tlet hsl = rgbToHsl(rgb);\r\n\thsl.s = saturation;\r\n\treturn hslToRgb(hsl);\r\n}\r\n\r\n/*\r\n// not used\r\nexport function rgbToMatrix(rgb: iRGB): string {\r\n\tlet r = $type.toText($math.round((rgb.r || 0) / 255, 10));\r\n\tlet g = $type.toText($math.round((rgb.g || 0) / 255, 10));\r\n\tlet b = $type.toText($math.round((rgb.b || 0) / 255, 10));\r\n\tlet a = $type.toText(rgb.a || 1);\r\n\treturn\t      r + \" 0 0 0 0\" +\r\n\t\t\t\t\t\" 0 \" + g + \" 0 0 0\" +\r\n\t\t\t\t\t\" 0 0 \" + b + \" 0 0\" +\r\n\t\t\t\t\t\" 0 0 0 \" + a + \" 0\";\r\n}\r\n*/\r\n\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nexport function hslToRgb(color: iHSL): iRGB {\r\n\tlet r, g, b;\r\n\tlet h = color.h;\r\n\tlet s = color.s;\r\n\tlet l = color.l;\r\n\r\n\tif (s == 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tlet hue2rgb = function hue2rgb(p: number, q: number, t: number) {\r\n\t\t\tif (t < 0) t += 1;\r\n\t\t\tif (t > 1) t -= 1;\r\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\r\n\t\t\tif (t < 1 / 2) return q;\r\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tlet p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: Math.round(r * 255),\r\n\t\tg: Math.round(g * 255),\r\n\t\tb: Math.round(b * 255)\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param   {number}  r       The red color value\r\n * @param   {number}  g       The green color value\r\n * @param   {number}  b       The blue color value\r\n * @return  {Array}           The HSL representation\r\n */\r\nexport function rgbToHsl(color: iRGB): iHSL {\r\n\tlet r = color.r / 255;\r\n\tlet g = color.g / 255;\r\n\tlet b = color.b / 255;\r\n\tlet max = Math.max(r, g, b);\r\n\tlet min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s = 0;\r\n\tlet l = (max + min) / 2;\r\n\r\n\tif (max === min) {\r\n\t\th = s = 0; // achromatic\r\n\r\n\t} else {\r\n\t\tlet d = max - min;\r\n\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n\t\tswitch (max) {\r\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn {\r\n\t\th: h,\r\n\t\ts: s,\r\n\t\tl: l\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an RGB color value to HSV. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and v in the set [0, 1].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  r       The red color value\r\n * @param   Number  g       The green color value\r\n * @param   Number  b       The blue color value\r\n * @return  Array           The HSV representation\r\n */\r\nexport function rgbToHsv(color: iRGB): iHSV {\r\n\tlet r = color.r / 255;\r\n\tlet g = color.g / 255;\r\n\tlet b = color.b / 255;\r\n\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s = 0;\r\n\tlet v = max;\r\n\r\n\tlet d = max - min;\r\n\ts = max == 0 ? 0 : d / max;\r\n\r\n\tif (max == min) {\r\n\t\th = 0; // achromatic\r\n\r\n\t} else {\r\n\t\tswitch (max) {\r\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t}\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn {\r\n\t\th: h,\r\n\t\ts: s,\r\n\t\tv: v\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an HSV color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes h, s, and v are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  h       The hue\r\n * @param   Number  s       The saturation\r\n * @param   Number  v       The value\r\n * @return  Array           The RGB representation\r\n */\r\nexport function hsvToRgb(color: iHSV): iRGB {\r\n\tlet r = 0;\r\n\tlet g = 0;\r\n\tlet b = 0;\r\n\tlet h = color.h;\r\n\tlet s = color.s;\r\n\tlet v = color.v;\r\n\r\n\tlet i = Math.floor(h * 6);\r\n\tlet f = h * 6 - i;\r\n\tlet p = v * (1 - s);\r\n\tlet q = v * (1 - f * s);\r\n\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\tswitch (i % 6) {\r\n\t\tcase 0: r = v, g = t, b = p; break;\r\n\t\tcase 1: r = q, g = v, b = p; break;\r\n\t\tcase 2: r = p, g = v, b = t; break;\r\n\t\tcase 3: r = p, g = q, b = v; break;\r\n\t\tcase 4: r = t, g = p, b = v; break;\r\n\t\tcase 5: r = v, g = p, b = q; break;\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: Math.round(r * 255),\r\n\t\tg: Math.round(g * 255),\r\n\t\tb: Math.round(b * 255)\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {iRGB}     color  Source color\r\n * @return {boolean}         Light?\r\n */\r\nexport function isLight(color: iRGB): boolean {\r\n\treturn ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * COLOR CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an interface for an object that represents an RGB color.\r\n */\r\nexport interface iRGB {\r\n\tr: number;\r\n\tg: number;\r\n\tb: number;\r\n\ta?: number;\r\n}\r\n\r\n/**\r\n * Represents an interface for an object that represents an HSL color.\r\n */\r\nexport interface iHSL {\r\n\th: number;\r\n\ts: number;\r\n\tl: number;\r\n\ta?: number;\r\n}\r\n\r\n/**\r\n * Represents an interface for an object that represents an HSV color.\r\n */\r\nexport interface iHSV {\r\n\th: number;\r\n\ts: number;\r\n\tv: number;\r\n\ta?: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Colors.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"./Registry\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Container } from \"./Container\";\r\nimport { svgContainers, SVGContainer } from \"./rendering/SVGContainer\";\r\nimport { Component } from \"./Component\";\r\nimport { options } from \"./Options\";\r\nimport { Paper } from \"./rendering/Paper\";\r\nimport { raf } from \"./utils/AsyncPending\";\r\nimport { animations } from \"./utils/Animation\";\r\nimport { triggerIdle } from \"./utils/AsyncPending\";\r\nimport * as $dom from \"./utils/DOM\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * The main class that handles system-wide tasks, like caching, heartbeats, etc.\r\n * @important\r\n */\r\nexport class System {\r\n\r\n\t/**\r\n\t * Unique ID of the object.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic uid: string = registry.getUniqueId();\r\n\r\n\t/**\r\n\t * amCharts Version.\r\n\t *\r\n\t * This follows npm's semver specification.\r\n\t *\r\n\t * @see {@link https://docs.npmjs.com/misc/semver}\r\n\t * @type {string}\r\n\t */\r\n\tstatic VERSION: string = \"4.0.0-beta.83\";\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t * @todo Needed?\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic dummyCounter: number = 0;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic time: number;\r\n\r\n\r\n\tprotected _frameRequested: boolean = false;\r\n\r\n\tprotected _updateStepDuration:number = 50;\r\n\r\n\t/**\r\n\t * Performs initialization of the System object.\r\n\t *\r\n\t * Called when the first [[Sprite]] object is created.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic constructor() {\r\n\t\tthis.time = Date.now();\r\n\t}\r\n\r\n\t/**\r\n\t * Reports time elapsed since timer was reset.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Needed?\r\n\t * @param {string}   msg    Message to report in console\r\n\t * @param {boolean}  reset  Reset time counter\r\n\t */\r\n\tpublic reportTime(msg: string, reset?: boolean): void {\r\n\t\tif (this.dummyCounter < 6) {\r\n\t\t\t//console.log(Date.now() - this.time, msg, this.dummyCounter2);\r\n\t\t}\r\n\t\tif (reset) {\r\n\t\t\tthis.time = Date.now();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs \"heartbeat\" operations `frameRate` number of times per second.\r\n\t *\r\n\t * When the chart element is invalidated, it is not immediately redrawn.\r\n\t *\r\n\t * Instead it waits for the next `update()` cycle to be re-validated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic update(): void {\r\n\r\n\t\tthis._frameRequested = false;\t\r\n\r\n\t\tlet time = Date.now();\t\r\n\r\n\t\tregistry.dispatchImmediately(\"enterframe\");\r\n\r\n\t\t//this.validateLayouts();\r\n\t\t//this.validatePositions();\r\n\r\n\t\tlet skippedComponents: Component[] = [];\r\n\r\n\t\t// data objects first - do all calculations\r\n\t\t// only data is parsed in chunks, thats why we do for loop instead of a while like with other invalid items.\r\n\t\t// important to go backwards, as items are removed!\r\n\t\t// TODO use iterator instead\r\n\r\n\t\tfor(var key in registry.invalidDatas){\r\n\t\t\tlet invalidData = registry.invalidDatas[key];\r\n\r\n\t\t\twhile (invalidData.length > 0) {\r\n\t\t\t\tlet component: Component = invalidData[0];\r\n\t\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\t\tif (!component.isDisposed()) {\t\t\r\n\r\n\t\t\t\t\tif (dataProvider && dataProvider.dataInvalid) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdataProvider.validateData();\r\n\t\t\t\t\t\t\tif (dataProvider.dataValidationProgress < 1) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t$array.remove(invalidData, dataProvider);\r\n\t\t\t\t\t\t\tdataProvider.raiseCriticalError(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tcomponent.validateData();\r\n\t\t\t\t\t\t\tif (component.dataValidationProgress < 1) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t$array.remove(invalidData, component);\r\n\t\t\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$array.remove(invalidData, component);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(Date.now() - time > this._updateStepDuration){\r\n\t\t\t\tbreak;\r\n\t\t\t}\t\t\t\t\t\t\r\n\t\t}\r\n\r\n\t\twhile (registry.invalidRawDatas.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidRawDatas[0];\r\n\t\t\tif (!component.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateRawData();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidRawDatas, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(registry.invalidRawDatas, component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO use iterator instead\r\n\t\twhile (registry.invalidDataItems.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidDataItems[0];\r\n\r\n\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\t// this is needed to avoid partial value validation when data is parsed in chunks\r\n\t\t\tif (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidDataItems, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// this might seem too much, as validateValues removes from invalidDataItems aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n\t\t\t$array.remove(registry.invalidDataItems, component);\r\n\t\t}\r\n\r\n\t\t// TODO use iterator instead\r\n\t\twhile (registry.invalidDataRange.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidDataRange[0];\r\n\r\n\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\tif (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateDataRange();\r\n\t\t\t\t\tif (!component.skipRangeEvent) {\r\n\t\t\t\t\t\tcomponent.dispatchImmediately(\"datarangechanged\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcomponent.skipRangeEvent = false;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidDataRange, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// this might seem too much, as validateDataRange removes from invalidDataRange aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n\t\t\t$array.remove(registry.invalidDataRange, component);\r\n\t\t}\r\n\r\n\t\tlet skippedSprites: Sprite[] = [];\r\n\r\n\t\t// display objects later\r\n\t\t// TODO use iterator instead\r\n\r\n\t\tfor(let key in registry.invalidLayouts){\r\n\t\t\tthis.validateLayouts(key);\r\n\t\t}\r\n\t\tfor(let key in registry.invalidPositions){\r\n\t\t\tthis.validatePositions(key);\r\n\t\t}\r\n\r\n\r\n\t\tlet hasSkipped:boolean = false;\r\n\r\n\t\ttime = Date.now();\r\n\r\n\t\tfor(var key in registry.invalidSprites){\r\n\t\t\tlet count = 0;\r\n\t\t\t\r\n\t\t\tlet invalidSprites = registry.invalidSprites[key];\r\n\r\n\t\t\twhile (invalidSprites.length > 0) {\r\n\t\t\t\tthis.validateLayouts(key);\r\n\t\t\t\tthis.validatePositions(key);\r\n\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif(count == 5){\r\n\t\t\t\t\tif(Date.now() - time > this._updateStepDuration){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sprite: Sprite = invalidSprites[invalidSprites.length - 1];\r\n\r\n\t\t\t\t// we need to check this, as validateLayout might validate sprite\r\n\t\t\t\tif (sprite && !sprite.isDisposed()) {\r\n\t\t\t\t\tif (sprite instanceof Component && (sprite.dataInvalid || (sprite.dataProvider && sprite.dataProvider.dataInvalid))) {\r\n\t\t\t\t\t\t// void\r\n\t\t\t\t\t\tskippedSprites.push(sprite);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (sprite.dataItem && sprite.dataItem.component && sprite.dataItem.component.dataInvalid && !sprite.dataItem.component.isTemplate) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t\tskippedSprites.push(sprite);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\tsprite.children.each((child) => {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child instanceof Component && (child.dataInvalid || (child.dataProvider && child.dataProvider.dataInvalid))) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tskippedSprites.push(child);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child.dataItem && child.dataItem.component && child.dataItem.component.dataInvalid) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tskippedSprites.push(child);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsprite.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t\tsprite.invalid = false;\r\n\t\t\t\t\t\t\t\t$array.remove(invalidSprites, sprite);\r\n\t\t\t\t\t\t\t\tsprite.raiseCriticalError(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this might seem too much, but it's ok\r\n\t\t\t\t\tsprite.invalid = false;\r\n\t\t\t\t}\r\n\t\t\t\t$array.remove(invalidSprites, sprite);\r\n\t\t\t}\r\n\r\n\t\t\tregistry.invalidSprites[key] = registry.invalidSprites[key].concat(skippedSprites);\r\n\t\t}\r\n\r\n\t\tfor(var key in registry.invalidSprites){\r\n\t\t\tif(registry.invalidSprites[key].length > 0){\r\n\t\t\t\thasSkipped = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(var key in registry.invalidDatas){\r\n\t\t\tif(registry.invalidDatas[key].length > 0){\r\n\t\t\t\thasSkipped = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO make this more efficient\r\n\t\t// TODO don't copy the array\r\n\t\t$array.each($array.copy(animations), (x) => {\r\n\t\t\tx.update();\r\n\t\t});\r\n\r\n\t\t// to avoid flicker, we validate positions last time\r\n\t\t//this.validateLayouts();\r\n\t\t//this.validatePositions();\r\n\t\t//if(!hasSkipped){\r\n\t\tfor(let key in registry.invalidLayouts){\r\n\t\t\tthis.validateLayouts(key);\r\n\t\t}\r\n\t\tfor(let key in registry.invalidPositions){\r\n\t\t\tthis.validatePositions(key);\r\n\t\t}\r\n\t\t//}\r\n\r\n\t\ttriggerIdle();\r\n\r\n\t\t// to avoid flicker, we validate positions last time\r\n\t\t//this.validateLayouts();\r\n\t\t//this.validatePositions();\r\n\r\n\t\tregistry.dispatchImmediately(\"exitframe\");\r\n\r\n\t\tif (hasSkipped || animations.length > 0 || skippedComponents.length > 0) {\r\n\t\t\tthis.requestFrame();\r\n\t\t}\r\n\r\n\t\tif(this._updateStepDuration < 200){\r\n\t\t\tlet all0 = true;\r\n\r\n\t\t\tfor(var key in registry.invalidDatas){\r\n\t\t\t\tif(registry.invalidDatas[key].length > 0){\r\n\t\t\t\t\tall0 = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(var key in registry.invalidSprites){\r\n\t\t\t\tif(registry.invalidSprites[key].length > 0){\r\n\t\t\t\t\tall0 = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(all0){\r\n\t\t\t\tthis._updateStepDuration = 200;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trequestFrame() {\r\n\t\tif (!this._frameRequested) {\r\n\t\t\t\r\n\t\t\traf(() => {\r\n\t\t\t\tthis.update();\r\n\t\t\t});\r\n\t\t\tthis._frameRequested = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers position re-validation on all [[Sprite]] elements that have\r\n\t * invalid(ated) positions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic validatePositions(id:string): void {\r\n\t\t// invalid positions\r\n\t\t// TODO use iterator instead\r\n\t\tlet invalidPositions = registry.invalidPositions[id];\r\n\r\n\t\twhile (invalidPositions.length > 0) {\r\n\t\t\tlet sprite: Sprite = invalidPositions[invalidPositions.length - 1];\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\tsprite.children.each((sprite) => {\r\n\t\t\t\t\t\t\tif (sprite.positionInvalid) {\r\n\t\t\t\t\t\t\t\tsprite.validatePosition();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsprite.validatePosition();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tsprite.positionInvalid = false;\r\n\t\t\t\t\t$array.remove(invalidPositions, sprite);\r\n\t\t\t\t\tsprite.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(invalidPositions, sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers position re-validation on all [[Container]] elements that have\r\n\t * invalid(ated) layouts.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic validateLayouts(id:string): void {\r\n\t\t// invalid positions\r\n\t\t// TODO use iterator instead\r\n\t\tlet invalidLayouts = registry.invalidLayouts[id];\r\n\t\twhile (invalidLayouts.length > 0) {\r\n\t\t\tlet container: Container = invalidLayouts[invalidLayouts.length - 1];\r\n\t\t\tif (!container.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcontainer.children.each((sprite) => {\r\n\t\t\t\t\t\tif (sprite instanceof Container && sprite.layoutInvalid && !sprite.isDisposed()) {\r\n\t\t\t\t\t\t\tsprite.validateLayout();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tcontainer.validateLayout();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tcontainer.layoutInvalid = false;\r\n\t\t\t\t\t$array.remove(invalidLayouts, container);\r\n\t\t\t\t\tcontainer.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(invalidLayouts, container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Outputs string to console if `verbose` is `true`.\r\n\t *\r\n\t * @param {any} value Message to output to console\r\n\t */\r\n\tpublic log(value: any): void {\r\n\t\tif (options.verbose) {\r\n\t\t\tif (console) {\r\n\t\t\t\tconsole.log(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get current theme\r\n\t * @return {ITheme} [description]\r\n\t */\r\n\t/*public get theme(): ITheme {\r\n\t\treturn $array.last(this.themes);\r\n\t}*/\r\n\r\n\t/**\r\n\t * Number of times per second charts will be updated.\r\n\t *\r\n\t * This means that each time an element is invalidated it will wait for the\r\n\t * next cycle to be re-validated, and possibly redrawn.\r\n\t *\r\n\t * This happens every `1000 / frameRate` milliseconds.\r\n\t *\r\n\t * Reducing this number may reduce the load on the CPU, but might slightly\r\n\t * reduce smoothness of the animations.\r\n\t *\r\n\t * @type {number} Frame rate\r\n\t */\r\n\tpublic set frameRate(value: number) {\r\n\t\tregistry.frameRate = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Frame rate\r\n\t */\r\n\tpublic get frameRate(): number {\r\n\t\treturn registry.frameRate;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * A singleton global instance of [[System]].\r\n *\r\n * All code should use this, rather than instantiating their\r\n * own System objects.\r\n */\r\nexport const system: System = new System();\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/System.ts","/**\n * Defines system-wide options for amCharts 4.\n *\n * Accessible via singleton object `am4core.options`.\n *\n * Options set here are will be applicable to all charts created afterwards.\n *\n * E.g.:\n *\n * ```TypeScript\n * am4core.options.autoSetClassName = true;\n * ```\n * ```JavaScript\n * am4core.options.autoSetClassName = true;\n * ```\n */\nexport interface Options {\n\t/**\n\t * Console output enabled.\n\t *\n\t * @type {boolean}\n\t */\n\tverbose: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tcommercialLicense: boolean;\n\n\t/**\n\t * amCharts will add `class` property to some elements. All those class names\n\t * will be prefixed by `classNamePrefix`.\n\t *\n\t * @type {string}\n\t */\n\tclassNamePrefix: string;\n\n\t/**\n\t * Normally, the chart will create its elements without any `className`\n\t * attributes.\n\t *\n\t * If you set this to `true`, it will set class names that will reflect\n\t * the actual class this the SVG element corresponds to.\n\t *\n\t * The className will contain class prefixed with `amcharts-`. (prefix is\n\t * configurable via `classNamePrefix`)\n\t *\n\t * E.g. `\"amcharts-button\"`.\n\t *\n\t * @default false\n\t * @type {boolean}\n\t */\n\tautoSetClassName: boolean;\n}\n\nexport const options: Options = {\n\tverbose: true,\n\tcommercialLicense: false,\n\tclassNamePrefix: \"amcharts-\",\n\tautoSetClassName: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/Options.ts","/**\r\n * Handles formatting of pseudo-markup in text.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { AMElement } from \"../rendering/AMElement\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Defines an interface for an object that holds a chunk of text.\r\n */\r\nexport interface ITextChunk {\r\n\r\n\t/**\r\n\t * Type of the chunk.\r\n\t *\r\n\t * @type {\"value\" | \"text\" | \"format\" | \"image\"}\r\n\t */\r\n\t\"type\": \"value\" | \"text\" | \"format\" | \"image\",\r\n\r\n\t/**\r\n\t * Text.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\t\"text\": string\r\n\r\n}\r\n\r\n/**\r\n * A list of Adapters for [[TextFormatter]].\r\n */\r\nexport interface ITextFormatterAdapters {\r\n\r\n\t/**\r\n\t * Applied to each chunk of text when it is parsed and added to chunk list.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tchunk: string\r\n\r\n}\r\n\r\n/**\r\n * Handles formatting of pseudo-markdown in text.\r\n *\r\n * @todo Encode < > in output\r\n * @todo Add more adapters\r\n * @important\r\n */\r\nexport class TextFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: ITextFormatterAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<TextFormatter, ITextFormatterAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<TextFormatter, ITextFormatterAdapters>(this);\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TextFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void { }\r\n\r\n\t/**\r\n\t * Formats the text according to specifications passed in.\r\n\t *\r\n\t * @param  {string}  text    Text to format\r\n\t * @param  {string}  output  Output format (svg, html)\r\n\t * @return {string}          Formatted text\r\n\t */\r\n\tpublic format(text: string, output?: string): string {\r\n\r\n\t\t// Apply default\r\n\t\tif (!$type.hasValue(output)) {\r\n\t\t\toutput = \"svg\";\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet formatted: string = \"\";\r\n\r\n\t\t// Replace double (escaped) square spaces with remporary codes\r\n\t\ttext = this.escape(text);\r\n\r\n\t\t// Divvy up the string by style tags\r\n\t\tlet styles: string[] | null = text.match(/\\[([^\\]]*?)\\]/gm);\r\n\r\n\t\tif (!styles) {\r\n\t\t\t// Nothing to do here - no formatting elements\r\n\t\t\treturn this.wrap(text, \"\", output);\r\n\t\t}\r\n\r\n\t\t// Get pure text - no style tags\r\n\t\tlet texts: string[] = text.split(/\\[[^\\[\\]]*\\]/);\r\n\r\n\t\t// Go through each of the texts and wrap it in style tags\r\n\t\tfor (let i = 0, len = texts.length; i < len; i++) {\r\n\r\n\t\t\t// Get text bit\r\n\t\t\tlet t: string = texts[i];\r\n\r\n\t\t\t// Check if string is empty\r\n\t\t\tif (t === \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Run through an adapter\r\n\t\t\tt = this.adapter.apply(\"chunk\", t);\r\n\r\n\t\t\t// Get related style\r\n\t\t\tlet s: string = \"\";\r\n\t\t\tif (i > 0) {\r\n\t\t\t\ts = styles[i - 1].replace('[', '').replace(']', '');\r\n\t\t\t}\r\n\r\n\t\t\t// Wrap text in tag\r\n\t\t\tformatted += this.wrap(t, s, output);\r\n\t\t}\r\n\r\n\t\t// Replace placeholders back\r\n\t\tformatted = this.unescape(formatted);\r\n\r\n\t\t// Return result\r\n\t\treturn this.cleanUp(formatted);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces brackets with temporary placeholders.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text  Input text\r\n\t * @return {string}        Escaped text\r\n\t */\r\n\tpublic escape(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(/\\[\\[/g, registry.getPlaceholder(\"1\")).\r\n\t\t\treplace(/\\]\\]/g, registry.getPlaceholder(\"2\")).\r\n\t\t\treplace(/\\{\\{/g, registry.getPlaceholder(\"3\")).\r\n\t\t\treplace(/\\}\\}/g, registry.getPlaceholder(\"4\")).\r\n\t\t\treplace(/\\'\\'/g, registry.getPlaceholder(\"5\"));\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces placeholders back to brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text  Escaped text\r\n\t * @return {string}        Unescaped text\r\n\t */\r\n\tpublic unescape(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"1\"), \"g\"), \"[[\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"2\"), \"g\"), \"]]\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"3\"), \"g\"), \"{{\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"4\"), \"g\"), \"}}\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"5\"), \"g\"), \"'\");\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up the text text for leftover double square brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text  Input text\r\n\t * @return {string}        Cleaned up text\r\n\t */\r\n\tpublic cleanUp(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(/\\[\\[/g, \"[\").\r\n\t\t\treplace(/\\]\\]/g, \"]\").\r\n\t\t\treplace(/\\{\\{/g, \"{\").\r\n\t\t\treplace(/\\}\\}/g, \"}\").\r\n\t\t\treplace(/\\'\\'/g, \"'\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text into corresponding tags.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text   Text to wrap\r\n\t * @param  {string}  style  Styles\r\n\t * @param  {string}  output  Format to output in (svg, html)\r\n\t * @return {string}          Formatted string\r\n\t */\r\n\tpublic wrap(text: string, style: string, output: string): string {\r\n\r\n\t\tif (style === \"\" || style === \"/\") {\r\n\t\t\t//return text;\r\n\t\t\tstyle = \"\";\r\n\t\t}\r\n\r\n\t\tswitch (output) {\r\n\t\t\tcase \"html\":\r\n\t\t\t\treturn this.wrapHtml(text, this.translateStyleShortcuts(style));\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.wrapSvg(text, this.translateStyleShortcuts(style));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text in styled SVG tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text   Text to wrap\r\n\t * @param  {string}  style  Style property\r\n\t * @return {string}         Formatted tag\r\n\t */\r\n\tpublic wrapSvg(text: string, style: string): string {\r\n\t\tif (style === \"\") {\r\n\t\t\treturn \"<tspan>\" + text + \"</tspan>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"<tspan style='\" + style + \"'>\" + text + \"</tspan>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG `<tspan>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}     text   Text\r\n\t * @param  {string}     style  Style\r\n\t * @return {AMElement}         Element\r\n\t */\r\n\tpublic getSvgElement(text: string, style?: string): AMElement {\r\n\t\tlet element = new AMElement(\"tspan\");\r\n\t\telement.textContent = text;\r\n\t\tif (style) {\r\n\t\t\telement.node.setAttribute(\"style\", style);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text in HTML <span> tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text   Text to wrap\r\n\t * @param  {string}  style  Style property\r\n\t * @return {string}         Formatted tag\r\n\t * @todo Translate SVG styles into HTML ones\r\n\t */\r\n\tpublic wrapHtml(text: string, style: string): string {\r\n\t\tif (style === \"\") {\r\n\t\t\treturn \"<span>\" + text + \"</span>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"<span style='\" + this.styleSvgToHtml(style) + \"'>\" + text + \"</span>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an HTML `<span>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}       text   Text/HTML\r\n\t * @param  {string}       style  Style definition\r\n\t * @return {HTMLElement}         HTML element\r\n\t */\r\n\tpublic getHtmlElement(text: string, style?: string): HTMLElement {\r\n\t\tlet element = document.createElement(\"span\");\r\n\t\telement.innerHTML = text;\r\n\t\tif (style) {\r\n\t\t\telement.setAttribute(\"style\", style);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Trabslates SVG CSS into HTML CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  style  SVG CSS\r\n\t * @return {string}         HTML CSS\r\n\t * @todo Implement actual translation\r\n\t */\r\n\tpublic styleSvgToHtml(style: string): string {\r\n\t\tstyle = style.replace(/fill:/, \"color:\");\r\n\t\treturn style;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates style shortcuts into full styles, i.e.:\r\n\t * \"bold\" => \"font-weight: bold\"\r\n\t * \"#f00\" => \"fill: #f00\"\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  style  Untranslated style\r\n\t * @return {string}         Translated style\r\n\t * @todo Implement actual translation\r\n\t */\r\n\tpublic translateStyleShortcuts(style: string): string {\r\n\r\n\r\n\t\tif (style == \"\" || style == \"[ ]\") {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet cached = registry.getCache(\"translateStyleShortcuts_\" + style);\r\n\t\tif (cached) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// Get style parts\r\n\t\tlet b: string[] | null = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w]+)|(\\/)/gi);\r\n\r\n\t\t// Empty?\r\n\t\tif (!b) {\r\n\t\t\treturn style;\r\n\t\t}\r\n\r\n\r\n\t\t// Check each part\r\n\t\tfor (let i: number = 0; i < b.length; i++) {\r\n\r\n\t\t\tif (b[i].match(/^bold$/i)) {\r\n\t\t\t\t// Bold\r\n\t\t\t\tb[i] = \"font-weight:\" + b[i];\r\n\t\t\t}\r\n\t\t\telse if (b[i] == \"/\") {\r\n\t\t\t\t// Just closing tag\r\n\t\t\t\t// Do nothing\r\n\t\t\t\tb[i] = \"\";\r\n\t\t\t}\r\n\t\t\telse if (!b[i].match(/:/)) {\r\n\t\t\t\t// Color\r\n\t\t\t\tb[i] = \"fill:\" + b[i];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet res = b.join(';');\r\n\t\tregistry.setCache(\"translateStyleShortcuts_\" + style, res);\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n\t *\r\n\t * If the second parameter `quotedBlocks` is set to `true` this method will\r\n\t * also single out text blocks enclosed within single quotes that no\r\n\t * formatting should be applied to, and they should be displayed as is.\r\n\t *\r\n\t * Default for the above is `false`, so that you can use single quote in text\r\n\t * without escaping it.\r\n\t *\r\n\t * If enabled, single quotes can be escaped by doubling it - adding two\r\n\t * single quotes, which will be replaced by a one single quote in the final\r\n\t * output.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}    text          Text to chunk\r\n\t * @param  {boolean}   quotedBlocks  Use quoted blocks\r\n\t * @param  {boolean}   noFormatting  Formatting blocks will be treated as regular text\r\n\t * @return {string[]}                Array of string chunks\r\n\t */\r\n\tpublic chunk(text: string, quotedBlocks: boolean = false, noFormatting: boolean = false): ITextChunk[] {\r\n\r\n\t\t// Init result\r\n\t\tlet res: ITextChunk[] = [];\r\n\r\n\t\t// Replace double (escaped) square spaces and quotes with temporary codes\r\n\t\ttext = this.escape(text);\r\n\r\n\t\t// Deal with style blocks\r\n\t\tlet chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\tlet chunk = chunks[i];\r\n\r\n\t\t\t// Empty?\r\n\t\t\tif (chunk === \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ((i % 2) === 0) {\r\n\r\n\t\t\t\t// Text outside quotes\r\n\t\t\t\t// Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n\t\t\t\t// \"value\"\r\n\r\n\t\t\t\tchunk = chunk.replace(/\\]\\[/g, \"]\" + $strings.PLACEHOLDER + \"[\");\r\n\t\t\t\tchunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\r\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\r\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n\r\n\t\t\t\t\t// Placeholder?\r\n\t\t\t\t\tif (chunk2 === $strings.PLACEHOLDER) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Empty?\r\n\t\t\t\t\tif (chunk2 === \"\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Block or value\r\n\t\t\t\t\tif ((i2 % 2) === 0) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"text\": this.adapter.apply(\"chunk\", chunk2)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": noFormatting ? \"value\" : \"format\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// A text within doublequotes\r\n\t\t\t\t// All chunks are \"text\"\r\n\r\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\r\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\r\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n\r\n\t\t\t\t\t// Empty?\r\n\t\t\t\t\tif (chunk2 === \"\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Block or text\r\n\t\t\t\t\tif ((i2 % 2) === 0) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\t\t\"text\": chunk2\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.isImage(chunk2)) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"image\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"format\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if supplied format contains image information and should be\r\n\t * formatted as such.\r\n\t * I.e.: `[img: myImage.png]`\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}   text  Format\r\n\t * @return {boolean}        `true` if it is an image\r\n\t */\r\n\tpublic isImage(text: string): boolean {\r\n\t\treturn text.match(/img[ ]?:/) ? true : false;\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet formatter: TextFormatter;\r\n\r\n/**\r\n * Returns the global instance of [[TextFormatter]].\r\n *\r\n * All classes and instances should reuse this universal text formatter,\r\n * rather than create their own instance of it.\r\n *\r\n * @type {TextFormatter}\r\n */\r\nexport function getTextFormatter(): TextFormatter {\r\n\tif (formatter == null) {\r\n\t\tformatter = new TextFormatter();\r\n\t}\r\n\r\n\treturn formatter;\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextFormatter\"] = TextFormatter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/formatters/TextFormatter.ts","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { OrderedList, OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { system } from \"../../core/System\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo review description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic bullets = new Dictionary<string, Bullet>();\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Series}\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t * @type {boolean}\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if the series should be initially hidden.\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\thidden?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to the series name when it is retrieved.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tname: string,\r\n\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\titemReaderText: string\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @type {ISeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IComponentProperties}\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISeriesEvents}\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t *\r\n\t * @type {SeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A name of the Series.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _title: string;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t *\r\n\t * @type {LegendDataItem<Series, ISeriesEvents>}\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t *\r\n\t * @type {ListTemplate<Bullet>}\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t *\r\n\t * @type {SerialChart}\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t *\r\n\t * @type {List<AxisDataItem>}\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t *\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t *\r\n\t * @type {Number}\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * As calculating totals is expensive operation and not often needed, by default we do not do it. In case you use percent for your charts, you must set this to true.\r\n\t * Pie chart, which uses percent sets this to true by default.\r\n\t * @todo review description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from chart's series list.\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose:boolean = true;\r\n\t\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {SeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param {this[\"_chart\"]}  value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {this} Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param {Bullet}  bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param {IListEvents<Bullet>[\"inserted\"]}  event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Bullet>[\"inserted\"]) {\r\n\t\tlet bullet: Bullet = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tif (this.itemsFocusable()) {\r\n\t\t\tbullet.focusable = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param {IListEvents<Bullet>[\"inserted\"]}  event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Bullet>[\"removed\"]) {\r\n\t\tlet bullet: Bullet = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param  {string}  key  Key\r\n\t * @return {number}       Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\tif (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t\tstartIndex++;\r\n\t\t}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param {OrderedList<this[\"_dataItem\"]>} dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet count: { [index: string]: number } = {};\r\n\t\tlet sum: { [index: string]: number } = {};\r\n\t\tlet low: { [index: string]: number } = {};\r\n\t\tlet high: { [index: string]: number } = {};\r\n\t\tlet open: { [index: string]: number } = {};\r\n\t\tlet close: { [index: string]: number } = {};\r\n\t\tlet previous: { [index: string]: number } = {};\r\n\t\tlet first: { [index: string]: number } = {};\r\n\r\n\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\tlet startIndex: number = $math.max(0, this._workingStartIndex);\r\n\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\t\t\r\n\t\tlet endIndex: number = $math.min(this._workingEndIndex, this.dataItems.length);\r\n\r\n\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\tstartIndex = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\tendIndex = this.dataItems.length;\r\n\t\t}\r\n\r\n\t\tif (startIndex > 0) {\r\n\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t// save previous\r\n\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\tfor (let key in dataItem.values) {\r\n\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t// count values\r\n\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t// sum values\r\n\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t// open\r\n\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// close\r\n\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t// low\r\n\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// high\r\n\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t// previous change\r\n\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t// previous change percent\r\n\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t// save previous\r\n\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.calculatePercent) {\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\tlet ksum: number = sum[key];\r\n\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && ksum > 0) {\r\n\r\n\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t// so we do startIndex - 1\r\n\t\tif (startIndex > 0) {\r\n\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t//for (let key in zeroItem.values) {\r\n\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t// change\r\n\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t// change percent\r\n\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t//}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.bulletsContainer.fill = this.fill;\r\n\t\tthis.bulletsContainer.stroke = this.stroke;\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tif (dataItem.index < this.startIndex || dataItem.index >= this.endIndex) {\r\n\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SeriesDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t$iter.each(this.bullets.iterator(), (bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Bullet = <Bullet>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (!bullet) {\r\n\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\tbullet.visible = true;\r\n\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\tlet readerText = this.itemReaderText || (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\tbullet.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tbullet.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\tbullet.events.once(\"over\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\tbullet.events.once(\"out\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"]): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param {IListEvents<AxisDataItem>[\"inserted\"]}  event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Axis}    axis  [description]\r\n\t * @return {string}        [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  xPosition  X\r\n\t * @param {number}  yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value);\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Bullet]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return {ListTemplate<Bullet>} List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param {boolean} value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis._title = value;\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.adapter.apply(\"name\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param {string} value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"itemReaderText\", readerText);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param {LegendDataItem<Series, ISeriesEvents>}  value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendDataItem<Series, ISeriesEvents>} Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]}  dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"]) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param {Series}  source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param {Error} e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tthis._chart.modal.content = e.message;\r\n\t\tthis._chart.modal.closable = false;\r\n\t\tthis._chart.modal.open();\r\n\t\tthis._chart.disabled = true;\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif(fieldValues){\r\n\t\t\t\t\t\t\t\tlet workingValue = fieldValues.workingValue;\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent = (workingValue - minValue) / (maxValue - minValue);\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\r\n\tprotected getVisibility(): boolean {\r\n\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\tif (hidden) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.getVisibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  a  Element 1\r\n\t * @param  {string}  b  Element 2\r\n\t * @return {Ordering}   Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/series/Series.ts","/**\r\n * Provides functionality used to creating and showing tooltips (balloons).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { PointedRectangle } from \"./PointedRectangle\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Label } from \"../elements/Label\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { color } from \"../utils/Color\";\r\nimport { DropShadowFilter } from \"../rendering/filters/DropShadowFilter\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents options for tooltip pointer (arrow) orientation.\r\n *\r\n * @type {string}\r\n */\r\nexport type PointerOrientation = \"horizontal\" | \"vertical\";\r\n\r\n/**\r\n * Defines properties for [[Tooltip]].\r\n */\r\nexport interface ITooltipProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Pointer orientation: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @type {PointerOrientation}\r\n\t */\r\n\tpointerOrientation?: PointerOrientation;\r\n\r\n\t/**\r\n\t * Duration (ms) that takes for a Tooltip to move from one place to another.\r\n\t *\r\n\t * If set to a zero value, the Tooltop will jump to a new location\r\n\t * instantenously.\r\n\t *\r\n\t * If set to a non-zero value, the Tooltip will \"glide\" to a new location at\r\n\t * a speed determined by this setting.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use when animating Tooltip position.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {(value: number) => number}\r\n\t */\r\n\tanimationEasing?: (value: number) => number;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite\r\n\t * it is pointing to.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tgetStrokeFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it\r\n\t * is pointing to.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tgetFillFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better\r\n\t * readability.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tautoTextColor?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tooltip]].\r\n */\r\nexport interface ITooltipEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tooltip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITooltipAdapters extends IContainerAdapters, ITooltipProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Tooltip displays text and/or multimedia information in a balloon over chart\r\n * area.\r\n * @see {@link ITooltipEvents} for a list of available events\r\n * @see {@link ITooltipAdapters} for a list of available Adapters\r\n */\r\nexport class Tooltip extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ITooltipProperties}\r\n\t */\r\n\tpublic _properties!: ITooltipProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ITooltipAdapters}\r\n\t */\r\n\tpublic _adapter!: ITooltipAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ITooltipEvents}\r\n\t */\r\n\tpublic _events!: ITooltipEvents;\r\n\r\n\t/**\r\n\t * A type for the background element.\r\n\t *\r\n\t * @type {PointedRectangle}\r\n\t */\r\n\tpublic _background: PointedRectangle;\r\n\r\n\t/**\r\n\t * Text element that represents tooltip contents.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * A container that should be considered a \"boundary\" for the tooltip. A\r\n\t * bounding container is used to calculate numeric boundaries\r\n\t * (`boundingRect`). It is used to constrain the Tooltip to specific area on\r\n\t * the chart, like for example cursor tooltip in plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _boundingContainer: Container;\r\n\r\n\t/**\r\n\t * Holds numeric boundary values. Calculated from the `boundingContainer`.\r\n\t *\r\n\t * @type {IRectangle}\r\n\t */\r\n\tprotected _boundingRect: IRectangle = { x: -40000, y: -40000, width: 80000, height: 80000 };\r\n\r\n\t/**\r\n\t * Coordinates tooltip's pointer (stem) should point to.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tprotected _pointTo: IPoint = { x: 0, y: 0 };\r\n\r\n\t/**\r\n\t * If set to `true` the pointer/stem of the Tooltip will not go outside\r\n\t * Tooltip's width or height depending on pointer's orientation.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic fitPointerToBounds: boolean = false;\r\n\r\n\t/**\r\n\t * If tooltipOrientation is vertical, it can be drawn below or above point. We need to know this when solving overlapping\r\n\t *\r\n\t * @type \"up\" | \"down\"\r\n\t */\r\n\tprotected _verticalOrientation: \"up\" | \"down\" = \"up\";\r\n\r\n\t/**\r\n\t * Position animation of a tooltip\r\n\t */\r\n\tprotected _animation: $type.Optional<Animation>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Tooltip\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.getFillFromObject = true;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\t\tthis.hiddenState.transitionDuration = 1;\r\n\r\n\t\t// Create chrome/background\r\n\t\tlet background = this.background;\r\n\t\tbackground.interactionsEnabled = false;\r\n\t\tbackground.fillOpacity = 0.9;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.stroke = color(\"#ffffff\");\r\n\t\tbackground.cornerRadius = 3;\r\n\t\tbackground.pointerLength = 6;\r\n\t\tbackground.pointerBaseWidth = 10;\r\n\r\n\t\tthis.autoTextColor = true;\r\n\r\n\t\t// Create text element\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tthis.label = label;\r\n\t\tlabel.padding(7, 12, 6, 12);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.fill = color(\"#ffffff\");\r\n\t\tthis._disposers.push(label);\r\n\r\n\t\tthis.label.events.on(\"sizechanged\", this.drawBackground, this);\r\n\r\n\t\tthis.label.zIndex = 1; // @todo remove this line when bg sorting is solved\r\n\r\n\t\t// Set defaults\r\n\t\tthis.pointerOrientation = \"vertical\";\r\n\r\n\t\tlet dropShadow = new DropShadowFilter();\r\n\t\tdropShadow.dy = 1;\r\n\t\tdropShadow.dx = 1;\r\n\t\tdropShadow.opacity = 0.5;\r\n\r\n\t\tthis.filters.push(dropShadow);\r\n\r\n\t\tthis.animationDuration = 0;\r\n\t\tthis.animationEasing = $ease.cubicOut;\r\n\r\n\t\t// Set accessibility options\r\n\t\tthis.role = \"tooltip\";\r\n\r\n\t\tthis.visible = false;\r\n\t\tthis.opacity = 0;\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\tthis.events.on(\"visibilitychanged\", this.handleVisibility, this);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected handleVisibility() {\r\n\t\tif (this.visible) {\r\n\t\t\tthis.label.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default false\r\n\t */\r\n\tpublic get getStrokeFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getStrokeFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @param {value} value boolean\r\n\t */\r\n\tpublic set getStrokeFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getStrokeFromObject\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better\r\n\t * readability.\r\n\t *\r\n\t * IMPORTANT: this feature is generally ignored, if `getFillFromObject = false`.\r\n\t *\r\n\t * If inheriting of `fill` color from object tooltip is displayed for is\r\n\t * disabled, this feature will not work. If you are explicitly setting a\r\n\t * color for tooltip background, you may set a color for its label as well\r\n\t * using `tooltip.label.fill` property.\r\n\t *\r\n\t *\r\n\t * @param {value} value boolean\r\n\t */\r\n\tpublic set autoTextColor(value: boolean) {\r\n\t\tthis.setPropertyValue(\"autoTextColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean}\r\n\t * @default true\r\n\t */\r\n\tpublic get autoTextColor(): boolean {\r\n\t\treturn this.getPropertyValue(\"autoTextColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default true\r\n\t */\r\n\tpublic get getFillFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getFillFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param {value} value boolean\r\n\t */\r\n\tpublic set getFillFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getFillFromObject\", value, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns a background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {PointedRectangle} Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new PointedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Pointer orientation: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param {PointerOrientation}  value  Orientation\r\n\t */\r\n\tpublic set pointerOrientation(value: PointerOrientation) {\r\n\t\tthis.setPropertyValue(\"pointerOrientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {PointerOrientation} Orientation\r\n\t */\r\n\tpublic get pointerOrientation(): PointerOrientation {\r\n\t\treturn this.getPropertyValue(\"pointerOrientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Duration in milliseconds for the animation to take place when the tooltip\r\n\t * is moving from one place to another.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  number\r\n\t */\r\n\tpublic set animationDuration(value: number) {\r\n\t\tthis.setPropertyValue(\"animationDuration\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {PointerOrientation} Orientation\r\n\t */\r\n\tpublic get animationDuration(): number {\r\n\t\treturn this.getPropertyValue(\"animationDuration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tooltip animation (moving from one place to another) easing function.\r\n\t *\r\n\t * @default $ease.cubicOut\r\n\t * @param {Function}  value (value: number) => number\r\n\t */\r\n\tpublic set animationEasing(value: (value: number) => number) {\r\n\t\tthis.setPropertyValue(\"animationEasing\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Function}\r\n\t */\r\n\tpublic get animationEasing(): (value: number) => number {\r\n\t\treturn this.getPropertyValue(\"animationEasing\");\r\n\t}\r\n\r\n\t/**\r\n\t * HTML content for the Tooltip.\r\n\t *\r\n\t * Provided value will be used as is, without applying any further\r\n\t * formatting to it.\r\n\t *\r\n\t * @param {string}  value  HTML content\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tif (this.label.html != value) {\r\n\t\t\tthis.label.html = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} HTML content\r\n\t */\r\n\tpublic get html(): string {\r\n\t\treturn this.label.html;\r\n\t}\r\n\r\n\t/**\r\n\t * SVG text content for the Tooltip.\r\n\t *\r\n\t * Text can have a number of formatting options supported by\r\n\t * [[TextFormatter]].\r\n\t *\r\n\t * @param {string}  value  SVG text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tif (this.label.text != value) {\r\n\t\t\tthis.label.text = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} SVG text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.label.text;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet label = this.label;\r\n\r\n\t\tif (label.invalid) {\r\n\t\t\tlabel.validate();\r\n\t\t}\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet textW: number = label.measuredWidth;\r\n\t\tlet textH: number = label.measuredHeight;\r\n\r\n\t\tlet pointerLength = this.background.pointerLength;\r\n\r\n\t\tlet textX: number;\r\n\t\tlet textY: number;\r\n\r\n\t\t// try to handle if text is wider than br\r\n\t\tif (textW > boundingRect.width) {\r\n\t\t\tlet p0 = $utils.spritePointToDocument({ x: boundingRect.x, y: boundingRect.y }, this.parent);\r\n\t\t\tlet p1 = $utils.spritePointToDocument({ x: boundingRect.x + boundingRect.width, y: boundingRect.y + boundingRect.height }, this.parent);\r\n\r\n\t\t\tlet documentWidth = document.body.offsetWidth;\r\n\t\t\tlet documentHeight = document.body.offsetHeight;\r\n\r\n\t\t\tif (p1.x > documentWidth / 2) {\r\n\t\t\t\tboundingRect.x = boundingRect.width - textW;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tboundingRect.width = boundingRect.x + textW;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// horizontal\r\n\t\tif (this.pointerOrientation == \"horizontal\") {\r\n\t\t\ttextY = - textH / 2;\r\n\t\t\tif (x > boundingRect.x + boundingRect.width / 2) {\r\n\t\t\t\ttextX = - textW / 2 - pointerLength;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextX = textW / 2 + pointerLength;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// vertical pointer\r\n\t\telse {\r\n\t\t\ttextX = $math.fitToRange(0, boundingRect.x - x + textW / 2, boundingRect.x - x + boundingRect.width - textW / 2);\r\n\r\n\t\t\tif (y > boundingRect.y + textH + pointerLength) {\r\n\t\t\t\ttextY = - textH - pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"up\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextY = pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"down\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttextY = $math.fitToRange(textY, boundingRect.y - y, boundingRect.y + boundingRect.height - textH - y);\r\n\r\n\t\tlabel.x = textX;\r\n\t\tlabel.y = textY;\r\n\r\n\t\tthis.drawBackground();\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides functionality from the superclass.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\tthis.group.addToBack(this.background.group);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws Tooltip background (chrome, background and pointer/stem).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic drawBackground(): void {\r\n\t\tlet label = this.label;\r\n\t\tlet background: PointedRectangle = this.background;\r\n\r\n\t\tlet textWidth: number = label.measuredWidth;\r\n\t\tlet textHeight: number = label.measuredHeight;\r\n\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet bgWidth: number = textWidth;\r\n\t\tlet bgX: number = label.pixelX - textWidth / 2;\r\n\r\n\t\tlet bgHeight: number = textHeight;\r\n\t\tlet bgY: number = label.pixelY;\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundX1: number = boundingRect.x - x;\r\n\t\tlet boundX2: number = boundX1 + boundingRect.width;\r\n\t\tlet boundY1: number = boundingRect.y - y;\r\n\t\tlet boundY2: number = boundY1 + boundingRect.height;\r\n\r\n\t\tbackground.x = bgX;\r\n\t\tbackground.y = bgY;\r\n\r\n\t\tbackground.width = bgWidth;\r\n\t\tbackground.height = bgHeight;\r\n\r\n\t\tif (this.fitPointerToBounds) {\r\n\t\t\tbackground.pointerX = $math.fitToRange(- background.x, boundX1 - background.x, boundX2 - background.x);\r\n\t\t\tbackground.pointerY = $math.fitToRange(- background.y, boundY1 - background.y, boundY2 - background.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbackground.pointerX = - background.x;\r\n\t\t\tbackground.pointerY = - background.y;\r\n\t\t}\r\n\r\n\t\tbackground.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Set nes tooltip's anchor point and moves whole tooltip.\r\n\t *\r\n\t * @param {number}  x  X coordinate\r\n\t * @param {number}  y  Y coordinate\r\n\t */\r\n\tpublic pointTo(point: IPoint, instantly?: boolean): void {\r\n\t\tif (this._pointTo.x != point.x || this._pointTo.y != point.y) {\r\n\t\t\tthis._pointTo = point;\r\n\t\t\tthis.invalidate();\r\n\r\n\t\t\t// this helps to avoid strange animation from nowhere on initial show or when balloon was hidden already\r\n\t\t\tif (!this.visible || instantly) {\r\n\t\t\t\tthis.moveTo(this._pointTo);\r\n\t\t\t\tif (this._animation) {\r\n\t\t\t\t\tthis._animation.kill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// helps to avoid flicker on top/left corner\r\n\t\t\t\tif (this.pixelX == 0 && this.pixelY == 0) {\r\n\t\t\t\t\tthis.moveTo(this._pointTo);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._animation) {\r\n\t\t\t\t\t\tthis._animation.kill();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._animation = new Animation(this, [{ property: \"x\", to: point.x, from: this.pixelX }, { property: \"y\", to: point.y, from: this.pixelY }], this.animationDuration, this.animationEasing).start();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets numeric boundaries Tooltip needs to obey (so it does not go outside\r\n\t * specific area).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IRectangle} rectangle Boundary rectangle\r\n\t */\r\n\tpublic setBounds(rectangle: IRectangle): void {\r\n\t\tlet oldRect = this._boundingRect;\r\n\t\tif (oldRect.x != rectangle.x || oldRect.y != rectangle.y || oldRect.width != rectangle.width || oldRect.height != rectangle.height) {\r\n\t\t\tthis._boundingRect = rectangle;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[Container]] instance to be used when calculating numeric\r\n\t * boundaries for the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  container  Boundary container\r\n\t */\r\n\tpublic set boundingContainer(container: Container) {\r\n\t\tthis._boundingContainer = container;\r\n\t\t// TODO remove closures ?\r\n\t\tcontainer.events.on(\"sizechanged\", this.updateBounds, this);\r\n\t\tcontainer.events.on(\"positionchanged\", this.updateBounds, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates numeric boundaries for the Tooltip, based on the\r\n\t * `boundingCountrainer`.\r\n\t */\r\n\tprotected updateBounds(): void {\r\n\t\tlet boundingContainer: Container = this._boundingContainer;\r\n\t\t// to global\r\n\t\tlet rect: IRectangle = $utils.spriteRectToSvg({\r\n\t\t\tx: boundingContainer.pixelX,\r\n\t\t\ty: boundingContainer.pixelY,\r\n\t\t\twidth: boundingContainer.maxWidth,\r\n\t\t\theight: boundingContainer.maxHeight\r\n\t\t}, boundingContainer);\r\n\t\tthis.setBounds(rect);\r\n\t}\r\n\r\n\t/**\r\n\t * If tooltipOrientation is vertical, it can be drawn below or above point.\r\n\t * We need to know this when solving overlapping.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return \"up\" | \"down\"\r\n\t */\r\n\tpublic get verticalOrientation(): \"up\" | \"down\" {\r\n\t\treturn this._verticalOrientation;\r\n\t}\r\n\r\n\t/**\r\n\t * To avoid stackoverflow\r\n\t * @ignore\r\n\t */\r\n\tpublic get tooltip(): Tooltip {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and other attributes.\r\n\t *\r\n\t * @param {Tooltip}  source  Source\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Tooltip.ts","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IBulletProperties}\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IBulletAdapters}\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IBulletEvents}\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param {number}  value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tthis.setPropertyValue(\"locationX\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param {number}  value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tthis.setPropertyValue(\"locationY\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {string}  value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param {string}  value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/Bullet.ts","/**\r\n * Provides functionality used to build scrollbars.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { IRange } from \"../defs/IRange\";\r\nimport { Sprite, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Orientation } from \"../defs/Orientation\";\r\nimport { ResizeButton } from \"../elements/ResizeButton\";\r\nimport { Button } from \"../elements/Button\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Duration in milliseconds of Scrollbar animation.\r\n\t *\r\n\t * This affects how fast Scrollbar elements move/resize. For example when\r\n\t * chart zooms or pans, Scrollbar elements' positions need to be adjusted\r\n\t * as well. This setting will affect whether they will be relocated\r\n\t * instantenously (0), or will animte gradually.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use when animating (moving/sizing) Scrollbar\r\n\t * elements.\r\n\t *\r\n\t * @type {(value: number) => number}\r\n\t */\r\n\tanimationEasing?: (value: number) => number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when range of scrollbar selection changes.\r\n\t */\r\n\trangechanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarAdapters extends IContainerAdapters, IScrollbarProperties {\r\n\r\n\t/**\r\n\t * Applied to a position value when it is retrieved.\r\n\t */\r\n\tpositionValue: {\r\n\t\tvalue: any,\r\n\t\tposition: number\r\n\t}\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Scrollbar is a generic control allowing to select a range of values or pan\r\n * the selection.\r\n *\r\n * @see {@link IScrollbarEvents} for a list of available events\r\n * @see {@link IScrollbarAdapters} for a list of available Adapters\r\n */\r\nexport class Scrollbar extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {PointedRectangleProperties}\r\n\t */\r\n\tpublic _properties!: IScrollbarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IScrollbarAdapters}\r\n\t */\r\n\tpublic _adapter!: IScrollbarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IScrollbarEvents}\r\n\t */\r\n\tpublic _events!: IScrollbarEvents;\r\n\r\n\t/**\r\n\t * Holds a reference to a draggable rectangle that fills the space between\r\n\t * two selection grips. It can be used to pan the selection maintaining the\r\n\t * distance between start and end grips.\r\n\t *\r\n\t * @type {Optional<Button>}\r\n\t */\r\n\tprotected _thumb: $type.Optional<Button>;\r\n\r\n\t/**\r\n\t * Orientation of the scrollbar.\r\n\t *\r\n\t * @type {Orientation}\r\n\t */\r\n\tprotected _orientation: Orientation;\r\n\r\n\t/**\r\n\t * A button (grip) instance to be used to select lower range value.\r\n\t *\r\n\t * @type {ResizeButton}\r\n\t */\r\n\tprotected _startGrip!: ResizeButton;\r\n\r\n\t/**\r\n\t * A button (grip) instance to be used to select upper range value.\r\n\t *\r\n\t * @type {ResizeButton}\r\n\t */\r\n\tprotected _endGrip!: ResizeButton;\r\n\r\n\t/**\r\n\t * Currently selected lower (start) value.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _start!: number;\r\n\r\n\t/**\r\n\t * Currently selected upper (end) value.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _end!: number;\r\n\r\n\t/**\r\n\t * Previously selected lower (start) value.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _previousStart: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Previously selected upper (end) value.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _previousEnd: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * An [[Animation]] instance that moves \"thumb\".\r\n\t *\r\n\t * @type {Optional<Animation>}\r\n\t */\r\n\tprotected _thumbAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * An [[Animation]] instance that moves zoom grip buttons.\r\n\t *\r\n\t * @type {Optional<Animation>}\r\n\t */\r\n\tprotected _zoomAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * A value of previously selected lower value, used for doubleclick function.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _prevStart: number = 0;\r\n\r\n\t/**\r\n\t * A value of previously selected upper value, used for doubleclick function.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _prevEnd: number = 1;\r\n\r\n\t/**\r\n\t * Indicates if the Scrollbar is currently \"busy\" (animating and or\r\n\t * performing zoom by user interaction).\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isBusy: boolean = false;\r\n\r\n\t/**\r\n\t * [_skipRangeEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _skipRangeEvents: boolean = false;\r\n\r\n\t/**\r\n\t * Holds timeout reference that resets \"busy\" status.\r\n\t *\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprotected _unbusyTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * [undefined description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {\"start\" | \"end\" | undefined}\r\n\t */\r\n\tprotected _usingGrip: \"start\" | \"end\" | undefined;\r\n\r\n\t/**\r\n\t * Sets the type of the element to use as background.\r\n\t *\r\n\t * @type {RoundedRectangle}\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Hide grips when not hovered over scrollbar?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _hideGrips!: boolean;\r\n\r\n\t/**\r\n\t * A disposer for the hover event.\r\n\t *\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprotected _overDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * A disposer for the out event.\r\n\t *\r\n\t * @type {Optional<IDisposer>}\r\n\t */\r\n\tprotected _outDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Update the selection when dragging the grips.\r\n\t *\r\n\t * If set to `false` selection will be updated only when the grip is\r\n\t * released.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic updateWhileMoving: boolean = true;\r\n\r\n\t/**\r\n\t * Construtor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Scrollbar\";\r\n\r\n\t\tthis.minHeight = 12;\r\n\t\tthis.minWidth = 12;\r\n\r\n\t\tthis.animationDuration = 0;\r\n\t\tthis.animationEasing = $ease.cubicOut;\r\n\r\n\t\tthis.margin(10, 10, 10, 10);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// background is also container as it might contain graphs, grid, etc\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(10, 10, 10, 10);\r\n\t\tbackground.fill = interfaceColors.getFor(\"fill\");\r\n\t\tbackground.fillOpacity = 0.5;\r\n\r\n\t\tthis.startGrip = new ResizeButton();\r\n\t\tthis.endGrip = new ResizeButton();\r\n\r\n\t\t// Default orientation...\r\n\t\t// ... is set in `applyInternalDefaults()` because it accesses `language`\r\n\t\t// and should only be started to access when parent is set\r\n\r\n\t\t// Set events\r\n\t\tthis.events.on(\"transformed\", this.updateThumb, this);\r\n\r\n\t\t// Initial positions\r\n\t\tthis.start = 0;\r\n\t\tthis.end = 1;\r\n\r\n\t\t// Set roles\r\n\t\tthis.role = \"scrollbar\";\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\t\tthis.startGrip.role = \"slider\";\r\n\t\tthis.endGrip.role = \"slider\";\r\n\r\n\t\t// otherwise range changed wont' be registered\r\n\t\tthis.events.once(\"inited\", () => {\r\n\t\t\tthis._previousStart = undefined;\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t})\r\n\r\n\r\n\t\tthis.hideGrips = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!this._orientation) {\r\n\t\t\tthis.orientation = \"horizontal\";\r\n\t\t}\r\n\r\n\t\t// Set screen reader tetxt accordingly\r\n\t\tif (this.orientation === \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\t\tthis.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.thumb.readerDescription)) {\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.startGrip.readerDescription)) {\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.endGrip.readerDescription)) {\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\t\tthis.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.thumb.readerDescription)) {\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.startGrip.readerDescription)) {\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.endGrip.readerDescription)) {\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the layout of the scrollbar's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\t\tthis.updateSize();\r\n\t\tsuper.validateLayout();\r\n\r\n\t\t// when size changes, need to update extremes\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * Update background for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processBackground(): void {\r\n\t\tsuper.processBackground();\r\n\t\tlet background = this.background;\r\n\r\n\t\tbackground.clickable = true;\r\n\t\tbackground.events.on(\"hit\", this.handleBgHit, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the particular place when clicked/tapped on the scrollbar\r\n\t * background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {ISpriteEvents[\"hit\"]}  event  Event\r\n\t */\r\n\tpublic handleBgHit(event: ISpriteEvents[\"hit\"]): void {\r\n\t\tthis.makeBusy();\r\n\t\tlet point: IPoint = event.spritePoint;\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tlet thumbX: number = point.x - thumb.pixelWidth / 2;\r\n\t\t\tthumbX = $math.fitToRange(thumbX, 0, this.innerWidth - thumb.pixelWidth);\r\n\t\t\tthis._thumbAnimation = thumb.animate({ property: \"x\", to: thumbX }, this.animationDuration, this.animationEasing);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet thumbY: number = point.y - thumb.pixelHeight / 2;\r\n\t\t\tthumbY = $math.fitToRange(thumbY, 0, this.innerHeight - thumb.pixelHeight);\r\n\t\t\tthis._thumbAnimation = thumb.animate({ property: \"y\", to: thumbY }, this.animationDuration, this.animationEasing);\r\n\t\t}\r\n\t\tif (this.animationDuration > 0) {\r\n\t\t\tthis._thumbAnimation.events.on(\"animationended\", this.makeUnbusy, this);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._thumb.validate();\r\n\t\t\tthis.makeUnbusy();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set scrollbar as busy. (currently zooming)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeBusy(): void {\r\n\t\tthis._isBusy = true;\r\n\t\tthis._skipRangeEvents = false;\r\n\t\tif (this._unbusyTimeout) {\r\n\t\t\tthis.removeDispose(this._unbusyTimeout);\r\n\t\t}\r\n\t\tthis._unbusyTimeout = undefined;\r\n\t\tthis.stopAnimations();\r\n\t}\r\n\r\n\t/**\r\n\t * Stops all animations, currently playing for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stopAnimations(): void {\r\n\t\tif (this._thumbAnimation) {\r\n\t\t\tthis._thumbAnimation.stop(true);\r\n\t\t}\r\n\t\tif (this._zoomAnimation) {\r\n\t\t\tthis._zoomAnimation.stop(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels \"busy\" status of the Scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeUnbusy(): void {\r\n\t\t/**\r\n\t\t * We cannot make Scrollbar not busy right after release, because then axes\r\n\t\t * will take over controll and Scrollbar will start to animate.\r\n\t\t * Theorethically, it's not right to set timeout by `animationDuration`,\r\n\t\t * however we can not know all the durations of elements we scroll, so we\r\n\t\t * assume that animation duration will be the same as\r\n\t\t * `interpolationDuration` or `rangeChange` duration.\r\n\t\t */\r\n\t\tthis._unbusyTimeout = this.setTimeout(this.makeUnbusyReal.bind(this), this.animationDuration * 1.1);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [makeUnbusyReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeUnbusyReal(): void {\r\n\t\tthis._usingGrip = undefined;\r\n\t\tthis._isBusy = false;\r\n\t\tif (!this.updateWhileMoving) {\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disptatches rangechanged event if it really changed\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected dispatchRangeChange() {\r\n\t\tif (this._previousEnd != this.end || this._previousStart != this.start) {\r\n\t\t\tthis._previousStart = this.start;\r\n\t\t\tthis._previousEnd = this.end;\r\n\t\t\tthis.dispatch(\"rangechanged\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the \"thumb\" element. A draggable element between the grips.\r\n\t */\r\n\tprotected updateThumb(): void {\r\n\r\n\t\tif (!this.parent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\r\n\t\tlet start: number = this.start;\r\n\t\tlet end: number = this.end;\r\n\r\n\t\tlet startGrip: ResizeButton = this.startGrip;\r\n\t\tlet endGrip: ResizeButton = this.endGrip;\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\r\n\t\t\tlet innerWidth: number = this.innerWidth;\r\n\r\n\t\t\tthumb.width = innerWidth * (end - start);\r\n\t\t\tthumb.maxX = innerWidth - thumb.pixelWidth;\r\n\t\t\tthumb.x = start * innerWidth;\r\n\r\n\t\t\tstartGrip.moveTo({ x: thumb.pixelX, y: 0 }, undefined, undefined, true); // overrides dragging\r\n\t\t\tendGrip.moveTo({ x: thumb.pixelX + thumb.pixelWidth, y: 0 }, undefined, undefined, true);\r\n\r\n\t\t\tstartGrip.readerTitle = this.language.translate(\r\n\t\t\t\t\"From %1\",\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\t\tvalue: Math.round(start * 100) + \"%\",\r\n\t\t\t\t\tposition: start\r\n\t\t\t\t}).value\r\n\t\t\t);\r\n\r\n\t\t\tendGrip.readerTitle = this.language.translate(\r\n\t\t\t\t\"To %1\",\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\t\tvalue: Math.round(end * 100) + \"%\",\r\n\t\t\t\t\tposition: end\r\n\t\t\t\t}).value\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet innerHeight: number = this.innerHeight;\r\n\r\n\t\t\tthumb.height = innerHeight * (end - start);\r\n\t\t\tthumb.maxY = innerHeight - thumb.pixelHeight;\r\n\t\t\tthumb.y = (1 - end) * innerHeight;\r\n\r\n\t\t\tstartGrip.moveTo({ x: 0, y: thumb.pixelY + thumb.pixelHeight }, undefined, undefined, true);\r\n\t\t\tendGrip.moveTo({ x: 0, y: thumb.pixelY }, undefined, undefined, true);\r\n\r\n\t\t\tstartGrip.readerTitle = this.language.translate(\r\n\t\t\t\t\"To %1\",\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\t\tvalue: Math.round((1 - start) * 100) + \"%\",\r\n\t\t\t\t\tposition: (1 - start)\r\n\t\t\t\t}).value\r\n\t\t\t);\r\n\r\n\t\t\tendGrip.readerTitle = this.language.translate(\r\n\t\t\t\t\"From %1\",\r\n\t\t\t\tundefined,\r\n\t\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\t\tvalue: Math.round((1 - end) * 100) + \"%\",\r\n\t\t\t\t\tposition: (1 - end)\r\n\t\t\t\t}).value\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Add accessibility\r\n\t\tthumb.readerTitle = this.language.translate(\r\n\t\t\t\"From %1 to %2\",\r\n\t\t\tundefined,\r\n\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round(start * 100) + \"%\",\r\n\t\t\t\tposition: start\r\n\t\t\t}).value,\r\n\t\t\tthis.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round(end * 100) + \"%\",\r\n\t\t\t\tposition: end\r\n\t\t\t}).value\r\n\t\t);\r\n\r\n\t\tif (!this._skipRangeEvents && this.updateWhileMoving) {\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates extremes of the scrollbar.\r\n\t */\r\n\tprotected updateExtremes(): void {\r\n\t\tlet orientation = this.orientation;\r\n\t\tlet minX: number = 0;\r\n\t\tlet minY: number = 0;\r\n\t\tlet maxX: number = 0;\r\n\t\tlet maxY: number = 0;\r\n\r\n\t\tif (orientation == \"horizontal\") {\r\n\t\t\tmaxX = this.innerWidth;\r\n\t\t\tminY = maxY = this.innerHeight / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxY = this.innerHeight;\r\n\t\t\tminX = maxX = this.innerWidth / 2;\r\n\t\t}\r\n\r\n\t\tlet startGrip: ResizeButton = this.startGrip;\r\n\t\tstartGrip.minX = minX;\r\n\t\tstartGrip.maxX = maxX;\r\n\t\tstartGrip.minY = minY;\r\n\t\tstartGrip.maxY = maxY;\r\n\r\n\t\tlet endGrip: ResizeButton = this.endGrip;\r\n\t\tendGrip.minX = minX;\r\n\t\tendGrip.maxX = maxX;\r\n\t\tendGrip.minY = minY;\r\n\t\tendGrip.maxY = maxY;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tthumb.minX = minX;\r\n\t\tthumb.maxX = maxX;\r\n\t\tthumb.minY = minY;\r\n\t\tthumb.maxY = maxY;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates size of the scrollbar.\r\n\t */\r\n\tprotected updateSize(): void {\r\n\t\tlet orientation = this.orientation;\r\n\r\n\t\tlet startGrip = this.startGrip;\r\n\t\tif (startGrip) {\r\n\t\t\tstartGrip.orientation = orientation;\r\n\t\t}\r\n\t\tif (this.endGrip) {\r\n\t\t\tthis.endGrip.orientation = orientation;\r\n\t\t}\r\n\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\t\tif (thumb) {\r\n\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\tif (!$type.isNumber(this._pixelWidth)) {\r\n\t\t\t\t\tthis.width = percent(100);\r\n\t\t\t\t}\r\n\t\t\t\t// this teorethically might be wrong, if user indeed sets height of a horizontal scrollbar in percent\r\n\t\t\t\t// however without this height might be equal to 100% if previous orientation was set to horizontal\r\n\t\t\t\t// so this is ok solution, in case user really wants to have scrollbar height set in percent,\r\n\t\t\t\t// he should do this after orientation.\r\n\t\t\t\tif ($type.hasValue(this.percentHeight)) {\r\n\t\t\t\t\tthis.height = this.minHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthumb.height = this.innerHeight;\r\n\r\n\t\t\t\tthumb.verticalCenter = \"middle\";\r\n\t\t\t\tthumb.horizontalCenter = \"left\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!$type.isNumber(this._pixelHeight)) {\r\n\t\t\t\t\tthis.height = percent(100);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// same as above with percentHeight\r\n\t\t\t\tif ($type.hasValue(this.percentWidth)) {\r\n\t\t\t\t\tthis.width = this.minWidth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthumb.width = this.innerWidth;\r\n\t\t\t\tthumb.verticalCenter = \"top\";\r\n\t\t\t\tthumb.horizontalCenter = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POSITIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param {number}  position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn Math.min(this.getPosition(this._start), this.getPosition(this._end));\r\n\t}\r\n\r\n\t/**\r\n\t * [__start description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} position [description]\r\n\t */\r\n\tprotected set __start(position: number) {\r\n\t\tthis._start = this.getPosition(position);\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tprotected get __start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param {number}  position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__end = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Position (0-1)\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn Math.max(this.getPosition(this._start), this.getPosition(this._end));\r\n\t}\r\n\r\n\t/**\r\n\t * [__end description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} position [description]\r\n\t */\r\n\tprotected set __end(position: number) {\r\n\t\tthis._end = this.getPosition(position);\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._end;\r\n\t}\r\n\r\n\t/**\r\n\t * Current selection range.\r\n\t *\r\n\t * @readonly\r\n\t * @return {IRange} Range\r\n\t */\r\n\tpublic get range(): IRange {\r\n\t\treturn { start: this.start, end: this.end, priority: this._usingGrip };\r\n\t}\r\n\r\n\t/**\r\n\t * Disables range change events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic skipRangeEvents(): void {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis._skipRangeEvents = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixRange description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t * @param {IRange}  range  Range\r\n\t */\r\n\tpublic fixRange(range: IRange): void {\r\n\t\tif (range.start != $math.round(this._start, 2) || range.end != $math.round(this._end, 2)) {\r\n\t\t\tthis._start = range.start;\r\n\t\t\tthis._end = range.end;\r\n\r\n\t\t\tthis._skipRangeEvents = true;\r\n\t\t\tthis.updateThumb();\r\n\t\t\tthis._skipRangeEvents = false;\r\n\t\t\tthis.thumb.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getPosition description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param  {number}  position  [description]\r\n\t * @return {number}            [description]\r\n\t */\r\n\tprotected getPosition(position: number): number {\r\n\t\treturn $math.fitToRange($math.round(position, 4), 0, 1);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MISC\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Orientation of the scrollbar.\r\n\t *\r\n\t * Available options: \"horizontal\" (default) and \"vertical\".\r\n\t *\r\n\t * @default \"horizontal\"\r\n\t * @param {Orientation}  value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\r\n\t\tthis._orientation = value;\r\n\r\n\t\t// Set mouse cursors and screen reader tetxt accordingly\r\n\t\tif (value === \"horizontal\") {\r\n\r\n\t\t\t// Mouse styles\r\n\t\t\tthis.startGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n\t\t\tthis.endGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n\r\n\t\t\t// Reader text\r\n\t\t\t/*this.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");*/\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Mouse styles\r\n\t\t\tthis.startGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n\t\t\tthis.endGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n\r\n\t\t\t// Reader text\r\n\t\t\t/*this.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");*/\r\n\r\n\t\t}\r\n\t\tthis.updateByOrientation();\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateByOrientation() {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return {Orientation} Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this._orientation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * GRIPS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Start grip element. (button)\r\n\t *\r\n\t * @param {ResizeButton}  button  Grip element\r\n\t */\r\n\tpublic set startGrip(button: ResizeButton) {\r\n\t\tif (this._startGrip) {\r\n\t\t\tthis.removeDispose(this._startGrip);\r\n\t\t}\r\n\t\tthis._startGrip = button;\r\n\t\tthis.processGrip(button);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ResizeButton} Grip element\r\n\t */\r\n\tpublic get startGrip(): ResizeButton {\r\n\t\treturn this._startGrip;\r\n\t}\r\n\r\n\t/**\r\n\t * End grip element. (button)\r\n\t *\r\n\t * @param {ResizeButton}  button  Grip element\r\n\t */\r\n\tpublic set endGrip(button: ResizeButton) {\r\n\t\tif (this._endGrip) {\r\n\t\t\tthis.removeDispose(this._endGrip);\r\n\t\t}\r\n\t\tthis._endGrip = button;\r\n\t\tthis.processGrip(button);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ResizeButton} Grip element\r\n\t */\r\n\tpublic get endGrip(): ResizeButton {\r\n\t\treturn this._endGrip;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates the grip button with properties and events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {ResizeButton} button Grip button\r\n\t */\r\n\tpublic processGrip(button: ResizeButton) {\r\n\t\tbutton.parent = this;\r\n\t\tbutton.isMeasured = false;\r\n\t\tbutton.focusable = true;\r\n\r\n\t\t// Set button defaults\r\n\t\tbutton.showSystemTooltip = true;\r\n\t\tbutton.zIndex = 100;\r\n\r\n\t\tbutton.events.on(\"drag\", this.handleGripDrag, this);\r\n\t\tbutton.events.on(\"dragstop\", this.makeUnbusy, this);\r\n\t\tbutton.events.on(\"down\", this.makeBusy, this);\r\n\r\n\t\tthis._disposers.push(button);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positions of related elements after grip element is dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<ResizeButton, ISpriteEvents>[\"drag\"]}  event  Event\r\n\t */\r\n\tpublic handleGripDrag(event: AMEvent<ResizeButton, ISpriteEvents>[\"drag\"]): void {\r\n\t\tthis.makeBusy();\r\n\r\n\t\tif (event.target === this._startGrip) {\r\n\t\t\tthis._usingGrip = \"start\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._usingGrip = \"end\";\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tthis._start = this.startGrip.pixelX / this.innerWidth;\r\n\t\t\tthis._end = this.endGrip.pixelX / this.innerWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._start = 1 - this.startGrip.pixelY / this.innerHeight;\r\n\t\t\tthis._end = 1 - this.endGrip.pixelY / this.innerHeight;\r\n\t\t}\r\n\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * A \"thumb\" element.\r\n\t *\r\n\t * It's a draggable square space between the grips, that can be used to\r\n\t * pan the seleciton.\r\n\t *\r\n\t * @param {RoundedRectangle}  thumb  Thumb element\r\n\t */\r\n\tpublic set thumb(thumb: Button) {\r\n\t\tif (thumb) {\r\n\r\n\t\t\tif (this._thumb) {\r\n\t\t\t\tthis.removeDispose(this._thumb);\r\n\t\t\t}\r\n\r\n\t\t\tthis._thumb = thumb;\r\n\t\t\tthumb.parent = this;\r\n\t\t\tthumb.isMeasured = false;\r\n\t\t\tthumb.inert = true;\r\n\t\t\tthumb.draggable = true;\r\n\t\t\tthumb.clickable = true;\r\n\t\t\tthumb.hoverable = true;\r\n\t\t\tthumb.focusable = true;\r\n\t\t\tthumb.zIndex = 0;\r\n\r\n\t\t\t// TODO remove closures ?\r\n\t\t\t// Add events\r\n\r\n\t\t\t// Add cursor styles to thumb\r\n\t\t\tthumb.cursorOverStyle = MouseCursorStyle.grab;\r\n\t\t\tthumb.cursorDownStyle = MouseCursorStyle.grabbing;\r\n\r\n\t\t\tthumb.events.on(\"dragstart\", this.makeBusy, this);\r\n\t\t\tthumb.events.on(\"dragstop\", this.makeUnbusy, this);\r\n\t\t\tthumb.events.on(\"positionchanged\", this.handleThumbPosition, this);\r\n\t\t\tthumb.events.on(\"sizechanged\", this.handleThumbPosition, this);\r\n\t\t\tthumb.events.on(\"doublehit\", this.handleDoubleClick, this);\r\n\r\n\t\t\t// Add event for space and ENTER to toggle full zoom out and back\r\n\t\t\t// (same as doubleclick)\r\n\t\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, [\"space\", \"enter\"]) && this.thumb.isFocused) {\r\n\t\t\t\t\tev.event.preventDefault();\r\n\t\t\t\t\tthis.handleDoubleClick();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis._disposers.push(this._thumb);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {RoundedRectangle} Thumb element\r\n\t */\r\n\tpublic get thumb(): Button {\r\n\t\tif (!this._thumb) {\r\n\t\t\t// Create scrollbar controls (setters will handle adding disposers)\r\n\t\t\tlet thumb = new Button();\r\n\t\t\tthumb.background.cornerRadius(10, 10, 10, 10);\r\n\t\t\tthumb.padding(0, 0, 0, 0);\r\n\t\t\tthis.thumb = thumb;\r\n\t\t}\r\n\t\treturn this._thumb;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms-in and out the selection on double-click of the thumb.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDoubleClick(): void {\r\n\r\n\t\tthis.makeBusy();\r\n\r\n\t\tlet newStart: number = 0;\r\n\t\tlet newEnd: number = 1;\r\n\r\n\t\tif (this.start != 0 || this.end != 1) {\r\n\t\t\tthis._prevStart = this.start;\r\n\t\t\tthis._prevEnd = this.end;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewStart = this._prevStart;\r\n\t\t\tnewEnd = this._prevEnd;\r\n\t\t}\r\n\r\n\t\tlet zoomAnimation = this.animate([{ property: \"__start\", to: newStart }, { property: \"__end\", to: newEnd }], this.animationDuration, this.animationEasing);\r\n\r\n\t\tif (zoomAnimation && !zoomAnimation.isFinished()) {\r\n\t\t\tzoomAnimation.events.on(\"animationended\", this.makeUnbusy, this);\t\t\t\r\n\t\t\tthis._zoomAnimation = zoomAnimation;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.makeUnbusy();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positions of other elements when thumb is moved.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbPosition(): void {\r\n\t\tlet thumb = this.thumb;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tlet innerWidth = this.innerWidth;\r\n\t\t\tlet w = thumb.innerWidth;\r\n\t\t\tlet x = thumb.pixelX;\r\n\r\n\t\t\tthis._start = x / innerWidth;\r\n\t\t\tthis._end = (x + w) / innerWidth;\r\n\t\t\tthis.updateThumb();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet innerHeight = this.innerHeight;\r\n\t\t\tlet h = thumb.innerHeight;\r\n\t\t\tlet y = thumb.pixelY;\r\n\r\n\t\t\tthis._start = 1 - (y + h) / innerHeight;\r\n\t\t\tthis._end = 1 - y / innerHeight;\r\n\t\t\tthis.updateThumb();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {RoundedRectangle} Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Use this property to set whether grips should be always visible (`false`),\r\n\t * or they should just appear on scrollbar hover (`true`).\r\n\t *\r\n\t * @param {boolean}  value  Show only on hover?\r\n\t */\r\n\tpublic set hideGrips(value: boolean) {\r\n\r\n\t\tthis._hideGrips = value;\r\n\r\n\t\tif (this._overDisposer) {\r\n\t\t\tthis.removeDispose(this._overDisposer);\r\n\t\t}\r\n\t\tif (this._outDisposer) {\r\n\t\t\tthis.removeDispose(this._outDisposer);\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._overDisposer = this.events.on(\"over\", () => {\r\n\t\t\t\tthis.startGrip.show();\r\n\t\t\t\tthis.endGrip.show();\r\n\t\t\t})\r\n\t\t\tthis._outDisposer = this.events.on(\"out\", () => {\r\n\t\t\t\tthis.startGrip.hide();\r\n\t\t\t\tthis.endGrip.hide();\r\n\t\t\t})\r\n\t\t\tthis.startGrip.hide();\r\n\t\t\tthis.endGrip.hide();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startGrip.show();\r\n\t\t\tthis.endGrip.show();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Show only on hover?\r\n\t */\r\n\tpublic get hideGrips(): boolean {\r\n\t\treturn this._hideGrips;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Duration in milliseconds of scrollbar animation (happens when user clicks on a background of a scrollbar)\r\n\t * @default 0\r\n\t * @param {number} value number\r\n\t */\r\n\tpublic set animationDuration(value: number) {\r\n\t\tthis.setPropertyValue(\"animationDuration\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {PointerOrientation} Orientation\r\n\t */\r\n\tpublic get animationDuration(): number {\r\n\t\treturn this.getPropertyValue(\"animationDuration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Animation easing function.\r\n\t * @todo: review description and default\r\n\t * @default $ease.cubicOut\r\n\t * @param {Function}  value (value: number) => number\r\n\t */\r\n\tpublic set animationEasing(value: (value: number) => number) {\r\n\t\tthis.setPropertyValue(\"animationEasing\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Function}\r\n\t */\r\n\tpublic get animationEasing(): (value: number) => number {\r\n\t\treturn this.getPropertyValue(\"animationEasing\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Scrollbar\"] = Scrollbar;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Scrollbar.ts","/**\r\n * Functionality for drawing circles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { percent, Percent } from \"../utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Circle]].\r\n */\r\nexport interface ICircleProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Radius of the circle.\r\n\t *\r\n\t * Can be either absolute (pixels) or relative ([Percent]).\r\n\t * @type {number | Percent}\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Circle]].\r\n */\r\nexport interface ICircleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Circle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleAdapters extends ISpriteAdapters, ICircleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a circle\r\n * @see {@link ICircleEvents} for a list of available events\r\n * @see {@link ICircleAdapters} for a list of available Adapters\r\n */\r\nexport class Circle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ICircleProperties}\r\n\t */\r\n\tpublic _properties!: ICircleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ICircleAdapters}\r\n\t */\r\n\tpublic _adapter!: ICircleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ICircleEvents}\r\n\t */\r\n\tpublic _events!: ICircleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Circle\";\r\n\t\tthis.element = this.paper.add(\"circle\");\r\n\r\n\t\tthis.setPercentProperty(\"radius\", percent(100));\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"middle\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"middle\");\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the circle.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tthis.element.attr({ \"r\": this.pixelRadius });\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the circle.\r\n\t *\r\n\t * Can be either absolute (pixels) or relative ([Percent]).\r\n\t *\r\n\t * @param {number | Percent}  value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the circle in pixels.\r\n\t *\r\n\t * This is a read-only property. To set radius in pixels, use `radius`\r\n\t * property.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.radius, $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tlet pixelRadius = this.pixelRadius;\r\n\t\tthis._bbox = {\r\n\t\t\tx: -pixelRadius,\r\n\t\t\ty: -pixelRadius,\r\n\t\t\twidth: pixelRadius * 2,\r\n\t\t\theight: pixelRadius * 2\r\n\t\t};\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Circle\"] = Circle;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Circle.ts","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-to-string-tag.js\n// module id = 97\n// module chunks = 302","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-trim.js\n// module id = 98\n// module chunks = 302","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iterators.js\n// module id = 99\n// module chunks = 302","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_validate-collection.js\n// module id = 100\n// module chunks = 302","/**\r\n * Map series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../series/Series\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapObject } from \"./MapObject\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IMapDataObject, IMapPolygonDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Component}\r\n\t */\r\n\tpublic _component!: MapSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeriesDataItem\";\r\n\t\tthis.values.value = {};\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the data item.\r\n\t *\r\n\t * Value may be used in heat-map calculations.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IGeoPoint[]}  geoPoints  Points of the element\r\n\t */\r\n\tpublic updateExtremes(geoPoints: IGeoPoint[]): void {\r\n\t\tfor (let s: number = 0; s < geoPoints.length; s++) {\r\n\t\t\tlet longitude: number = geoPoints[s].longitude;\r\n\t\t\tlet latitude: number = geoPoints[s].latitude;\r\n\r\n\t\t\tif ((this.west > longitude) || !$type.isNumber(this.west)) {\r\n\t\t\t\tthis.west = longitude;\r\n\t\t\t}\r\n\t\t\tif ((this.east < longitude) || !$type.isNumber(this.east)) {\r\n\t\t\t\tthis.east = longitude;\r\n\t\t\t}\r\n\r\n\t\t\tif ((this.north < latitude) || !$type.isNumber(this.north)) {\r\n\t\t\t\tthis.north = latitude;\r\n\t\t\t}\r\n\t\t\tif ((this.south > latitude) || !$type.isNumber(this.south)) {\r\n\t\t\t\tthis.south = latitude;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [GEOJSONGeometry description]\r\n *\r\n * @type {string}\r\n * @todo Description\r\n */\r\nexport type GEOJSONGeometry = \"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\";\r\n\r\n/**\r\n * Defines data fields for [[MapSeries]].\r\n *\r\n * @todo Alllow any number of values?\r\n */\r\nexport interface IMapSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * A field number in data for a numeric value of the map object.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A flag telling if the series should get data from `geodata` or not\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseGeodata?: boolean;\r\n\r\n\t/**\r\n\t * A list of object ids to include from the series.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tinclude?: string[];\r\n\r\n\t/**\r\n\t * A list of object ids to exclude from the series.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\texclude?: string[];\r\n}\r\n\r\n/**\r\n * Defines events for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSeriesAdapters extends ISeriesAdapters, IMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for series of map objects.\r\n *\r\n * @see {@link IMapSeriesEvents} for a list of available Events\r\n * @see {@link IMapSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t *\r\n\t * @type {IMapSeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: IMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IMapSeriesProperties}\r\n\t */\r\n\tpublic _properties!: IMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IMapSeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: IMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IMapSeriesEvents}\r\n\t */\r\n\tpublic _events!: IMapSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t *\r\n\t * @type {MapSeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\t/**\r\n\t * The longitude of the East-most point in the series. (out of all elements)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * The longitude of the West-most point in the series. (out of all elements)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * The latitude of the South-most point in the series. (out of all elements)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * The latitude of the North-most point in the series. (out of all elements)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t *\r\n\t * @type {MapChart}\r\n\t */\r\n\tpublic _chart: MapChart;\r\n\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeries\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {MapSeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tif ((this.west > dataItem.west) || !$type.isNumber(this.west)) {\r\n\t\t\t\tthis.west = dataItem.west;\r\n\t\t\t}\r\n\t\t\tif ((this.east < dataItem.east) || !$type.isNumber(this.east)) {\r\n\t\t\t\tthis.east = dataItem.east;\r\n\t\t\t}\r\n\r\n\t\t\tif ((this.north < dataItem.north) || !$type.isNumber(this.north)) {\r\n\t\t\t\tthis.north = dataItem.north;\r\n\t\t\t}\r\n\t\t\tif ((this.south > dataItem.south) || !$type.isNumber(this.south)) {\r\n\t\t\t\tthis.south = dataItem.south;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif(this.chart){\r\n\t\t\tthis.chart.updateExtremes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether object should be included in series.\r\n\t *\r\n\t * @param  {string[]}  includes  A list of explicitly included ids\r\n\t * @param  {string[]}  excludes  A list of explicitly excluded ids\r\n\t * @param  {string}    id        Id of the object\r\n\t * @return {boolean}             Include?\r\n\t */\r\n\tprotected checkInclude(includes: string[], excludes: string[], id: string): boolean {\r\n\t\tif (includes) {\r\n\t\t\tif (includes.length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (includes.indexOf(id) == -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (excludes && excludes.length > 0) {\r\n\t\t\tif (excludes.indexOf(id) != -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Should the map extract all the data about element from the GeoJSON?\r\n\t *\r\n\t * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`\r\n\t * polygon series will need to contain geographical data in itself in order\r\n\t * to be drawn.\r\n\t *\r\n\t * If this is set to `true`, series will try to extract data for its objects\r\n\t * from either chart-level `geodata` or from series' `geodata` which holds\r\n\t * map infor in GeoJSON format.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Use GeoJSON data?\r\n\t */\r\n\tpublic set useGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"useGeodata\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use GeoJSON data?\r\n\t */\r\n\tpublic get useGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"useGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be explictly included in the series.\r\n\t *\r\n\t * If this is not set, the series will automatically include all of the\r\n\t * objects, available in the GeoJSON map. (minus the ones listed in\r\n\t * `exclude`)\r\n\t *\r\n\t * If you need to display only specific objects, use `include`. E.g.:\r\n\t *\r\n\t * `include = [\"FR\", \"ES\", \"DE\"];`\r\n\t *\r\n\t * The above will show only France, Spain, and Germany out of the whole map.\r\n\t *\r\n\t * @param {string[]}  value  Included objects\r\n\t */\r\n\tpublic set include(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"include\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\t//this.data = [];\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string[]} Included objects\r\n\t */\r\n\tpublic get include(): string[] {\r\n\t\treturn this.getPropertyValue(\"include\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be excluded from the series.\r\n\t *\r\n\t * E.g. you want to include all of the areas from a GeoJSON map, except\r\n\t * Antarctica.\r\n\t *\r\n\t * You'd leave `include` empty, and set `exclude = [\"AQ\"]`.\r\n\t *\r\n\t * @param {string[]}  value  Excluded ids\r\n\t */\r\n\tpublic set exclude(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"exclude\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string[]} Excluded ids\r\n\t */\r\n\tpublic get exclude(): string[] {\r\n\t\treturn this.getPropertyValue(\"exclude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a newly added object.\r\n\t *\r\n\t * @param {IListEvents<MapObject>[\"inserted\"]} event [description]\r\n\t */\r\n\tprotected handleObjectAdded(event: IListEvents<MapObject>[\"inserted\"]) {\r\n\t\tlet mapObject: MapObject = event.newValue;\r\n\t\tmapObject.parent = this;\r\n\t\tmapObject.series = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The series supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param {Object} geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tthis.invalidateData();\r\n\r\n\t\t\t$iter.each(this._dataUsers.iterator(), (x) => {\r\n\t\t\t\tx.invalidateData();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Object} GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param {DataSource} value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, undefined, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return {DataSource} Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSeries\"] = MapSeries;\r\nregistry.registeredClasses[\"MapSeriesDataItem\"] = MapSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapSeries.ts","/**\r\n * Functionality for drawing rectangles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle]].\r\n */\r\nexport interface IRectangleProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[Rectangle]].\r\n */\r\nexport interface IRectangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRectangleAdapters extends ISpriteAdapters, IRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IRectangleProperties}\r\n\t */\r\n\tpublic _properties!: IRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IRectangleAdapters}\r\n\t */\r\n\tpublic _adapter!: IRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IRectangleEvents}\r\n\t */\r\n\tpublic _events!: IRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates a `<rect>` element\r\n\t * * Creates default state\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Rectangle\";\r\n\t\tthis.element = this.paper.add(\"rect\");\r\n\t\t//this.pixelPerfect = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet precision: number = this._positionPrecision;\r\n\t\tif (this.pixelPerfect) {\r\n\t\t\tprecision = 0;\r\n\t\t}\r\n\r\n\t\tlet w: number = $math.round(this.innerWidth, precision);\r\n\t\tlet h: number = $math.round(this.innerHeight, precision);\r\n\r\n\t\tthis.element.attr({\r\n\t\t\t\"width\": w,\r\n\t\t\t\"height\": h\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box based on element dimension settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tthis._bbox = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this.innerWidth,\r\n\t\t\theight: this.innerHeight\r\n\t\t};\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Rectangle.ts","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Ordering } from \"./Order\";\n\n\n/**\n * ============================================================================\n * COMPARING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Comparing function used for ordering.\n *\n * @ignore Exclude from docs\n * @todo Use localeCompare\n * @param  {string}    a  Item 1\n * @param  {string}    b  Item 2\n * @return {Ordering}     Result\n */\nexport function order(a: string, b: string): Ordering {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n\n/**\n * ============================================================================\n * OTHER FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Repeats a `string` number of times as set in `amount`.\n * \n * @ignore Exclude from docs\n * @todo Make this faster\n * @param  {string}  string  Source string\n * @param  {number}  amount  Number of times to repeat string\n * @return {string}          New string\n */\nexport function repeat(string: string, amount: number): string {\n\treturn new Array(amount + 1).join(string);\n}\n\n/**\n * Generates a random string `characters` length.\n * \n * @param  {number}  chars  Number of characters\n * @return {string}         Random string\n */\nexport function random(chars: number): string {\n\tlet res = \"\";\n\tlet choice = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\tfor (let i = 0; i < chars; i++) {\n\t\tres += choice.charAt(Math.floor(Math.random() * choice.length));\n\t}\n\treturn res;\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/String.ts","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Ordering } from \"./Order\";\n\n\n/**\n * ============================================================================\n * COMPARING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Comparing function used for ordering.\n *\n * @ignore Exclude from docs\n * @param  {number}    a  Number 1\n * @param  {number}    b  Number 2\n * @return {Ordering}     Result\n */\nexport function order(a: number, b: number): Ordering {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Number.ts","/**\r\n * Handles date and time formatting\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language, ILocaleProperties } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Interface describing parsed date format definition.\r\n */\r\nexport interface DateFormatInfo {\r\n\t\"template\": string;\r\n\t\"parts\": any[];\r\n}\r\n\r\n/**\r\n * Month names.\r\n *\r\n * @type {string}\r\n */\r\nexport type MonthNames = \"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\";\r\n\r\n/**\r\n * Short month names.\r\n *\r\n * @param {string}\r\n */\r\nexport type ShortMonthNames = \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May(short)\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\r\n\r\n/**\r\n * Weekedays.\r\n *\r\n * @type {string}\r\n */\r\nexport type Weekdays = \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\r\n\r\n/**\r\n * Short weekday names.\r\n *\r\n * @type {string}\r\n */\r\nexport type ShortWeekdays = \"Sun\" | \"Mon\" | \"Tue\" | \"Wed\" | \"Thu\" | \"Fri\" | \"Sat\";\r\n\r\n/**\r\n * Handles date and time formatting.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n * @todo Better type casting of passed in date?\r\n * @todo Quarter support?\r\n * @todo When parsing named months make the search case-insensitive\r\n * @todo Escape a.m./p.m. properly when used in RegEx\r\n */\r\nexport class DateFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * Date format.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _dateFormat: string = \"yyyy-MM-dd\";\r\n\r\n\t/**\r\n\t * Input date format.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _inputDateFormat: string = \"yyyy-MM-dd\";\r\n\r\n\t/**\r\n\t * Assume UTC time zone.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _utc: boolean = false;\r\n\r\n\t/**\r\n\t * First day of week.\r\n\t *\r\n\t * 0 - Sunday\r\n\t * 1 - Monday\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _firstDayOfWeek: number = 1;\r\n\r\n\t/**\r\n\t * A list of month names.\r\n\t *\r\n\t * @type {Array<MonthNames>}\r\n\t */\r\n\tprotected _months: Array<MonthNames> = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n\t/**\r\n\t * A list of short month names.\r\n\t *\r\n\t * @param {Array<ShortMonthNames>}\r\n\t */\r\n\tprotected _monthsShort: Array<ShortMonthNames> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\t/**\r\n\t * A list of weekday names.\r\n\t *\r\n\t * @type {Array<Weekdays>}\r\n\t */\r\n\tprotected _weekdays: Array<Weekdays> = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n\t/**\r\n\t * A list of short weekday names.\r\n\t *\r\n\t * @type {Array<ShortWeekdays>}\r\n\t */\r\n\tprotected _weekdaysShort: Array<ShortWeekdays> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t * @type {string}\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t *\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t *\r\n\t * @type {Optional<Language>}\r\n\t */\r\n\tpublic language: $type.Optional<Language>;\r\n\r\n\r\n\t/**\r\n\t * Should the first letter of the formatted date be capitalized?\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic capitalize: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the date value according to specified format.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n\t * @param  {any}     source  Date value\r\n\t * @param  {string}  format  Format\r\n\t * @return {string}          Formatted date string\r\n\t */\r\n\tpublic format(source: any, format?: string): string {\r\n\r\n\t\t// No language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// No format passed in or it's empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tformat = this._dateFormat;\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format);\r\n\r\n\t\t// Do any casting if required\r\n\t\t// This will take care of timestamps as well as Date objects\r\n\t\tlet date: Date = $utils.anyToDate(source);\r\n\r\n\t\t// Check if it's a valid date\r\n\t\tif (!$type.isNumber(date.getTime())) {\r\n\t\t\treturn this.language.translate(\"Invalid date\");\r\n\t\t}\r\n\r\n\t\t// Apply format\r\n\t\tlet formatted = this.applyFormat(date, info, this.language);\r\n\r\n\r\n\t\t// Capitalize\r\n\t\tif (this.capitalize) {\r\n\t\t\tformatted = formatted.replace(\r\n\t\t\t\t/^.{1}/, formatted.substr(0, 1).toUpperCase()\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// We're done\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses format into structured infromation.\r\n\t *\r\n\t * @param {string} format Format template\r\n\t */\r\n\tprotected parseFormat(format: string): DateFormatInfo {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// Init format parse info holder\r\n\t\tlet info: DateFormatInfo = {\r\n\t\t\t\"template\": \"\",\r\n\t\t\t\"parts\": <any>[]\r\n\t\t};\r\n\r\n\t\t// Let TextFormatter split into chunks\r\n\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(format, true);\r\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t// Just \"Date\"?\r\n\t\t\t\tif (chunk.text.match(/^date$/i)) {\r\n\t\t\t\t\tchunk.text = this._dateFormat;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find all possible parts\r\n\t\t\t\tlet matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n\r\n\t\t\t\t// Found?\r\n\t\t\t\tif (matches) {\r\n\r\n\t\t\t\t\t// Populate template\r\n\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\tinfo.parts.push(matches[x]);\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply to template\r\n\t\t\tinfo.template += chunk.text;\r\n\t\t}\r\n\r\n\t\t// Apply style formatting\r\n\t\t//info.template = getTextFormatter().format(info.template, this.outputFormat);\r\n\r\n\t\t// Save cache\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies format to Date.\r\n\t *\r\n\t * @param  {Date}            date      Date object\r\n\t * @param  {DateFormatInfo}  info      Parsed format information\r\n\t * @param  {Language}        language  Language\r\n\t * @return {string}                    Formatted date string\r\n\t */\r\n\tprotected applyFormat(date: Date, info: DateFormatInfo, language: Language): string {\r\n\r\n\t\t// Init return value\r\n\t\tlet res = info.template;\r\n\r\n\t\t// Get values\r\n\t\tlet fullYear: number,\r\n\t\t\tmonth: number,\r\n\t\t\tweekday: number,\r\n\t\t\tday: number,\r\n\t\t\thours: number,\r\n\t\t\tminutes: number,\r\n\t\t\tseconds: number,\r\n\t\t\tmilliseconds: number,\r\n\t\t\toffset: number = date.getTimezoneOffset(),\r\n\t\t\ttimestamp: number = date.getTime();\r\n\t\tif (this.utc) {\r\n\t\t\tfullYear = date.getUTCFullYear();\r\n\t\t\tmonth = date.getUTCMonth();\r\n\t\t\tweekday = date.getUTCDay();\r\n\t\t\tday = date.getUTCDate();\r\n\t\t\thours = date.getUTCHours();\r\n\t\t\tminutes = date.getUTCMinutes();\r\n\t\t\tseconds = date.getUTCSeconds();\r\n\t\t\tmilliseconds = date.getUTCMilliseconds();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfullYear = date.getFullYear();\r\n\t\t\tmonth = date.getMonth();\r\n\t\t\tweekday = date.getDay();\r\n\t\t\tday = date.getDate();\r\n\t\t\thours = date.getHours();\r\n\t\t\tminutes = date.getMinutes();\r\n\t\t\tseconds = date.getSeconds();\r\n\t\t\tmilliseconds = date.getMilliseconds();\r\n\t\t}\r\n\r\n\t\t// Go through each part and format/replace it in template\r\n\t\tfor (let i = 0, len = info.parts.length; i < len; i++) {\r\n\t\t\tlet value: string = \"\";\r\n\t\t\tswitch (info.parts[i]) {\r\n\r\n\t\t\t\tcase \"G\":\r\n\t\t\t\t\tvalue = language.translate(\r\n\t\t\t\t\t\tfullYear < 0\r\n\t\t\t\t\t\t\t? \"_era_bc\"\r\n\t\t\t\t\t\t\t: \"_era_ad\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyyy\":\r\n\t\t\t\t\tvalue = fullYear.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyy\":\r\n\t\t\t\tcase \"yy\":\r\n\t\t\t\tcase \"y\":\r\n\t\t\t\t\tvalue = fullYear.toString().substr(-info.parts[i].length);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\t\tlet week = $utils.getWeek(date);\r\n\t\t\t\t\tlet year = fullYear;\r\n\t\t\t\t\tif (week == 1 && weekday > 1) {\r\n\t\t\t\t\t\tyear++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (info.parts[i] == \"YYYY\") {\r\n\t\t\t\t\t\tvalue = year.toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = year.toString().substr(-info.parts[i].length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMMM\":\r\n\t\t\t\t\tvalue = language.translate(this._months[month]).substr(0, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMM\":\r\n\t\t\t\t\tvalue = language.translate(this._months[month]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMM\":\r\n\t\t\t\t\tvalue = language.translate(this._monthsShort[month]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MM\":\r\n\t\t\t\t\tvalue = $utils.padString(month + 1, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\t\tvalue = (month + 1).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ww\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.getWeek(date, this.utc), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"w\":\r\n\t\t\t\t\tvalue = $utils.getWeek(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"W\":\r\n\t\t\t\t\tvalue = $utils.getMonthWeek(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dd\":\r\n\t\t\t\t\tvalue = $utils.padString(day, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"d\":\r\n\t\t\t\t\tvalue = day.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"DD\":\r\n\t\t\t\tcase \"DDD\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.getYearDay(date, this.utc).toString(), info.parts[i].length, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"D\":\r\n\t\t\t\t\tvalue = $utils.getYearDay(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"F\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"g\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tvalue = language.translateFunc(\"_dateOrd\").call(this, day);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"E\":\r\n\t\t\t\t\tvalue = (weekday || 7).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EE\":\r\n\t\t\t\t\tvalue = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEE\":\r\n\t\t\t\tcase \"eee\":\r\n\t\t\t\t\tvalue = language.translate(this._weekdaysShort[weekday]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEEE\":\r\n\t\t\t\tcase \"eeee\":\r\n\t\t\t\t\tvalue = language.translate(this._weekdays[weekday]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEEEE\":\r\n\t\t\t\tcase \"eeeee\":\r\n\t\t\t\t\tvalue = language.translate(this._weekdays[weekday]).substr(0, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"e\":\r\n\t\t\t\tcase \"ee\":\r\n\t\t\t\t\tvalue = (weekday - this.firstDayOfWeek + 1).toString();\r\n\t\t\t\t\tif (info.parts[i] == \"ee\") {\r\n\t\t\t\t\t\tvalue = $utils.padString(value, 2, \"0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"PM\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"AM\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aa\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"P.M.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"A.M.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aaa\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"P\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"A\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\tvalue = $utils.get12Hours(hours).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hh\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\tvalue = hours.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"HH\":\r\n\t\t\t\t\tvalue = $utils.padString(hours, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"K\":\r\n\t\t\t\t\tvalue = $utils.get12Hours(hours, 0).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"KK\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"k\":\r\n\t\t\t\t\tvalue = (hours + 1).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kk\":\r\n\t\t\t\t\tvalue = $utils.padString(hours + 1, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\tvalue = minutes.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"mm\":\r\n\t\t\t\t\tvalue = $utils.padString(minutes, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\t\tvalue = seconds.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ss\":\r\n\t\t\t\t\tvalue = $utils.padString(seconds, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\tcase \"SS\":\r\n\t\t\t\tcase \"SSS\":\r\n\t\t\t\t\tvalue = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\tvalue = timestamp.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"n\":\r\n\t\t\t\tcase \"nn\":\r\n\t\t\t\tcase \"nnn\":\r\n\t\t\t\t\tvalue = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"z\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, false, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, false, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zzz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, true, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zzzz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, true, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Z\":\r\n\t\t\t\tcase \"ZZ\":\r\n\t\t\t\t\tlet tz = Math.abs(offset) / 60;\r\n\t\t\t\t\tlet tzh = Math.floor(tz);\r\n\t\t\t\t\tlet tzm = tz * 60 - tzh * 60;\r\n\r\n\t\t\t\t\tif (info.parts[i] == \"Z\") {\r\n\t\t\t\t\t\tvalue = \"GMT\";\r\n\t\t\t\t\t\tvalue += offset > 0 ? \"-\" : \"+\";\r\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = offset > 0 ? \"-\" : \"+\";\r\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tvalue = date.toISOString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"I\":\r\n\t\t\t\t\tvalue = date.toUTCString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\tres = res.replace($strings.PLACEHOLDER, value);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses any input value into Date object.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date/time parsing\r\n\t * @param  {any}     source  Source value\r\n\t * @param  {string}  format  Source format\r\n\t * @return {Date}            Date object\r\n\t */\r\n\tpublic parse(source: any, format?: string): Date {\r\n\r\n\t\t// Format set?\r\n\t\tif (!$type.hasValue(format)) {\r\n\t\t\tformat = this.inputDateFormat;\r\n\t\t}\r\n\r\n\t\t// Is it already a Date\r\n\t\tif (source instanceof Date) {\r\n\t\t\treturn source;\r\n\t\t}\r\n\r\n\t\t// Is it a numeric timestamp\r\n\t\tif (typeof source === \"number\") {\r\n\t\t\treturn new Date(source);\r\n\t\t}\r\n\r\n\t\t// No? Let's check if it's string, and try converting to it if nec\r\n\t\tif (typeof source !== \"string\") {\r\n\t\t\tsource = source.toString();\r\n\t\t}\r\n\r\n\t\t// no language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet res: Date = new Date(1970, 0, 1, 0, 0, 0);\r\n\r\n\t\t// Init RegEx for parsing\r\n\t\tlet reg: string = \"\";\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// Parse format\r\n\t\tlet info = this.parseFormat(format);\r\n\r\n\t\t// Init parsed items holder\r\n\t\tlet parsedIndexes = {\r\n\t\t\t\"year\": -1,\r\n\t\t\t\"year3\": -1,\r\n\t\t\t\"year2\": -1,\r\n\t\t\t\"year1\": -1,\r\n\t\t\t\"month\": -1,\r\n\t\t\t\"monthShort\": -1,\r\n\t\t\t\"monthLong\": -1,\r\n\t\t\t\"weekdayShort\": -1,\r\n\t\t\t\"weekdayLong\": -1,\r\n\t\t\t\"day\": -1,\r\n\t\t\t\"yearDay\": -1,\r\n\t\t\t\"week\": -1,\r\n\t\t\t\"hourBase0\": -1,\r\n\t\t\t\"hour12Base0\": -1,\r\n\t\t\t\"hourBase1\": -1,\r\n\t\t\t\"hour12Base1\": -1,\r\n\t\t\t\"minute\": -1,\r\n\t\t\t\"second\": -1,\r\n\t\t\t\"millisecond\": -1,\r\n\t\t\t\"millisecondDigits\": -1,\r\n\t\t\t\"am\": -1,\r\n\t\t\t\"zone\": -1,\r\n\t\t\t\"timestamp\": -1,\r\n\t\t\t\"iso\": -1\r\n\t\t};\r\n\r\n\t\t// Index adjuster\r\n\t\tlet indexAdjust: number = 0,\r\n\t\t\tindex: number = 0;\r\n\r\n\t\t// Iterate through all of the parts\r\n\t\tfor (let i: number = 0; i < info.parts.length; i++) {\r\n\r\n\t\t\t// Set current match index\r\n\t\t\tindex = i + indexAdjust + 1;\r\n\r\n\t\t\tswitch (info.parts[i]) {\r\n\r\n\t\t\t\tcase \"yyyy\":\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\t\treg += \"([0-9]{4,})\";\r\n\t\t\t\t\tparsedIndexes.year = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyy\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\t\treg += \"([0-9]{3})\";\r\n\t\t\t\t\tparsedIndexes.year3 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yy\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\t\treg += \"([0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.year2 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"y\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\t\treg += \"([0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.year1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMM\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this._months).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.monthLong = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMM\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this._monthsShort).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.monthShort = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MM\":\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.month = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ww\":\r\n\t\t\t\tcase \"w\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.week = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dd\":\r\n\t\t\t\tcase \"d\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.day = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"DDD\":\r\n\t\t\t\tcase \"DD\":\r\n\t\t\t\tcase \"D\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.yearDay = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\tcase \"dddd\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this._weekdays).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.weekdayLong = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ddd\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this._weekdaysShort).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.weekdayShort = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aaa\":\r\n\t\t\t\tcase \"aa\":\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\t// TODO: fix (escape regex)\r\n\t\t\t\t\treg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.am = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hh\":\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hour12Base1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"HH\":\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hourBase0 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"KK\":\r\n\t\t\t\tcase \"K\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hour12Base0 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kk\":\r\n\t\t\t\tcase \"k\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hourBase1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"mm\":\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.minute = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ss\":\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.second = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"SSS\":\r\n\t\t\t\tcase \"SS\":\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.millisecond = index;\r\n\t\t\t\t\tparsedIndexes.millisecondDigits = info.parts[i].length;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"nnn\":\r\n\t\t\t\tcase \"nn\":\r\n\t\t\t\tcase \"n\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.millisecond = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\treg += \"([0-9]{1,})\";\r\n\t\t\t\t\tparsedIndexes.timestamp = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Z\":\r\n\t\t\t\t\treg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.zone = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ZZ\":\r\n\t\t\t\t\treg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.zone = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\treg += \"([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})\\.([0-9]{3})Z\";\r\n\t\t\t\t\tparsedIndexes.iso = index;\r\n\t\t\t\t\tindexAdjust += 6;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"G\":\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\tcase \"MMMMM\":\r\n\t\t\t\tcase \"W\":\r\n\t\t\t\tcase \"EEEEE\":\r\n\t\t\t\tcase \"EEEE\":\r\n\t\t\t\tcase \"EEE\":\r\n\t\t\t\tcase \"EE\":\r\n\t\t\t\tcase \"E\":\r\n\t\t\t\tcase \"eeeee\":\r\n\t\t\t\tcase \"eeee\":\r\n\t\t\t\tcase \"eee\":\r\n\t\t\t\tcase \"ee\":\r\n\t\t\t\tcase \"e\":\r\n\t\t\t\tcase \"zzzz\":\r\n\t\t\t\tcase \"zzz\":\r\n\t\t\t\tcase \"zz\":\r\n\t\t\t\tcase \"z\":\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\t// Ignore\r\n\t\t\t\t\tindexAdjust--;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treg += \"[^0-9]*\";\r\n\t\t}\r\n\r\n\t\t// Try matching\r\n\t\tlet regex = new RegExp(reg);\r\n\t\tlet matches: RegExpMatchArray;\r\n\t\tif (matches = source.match(regex)) {\r\n\t\t\t// Populate the date object\r\n\r\n\t\t\t// Full year\r\n\t\t\tif (parsedIndexes.year > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 3-digit year\r\n\t\t\tif (parsedIndexes.year3 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year3]);\r\n\t\t\t\tval += 1000;\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 2-digit year\r\n\t\t\tif (parsedIndexes.year2 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year2]);\r\n\t\t\t\tif (val > 50) {\r\n\t\t\t\t\tval += 1000;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tval += 2000;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 1-digit year\r\n\t\t\tif (parsedIndexes.year1 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year1]);\r\n\t\t\t\tval = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setFullYear(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Full month\r\n\t\t\tif (parsedIndexes.monthLong > -1) {\r\n\t\t\t\tlet val = this.resolveMonth(<any>matches[parsedIndexes.monthLong]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMonth(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMonth(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Short month\r\n\t\t\tif (parsedIndexes.monthShort > -1) {\r\n\t\t\t\tlet val = this.resolveShortMonth(<any>matches[parsedIndexes.monthShort]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMonth(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMonth(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Numeric month\r\n\t\t\tif (parsedIndexes.month > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.month]) - 1;\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMonth(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMonth(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Weekday\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Week\r\n\t\t\tif ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n\t\t\t\t// We parse weeks ONLY if day is not explicitly set\r\n\t\t\t\t// TODO: this needs work\r\n\t\t\t\t// (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n\t\t\t\tlet val = $utils.getDayFromWeek(\r\n\t\t\t\t\tparseInt(matches[parsedIndexes.week]),\r\n\t\t\t\t\tthis.utc ? res.getUTCFullYear() : res.getFullYear(),\r\n\t\t\t\t\t1,\r\n\t\t\t\t\tthis.utc\r\n\t\t\t\t);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMonth(0);\r\n\t\t\t\t\tres.setUTCDate(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMonth(0);\r\n\t\t\t\t\tres.setDate(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Day\r\n\t\t\tif (parsedIndexes.day > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.day]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCDate(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setDate(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Year day\r\n\t\t\tif (parsedIndexes.yearDay > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.yearDay]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMonth(0);\r\n\t\t\t\t\tres.setUTCDate(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMonth(0);\r\n\t\t\t\t\tres.setDate(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 24 Hour (0-23)\r\n\t\t\tif (parsedIndexes.hourBase0 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hourBase0]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCHours(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setHours(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 24 Hour (1-24)\r\n\t\t\tif (parsedIndexes.hourBase1 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCHours(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setHours(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 12 Hour (0-11)\r\n\t\t\tif (parsedIndexes.hour12Base0 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n\t\t\t\tif (val == 11) {\r\n\t\t\t\t\tval = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n\t\t\t\t\tval += 12;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCHours(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setHours(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 12 Hour (1-12)\r\n\t\t\tif (parsedIndexes.hour12Base1 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n\t\t\t\tif (val == 12) {\r\n\t\t\t\t\tval = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n\t\t\t\t\tval += 12;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCHours(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setHours(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Minute\r\n\t\t\tif (parsedIndexes.minute > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.minute]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMinutes(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMinutes(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Second\r\n\t\t\tif (parsedIndexes.second > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.second]);\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCSeconds(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setSeconds(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Millisecond\r\n\t\t\tif (parsedIndexes.millisecond > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.millisecond]);\r\n\t\t\t\tif (parsedIndexes.millisecondDigits == 2) {\r\n\t\t\t\t\tval *= 10;\r\n\t\t\t\t}\r\n\t\t\t\telse if (parsedIndexes.millisecondDigits == 1) {\r\n\t\t\t\t\tval *= 100;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.utc) {\r\n\t\t\t\t\tres.setUTCMilliseconds(val);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.setMilliseconds(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Timestamp\r\n\t\t\tif (parsedIndexes.timestamp > -1) {\r\n\t\t\t\tres.setTime(parseInt(matches[parsedIndexes.timestamp]))\r\n\t\t\t}\r\n\r\n\t\t\t// Adjust time zone\r\n\t\t\tif (parsedIndexes.zone > -1) {\r\n\t\t\t\tlet zone = matches[parsedIndexes.zone].replace(/:/, \"\");\r\n\t\t\t\tlet match = $type.getValue(zone.match(/([+\\-]?)([0-9]{2})([0-9]{2})/));\r\n\t\t\t\tlet dir = match[1];\r\n\t\t\t\tlet hour = match[2];\r\n\t\t\t\tlet minute = match[3];\r\n\t\t\t\tlet offset = parseInt(hour) * 60 + parseInt(minute);\r\n\r\n\t\t\t\t// Adjust offset\r\n\t\t\t\t// Making it negative does not seem to make sense, but it's right\r\n\t\t\t\t// because of how JavaScript calculates GTM offsets\r\n\t\t\t\tif (dir == \"+\") {\r\n\t\t\t\t\toffset *= -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check the difference in offset\r\n\t\t\t\tlet originalOffset = res.getTimezoneOffset();\r\n\t\t\t\tlet diff = offset - originalOffset;\r\n\t\t\t\tif (diff != 0) {\r\n\t\t\t\t\tres.setMinutes(res.getMinutes() + diff);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// ISO\r\n\t\t\tif (parsedIndexes.iso > -1) {\r\n\t\t\t\tres = new Date(\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 0]),\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 1]) - 1,\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 2]),\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 3]),\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 4]),\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 5]),\r\n\t\t\t\t\t$type.toNumber(matches[parsedIndexes.iso + 6]),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Didn't match anything\r\n\t\t\t// Let's try dropping it into Date constructor and hope for the best\r\n\t\t\tres = new Date(source);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolves month name (i.e. \"December\") into a month number (11).\r\n\t *\r\n\t * @param  {MonthNames}  value  Month name\r\n\t * @return {number}             Month number\r\n\t */\r\n\tprotected resolveMonth(value: MonthNames): number {\r\n\r\n\t\t// Let's try English first\r\n\t\tlet month: number = this._months.indexOf(value);\r\n\t\tif (month > -1) {\r\n\t\t\treturn month;\r\n\t\t}\r\n\r\n\t\t// Try the translation\r\n\t\tif (this.language && !this.language.isDefault()) {\r\n\t\t\tmonth = this.language.translateAll(this._months).indexOf(value);\r\n\t\t\tif (month > -1) {\r\n\t\t\t\treturn month\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolves short month name (i.e. \"Dec\") into a month number.\r\n\t *\r\n\t * @param  {ShortMonthNames}  value  Short month name\r\n\t * @return {number}                  Month number\r\n\t */\r\n\tprotected resolveShortMonth(value: ShortMonthNames): number {\r\n\r\n\t\t// Let's try English first\r\n\t\tlet month: number = this._monthsShort.indexOf(value);\r\n\t\tif (month > -1) {\r\n\t\t\treturn month;\r\n\t\t}\r\n\r\n\t\t// Try the translation\r\n\t\tif (this.language && !this.language.isDefault()) {\r\n\t\t\tmonth = this.language.translateAll(this._monthsShort).indexOf(value);\r\n\t\t\tif (month > -1) {\r\n\t\t\t\treturn month\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if passed in string represents AM/PM notation in many of its\r\n\t * versions.\r\n\t *\r\n\t * @param  {string}   value  Source string\r\n\t * @return {boolean}         Is it AM/PM?\r\n\t */\r\n\tprotected isAm(value: string): boolean {\r\n\t\tlet list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n\t\treturn list.indexOf(value.toUpperCase()) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates related [[Sprite]] causing it to redraw.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates list of strings.\r\n\t *\r\n\t * @param  {Array<keyof ILocaleProperties>}  list  Source strings\r\n\t * @return {Array<string>}                         Translated strings\r\n\t */\r\n\tprotected getStringList(list: Array<keyof ILocaleProperties>): Array<string> {\r\n\t\tlet res: string[] = [];\r\n\t\tfor (let i: number = 0; i < list.length; i++) {\r\n\t\t\tres.push($utils.escapeForRgex(list[i]));\r\n\t\t\t// translate?\r\n\t\t\tif (this.language && !this.language.isDefault()) {\r\n\t\t\t\tres.push($utils.escapeForRgex(this.language.translate(list[i])));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Date format to use.\r\n\t *\r\n\t * If format is not supplied in-line in the string, this setting will be\r\n\t * used.\r\n\t *\r\n\t * @default \"yyyy-MM-dd\"\r\n\t * @param {string} value Date format\r\n\t */\r\n\tpublic set dateFormat(value: string) {\r\n\t\tthis._dateFormat = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Date format\r\n\t */\r\n\tpublic get dateFormat(): string {\r\n\t\treturn this._dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Date format to use when parsing dates.\r\n\t *\r\n\t * @default \"yyyy-MM-dd\"\r\n\t * @param {string} value Date format\r\n\t */\r\n\tpublic set inputDateFormat(value: string) {\r\n\t\tthis._inputDateFormat = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Date format\r\n\t */\r\n\tpublic get inputDateFormat(): string {\r\n\t\treturn this._inputDateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Should formatter use UTC functions?\r\n\t *\r\n\t * If UTC is used, all date/time values will be independent on client's\r\n\t * time zone.\r\n\t *\r\n\t * @param {boolean} value Use UTC?\r\n\t */\r\n\tpublic set utc(value: boolean) {\r\n\t\tthis._utc = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use UTC?\r\n\t */\r\n\tpublic get utc(): boolean {\r\n\t\treturn this._utc;\r\n\t}\r\n\r\n\t/**\r\n\t * Dirst day of the week:\r\n\t *\r\n\t * * 0 - Sunday\r\n\t * * 1 - Monday\r\n\t * * 2 - Tuesday\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * @param {number} value First day of week\r\n\t */\r\n\tpublic set firstDayOfWeek(value: number) {\r\n\t\tthis._firstDayOfWeek = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} First day of week\r\n\t */\r\n\tpublic get firstDayOfWeek(): number {\r\n\t\treturn this._firstDayOfWeek;\r\n\t}\r\n\r\n\t/**\r\n\t * Output format for the formatted date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  value  Format\r\n\t */\r\n\tpublic set outputFormat(value: string) {\r\n\t\tthis._outputFormat = value.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateFormatter\"] = DateFormatter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/formatters/DateFormatter.ts","/**\r\n * Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Tick]].\r\n */\r\nexport interface ITickProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Length of the tick (px).\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlength?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tick]].\r\n */\r\nexport interface ITickEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITickAdapters extends ISpriteAdapters, ITickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A basic Tick class.\r\n *\r\n * A tick is a short dash, mainly connecting an object like axis or slice to\r\n * it's textual label.\r\n *\r\n * @see {@link ITickEvents} for a list of available events\r\n * @see {@link ITickAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Tick extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ITickProperties}\r\n\t */\r\n\tpublic _properties!: ITickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ITickAdapters}\r\n\t */\r\n\tpublic _adapter!: ITickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ITickEvents}\r\n\t */\r\n\tpublic _events!: ITickEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Tick\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.length = 6;\r\n\t\tthis.strokeOpacity = 0.2;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Length of the tick in pixels.\r\n\t *\r\n\t * @param {number}  value  Length (px)\r\n\t */\r\n\tpublic set length(value: number) {\r\n\t\tthis.setPropertyValue(\"length\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Length (px)\r\n\t */\r\n\tpublic get length(): number {\r\n\t\tif (this.disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"length\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tick\"] = Tick;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/Tick.ts","/**\r\n * Polyline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint, IOrientationPoint } from \"../defs/IPoint\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyline]].\r\n */\r\nexport interface IPolylineProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A list of segment coordinates for the multi-part line.\r\n\t *\r\n\t * @type {IPoint[][]}\r\n\t */\r\n\tsegments?: IPoint[][];\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyline]].\r\n */\r\nexport interface IPolylineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polyline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolylineAdapters extends ISpriteAdapters, IPolylineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polyline.\r\n *\r\n * @see {@link IPolylineEvents} for a list of available events\r\n * @see {@link IPolylineAdapters} for a list of available Adapters\r\n */\r\nexport class Polyline extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPolylineProperties}\r\n\t */\r\n\tpublic _properties!: IPolylineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPolylineAdapters}\r\n\t */\r\n\tpublic _adapter!: IPolylineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPolylineEvents}\r\n\t */\r\n\tpublic _events!: IPolylineEvents;\r\n\r\n\t/**\r\n\t * [_distance description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _distance: number = 0;\r\n\r\n\t/**\r\n\t * [_realSegments]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {Optional<IPoint[][]>}\r\n\t */\r\n\tprotected _realSegments: $type.Optional<IPoint[][]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyline\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t\tthis.fill = color();\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tlet point: IPoint = points[p];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t\tthis._distance += $math.getDistance(points[p - 1], point);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\r\n\t\tthis._realSegments = segments;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of segment coordinates for the multi-part line.\r\n\t *\r\n\t * @todo Example\r\n\t * @param {Optional<IPoint[][]>}  segments  Segments\r\n\t */\r\n\tpublic set segments(segments: $type.Optional<IPoint[][]>) {\r\n\t\tthis.setPropertyValue(\"segments\", segments);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<IPoint[]>} Segments\r\n\t */\r\n\tpublic get segments(): $type.Optional<IPoint[][]> {\r\n\t\treturn this.getPropertyValue(\"segments\");\r\n\t}\r\n\r\n\t/**\r\n\t * [distance description]\r\n\t *\r\n\t * @todo Description\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get distance(): number {\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param  {number}             position  Position (0-1)\r\n\t * @return {IOrientationPoint}            Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\r\n\t\tlet deltaAngle: number = 0;\r\n\r\n\t\tif (position < 0) {\r\n\t\t\tposition = Math.abs(position);\r\n\t\t\tdeltaAngle = 180;\r\n\t\t}\r\n\r\n\t\tlet segments: $type.Optional<IPoint[][]> = this._realSegments;\r\n\t\tif (segments) {\r\n\t\t\tlet totalDistance: number = this.distance;\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IPoint;\r\n\t\t\tlet pointB: IPoint;\r\n\r\n\t\t\tfor (let s = 0; s < segments.length; s++) {\r\n\t\t\t\tlet points: IPoint[] = segments[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = $math.getDistance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = segments.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\tlet midPoint: IPoint = $math.getMidPoint(pointA, pointB, positionAB);\r\n\t\t\t\treturn { x: midPoint.x, y: midPoint.y, angle: deltaAngle + $math.getAngle(pointA, pointB) };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyline\"] = Polyline;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Polyline.ts","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iobject.js\n// module id = 110\n// module chunks = 302","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-pie.js\n// module id = 111\n// module chunks = 302","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_classof.js\n// module id = 112\n// module chunks = 302","/**\r\n * Module, defining base Axis Renderer.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, ContainerLayout, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Chart } from \"../Chart\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { XYChart } from \"../types/XYChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tminGridDistance?: number;\r\n\r\n\t/**\r\n\t * Draw axis labels inside axis.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tinside?: boolean;\r\n\r\n\t/**\r\n\t * Draw axis on opposite side of the plot area?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\topposite?: boolean;\r\n\r\n\t/**\r\n\t * Inverse the order of the scale for the Axis.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tinversed?: boolean;\r\n\r\n\t/**\r\n\t * Location of the cell start. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tcellStartLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the cell end. (0-1)\r\n\t * @type {number}\r\n\t */\r\n\tcellEndLocation?: number;\r\n\r\n\t/**\r\n\t * Location of the axis tooltip. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ttooltipLocation?: number;\r\n\r\n\t/**\r\n\t * Resize axis tooltip to the full width of the cell.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tfullWidthTooltip?: boolean;\r\n\r\n\t/**\r\n\t * Labels with position less than this will be hidden.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tminLabelPosition?: number;\r\n\r\n\t/**\r\n\t * Labels with position bigger than this will be hidden.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tmaxLabelPosition?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisRenderer]].\r\n */\r\nexport interface IAxisRendererEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRenderer]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererAdapters extends IContainerAdapters, IAxisRendererProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRenderer extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisRendererProperties}\r\n\t */\r\n\tpublic _properties!: IAxisRendererProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisRendererAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisRendererAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisRendererEvents}\r\n\t */\r\n\tpublic _events!: IAxisRendererEvents;\r\n\r\n\t/**\r\n\t * A related Axis.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tprotected _axis: Axis;\r\n\r\n\t/**\r\n\t * A line object of the related axis.\r\n\t *\r\n\t * @type {AxisLine}\r\n\t */\r\n\tpublic line: AxisLine;\r\n\r\n\t/**\r\n\t * Base grid element. ([[Sprite]])\r\n\t *\r\n\t * For value axes base grid is at value 0.\r\n\t *\r\n\t * For category/date axis it is added at the end of the last item/date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic baseGrid: Sprite;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[Grid]] elements.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic gridContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Container]] holding all of the [[AxisBreak]] elements.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic breakContainer: Container;\r\n\r\n\t/**\r\n\t * A related chart.\r\n\t *\r\n\t * @type {MutableValueDisposer}\r\n\t */\r\n\tprotected _chart = new MutableValueDisposer<Chart>();\r\n\r\n\t/**\r\n\t * Defines type of the grid elements.\r\n\t *\r\n\t * @type {Grid}\r\n\t */\r\n\tpublic _gridType: Grid;\r\n\r\n\t/**\r\n\t * Defines type for the fill elements.\r\n\t *\r\n\t * @type {AxisFill}\r\n\t */\r\n\tpublic _fillType: AxisFill;\r\n\r\n\t/**\r\n\t * Defines type for tick elements.\r\n\t *\r\n\t * @type {AxisTick}\r\n\t */\r\n\tpublic _tickType: AxisTick;\r\n\r\n\t/**\r\n\t * Defines type for the label elements.\r\n\t *\r\n\t * @type {AxisLabel}\r\n\t */\r\n\tpublic _labelType: AxisLabel;\r\n\r\n\t/**\r\n\t * A list of grid elements.\r\n\t */\r\n\tprotected _grid: ListTemplate<this[\"_gridType\"]>;\r\n\r\n\t/**\r\n\t * A list of tick elements.\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tickType\"]>;\r\n\r\n\t/**\r\n\t * A list of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_labelType\"]>;\r\n\r\n\t/**\r\n\t * A list of fill elements.\r\n\t */\r\n\tprotected _axisFills: ListTemplate<this[\"_fillType\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {Axis} axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisRenderer\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.minGridDistance = 50;\r\n\t\tthis.inside = false;\r\n\t\tthis.inversed = false;\r\n\t\tthis.tooltipLocation = 0.5;\r\n\t\tthis.fullWidthTooltip = false;\r\n\t\tthis.cellStartLocation = 0;\r\n\t\tthis.cellEndLocation = 1;\r\n\r\n\t\tthis.minLabelPosition = 0;\r\n\t\tthis.maxLabelPosition = 1;\r\n\t\tthis.shouldClone = false;\r\n\r\n\t\tlet gridContainer = this.createChild(Container);\r\n\t\tgridContainer.shouldClone = false;\r\n\t\tgridContainer.layout = \"none\";\r\n\t\tgridContainer.isMeasured = false;\r\n\t\tgridContainer.width = percent(100);\r\n\t\tgridContainer.height = percent(100);\r\n\t\tthis.gridContainer = gridContainer;\r\n\t\t// not good without this\r\n\t\tgridContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.invalidateAxisItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tlet breakContainer = this.createChild(Container);\r\n\t\tbreakContainer.shouldClone = false;\r\n\t\tbreakContainer.isMeasured = false;\r\n\t\tbreakContainer.layout = \"none\";\r\n\t\tbreakContainer.width = percent(100);\r\n\t\tbreakContainer.height = percent(100);\r\n\t\tthis.breakContainer = breakContainer;\r\n\r\n\t\tthis.line = this.createChild(AxisLine);\r\n\t\tthis.line.shouldClone = false;\r\n\t\tthis.line.strokeOpacity = 0;\r\n\t\tthis.ticks.template.strokeOpacity = 0;\r\n\r\n\t\tlet baseGrid: Grid = this.createChild(Grid);\r\n\t\tbaseGrid.shouldClone = false;\r\n\t\tthis.baseGrid = baseGrid;\r\n\r\n\t\t// Make elements disposable\r\n\t\tlet disposers = this._disposers;\r\n\t\tdisposers.push(baseGrid);\r\n\t\tdisposers.push(this.line);\r\n\t\tdisposers.push(gridContainer);\r\n\t\tdisposers.push(breakContainer);\r\n\t\tdisposers.push(this._chart);\r\n\r\n\t\t//this.axisFills.template.disabled = true;\r\n\t\tthis.axisFills.template.interactionsEnabled = false;\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tset axis(axis: Axis) {\r\n\t\tthis.setAxis(axis);\r\n\t}\r\n\r\n\tget axis(): Axis {\r\n\t\treturn this._axis;\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tthis._axis = axis;\r\n\t\tthis.baseGrid.parent = axis;\r\n\t\tthis.line.parent = axis;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tthis.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n\t\tthis.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n\t\tthis.labels.template.inside = this.inside;\r\n\t\tthis.ticks.template.inside = this.inside;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return {number} Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-positions an element to new coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  item   A target element\r\n\t * @param {IPoint}  point  New coordinates\r\n\t */\r\n\tpublic positionItem(item: Sprite, point: IPoint): void {\r\n\t\tif (item) {\r\n\t\t\titem.moveTo(point);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {IPoint}            Point\r\n\t */\r\n\tpublic positionToPoint(position: number): IPoint {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review / units)\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {number}            Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\r\n\t *\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {number}            Coordinate (px)\r\n\t */\r\n\tpublic positionToCoordinate(position: number): number {\r\n\t\tlet coordinate: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tcoordinate = (axis.end - position) * axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcoordinate = (position - axis.start) * axisFullLength;\r\n\t\t}\r\n\r\n\t\treturn coordinate;\r\n\t}\r\n\r\n\r\n\tprotected getHeight(): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis && axis.chart) {\r\n\t\t\tlet chart = <XYChart>this.axis.chart;\r\n\t\t\tif (chart.plotContainer) {\r\n\t\t\t\treturn chart.plotContainer.pixelHeight || 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelHeight || 0;\r\n\t}\r\n\r\n\tprotected getWidth(): number {\r\n\t\tlet axis = this.axis;\r\n\t\tif (axis && axis.chart) {\r\n\t\t\tlet chart = <XYChart>this.axis.chart;\r\n\t\t\tif (chart.plotContainer) {\r\n\t\t\t\treturn chart.plotContainer.pixelWidth || 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.gridContainer.pixelWidth || 0;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts a coordinate in pixels to a relative position. (0-1)\r\n\t *\r\n\t * @param  {number}  coordinate  Coordinate (px)\r\n\t * @return {number}              Position (0-1)\r\n\t */\r\n\tpublic coordinateToPosition(coordinate: number): number {\r\n\t\tlet position: number;\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet axisFullLength = axis.axisFullLength;\r\n\r\n\t\tif (axis.renderer.inversed) {\r\n\t\t\tposition = axis.end - coordinate / axisFullLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = coordinate / axisFullLength + axis.start;\r\n\t\t}\r\n\r\n\t\treturn $math.round(position, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IPoint}  point  Point\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}  startPosition  Starting position\r\n\t * @param  {number}  endPosition    End position\r\n\t * @return {string}                 SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis data items, effectively causing them re-evaluated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t */\r\n\tpublic invalidateAxisItems(): void {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\taxis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Grid}    grid         Grid element\r\n\t * @param {number}  position     Starting position\r\n\t * @param {number}  endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Sprite, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisTick}  tick         Tick element\r\n\t * @param {number}    position     Starting position\r\n\t * @param {number}    endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisLabel}  label        Label element\r\n\t * @param {number}     position     Starting position\r\n\t * @param {number}     endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?: number): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisFill}  fill         Fill element\r\n\t * @param {number}    position     Starting position\r\n\t * @param {number}    endPosition  Ending position\r\n\t */\r\n\tpublic updateFillElement(fill: AxisFill, position: number, endPosition: number): void {\r\n\t\tfill.startPosition = position;\r\n\t\tfill.endPosition = endPosition;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tthis.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n\t\tthis.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n\t\tthis.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n\t\tthis.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum distance in pixels between grid elements.\r\n\t *\r\n\t * @param {number}  value  Min distance (px)\r\n\t */\r\n\tpublic set minGridDistance(value: number) {\r\n\t\tif (this.setPropertyValue(\"minGridDistance\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Min distance (px)\r\n\t */\r\n\tpublic get minGridDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minGridDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A chart, associated with the Axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Chart}  value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart.set(value, null);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Chart} Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of an element, based on its current position and\r\n\t * min/max position settings.\r\n\t *\r\n\t * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  sprite       An element to toggle\r\n\t * @param {number}  position     Elements current position\r\n\t * @param {number}  minPosition  Min position setting\r\n\t * @param {number}  maxPosition  Max position setting\r\n\t */\r\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tlet updatedStart = axis.start + (axis.end - axis.start) * minPosition - 0.00001;\r\n\t\tlet updatedEnd = axis.start + (axis.end - axis.start) * maxPosition + 0.00001;\r\n\r\n\t\tif (!sprite.disabled) {\r\n\t\t\tif (position < updatedStart || position > updatedEnd) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak) {\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Fill elements.\r\n\t *\r\n\t * @return {ListTemplate} Fill elements\r\n\t */\r\n\tpublic get axisFills(): ListTemplate<this[\"_fillType\"]> {\r\n\t\tif (!this._axisFills) {\r\n\t\t\tthis._axisFills = new ListTemplate<AxisFill>(this.createFill(this.axis));\r\n\t\t\tthis._axisFills.template.applyOnClones = true;\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisFills));\r\n\t\t\tthis._disposers.push(this._axisFills.template);\r\n\t\t}\r\n\t\treturn this._axisFills;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new fill element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return {AxisFill} Fill element\r\n\t */\r\n\tpublic createFill(axis: Axis): this[\"_fillType\"] {\r\n\t\treturn new AxisFill(axis);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Grid elements.\r\n\t *\r\n\t * @return {ListTemplate} Grid elements\r\n\t */\r\n\tpublic get grid(): ListTemplate<this[\"_gridType\"]> {\r\n\t\tif (!this._grid) {\r\n\t\t\tthis._grid = new ListTemplate<Grid>(this.createGrid());\r\n\t\t\tthis._grid.template.applyOnClones = true;\r\n\t\t\tthis._disposers.push(new ListDisposer(this._grid));\r\n\t\t\tthis._disposers.push(this._grid.template);\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new grid element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return {Grid} Grid element\r\n\t */\r\n\tpublic createGrid(): this[\"_gridType\"] {\r\n\t\treturn new Grid();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Tick elements.\r\n\t *\r\n\t * @return {ListTemplate} Tick elements\r\n\t */\r\n\tpublic get ticks(): ListTemplate<this[\"_tickType\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick: AxisTick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\ttick.isMeasured = false;\r\n\t\t\tthis._ticks = new ListTemplate<AxisTick>(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t\tthis._disposers.push(this._ticks.template);\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new tick element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return {AxisTick} Tick element\r\n\t */\r\n\tpublic createTick(): this[\"_tickType\"] {\r\n\t\treturn new AxisTick();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Axis' Label elements.\r\n\t *\r\n\t * @return {ListTemplate} Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_labelType\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tthis._labels = new ListTemplate<AxisLabel>(this.createLabel());\r\n\t\t\tthis._labels.template.applyOnClones = true;\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t\tthis._disposers.push(this._labels.template);\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new label element, suitable for this Axis Renderer type.\r\n\t *\r\n\t * @return {AxisLabel} Label element\r\n\t */\r\n\tpublic createLabel(): this[\"_labelType\"] {\r\n\t\treturn new AxisLabel();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n\t *\r\n\t * Does not work with all renderers, like AxisRendererRadial.\r\n\t *\r\n\t * @param {boolean}  value  Labels inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value);\r\n\t\tif (this.axis) {\r\n\t\t\tthis.axis.invalidateDataRange();\r\n\t\t}\r\n\t\t// todo: not a very good hack, but for some reason size is not update, need to check\r\n\t\tif (value) {\r\n\t\t\tthis.width = 0;\r\n\t\t\tthis.height = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Labels inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether Axis should be drawn on the opposite side of the plot\r\n\t * area than it would normally be drawn based on chart's settings.\r\n\t *\r\n\t * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n\t * [[AxisRenderer Circular].\r\n\t *\r\n\t * @param {boolean}  value  Draw axis on opposite side?\r\n\t */\r\n\tpublic set opposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"opposite\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Draw axis on opposite side?\r\n\t */\r\n\tpublic get opposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"opposite\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n\t * (between two grid lines)\r\n\t *\r\n\t * NOTE: this setting is ignored on circular axis types.\r\n\t *\r\n\t * @param {boolean} value Full width tooltip?\r\n\t */\r\n\tpublic set fullWidthTooltip(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWidthTooltip\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Full width tooltip?\r\n\t */\r\n\tpublic get fullWidthTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWidthTooltip\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to show tooltip on. (0-1)\r\n\t *\r\n\t * 0 - show at the start\r\n\t * 0.5 - show right in the middle\r\n\t * 1 - show at the end\r\n\t *\r\n\t * @param {number} value Tooltip location\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tooltip location\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell start.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellStartLocation` identifies where, within available space, the actual\r\n\t * cell starts.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param {number} value Cell start (0-1)\r\n\t */\r\n\tpublic set cellStartLocation(value: number) {\r\n\t\tif(this.setPropertyValue(\"cellStartLocation\", value)){\r\n\t\t\tif(this.axis){\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Cell start (0-1)\r\n\t */\r\n\tpublic get cellStartLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellStartLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Location for the cell end.\r\n\t *\r\n\t * Normally a \"cell\" is the whole available width in a category.\r\n\t *\r\n\t * If there are several clustered column-like series available, the whole\r\n\t * space is divided between each clustered column, or column stacks.\r\n\t *\r\n\t * `cellEndLocation` identifies where, within available space, the actual\r\n\t * cell ends.\r\n\t *\r\n\t * This, together with column series' `width` will affect actual width of\r\n\t * columns, and thus gaps between them.\r\n\t *\r\n\t * This will affect category-like axes only, like [[DateAxis]], or\r\n\t * [[CategoryAxis]].\r\n\t *\r\n\t * This is used to limit a space occupied by series like column.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param {number} value Cell end (0-1)\r\n\t */\r\n\tpublic set cellEndLocation(value: number) {\r\n\t\tif(this.setPropertyValue(\"cellEndLocation\", value)){\r\n\t\t\tif(this.axis){\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Cell end (0-1)\r\n\t */\r\n\tpublic get cellEndLocation(): number {\r\n\t\treturn this.getPropertyValue(\"cellEndLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the scale of the axis should be flipped.\r\n\t *\r\n\t * @param {boolean} value Flip axis?\r\n\t */\r\n\tpublic set inversed(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inversed\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Flip axis?\r\n\t */\r\n\tpublic get inversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"inversed\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the start of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near start of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param {number}  value  Min label position (0-1)\r\n\t */\r\n\tpublic set minLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"minLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Min label position (0-1)\r\n\t */\r\n\tpublic get minLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"minLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum position along the Axis, for labels.\r\n\t *\r\n\t * Labels, which have their position closer to the and of the Axis, will be\r\n\t * automatically hidden.\r\n\t *\r\n\t * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n\t * that would otherwise be drawn very near end of the Axis.\r\n\t *\r\n\t * This is especially usefull with `inside = true`, or if the chart hasn't\r\n\t * got any extra margins.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n\t * @param {number}  value  Max label position (0-1)\r\n\t */\r\n\tpublic set maxLabelPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLabelPosition\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Max label position (0-1)\r\n\t */\r\n\tpublic get maxLabelPosition(): number {\r\n\t\treturn this.getPropertyValue(\"maxLabelPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all settings and related items from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param {this}  source  Source object\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.grid.template.copyFrom(source.grid.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.axisFills.template.copyFrom(source.axisFills.template);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.baseGrid.copyFrom(source.baseGrid);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisRenderer.ts","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../core/Sprite\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Chart}\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t *\r\n\t * @type {IChartDataFields}\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IChartProperties}\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IChartAdapters}\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IChartEvents}\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t *\r\n\t * @type {List<Label>}\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t * @type {Legend}\r\n\t */\r\n\tprotected _legend: Legend;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tlegend.x = undefined;\r\n\t\t\tlegend.y = undefined;\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tif (!$type.isNumber(legend.width)) {\r\n\t\t\t\t\t\tlegend.width = 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//legend.maxWidth = legend.width;\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tif (!$type.isNumber(legend.width)) {\r\n\t\t\t\t\t\tlegend.width = 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//legend.maxWidth = legend.width;\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.maxWidth = undefined;\r\n\t\t\t\t\tlegend.width = percent(100);\t\t\t\t\t\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.maxWidth = undefined;\r\n\t\t\t\t\tlegend.width = percent(100);\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param  {IListEvents<Label>[\"inserted\"]}  event  An event object which is triggered when inserting into titles list\r\n\t * @return {Label}                               Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\t\t\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param {Legend} Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Legend} Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param {Legend}  legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend != legend) {\r\n\r\n\t\t\tif (this._legend) {\r\n\t\t\t\tthis.removeDispose(this._legend);\r\n\t\t\t}\r\n\r\n\t\t\tthis._legend = legend;\r\n\r\n\t\t\tif (legend) {\r\n\t\t\t\tthis._disposers.push(legend);\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\t\t\t\tlegend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\" || event.property == \"width\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param {Series}  source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/charts/Chart.ts","/**\r\n * Module, defining Axis Renderer for vertical axes.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AxisRenderer, IAxisRendererProperties, IAxisRendererAdapters, IAxisRendererEvents } from \"./AxisRenderer\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis } from \"./Axis\";\r\nimport { Grid } from \"./Grid\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { WavedRectangle } from \"../../core/elements/WavedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXProperties extends IAxisRendererProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisRendererX]].\r\n */\r\nexport interface IAxisRendererXEvents extends IAxisRendererEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisRendererX]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisRendererXAdapters extends IAxisRendererAdapters, IAxisRendererXProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A renderer for horizontal axis.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisRendererXProperties}\r\n\t */\r\n\tpublic _properties!: IAxisRendererXProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisRendererXAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisRendererXAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisRendererXEvents}\r\n\t */\r\n\tpublic _events!: IAxisRendererXEvents;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {Axis} axis Related axis\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisRendererX\";\r\n\r\n\t\tthis.minGridDistance = 120;\r\n\r\n\t\tthis.opposite = false;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.width = percent(100);\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t* @ignore\r\n\t*/\r\n\tpublic setAxis(axis: Axis) {\r\n\t\tsuper.setAxis(axis);\r\n\t\taxis.layout = \"vertical\";\r\n\t}\r\n\r\n\t/**\r\n\t * Called when rendered is attached to an Axis, as well as a property of\r\n\t * Axis that might affect the appearance is updated.\r\n\t *\r\n\t * E.g. `axis.opposite`, `axis.inside`, etc.\r\n\t *\r\n\t * This method is called **before** draw, so that any related setting\r\n\t * changed in this method can be changed.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processRenderer(): void {\r\n\t\tsuper.processRenderer();\r\n\r\n\t\t// can not do this in init, as axis is set later\r\n\t\tlet axis = this.axis;\r\n\r\n\t\tif (axis) {\r\n\t\t\taxis.width = percent(100);\r\n\r\n\t\t\t// @todo Is thi sneeded?\r\n\t\t\tthis.line;\r\n\r\n\t\t\tlet title: Label = axis.title;\r\n\t\t\ttitle.rotation = 0;\r\n\t\t\ttitle.align = \"center\";\r\n\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tthis.line.toFront();\r\n\t\t\t\ttitle.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle.toFront();\r\n\t\t\t\tthis.line.toBack();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates some of the Axis tooltip's visual properties, related to\r\n\t * rendering of the Axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateTooltip() {\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tif (axis) {\r\n\t\t\tlet bigNum: number = 1000;\r\n\t\t\tlet bbx: number = this.line.pixelX;\r\n\t\t\tlet bby: number = this.line.pixelY;\r\n\t\t\tlet bbw: number = this.axisLength;\r\n\r\n\t\t\tlet bbh: number = bigNum;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this.opposite) {\r\n\t\t\t\tif (!this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\telse {\r\n\t\t\t\tif (this.inside) {\r\n\t\t\t\t\tbby = - bigNum;\r\n\t\t\t\t\tbbh = bigNum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.axis.updateTooltip(\"vertical\", { x: bbx, y: bby, width: bbw, height: bbh });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisLabel}  label        Label element\r\n\t * @param {number}     position     Starting position\r\n\t * @param {number}     endPosition  Ending position\r\n\t */\r\n\tpublic updateLabelElement(label: AxisLabel, position: number, endPosition: number, location?:number) {\r\n\r\n\t\tif(!$type.hasValue(location)){\r\n\t\t\tlocation = label.location;\r\n\t\t}\r\n\r\n\t\tposition = position + (endPosition - position) * location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlabel.isMeasured = !label.inside;\r\n\r\n\t\tif (!this.opposite && label.inside) {\r\n\t\t\tlabel.verticalCenter = \"bottom\";\r\n\t\t}\r\n\r\n\t\tthis.positionItem(label, point);\r\n\t\tthis.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns actual length of the Axis, in pixels.\r\n\t *\r\n\t * @return {number} Length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\tlet axis = this.axis;\r\n\t\treturn (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position on axis to point coordinates.\r\n\t *\r\n\t * @param  {number}  position  Position (0-1)\r\n\t * @return {IPoint}            Point\r\n\t */\r\n\tpublic positionToPoint(position: number): IPoint {\r\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point at specific coordinates to a relative position (0-1)\r\n\t * on the axis.\r\n\t *\r\n\t * @param  {IPoint}  point  Point\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint) {\r\n\t\treturn this.coordinateToPosition(point.x);\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}  startPosition  Starting position\r\n\t * @param  {number}  endPosition    End position\r\n\t * @return {string}                 SVG path\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\tlet x1: number = $math.fitToRange(this.positionToCoordinate(startPosition), 0, this.axisLength);\r\n\t\tlet x2: number = $math.fitToRange(this.positionToCoordinate(endPosition), 0, this.axisLength);\r\n\r\n\t\tlet w: number = Math.abs(x2 - x1);\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet x: number = Math.min(x1, x2);\r\n\t\tlet y: number = 0;\r\n\r\n\t\treturn $path.rectToPath({\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\twidth: w,\r\n\t\t\theight: h\r\n\t\t}, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates and positions an axis break element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Break element\r\n\t */\r\n\tpublic updateBreakElement(axisBreak: AxisBreak): void {\r\n\t\tsuper.updateBreakElement(axisBreak);\r\n\r\n\t\tlet startLine = axisBreak.startLine;\r\n\t\tlet endLine = axisBreak.endLine;\r\n\t\tlet fillShape = axisBreak.fillShape;\r\n\r\n\t\tlet startPoint: IPoint = axisBreak.startPoint;\r\n\t\tlet endPoint: IPoint = axisBreak.endPoint;\r\n\r\n\t\tlet y1: number = axisBreak.pixelMarginLeft;\r\n\t\tlet y2: number = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;\r\n\r\n\t\tstartPoint.x = $math.fitToRange(startPoint.x, -1, this.pixelWidth + 1);\r\n\t\tendPoint.x = $math.fitToRange(endPoint.x, -1, this.pixelWidth + 1);\r\n\r\n\t\tif (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.pixelWidth)) {\r\n\t\t\taxisBreak.fillShape.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\taxisBreak.fillShape.__disabled = false;\r\n\t\t}\r\n\r\n\t\tstartLine.y = y1;\r\n\t\tstartLine.width = 0;\r\n\t\tstartLine.height = y2;\r\n\r\n\t\tendLine.y = y1;\r\n\t\tendLine.width = 0;\r\n\t\tendLine.height = y2;\r\n\r\n\t\tfillShape.height = y2;\r\n\t\tfillShape.width = Math.abs(endPoint.x - startPoint.x);\r\n\t\tfillShape.y = y1;\r\n\t\tfillShape.x = startPoint.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Grid}    grid         Grid element\r\n\t * @param {number}  position     Starting position\r\n\t * @param {number}  endPosition  End position\r\n\t */\r\n\tpublic updateGridElement(grid: Grid, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * grid.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tgrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: this.getHeight() });\r\n\r\n\t\tthis.positionItem(grid, point);\r\n\r\n\t\tthis.toggleVisibility(grid, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions a tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisTick}  tick         Tick element\r\n\t * @param {number}    position     Starting position\r\n\t * @param {number}    endPosition  End position\r\n\t */\r\n\tpublic updateTickElement(tick: AxisTick, position: number, endPosition: number): void {\r\n\t\tposition = position + (endPosition - position) * tick.location;\r\n\t\tlet point: IPoint = this.positionToPoint(position);\r\n\r\n\t\tlet tickLength = tick.length;\r\n\t\tif (this.opposite) {\r\n\t\t\tpoint.y = 0;\r\n\t\t\ttickLength *= (tick.inside ? 1 : -1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpoint.y = this.gridContainer.pixelHeight;\r\n\t\t\ttickLength *= (tick.inside ? -1 : 1);\r\n\t\t}\r\n\r\n\t\ttick.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: tickLength });\r\n\r\n\t\tthis.positionItem(tick, point);\r\n\r\n\t\tthis.toggleVisibility(tick, position, 0, 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the axis line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisLine(): void {\r\n\t\tthis.line.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: this.axisLength, y: 0 });\r\n\t}\r\n\r\n\t/**\r\n\t * Updates and positions the base grid element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBaseGridElement(): void {\r\n\t\tsuper.updateBaseGridElement();\r\n\r\n\t\tlet axis: Axis = this.axis;\r\n\t\tlet h: number = this.getHeight();\r\n\t\tlet w: number = this.getWidth();\r\n\t\tlet baseGrid: Sprite = this.baseGrid;\r\n\r\n\t\tlet x: number = axis.basePoint.x;\r\n\t\tif (x < 0 || x > w) {\r\n\t\t\tbaseGrid.hide(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet y = $utils.spritePointToSprite({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;\r\n\t\t\tbaseGrid.path = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: 0, y: h });\r\n\t\t\tbaseGrid.moveTo({ x: x, y: y });\r\n\t\t\tbaseGrid.show(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates visual elements for and axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AxisBreak} axisBreak Axis break\r\n\t */\r\n\tpublic createBreakSprites(axisBreak: AxisBreak): void {\r\n\t\taxisBreak.startLine = new WavedLine();\r\n\t\taxisBreak.endLine = new WavedLine();\r\n\t\tlet wavedRectangle: WavedRectangle = new WavedRectangle();\r\n\t\twavedRectangle.setWavedSides(false, true, false, true);\r\n\t\taxisBreak.fillShape = wavedRectangle;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRendererX\"] = AxisRendererX;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisRendererX.ts","/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { EventDispatcher, AMEvent } from \"../core/utils/EventDispatcher\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t *\r\n\t * @type {Label}\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Legend}\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\t\t\tlet itemContainer = this.component.itemContainers.create();\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif (sprite instanceof DataItem || sprite instanceof Sprite) {\r\n\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\tsprite.events.on(\"visibilitychanged\", (ev) => {\r\n\t\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t)\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {string}\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t * @type {string}\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position.\r\n *\r\n * @type {string}\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvisible?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @type {LegendPosition}\r\n\t */\r\n\tposition?: LegendPosition\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n * @todo Verify/implement dynamic updating of legend items once the properties of related Series change\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t *\r\n\t * @type {ILegendDataFields}\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ILegendProperties}\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ILegendAdapters}\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILegendEvents}\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t *\r\n\t * @type {LegendDataItem<DataItem, IDataItemEvents>}\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t *\r\n\t * @type {ListTemplate<Container>}\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t *\r\n\t * @type {ListTemplate<Label>}\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t *\r\n\t * @type {ListTemplate<Container>}\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t *\r\n\t * @type {ListTemplate<Label>}\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t *\r\n\t * @type {this[\"_dataItem\"]}\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(10, 0, 10, 0);\r\n\t\titemContainer.margin(0, 10, 0, 0);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"checkbox\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Add click/tap event to toggle item\r\n\t\t// not good to listen to \"toggled\" as we will get to stackoverflow\r\n\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\tthis.toggleDataItem(<this[\"_dataItem\"]>ev.target.dataItem);\r\n\t\t}, this);\r\n\r\n\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t// for keyboard toggling\r\n\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\tthis.focusedItem = <this[\"_dataItem\"]>ev.target.dataItem;\r\n\t\t});\r\n\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\tthis.focusedItem = undefined;\r\n\t\t});\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tthis.toggleDataItem(this.focusedItem);\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\";\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\t\t\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {LegendDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {LegendDataItem} dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.parent = this;\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tif (dataItem.dataContext.createLegendMarker && !this.useDefaultMarker) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataItem.dataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.currentText == \"\" || valueLabel.currentText == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\t\tcontainer.isActive = !visible;\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param {LegendPosition}  value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 20, 10, 20);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.itemContainers.template.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.width = percent(100);\r\n\t\t\t\tthis.labels.template.truncate = true;\r\n\t\t\t\tthis.labels.template.fullWords = false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.itemContainers.template.width = undefined;\r\n\t\t\t\tthis.itemContainers.template.maxWidth = undefined;\r\n\t\t\t\tthis.valueLabels.template.width = 50;\r\n\t\t\t\tthis.labels.template.truncate = false;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendPosition} Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `true` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]} item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Preloader} Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/charts/Legend.ts","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {SerialChart}\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t *\r\n\t * @type {ColorSet}\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t *\r\n\t * @type {ISerialChartDataFields}\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISerialChartProperties}\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISerialChartAdapters}\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISerialChartEvents}\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t *\r\n\t * @type {Series}\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return {List} Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", (event)=>{\r\n\t\t\t\tthis.handleSeriesAdded(event);\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._series.events.on(\"removed\", (event) => {\r\n\t\t\t\tlet series = event.oldValue;\r\n\t\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t\t\tthis.dataUsers.each((dataUser)=>{\r\n\t\t\t\t\tdataUser.invalidateDataItems();\r\n\t\t\t\t})\r\n\t\t\t\tif(series.autoDispose){\r\n\t\t\t\t\tseries.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.feedLegend();\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<Series>[\"inserted\"]}  event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(()=>{\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\t\t\r\n\r\n\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tlegendData.push(series);\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t\tlegend.itemContainers.template.propertyFields.disabled = \"hiddenInLegend\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return {this} New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param {ColorSet} value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ColorSet} Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param {SerialChart} source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/types/SerialChart.ts","/**\r\n * Module contains functionality related to [[Sprite]] states.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"./Base\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { ListTemplate, ListDisposer } from \"./utils/List\";\r\nimport { Filter } from \"./rendering/filters/Filter\";\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { toColor } from \"./utils/Color\";\r\nimport { percent } from \"./utils/Percent\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n/**\r\n * Defines a state for [[Sprite]].\r\n *\r\n * A \"state\" is a special object that has all the same properties as the\r\n * [[Sprite]] of the same type, and which can be used to quickly apply a set\r\n * of property values. (set state)\r\n *\r\n * When [[Sprite]] (or any object that extends Sprite) is created it creates a\r\n * \"default\" state. You can modify the \"default\" state so that when the Sprite\r\n * returns to default state certain properties are added.\r\n *\r\n * Default state can be accessed using Sprite's `defaultState` getter.\r\n *\r\n * ```TypeScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JavaScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"defaultState\": {\r\n *     \"properties\": {\r\n *       \"fillOpacity\": 0.5\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * If Sprite is \"hoverable\", it automatically adds a \"hover\" state, which is\r\n * applied when it has a cursor over it.\r\n *\r\n * ```TypeScript\r\n * let hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JavaScript\r\n * var hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"states\": {\r\n *     \"hover\": {\r\n *       \"properties\": {\r\n *         \"fillOpacity\": 0.5\r\n *       }\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * The above will automatically apply \"hover\" state when the Sprite is hovered,\r\n * thus will set its `fillOpacity` property to 1, and will reset it to 0.5 when\r\n * it's no longer hovered.\r\n *\r\n * Every object that inherits from [[Sprite]] can and will add their own\r\n * properties to the available list.\r\n *\r\n * User can create their own states, and apply them as needed:\r\n *\r\n * ```TypeScript\r\n * let myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n * ```JavaScript\r\n * var myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/states/}\r\n * @important\r\n */\r\nexport class SpriteState<P, A> extends BaseObject {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {ISpriteProperties}\r\n\t */\r\n\tpublic _properties!: P;\r\n\r\n\t/**\r\n\t * Defines adapter types.\r\n\t *\r\n\t * @type {SpriteAdapters}\r\n\t */\r\n\tpublic _adapter!: A;\r\n\r\n\t/**\r\n\t * Title of the state, i.e. \"default\", \"hidden\", etc.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic name: string;\r\n\r\n\t/**\r\n\t * Reference to [[Sprite]] element this State is for.\r\n\t *\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t *\r\n\t * @type {Adapter<Sprite, SpriteAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<this, A>(this);\r\n\r\n\t/**\r\n\t * Duration of the transition to this state. 0 means instantenous transition.\r\n\t * Any number means the [[Sprite]] will transit smoothly to this state,\r\n\t * animating all animatable properties.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {number}\r\n\t */\r\n\tpublic transitionDuration: number = 0;\r\n\r\n\t/**\r\n\t * Easing function to use when transitioning to this state.\r\n\t *\r\n\t * @default cubicOut\r\n\t * @see {@link Ease}\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @type {(number) => number}\r\n\t */\r\n\tpublic transitionEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Collection of properties and their values that should be applied to [[Sprite]]\r\n\t * when switching to this State.\r\n\t *\r\n\t * The property values set on a [[SpriteState]] will override the ones set\r\n\t * directly on a [[Sprite]].\r\n\t *\r\n\t * @type {Dictionary<string, any>}\r\n\t */\r\n\tpublic properties: P = <P>{};\r\n\r\n\t/**\r\n\t * A collection of key/value pairs that can be used to bind specific Sprite\r\n\t * properties to [[DataItem]].\r\n\t *\r\n\t * For example: `fill` property can be bound to `myCustomColor` field in\r\n\t * DataItem. The Sprite will automatically get the value for `fill` from its\r\n\t * DataItem.\r\n\t *\r\n\t * SpriteState-specific binding will override binding set directly on\r\n\t * [[Sprite]]. I.e. you can make Sprite use different fill color on hover by\r\n\t * adding a `fill` binding to a different DataItem key for Sprite's \"hover\"\r\n\t * state object.\r\n\t *\r\n\t * @see {@link Sprite}\r\n\t * @type {Object}\r\n\t */\r\n\tpublic propertyFields: { [index in keyof this[\"_properties\"]]?: string } = {};\r\n\t//public propertyFields: Dictionary<keyof this[\"_properties\"], string> = new Dictionary<keyof this[\"_properties\"], string>();;\r\n\r\n\t/**\r\n\t * A list of [[Filter]] elements to be applied to the relative [[Sprite]]\r\n\t * when switching to this State.\r\n\t *\r\n\t * @param {ListTemplate<Filter>}\r\n\t */\r\n\tpublic filters = new ListTemplate<Filter>(new Filter());\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SpriteState\";\r\n\r\n\t\t// Make filter list disposable\r\n\t\tthis._disposers.push(new ListDisposer(this.filters));\r\n\t\tthis._disposers.push(this.filters.template);\r\n\r\n\t\t// Decorate adapter with events so that we can apply its settings whenever\r\n\t\t// it is modified\r\n\t\tthis.adapter.events.on(\"inserted\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t}, undefined, false);\r\n\t\tthis.adapter.events.on(\"removed\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t}, undefined, false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Sprite]] element's property value.\r\n\t *\r\n\t * Will check if there are any bindings with [[DataItem]] and if there are\r\n\t * any method callbacks set up for the specific property.\r\n\t *\r\n\t * @param  {Properties}  propertyName  Property name\r\n\t * @return {any}                       Property value\r\n\t */\r\n\tpublic getPropertyValue<Key extends keyof P>(propertyName: Key): P[Key] {\r\n\t\tlet propValue: any = this.properties[propertyName];\r\n\t\tlet sprite: $type.Optional<Sprite> = this.sprite;\r\n\r\n\t\tif (sprite) {\r\n\t\t\tlet fieldName: string = this.propertyFields[propertyName];\r\n\r\n\t\t\tif ($type.hasValue(fieldName)) {\r\n\t\t\t\tif (sprite.dataItem) {\r\n\t\t\t\t\tpropValue = (<any>sprite.dataItem.dataContext)[fieldName];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply adapters\r\n\t\t\t// If the value itself is undefined, we're going to pass in Sprite's\r\n\t\t\t// value to adapters\r\n\t\t\t// @todo get rid of <any>\r\n\t\t\tif (!$type.hasValue(propValue)) {\r\n\t\t\t\tlet spriteValue = sprite.getPropertyValue(<any>propertyName);\r\n\t\t\t\tpropValue = this.adapter.apply(<any>propertyName, sprite.getPropertyValue(<any>propertyName));\r\n\t\t\t\tif (propValue == spriteValue) {\r\n\t\t\t\t\tpropValue = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpropValue = this.adapter.apply(<any>propertyName, propValue)\r\n\t\t\t}\r\n\r\n\t\t\t/*let method = this.propertyMethods.getKey(propertyName);\r\n\t\t\tif (method) {\r\n\t\t\t\tpropValue = method(sprite, propertyName);\r\n\t\t\t}*/\r\n\r\n\t\t}\r\n\r\n\t\treturn propValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all property and style values from another [[SpriteState]] object.\r\n\t *\r\n\t * @param {SpriteState}  source  Source [[SpriteState]]\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tif (source && source != this) {\r\n\t\t\tthis.transitionDuration = source.transitionDuration;\r\n\t\t\tthis.transitionEasing = source.transitionEasing;\r\n\r\n\t\t\t$utils.copyProperties(source.properties, this.properties);\r\n\t\t\t$utils.copyProperties(source.propertyFields, this.propertyFields);\r\n\t\t\tthis.filters.copyFrom(source.filters);\r\n\t\t\tthis.adapter.copyFrom(source.adapter);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all values that should be applied by the SpriteState.\r\n\t *\r\n\t * It takes adapters into account.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {ISpriteProperties} Properties\r\n\t * @todo Add adapter values\r\n\t * @todo proper type this[\"_properties\"]\r\n\t */\r\n\tpublic get allValues(): P {\r\n\r\n\t\t// Init return value\r\n\t\tlet res: P = <P>{};\r\n\r\n\t\t// Apply adapters to all values\r\n\t\t$object.each(this.properties, (prop, value) => {\r\n\t\t\tres[prop] = this.getPropertyValue(prop);\r\n\t\t});\r\n\r\n\t\t// Cycle through all adapters and add values for missing properties\r\n\t\tlet keys = this.adapter.keys();\r\n\t\tfor (let x in keys) {\r\n\t\t\tlet prop = keys[x];\r\n\t\t\tlet value = this.getPropertyValue<any>(prop);\r\n\t\t\t(<any>res)[prop] = value;\r\n\t\t}\r\n\r\n\t\t// Cycle through all property fileds and add values for missing properties\r\n\t\tlet propertyFields = this.propertyFields;\r\n\t\tfor (let prop in propertyFields) {\r\n\t\t\tlet value = this.getPropertyValue<any>(prop);\r\n\t\t\t(<any>res)[prop] = value;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the State to initial state - no values or Filters applied.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.properties = <P>{};\r\n\t\tthis.filters.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config) && $type.hasValue(config[\"properties\"])) {\r\n\t\t\t$object.each(config[\"properties\"], (key, value) => {\r\n\t\t\t\tif ($type.isString(value)) {\r\n\t\t\t\t\tif (value.match(/^[0-9.\\-]+\\%$/)) {\r\n\t\t\t\t\t\tconfig[\"properties\"][key] = percent($type.toNumber(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n\t\t\t\t\t\tconfig[\"properties\"][key] = toColor(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/SpriteState.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Ordering } from \"./Order\";\r\nimport { IClone } from \"./Clone\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines evends for [[SortedList]].\r\n */\r\nexport interface ISortedListEvents<A> {\r\n\r\n\t/**\r\n\t * Invoked when new value is inserted into the list.\r\n\t */\r\n\tinserted: {\r\n\r\n\t\t/**\r\n\t\t * Inserted value.\r\n\t\t *\r\n\t\t * @type {A}\r\n\t\t */\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a value is removed from the list.\r\n\t */\r\n\tremoved: {\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t *\r\n\t\t * @type {A}\r\n\t\t */\r\n\t\toldValue: A;\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Ordered list contains values of any type in an indexed array.\r\n */\r\nexport class OrderedList<T> {\r\n\r\n\t/**\r\n\t * Holds list values.\r\n\t *\r\n\t * @type {Array<T>}\r\n\t */\r\n\tprotected _values: Array<T> = [];\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t *\r\n\t * @type {EventDispatcher<AMEvent<this, ISortedListEvents<T>>>}\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<this, ISortedListEvents<T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {Array<T>}  initial  Inital list of values to add to list\r\n\t */\r\n\tconstructor(initial?: Array<T>) {\r\n\t\tif (initial != null) {\r\n\t\t\tthis.setAll(initial);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * All items of the list.\r\n\t *\r\n\t * Do not modify the list directly. Rather use `insert()` and `remove()`\r\n\t * methods.\r\n\t *\r\n\t * @return {Array<T>} List values\r\n\t */\r\n\tpublic get values(): Array<T> {\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a value into list item array.\r\n\t *\r\n\t * @param {T}  value  Value\r\n\t */\r\n\tprotected _insert(value: T): void {\r\n\t\tthis._values.push(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Number of items in the list.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Length\r\n\t */\r\n\tpublic get length(): number {\r\n\t\treturn this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of the specific `value`.\r\n\t *\r\n\t * -1 if not found.\r\n\t *\r\n\t * @param  {T}       value  Value\r\n\t * @return {number}        Index\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\treturn $array.indexOf(this._values, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if list contains the `value`.\r\n\t *\r\n\t * @param  {T}        value  Value\r\n\t * @return {boolean}         In the list?\r\n\t */\r\n\tpublic contains(value: T): boolean {\r\n\t\treturn this.indexOf(value) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an item at specific `index`.\r\n\t *\r\n\t * @param  {number}  index  Index\r\n\t * @return {T}              Item\r\n\t */\r\n\tpublic getIndex(index: number): T | undefined {\r\n\t\treturn this._values[index];\r\n\t}\r\n\r\n\t/**\r\n\t * First item in the list.\r\n\t *\r\n\t * @return {T} Item\r\n\t */\r\n\tpublic get first(): T | undefined {\r\n\t\treturn this._values[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Last item in the list.\r\n\t *\r\n\t * @return {T} Item\r\n\t */\r\n\tpublic get last(): T | undefined {\r\n\t\treturn this._values[this._values.length - 1];\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a value into list.\r\n\t *\r\n\t * @param {T}  value  Value\r\n\t */\r\n\tpublic insert(value: T): void {\r\n\t\tthis._insert(value);\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an item with the `value` from the list.\r\n\t *\r\n\t * @param {T}  value  Value\r\n\t */\r\n\tpublic remove(value: T): void {\r\n\t\tconst index = this.indexOf(value);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tconst oldValue = this._values[index];\r\n\r\n\t\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets multiple items to the list.\r\n\t *\r\n\t * All current items are removed.\r\n\t *\r\n\t * @param {Array<T>}  newArray  New items\r\n\t */\r\n\tpublic setAll(newArray: Array<T>): void {\r\n\t\tconst oldArray = $array.copy(this._values);\r\n\r\n\t\tthis._values.length = 0;\r\n\r\n\t\t$array.each(newArray, (value) => {\r\n\t\t\tthis._insert(value);\r\n\t\t});\r\n\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t$array.each(oldArray, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t$array.each(this._values, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the list.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis.setAll([]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns part of the list between `start` and `end` indexes, as a new\r\n\t * [[OrderedList]].\r\n\t *\r\n\t * @param  {number}          start  Start index\r\n\t * @param  {number}          end    End index\r\n\t * @return {OrderedList<T>}         Items in range\r\n\t */\r\n\tpublic slice(start: number, end: number): OrderedList<T> {\r\n\t\tconst out = new OrderedList<T>();\r\n\r\n\t\tout._values = this._values.slice(start, end);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a closest available index to the `value` in specified direction.\r\n\t *\r\n\t * @ignore exclude from docs\r\n\t * @param  {number}                      value      value to search for\r\n\t * @param  {function}                    fn         A callback function that returns value of the item\r\n\t * @param  {\"left\" | \"right\" |  \"any\" }  direction  Direciton\r\n\t * @return {number}                                 Index\r\n\t */\r\n\tpublic findClosestIndex(value: number, fn: (value: T) => number, direction: \"left\" | \"right\" | \"any\" = \"any\"): number {\r\n\t\t// Init temporary values\r\n\t\tlet closestIndex: number = -1;\r\n\t\tlet closestValue: number;\r\n\t\tlet closestDifference: number;\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\t$iter.eachContinue(this.iterator(), (element) => {\r\n\t\t\tconst item: number = fn(element);\r\n\r\n\t\t\t// Exact match?\r\n\t\t\tif (item === value) {\r\n\t\t\t\t// Found exact value - don't bother searching further\r\n\t\t\t\tclosestIndex = i;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Calc difference\r\n\t\t\tif (direction === \"any\") {\r\n\t\t\t\tlet difference = Math.abs(value - item);\r\n\t\t\t\tif (!$type.hasValue(closestDifference) || (closestDifference > difference)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t\tclosestDifference = difference;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (direction === \"left\" && (item < value)) {\r\n\t\t\t\tif (!$type.hasValue(closestValue) || (closestValue < item)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (direction === \"right\" && (item > value)) {\r\n\t\t\t\tif (!$type.hasValue(closestValue) || (closestValue > item)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t++i;\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\t// Found nothing?\r\n\t\tif (closestIndex === -1) {\r\n\t\t\tif (direction === \"left\") {\r\n\t\t\t\t// Use First one\r\n\t\t\t\tclosestIndex = 0;\r\n\t\t\t}\r\n\t\t\telse if (direction === \"right\") {\r\n\t\t\t\t// Use last item\r\n\t\t\t\tclosestIndex = this.length - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list iterator.\r\n\t *\r\n\t * @return {Iterator} Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<T> {\r\n\t\treturn $iter.fromArray(this._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the list.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<T> {\r\n\t\tconst length = this._values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tyield this._values[i];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each element in the list.\r\n\t */\r\n\tpublic each(f: (value: T) => void): void {\r\n\t\t$array.each(this._values, f);\r\n\t}\r\n}\r\n\r\n/**\r\n * A list where all items are ordered according to specific ordering function,\r\n * which is passed in via constructor parameter, when creating an instance of\r\n * [[SortedList]].\r\n */\r\nexport class SortedList<T> extends OrderedList<T> {\r\n\r\n\t/**\r\n\t * A reference to the ordering function.\r\n\t *\r\n\t * @type {T}\r\n\t */\r\n\tprivate _ordering: (left: T, right: T) => Ordering;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {T) => Ordering}  sort  Ordering function\r\n\t */\r\n\tconstructor(sort: (left: T, right: T) => Ordering) {\r\n\t\tsuper();\r\n\t\tthis._ordering = sort;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts item into the list.\r\n\t *\r\n\t * @param {T}  value  Item\r\n\t */\r\n\tprotected _insert(value: T): void {\r\n\t\tconst { index } = $array.getSortedIndex(this._values, this._ordering, value);\r\n\r\n\t\t$array.insertIndex(this._values, index, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns index of the item in list if found.\r\n\t *\r\n\t * -1 if item is not in the list.\r\n\t *\r\n\t * @param  {T}       value  Item to search for\r\n\t * @return {number}         Index\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\tconst { found, index } = $array.getSortedIndex(this._values, this._ordering, value);\r\n\r\n\t\tif (found) {\r\n\t\t\treturn index;\r\n\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [udpate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param {T} value [description]\r\n\t */\r\n\tpublic update(value: T): void {\r\n\t\t// @todo test this\r\n\t\tconst index = $array.indexOf(this._values, value);\r\n\r\n\t\t// @todo throw an error if it doesn't exist ?\r\n\t\tif (index !== -1) {\r\n\t\t\tconst last = this._values.length - 1;\r\n\r\n\t\t\t// Check if the current ordering is correct\r\n\t\t\tif (!((index === 0 || this._ordering(this._values[index - 1], value) < 0) &&\r\n\t\t\t\t(index === last || this._ordering(value, this._values[index + 1]) < 0))) {\r\n\t\t\t\t$array.removeIndex(this._values, index);\r\n\t\t\t\tthis._insert(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * A version of a [[OrderedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class OrderedListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends OrderedList<T> {\r\n\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t * @type {T}\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {T} t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param {T}  v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {T} Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param {OrderedListTemplate}  source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.insert(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns part of the list, starting at `start` and ending at `end` indexes,\r\n\t * as a new [[OrderedListTemplate]].\r\n\t *\r\n\t * @param  {number}                  start  Start index\r\n\t * @param  {number}                  end    End index\r\n\t * @return {OrderedListTemplate<T>}         New list\r\n\t */\r\n\tpublic slice(start: number, end: number): OrderedListTemplate<T> {\r\n\t\tconst out = new OrderedListTemplate<T>(this.template);\r\n\r\n\t\tout._values = this._values.slice(start, end);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create<T>(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.insert(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\n/**\r\n * A version of a [[SortedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class SortedListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends SortedList<T> {\r\n\r\n\t// @todo code duplication\r\n\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t * @type {T}\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param {T}         t     Template object\r\n\t * @param {function}  sort  Ordering function\r\n\t */\r\n\tpublic constructor(t: T, sort: (left: T, right: T) => Ordering) {\r\n\t\tsuper(sort);\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param {T}  v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {T} Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param {SortedListTemplate}  source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.insert(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create<T>(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.insert(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/SortedList.ts","/**\n * A collection of functions for ordering.\n */\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Defines values that ordering functions can return.\n * \n * @type {number}\n */\nexport type Ordering = -1 | 0 | 1;\n\n/**\n * [reverse description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {Ordering}  a  [description]\n * @return {Ordering}     [description]\n */\nexport function reverse(a: Ordering): Ordering {\n\tswitch (a) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase -1:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn -1;\n\t}\n}\n\n/**\n * [or description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param  {Ordering}  a  Item 1\n * @param  {Ordering}  b  Item 2\n * @return {Ordering}     [description]\n */\nexport function or(a: Ordering, b: Ordering): Ordering {\n\tif (a === 0) {\n\t\treturn b;\n\n\t} else {\n\t\treturn a;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Order.ts","/**\r\n * [[AMElement]] represents any SVG element and related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available SVG attributes.\r\n */\r\nexport type SVGAttribute =\r\n\t\"accent-height\" | \"accumulate\" | \"additive\" | \"alignment-baseline\" | \"allowReorder\" | \"alphabetic\" | \"amplitude\" | \"arabic-form\" | \"aria-checked\" | \"aria-controls\" | \"aria-describedby\" | \"aria-hidden\" | \"aria-label\" | \"aria-labelledby\" | \"aria-live\" | \"ascent\" | \"attributeName\" | \"attributeType\" | \"autoReverse\" | \"azimuth\" | \"baseFrequency\" | \"baseline-shift\" | \"baseProfile\" | \"bbox\" | \"begin\" | \"bias\" | \"by\" | \"calcMode\" | \"cap-height\" | \"class\" | \"clip\" | \"clipPathUnits\" | \"clip-path\" | \"clip-rule\" | \"color\" | \"color-interpolation\" | \"color-interpolation-filters\" | \"color-profile\" | \"color-rendering\" | \"contentScriptType\" | \"contentStyleType\" | \"cursor\" | \"cx\" | \"cy\" | \"d\" | \"decelerate\" | \"descent\" | \"diffuseConstant\" | \"direction\" | \"display\" | \"divisor\" | \"dominant-baseline\" | \"dur\" | \"dx\" | \"dy\" | \"edgeMode\" | \"elevation\" | \"enable-background\" | \"end\" | \"exponent\" | \"externalResourcesRequired\" | \"fill\" | \"fill-opacity\" | \"fill-rule\" | \"filter\" | \"filterRes\" | \"filterUnits\" | \"flood-color\" | \"flood-opacity\" | \"focusable\" | \"font-family\" | \"font-size\" | \"font-size-adjust\" | \"font-stretch\" | \"font-style\" | \"font-variant\" | \"font-weight\" | \"format\" | \"from\" | \"fx\" | \"fy\" | \"g1\" | \"g2\" | \"glyph-name\" | \"glyph-orientation-horizontal\" | \"glyph-orientation-vertical\" | \"glyphRef\" | \"gradientTransform\" | \"gradientUnits\" | \"hanging\" | \"height\" | \"href\" | \"horiz-adv-x\" | \"horiz-origin-x\" | \"id\" | \"ideographic\" | \"image-rendering\" | \"in\" | \"in2\" | \"intercept\" | \"k\" | \"k1\" | \"k2\" | \"k3\" | \"k4\" | \"kernelMatrix\" | \"kernelUnitLength\" | \"kerning\" | \"keyPoints\" | \"keySplines\" | \"keyTimes\" | \"lang\" | \"lengthAdjust\" | \"letter-spacing\" | \"lighting-color\" | \"limitingConeAngle\" | \"local\" | \"marker-end\" | \"marker-mid\" | \"marker-start\" | \"markerHeight\" | \"markerUnits\" | \"markerWidth\" | \"mask\" | \"maskContentUnits\" | \"maskUnits\" | \"mathematical\" | \"max\" | \"media\" | \"method\" | \"min\" | \"mode\" | \"name\" | \"numOctaves\" | \"offset\" | \"onabort\" | \"onactivate\" | \"onbegin\" | \"onclick\" | \"onend\" | \"onerror\" | \"onfocusin\" | \"onfocusout\" | \"onload\" | \"onmousedown\" | \"onmousemove\" | \"onmouseout\" | \"onmouseover\" | \"onmouseup\" | \"onrepeat\" | \"onresize\" | \"onscroll\" | \"onunload\" | \"onzoom\" | \"opacity\" | \"operator\" | \"order\" | \"orient\" | \"orientation\" | \"origin\" | \"overflow\" | \"overline-position\" | \"overline-thickness\" | \"panose-1\" | \"paint-order\" | \"pathLength\" | \"patternContentUnits\" | \"patternTransform\" | \"patternUnits\" | \"pointer-events\" | \"points\" | \"pointsAtX\" | \"pointsAtY\" | \"pointsAtZ\" | \"preserveAlpha\" | \"preserveAspectRatio\" | \"primitiveUnits\" | \"r\" | \"radius\" | \"refX\" | \"refY\" | \"rendering-intent\" | \"repeatCount\" | \"repeatDur\" | \"requiredExtensions\" | \"requiredFeatures\" | \"restart\" | \"result\" | \"role\" | \"rotate\" | \"rx\" | \"ry\" | \"scale\" | \"seed\" | \"shape-rendering\" | \"slope\" | \"spacing\" | \"specularConstant\" | \"specularExponent\" | \"speed\" | \"spreadMethod\" | \"startOffset\" | \"stdDeviation\" | \"stemh\" | \"stemv\" | \"stitchTiles\" | \"stop-color\" | \"stop-opacity\" | \"strikethrough-position\" | \"strikethrough-thickness\" | \"string\" | \"stroke\" | \"stroke-dasharray\" | \"stroke-dashoffset\" | \"stroke-linecap\" | \"stroke-linejoin\" | \"stroke-miterlimit\" | \"stroke-opacity\" | \"stroke-width\" | \"style\" | \"surfaceScale\" | \"systemLanguage\" | \"tabindex\" | \"tableValues\" | \"target\" | \"targetX\" | \"targetY\" | \"text-anchor\" | \"text-decoration\" | \"text-rendering\" | \"textLength\" | \"to\" | \"transform\" | \"type\" | \"u1\" | \"u2\" | \"underline-position\" | \"underline-thickness\" | \"unicode\" | \"unicode-bidi\" | \"unicode-range\" | \"units-per-em\" | \"v-alphabetic\" | \"v-hanging\" | \"v-ideographic\" | \"v-mathematical\" | \"values\" | \"version\" | \"vert-adv-y\" | \"vert-origin-x\" | \"vert-origin-y\" | \"viewBox\" | \"viewTarget\" | \"visibility\" | \"width\" | \"widths\" | \"word-spacing\" | \"writing-mode\" | \"x\" | \"x-height\" | \"x1\" | \"x2\" | \"xChannelSelector\" | \"xlink:actuate\" | \"xlink:arcrole\" | \"xlink:href\" | \"xlink:role\" | \"xlink:show\" | \"xlink:title\" | \"xlink:type\" | \"xml:base\" | \"xml:lang\" | \"xml:space\" | \"y\" | \"y1\" | \"y2\" | \"yChannelSelector\" | \"z\" | \"zoomAndPan\";\r\n\r\n/**\r\n * Represents an interface for SVG attributes.\r\n *\r\n * This is a collection of all properties that an SVG element can have.\r\n */\r\nexport interface ISVGAttribute {\r\n\t\"accent-height\"?: any;\r\n\t\"accumulate\"?: any;\r\n\t\"additive\"?: any;\r\n\t\"alignment-baseline\"?: any;\r\n\t\"allowReorder\"?: any;\r\n\t\"alphabetic\"?: any;\r\n\t\"amplitude\"?: any;\r\n\t\"arabic-form\"?: any;\r\n\t\"aria-checked\"?: any;\r\n\t\"aria-controls\"?: any;\r\n\t\"aria-describedby\"?: any;\r\n\t\"aria-hidden\"?: any;\r\n\t\"aria-label\"?: any;\r\n\t\"aria-labelledby\"?: any;\r\n\t\"aria-live\"?: any;\r\n\t\"ascent\"?: any;\r\n\t\"attributeName\"?: any;\r\n\t\"attributeType\"?: any;\r\n\t\"autoReverse\"?: any;\r\n\t\"azimuth\"?: any;\r\n\t\"baseFrequency\"?: any;\r\n\t\"baseline-shift\"?: any;\r\n\t\"baseProfile\"?: any;\r\n\t\"bbox\"?: any;\r\n\t\"begin\"?: any;\r\n\t\"bias\"?: any;\r\n\t\"by\"?: any;\r\n\t\"calcMode\"?: any;\r\n\t\"cap-height\"?: any;\r\n\t\"class\"?: any;\r\n\t\"clip\"?: any;\r\n\t\"clipPathUnits\"?: any;\r\n\t\"clip-path\"?: any;\r\n\t\"clip-rule\"?: any;\r\n\t\"color\"?: any;\r\n\t\"color-interpolation\"?: any;\r\n\t\"color-interpolation-filters\"?: any;\r\n\t\"color-profile\"?: any;\r\n\t\"color-rendering\"?: any;\r\n\t\"contentScriptType\"?: any;\r\n\t\"contentStyleType\"?: any;\r\n\t\"cursor\"?: any;\r\n\t\"cx\"?: any;\r\n\t\"cy\"?: any;\r\n\t\"d\"?: any;\r\n\t\"decelerate\"?: any;\r\n\t\"descent\"?: any;\r\n\t\"diffuseConstant\"?: any;\r\n\t\"direction\"?: any;\r\n\t\"display\"?: any;\r\n\t\"divisor\"?: any;\r\n\t\"dominant-baseline\"?: any;\r\n\t\"dur\"?: any;\r\n\t\"dx\"?: any;\r\n\t\"dy\"?: any;\r\n\t\"edgeMode\"?: any;\r\n\t\"elevation\"?: any;\r\n\t\"enable-background\"?: any;\r\n\t\"end\"?: any;\r\n\t\"exponent\"?: any;\r\n\t\"externalResourcesRequired\"?: any;\r\n\t\"fill\"?: any;\r\n\t\"fill-opacity\"?: any;\r\n\t\"fill-rule\"?: any;\r\n\t\"filter\"?: any;\r\n\t\"filterRes\"?: any;\r\n\t\"filterUnits\"?: any;\r\n\t\"flood-color\"?: any;\r\n\t\"flood-opacity\"?: any;\r\n\t\"focusable\"?: any;\r\n\t\"font-family\"?: any;\r\n\t\"font-size\"?: any;\r\n\t\"font-size-adjust\"?: any;\r\n\t\"font-stretch\"?: any;\r\n\t\"font-style\"?: any;\r\n\t\"font-variant\"?: any;\r\n\t\"font-weight\"?: any;\r\n\t\"format\"?: any;\r\n\t\"from\"?: any;\r\n\t\"fx\"?: any;\r\n\t\"fy\"?: any;\r\n\t\"g1\"?: any;\r\n\t\"g2\"?: any;\r\n\t\"glyph-name\"?: any;\r\n\t\"glyph-orientation-horizontal\"?: any;\r\n\t\"glyph-orientation-vertical\"?: any;\r\n\t\"glyphRef\"?: any;\r\n\t\"gradientTransform\"?: any;\r\n\t\"gradientUnits\"?: any;\r\n\t\"hanging\"?: any;\r\n\t\"height\"?: any;\r\n\t\"href\"?: any;\r\n\t\"horiz-adv-x\"?: any;\r\n\t\"horiz-origin-x\"?: any;\r\n\t\"id\"?: any;\r\n\t\"ideographic\"?: any;\r\n\t\"image-rendering\"?: any;\r\n\t\"in\"?: any;\r\n\t\"in2\"?: any;\r\n\t\"intercept\"?: any;\r\n\t\"k\"?: any;\r\n\t\"k1\"?: any;\r\n\t\"k2\"?: any;\r\n\t\"k3\"?: any;\r\n\t\"k4\"?: any;\r\n\t\"kernelMatrix\"?: any;\r\n\t\"kernelUnitLength\"?: any;\r\n\t\"kerning\"?: any;\r\n\t\"keyPoints\"?: any;\r\n\t\"keySplines\"?: any;\r\n\t\"keyTimes\"?: any;\r\n\t\"lang\"?: any;\r\n\t\"lengthAdjust\"?: any;\r\n\t\"letter-spacing\"?: any;\r\n\t\"lighting-color\"?: any;\r\n\t\"limitingConeAngle\"?: any;\r\n\t\"local\"?: any;\r\n\t\"marker-end\"?: any;\r\n\t\"marker-mid\"?: any;\r\n\t\"marker-start\"?: any;\r\n\t\"markerHeight\"?: any;\r\n\t\"markerUnits\"?: any;\r\n\t\"markerWidth\"?: any;\r\n\t\"mask\"?: any;\r\n\t\"maskContentUnits\"?: any;\r\n\t\"maskUnits\"?: any;\r\n\t\"mathematical\"?: any;\r\n\t\"max\"?: any;\r\n\t\"media\"?: any;\r\n\t\"method\"?: any;\r\n\t\"min\"?: any;\r\n\t\"mode\"?: any;\r\n\t\"name\"?: any;\r\n\t\"numOctaves\"?: any;\r\n\t\"offset\"?: any;\r\n\t\"onabort\"?: any;\r\n\t\"onactivate\"?: any;\r\n\t\"onbegin\"?: any;\r\n\t\"onclick\"?: any;\r\n\t\"onend\"?: any;\r\n\t\"onerror\"?: any;\r\n\t\"onfocusin\"?: any;\r\n\t\"onfocusout\"?: any;\r\n\t\"onload\"?: any;\r\n\t\"onmousedown\"?: any;\r\n\t\"onmousemove\"?: any;\r\n\t\"onmouseout\"?: any;\r\n\t\"onmouseover\"?: any;\r\n\t\"onmouseup\"?: any;\r\n\t\"onrepeat\"?: any;\r\n\t\"onresize\"?: any;\r\n\t\"onscroll\"?: any;\r\n\t\"onunload\"?: any;\r\n\t\"onzoom\"?: any;\r\n\t\"opacity\"?: any;\r\n\t\"operator\"?: any;\r\n\t\"order\"?: any;\r\n\t\"orient\"?: any;\r\n\t\"orientation\"?: any;\r\n\t\"origin\"?: any;\r\n\t\"overflow\"?: any;\r\n\t\"overline-position\"?: any;\r\n\t\"overline-thickness\"?: any;\r\n\t\"panose-1\"?: any;\r\n\t\"paint-order\"?: any;\r\n\t\"pathLength\"?: any;\r\n\t\"patternContentUnits\"?: any;\r\n\t\"patternTransform\"?: any;\r\n\t\"patternUnits\"?: any;\r\n\t\"pointer-events\"?: any;\r\n\t\"points\"?: any;\r\n\t\"pointsAtX\"?: any;\r\n\t\"pointsAtY\"?: any;\r\n\t\"pointsAtZ\"?: any;\r\n\t\"preserveAlpha\"?: any;\r\n\t\"preserveAspectRatio\"?: any;\r\n\t\"primitiveUnits\"?: any;\r\n\t\"r\"?: any;\r\n\t\"radius\"?: any;\r\n\t\"refX\"?: any;\r\n\t\"refY\"?: any;\r\n\t\"rendering-intent\"?: any;\r\n\t\"repeatCount\"?: any;\r\n\t\"repeatDur\"?: any;\r\n\t\"requiredExtensions\"?: any;\r\n\t\"requiredFeatures\"?: any;\r\n\t\"restart\"?: any;\r\n\t\"result\"?: any;\r\n\t\"role\"?: any;\r\n\t\"rotate\"?: any;\r\n\t\"rx\"?: any;\r\n\t\"ry\"?: any;\r\n\t\"scale\"?: any;\r\n\t\"seed\"?: any;\r\n\t\"shape-rendering\"?: any;\r\n\t\"slope\"?: any;\r\n\t\"spacing\"?: any;\r\n\t\"specularConstant\"?: any;\r\n\t\"specularExponent\"?: any;\r\n\t\"speed\"?: any;\r\n\t\"spreadMethod\"?: any;\r\n\t\"startOffset\"?: any;\r\n\t\"stdDeviation\"?: any;\r\n\t\"stemh\"?: any;\r\n\t\"stemv\"?: any;\r\n\t\"stitchTiles\"?: any;\r\n\t\"stop-color\"?: any;\r\n\t\"stop-opacity\"?: any;\r\n\t\"strikethrough-position\"?: any;\r\n\t\"strikethrough-thickness\"?: any;\r\n\t\"string\"?: any;\r\n\t\"stroke\"?: any;\r\n\t\"stroke-dasharray\"?: any;\r\n\t\"stroke-dashoffset\"?: any;\r\n\t\"stroke-linecap\"?: any;\r\n\t\"stroke-linejoin\"?: any;\r\n\t\"stroke-miterlimit\"?: any;\r\n\t\"stroke-opacity\"?: any;\r\n\t\"stroke-width\"?: any;\r\n\t\"style\"?: any;\r\n\t\"surfaceScale\"?: any;\r\n\t\"systemLanguage\"?: any;\r\n\t\"tabindex\"?: any;\r\n\t\"tableValues\"?: any;\r\n\t\"target\"?: any;\r\n\t\"targetX\"?: any;\r\n\t\"targetY\"?: any;\r\n\t\"text-anchor\"?: any;\r\n\t\"text-decoration\"?: any;\r\n\t\"text-rendering\"?: any;\r\n\t\"textLength\"?: any;\r\n\t\"to\"?: any;\r\n\t\"transform\"?: any;\r\n\t\"type\"?: any;\r\n\t\"u1\"?: any;\r\n\t\"u2\"?: any;\r\n\t\"underline-position\"?: any;\r\n\t\"underline-thickness\"?: any;\r\n\t\"unicode\"?: any;\r\n\t\"unicode-bidi\"?: any;\r\n\t\"unicode-range\"?: any;\r\n\t\"units-per-em\"?: any;\r\n\t\"v-alphabetic\"?: any;\r\n\t\"v-hanging\"?: any;\r\n\t\"v-ideographic\"?: any;\r\n\t\"v-mathematical\"?: any;\r\n\t\"values\"?: any;\r\n\t\"version\"?: any;\r\n\t\"vert-adv-y\"?: any;\r\n\t\"vert-origin-x\"?: any;\r\n\t\"vert-origin-y\"?: any;\r\n\t\"viewBox\"?: any;\r\n\t\"viewTarget\"?: any;\r\n\t\"visibility\"?: any;\r\n\t\"width\"?: any;\r\n\t\"widths\"?: any;\r\n\t\"word-spacing\"?: any;\r\n\t\"writing-mode\"?: any;\r\n\t\"x\"?: any;\r\n\t\"x-height\"?: any;\r\n\t\"x1\"?: any;\r\n\t\"x2\"?: any;\r\n\t\"xChannelSelector\"?: any;\r\n\t\"xlink:actuate\"?: any;\r\n\t\"xlink:arcrole\"?: any;\r\n\t\"xlink:href\"?: any;\r\n\t\"xlink:role\"?: any;\r\n\t\"xlink:show\"?: any;\r\n\t\"xlink:title\"?: any;\r\n\t\"xlink:type\"?: any;\r\n\t\"xml:base\"?: any;\r\n\t\"xml:lang\"?: any;\r\n\t\"xml:space\"?: any;\r\n\t\"y\"?: any;\r\n\t\"y1\"?: any;\r\n\t\"y2\"?: any;\r\n\t\"yChannelSelector\"?: any;\r\n\t\"z\"?: any;\r\n\t\"zoomAndPan\"?: any;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all SVG elements. Provides low-level DOM functionality.\r\n *\r\n * All visual elements extend this class.\r\n */\r\nexport class AMElement implements IDisposer {\r\n\r\n\t/**\r\n\t * Indicates if the element was already disposed.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isDisposed: boolean = false;\r\n\r\n\t/**\r\n\t * An SVG node of the element.\r\n\t *\r\n\t * @type {SVGSVGElement}\r\n\t */\r\n\tpublic node: SVGSVGElement;\r\n\r\n\t/**\r\n\t * Current X coordinate.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _x: number = 0;\r\n\r\n\t/**\r\n\t * Current Y coordinate.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _y: number = 0;\r\n\r\n\t/**\r\n\t * Current rotation.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _rotation: number = 0;\r\n\r\n\t/**\r\n\t * Current scale.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _scale: number = 1;\r\n\r\n\t/**\r\n\t * current value of transfrom string\r\n\t */\r\n\tprivate _transformString:string;\r\n\r\n\t/**\r\n\t * Constructor creates a new element or uses the one that was passed in.\r\n\t *\r\n\t * @param {string | SVGSVGElement} element Element reference node type\r\n\t */\r\n\tconstructor(element: string | SVGSVGElement) {\r\n\t\tif (typeof element === \"string\") {\r\n\t\t\tthis.node = <SVGSVGElement>document.createElementNS($dom.SVGNS, element);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.node = element;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes element's node from DOM.\r\n\t */\r\n\tpublic removeNode(): void {\r\n\t\tif (this.node) {\r\n\t\t\tif (this.node.parentNode) {\r\n\t\t\t\tthis.node.parentNode.removeChild(this.node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `transform` attribute of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<string>} Transform attribute value\r\n\t */\r\n\tpublic get transformString(): $type.Optional<string> {\r\n\t\tif (this.node) {\r\n\r\n\t\t\treturn this._transformString;\r\n\t\t\t/*\r\n\t\t\tconst value = this.node.getAttribute(\"transform\");\r\n\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn value;\r\n\t\t\t}*/\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appply position, rotation and scale properties via elemen's `transform`\r\n\t * property\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic transform(): void {\r\n\r\n\t\tlet transfromString = \"translate(\" + this._x + \",\" + this._y + \")\";\r\n\r\n\t\tif (this._scale != 1) {\r\n\t\t\ttransfromString += ((transfromString ? \" \" : \"\") + \"scale(\" + this._scale + \")\");\r\n\t\t}\r\n\r\n\t\tif (this._rotation != 0) {\r\n\t\t\ttransfromString += ((transfromString ? \" \" : \"\") + \"rotate(\" + this._rotation + \")\");\r\n\t\t}\r\n\r\n\t\tthis._transformString = transfromString;\r\n\r\n\t\tthis.node.setAttribute(\"transform\", transfromString);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns bounding box of the element.\r\n\t *\r\n\t * ATTENTION: Bounding box calculations are extremely costly so should be\r\n\t * used sparingly and cached whenever possible.\r\n\t *\r\n\t * @return {IRectangle} Bounding rectangle\r\n\t */\r\n\tpublic getBBox(): IRectangle {\r\n\t\tlet bbox: IRectangle = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tif (this.node) {\r\n\t\t\t// FF would fail if getBBox() is called without node added to parent\r\n\t\t\tif (this.node.parentNode) {\r\n\t\t\t\ttry { // again for ff. TODO: check if this doesn't slow down\r\n\t\t\t\t\tlet svgbbox = this.node.getBBox();\r\n\t\t\t\t\tbbox.x = svgbbox.x;\r\n\t\t\t\t\tbbox.y = svgbbox.y;\r\n\t\t\t\t\tbbox.width = svgbbox.width;\r\n\t\t\t\t\tbbox.height = svgbbox.height;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bbox;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to new coordinates.\r\n\t *\r\n\t * @param {number}  x  Target X\r\n\t * @param {number}  y  Target Y\r\n\t */\r\n\tpublic moveTo(point: IPoint): void {\r\n\t\tif (point) {\r\n\t\t\tlet x: number = point.x;\r\n\t\t\tlet y: number = point.y;\r\n\t\t\tif (this._x != x || this._y != y) {\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis.transform();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Element's SVG contents.\r\n\t *\r\n\t * @param {string} value Contents\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\t// @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n\t\tthis.node.innerHTML = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's contents as SVG markup.\r\n\t *\r\n\t * @return {string} Contents\r\n\t */\r\n\tpublic get content(): string {\r\n\t\t// @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n\t\treturn this.node.innerHTML || \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Text contents of the SVG element.\r\n\t *\r\n\t * @param {string} value Text contents\r\n\t */\r\n\tpublic set textContent(value: string) {\r\n\t\tthis.node.textContent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Text contents\r\n\t */\r\n\tpublic get textContent(): string {\r\n\t\treturn this.node.textContent || \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Element's X position in pixels.\r\n\t *\r\n\t * @param {number}  value  X coordinate (px)\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tif (this._x != value) {\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} X coordinate (px)\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's Y position in pixels.\r\n\t *\r\n\t * @param {number} value Y coordinate (px)\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tif (this._y != value) {\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Y coordinate (px)\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's rotation in degrees.\r\n\t *\r\n\t * @param {number} value Rotation\r\n\t */\r\n\tpublic set rotation(angle: number) {\r\n\t\tif (this._rotation != angle) {\r\n\t\t\tthis._rotation = angle;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's scale where 1 is original size.\r\n\t *\r\n\t * Setting to 0.5 will reduce element's size by 50%, 2 will make element\r\n\t * twice as large, etc.\r\n\t *\r\n\t * @param {number} value Scale\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tif (this._scale != value) {\r\n\t\t\tthis._scale = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Scale\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute from element.\r\n\t *\r\n\t * @param {string}  attribute  Attribute to remove\r\n\t */\r\n\tpublic removeAttr(attribute: string): void {\r\n\t\tthis.node.removeAttribute(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a set of attributes on a element.\r\n\t *\r\n\t * @param  {ISVGAttribute}  attributes  An object with attribute names (key) and values\r\n\t * @return {AMElement}                  The same element\r\n\t */\r\n\tpublic attr(attributes: ISVGAttribute): AMElement {\r\n\t\tfor (let attributeName in attributes) {\r\n\r\n\t\t\tif (!$type.hasValue((<any>attributes)[attributeName])) {\r\n\t\t\t\tthis.node.removeAttribute(attributeName);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is for performance testing\r\n\t\t\t\t//if((<any>attributes)[attributeName] == this.node.getAttribute(attributeName)){\r\n\t\t\t\t//\tconsole.log(attributeName, (<any>attributes)[attributeName])\r\n\t\t\t\t//}\r\n\t\t\t\tthis.node.setAttribute(attributeName, (<any>attributes)[attributeName]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value of a node attribute.\r\n\t *\r\n\t * @param  {string}         attribute  Attribute name\r\n\t * @return {string | null}             Attribute value\r\n\t */\r\n\tpublic getAttr(attribute: string): string | null {\r\n\t\treturn this.node.getAttribute(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single attribute of the element's node using namesspace.\r\n\t *\r\n\t * @param  {string}     ns         Namespace\r\n\t * @param  {string}     attribute  Attribute\r\n\t * @param  {string}     value      Value\r\n\t * @return {AMElement}             The same element\r\n\t */\r\n\tpublic attrNS(ns: string, attribute: string, value: string): AMElement {\r\n\t\tthis.node.setAttributeNS(ns, attribute, value);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a namespaced attribute value from node.\r\n\t *\r\n\t * @param  {string}  ns         Namespace\r\n\t * @param  {string}  attribute  Attribute\r\n\t * @return {string}             Attribute value\r\n\t */\r\n\tpublic getAttrNS(ns: string, attribute: string): string {\r\n\t\treturn this.node.getAttributeNS(ns, attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes `style` attribute from node.\r\n\t *\r\n\t * @param {string}  attribute  Attribute to remove\r\n\t */\r\n\tpublic removeStyle(attribute: string): void {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\tdelete (<any>this.node.style)[attribute];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns style attribute value.\r\n\t *\r\n\t * @param  {string}  attribute  Style attribute value\r\n\t * @return {string}             Attribute value\r\n\t */\r\n\tpublic getStyle(attribute: string): string {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\treturn (<any>this.node.style)[attribute];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds style attributes to element's node.\r\n\t *\r\n\t * @param  {Object}     attributes  Object containing attribute: value pairs\r\n\t * @return {AMElement}              The same element\r\n\t */\r\n\tpublic addStyle(attributes: Object): AMElement {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\tfor (let attributeName in attributes) {\r\n\t\t\tif (!$type.hasValue((<any>attributes)[attributeName])) {\r\n\t\t\t\tthis.removeStyle(attributeName);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.node.style)[attributeName] = (<any>attributes)[attributeName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a class to element.\r\n\t *\r\n\t * @param {string}  name  Class name\r\n\t */\r\n\tpublic addClass(name: string): void {\r\n\t\t$dom.addClass(this.node, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a class from element.\r\n\t *\r\n\t * @param {string} name Class name\r\n\t */\r\n\tpublic removeClass(name: string): void {\r\n\t\t$dom.removeClass(this.node, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a class name on element.\r\n\t *\r\n\t * @param {string}  name  Class name\r\n\t */\r\n\tpublic setClass(name: string): void {\r\n\t\tthis.node.setAttribute(\"class\", name);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all element's child nodes, basically leaving it empty.\r\n\t */\r\n\tpublic removeChildNodes(): void {\r\n\t\t// remove all children\r\n\t\twhile (this.node.childNodes.length > 0) {\r\n\t\t\tthis.node.removeChild(this.node.firstChild!);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Was this element already been disposed?\r\n\t *\r\n\t * @return {boolean} Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._isDisposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes element.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.removeNode();\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/AMElement.ts","/**\r\n * Pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { ShapeRendering } from \"../../defs/ShapeRendering\";\r\nimport { List, ListDisposer } from \"../../utils/List\";\r\nimport { MultiDisposer } from \"../../utils/Disposer\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { registry } from \"../../Registry\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../../utils/Percent\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available units to measure patterns.\r\n *\r\n * @type {string}\r\n */\r\nexport type PatternUnits = \"userSpaceOnUse\" | \"objectBoundingBox\";\r\n\r\n/**\r\n * Defines properties for [[Pattern]].\r\n *\r\n * @type {string}\r\n */\r\nexport interface PatternProperties {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tbackgroundOpacity: number;\r\n\tbackgroundFill: Color;\r\n\tfillOpacity: number;\r\n\tfill: Color;\r\n\tstroke: Color;\r\n\tstrokeOpacity: number;\r\n\tstrokeWidth: number;\r\n\tshapeRendering: ShapeRendering;\r\n\trotation: number;\r\n\tpatternUnits: PatternUnits;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define patterns.\r\n */\r\nexport class Pattern extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * List of available animations currently running on a pattern.\r\n\t *\r\n\t * @type {Optional<Array<Animation>>}\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * An SVG `<group>` element to put sub-elements into.\r\n\t *\r\n\t * @type {Group}\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to [[Paper]] instance.\r\n\t *\r\n\t * @type {Optional<Paper>}\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * List of elements the pattern consists of.\r\n\t *\r\n\t * @type {List<AMElement>}\r\n\t */\r\n\tprotected _elements: List<AMElement> = new List<AMElement>();\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {FilterProperties}\r\n\t */\r\n\tpublic _properties!: PatternProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link PatternProperties}\r\n\t * @type {PatternProperties}\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = <any>{};\r\n\t//public propertyValues = new Dictionary<PatternProperties, any>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Pattern\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.patternUnits = \"userSpaceOnUse\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.backgroundFill = interfaceColors.getFor(\"background\");\r\n\t\tthis.backgroundOpacity = 0;\r\n\r\n\t\tthis.fillOpacity = 1;\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.strokeWidth = 1;\r\n\t\tthis.shapeRendering = \"crispEdges\";\r\n\t\tthis.rotation = 0;\r\n\r\n\t\t// Create main group to store pattern elements inelements\r\n\t\tthis.element = this.paper.addGroup(\"pattern\");\r\n\t\tthis.id = \"pattern-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\t// Make elements disposable\r\n\t\tthis._disposers.push(new ListDisposer(this._elements));\r\n\r\n\t\t// Request again to trigger getter/setter code\r\n\t\tthis.patternUnits = this.patternUnits;\r\n\t\tthis.width = this.width;\r\n\t\tthis.height = this.height;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the pattern.\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t\tlet patternElement: Group = this.element;\r\n\t\tif (patternElement) {\r\n\r\n\t\t\tpatternElement.removeChildNodes();\r\n\r\n\t\t\tlet background = this.paper.add(\"rect\");\r\n\t\t\tbackground.attr({ \"width\": this.width, \"height\": this.height, \"shape-rendering\": \"crispEdges\", \"fill\": this.backgroundFill.hex, \"fill-opacity\": this.backgroundOpacity, \"stroke\": this.backgroundFill.hex, \"stroke-opacity\": this.backgroundOpacity });\r\n\t\t\tpatternElement.add(background);\r\n\r\n\t\t\tpatternElement.attr({ \"x\": this.x, \"y\": this.y, \"width\": this.width, \"height\": this.height, \"stroke\": this.stroke.hex, \"fill\": this.fill.hex, \"fill-opacity\": this.fillOpacity, \"stroke-opacity\": this.strokeOpacity, \"stroke-width\": this.strokeWidth, \"shape-rendering\": this.shapeRendering, \"patternUnits\": this.patternUnits });\r\n\r\n\t\t\t$iter.each(this._elements.iterator(), (element) => {\r\n\t\t\t\telement.rotation = this.rotation;\r\n\t\t\t\tthis.element.add(element);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Animate pattern properties.\r\n\t *\r\n\t * @see {@link Animation}\r\n\t * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options\r\n\t * @param  {number}                                   duration          Duration (ms)\r\n\t * @param  {(number) => number}                       easing            Easing function\r\n\t * @return {Animation}                                                  Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to the pattern.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic addElement(element: AMElement): void {\r\n\t\tthis._elements.push(element);\r\n\t\tthis._disposers.push(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an element from the pattern.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic removeElement(element: AMElement): void {\r\n\t\tthis._elements.removeValue(element);\r\n\t\tthis.removeDispose(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the list of SVG elements comprising the pattern.\r\n\t *\r\n\t * @return {List<AMElement>} Pattern elements\r\n\t */\r\n\tpublic get elements(): List<AMElement> {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern fill opacity. (0-1)\r\n\t *\r\n\t * @param {number}  value  Opacity (0-1)\r\n\t */\r\n\tpublic set fillOpacity(value: number) {\r\n\t\tthis.properties[\"fillOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-1)\r\n\t */\r\n\tpublic get fillOpacity(): number {\r\n\t\treturn this.properties[\"fillOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Fill color of the pattern.\r\n\t *\r\n\t * @param {Color}  value  Fill color\r\n\t */\r\n\tpublic set fill(value: Color) {\r\n\t\tthis.properties[\"fill\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Fill color\r\n\t */\r\n\tpublic get fill(): Color {\r\n\t\treturn this.properties[\"fill\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern background fill color.\r\n\t *\r\n\t * @param {Color}  value  Background color\r\n\t */\r\n\tpublic set backgroundFill(value: Color) {\r\n\t\tthis.properties[\"backgroundFill\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Background color\r\n\t */\r\n\tpublic get backgroundFill(): Color {\r\n\t\treturn this.properties[\"backgroundFill\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern backgorund opacity. (0-1)\r\n\t *\r\n\t * @param {number}  value  Background opacity (0-1)\r\n\t */\r\n\tpublic set backgroundOpacity(value: number) {\r\n\t\tthis.properties[\"backgroundOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Background opacity (0-1)\r\n\t */\r\n\tpublic get backgroundOpacity(): number {\r\n\t\treturn this.properties[\"backgroundOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke (border) color.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set stroke(value: Color) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get stroke(): Color {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke opacity. (0-1)\r\n\t *\r\n\t * @param {number}  value  Opacity (0-1)\r\n\t */\r\n\tpublic set strokeOpacity(value: number) {\r\n\t\tthis.properties[\"strokeOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-1)\r\n\t */\r\n\tpublic get strokeOpacity(): number {\r\n\t\treturn this.properties[\"strokeOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke thickness in pixels.\r\n\t *\r\n\t * @param {number}  value  Stroke thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: number) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Stroke thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): number {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Shape rendering\r\n\t * @param {ShapeRendering} value [description]\r\n\t */\r\n\tpublic set shapeRendering(value: ShapeRendering) {\r\n\t\tthis.properties[\"shapeRendering\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get shapeRendering(): ShapeRendering {\r\n\t\treturn this.properties[\"shapeRendering\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern rotation in degrees.\r\n\t *\r\n\t * @param {number}  value  Rotation\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\tthis.properties[\"rotation\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this.properties[\"rotation\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern measuring units.\r\n\t *\r\n\t * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n\t *\r\n\t * @param {\"userSpaceOnUse\" | \"objectBoundingBox\"}  value  Units\r\n\t */\r\n\tpublic set patternUnits(value: \"userSpaceOnUse\" | \"objectBoundingBox\") {\r\n\t\tthis.properties[\"patternUnits\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {\"userSpaceOnUse\" | \"objectBoundingBox\"} Units\r\n\t */\r\n\tpublic get patternUnits(): \"userSpaceOnUse\" | \"objectBoundingBox\" {\r\n\t\treturn this.properties[\"patternUnits\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern width in pixels.\r\n\t *\r\n\t * @param {number}  value  Width (px)\r\n\t */\r\n\tpublic set width(value: number) {\r\n\t\tthis.properties[\"width\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get width(): number {\r\n\t\treturn this.properties[\"width\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern height in pixels.\r\n\t *\r\n\t * @param {number} value Height (px)\r\n\t */\r\n\tpublic set height(value: number) {\r\n\t\tthis.properties[\"height\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Height (px)\r\n\t */\r\n\tpublic get height(): number {\r\n\t\treturn this.properties[\"height\"];\r\n\t}\r\n\r\n\t/**\r\n\t * X position. (pixels)\r\n\t *\r\n\t * @param {number} value X (px)\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tthis.properties[\"x\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} X (px)\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this.properties[\"x\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Y position (px).\r\n\t *\r\n\t * @param {number} value Y (px)\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tthis.properties[\"y\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Y (px)\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this.properties[\"y\"];\r\n\t}\r\n\r\n\t/**\r\n\t * [[Paper]] instance to draw pattern in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.draw();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from another Pattern instance.\r\n\t *\r\n\t * @param {this}  source  Source pattern\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\t$object.each(source.properties, (key, value) => {\r\n\t\t\t(<any>this)[key] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of animations currently running on the patter.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Array<Animation>} Animation list\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\r\n\t\t\t\tfor (let i = 0, len = config.elements.length; i < len; i++) {\r\n\t\t\t\t\tlet element = config.elements[i];\r\n\t\t\t\t\tif ($type.hasValue(element[\"type\"])) {\r\n\t\t\t\t\t\tlet sprite = this.createEntryInstance(element);\r\n\t\t\t\t\t\tif (sprite instanceof BaseObject) {\r\n\t\t\t\t\t\t\tsprite.config = element;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.addElement(\r\n\t\t\t\t\t\t\t$type.hasValue(element[\"typeProperty\"])\r\n\t\t\t\t\t\t\t? sprite[element[\"typeProperty\"]]\r\n\t\t\t\t\t\t\t: sprite.element\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Pattern\"] = Pattern;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/Pattern.ts","/**\r\n * Contains code and logic for generating radial gradients.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport { IGradientStop } from \"./LinearGradient\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $type from \"../../utils/Type\";\r\nimport * as $array from \"../../utils/Array\";\r\nimport { percent, Percent } from \"../../utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Radial gradient class.\r\n */\r\nexport class RadialGradient extends BaseObject {\r\n\r\n\t/**\r\n\t * List of colors switch definitions in a gradient.\r\n\t *\r\n\t * @type {List<IGradientStop>}\r\n\t */\r\n\tprotected _stops: List<IGradientStop> = new List<IGradientStop>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element used to draw gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Group}\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to Paper to add element to.\r\n\t *\r\n\t * @type {Optional<Paper>}\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * A center x coordinate for the radial gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @type {Optional<number | Percent>}\r\n\t */\r\n\tprotected _cx: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A center y coordinate for the radial gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @type {Optional<number | Percent>}\r\n\t */\r\n\tprotected _cy: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @type {Optional<number | Percent>}\r\n\t */\r\n\tprotected _fx: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @type {Optional<number | Percent>}\r\n\t */\r\n\tprotected _fy: $type.Optional<number | Percent>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.element = this.paper.addGroup(\"radialGradient\");\r\n\t\tthis.id = \"gradient-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws gradient.\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t\tlet gradientElement = this.element;\r\n\r\n\t\tif ($type.isNumber(this.cx)) {\r\n\t\t\tlet value:any = this.cx;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"cx\": value });\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this.cy)) {\r\n\t\t\tlet value:any = this.cy;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"cy\": value });\r\n\t\t}\r\n\r\n\t\tif (this.fx) {\r\n\t\t\tlet value:any = this.fx;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"fx\": value});\r\n\t\t}\r\n\r\n\t\tif (this.fy) {\r\n\t\t\tlet value:any = this.fy;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"fy\": value});\r\n\t\t}\r\n\r\n\t\tgradientElement.removeChildNodes();\r\n\r\n\t\t$iter.each($iter.indexed(this._stops.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet stop = a[1];\r\n\t\t\tlet offset: $type.Optional<number> = stop.offset;\r\n\r\n\t\t\tif (!$type.isNumber(offset)) {\r\n\t\t\t\toffset = i / (this._stops.length - 1)\r\n\t\t\t}\r\n\r\n\t\t\tlet gradientStop: AMElement = this.paper.add(\"stop\");\r\n\t\t\tgradientStop.attr({ \"stop-color\": stop.color });\r\n\t\t\tif ($type.isNumber(stop.opacity)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(offset)) {\r\n\t\t\t\tgradientStop.attr({ \"offset\": offset });\r\n\t\t\t}\r\n\r\n\t\t\tgradientElement.add(gradientStop);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a color step to the gradient.\r\n\t *\r\n\t * @param {Color}   color    Color (hex code or named color)\r\n\t * @param {number}  opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n\t * @param {number}  offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n\t */\r\n\tpublic addColor(color: Color, opacity?: number, offset?: number): void {\r\n\t\tthis._stops.push({ color: color, opacity: opacity, offset: offset });\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Paper]] instace to use for the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.draw();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Center x coordinate of the gradient, can be set as number or Percent\r\n\t *\r\n\t * @param {Optional<number | Percent>}  point  Center point\r\n\t */\r\n\tpublic set cx(value: $type.Optional<number | Percent>) {\r\n\t\tthis._cx = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get cx(): $type.Optional<number | Percent> {\r\n\t\treturn this._cx;\r\n\t}\r\n\r\n\t/**\r\n\t * Center y coordinate of the gradient, can be set as number or Percent\r\n\t *\r\n\t * @param {Optional<number | Percent>}  point  Center point\r\n\t */\r\n\tpublic set cy(value: $type.Optional<number | Percent>) {\r\n\t\tthis._cy = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get cy(): $type.Optional<number | Percent> {\r\n\t\treturn this._cy;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @param {Optional<number | Percent>}  point  Center point\r\n\t */\r\n\tpublic set fx(value: $type.Optional<number | Percent>) {\r\n\t\tthis._fx = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get fx(): $type.Optional<number | Percent> {\r\n\t\treturn this._fx;\r\n\t}\r\n\r\n\t/**\r\n\t * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @param {Optional<number | Percent>}  point  Center point\r\n\t */\r\n\tpublic set fy(value: $type.Optional<number | Percent>) {\r\n\t\tthis._fy = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get fy(): $type.Optional<number | Percent> {\r\n\t\treturn this._fy;\r\n\t}\r\n\r\n\r\n\r\n\tpublic copyFrom(source:this){\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis.stops.copyFrom(source.stops);\r\n\r\n\t\tthis.cx = source.cx;\r\n\t\tthis.cy = source.cy;\r\n\r\n\t\tthis.fx = source.fx;\r\n\t\tthis.fy = source.fy;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of color stops in the gradient.\r\n\t *\r\n\t * @return {List<IGradientStop>} Stops\r\n\t */\r\n\tpublic get stops(): List<IGradientStop> {\r\n\t\treturn this._stops;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._stops.clear();\r\n\t}\r\n\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradient\"] = RadialGradient;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/RadialGradient.ts","/**\r\n * Functionality for drawing waved lines.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line, ILineProperties, ILineAdapters, ILineEvents } from \"./Line\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { color } from \"../utils/Color\";\r\nimport { wavedLine } from \"../rendering/Smoothing\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[WavedLine]].\r\n */\r\nexport interface IWavedLineProperties extends ILineProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @type {number}\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @type {number}\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t * @type {number}\r\n\t */\r\n\ttension?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedLine]].\r\n */\r\nexport interface IWavedLineEvents extends ILineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedLineAdapters extends ILineAdapters, IWavedLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IWavedLineEvents} for a list of available events\r\n * @see {@link IWavedLineAdapters} for a list of available Adapters\r\n */\r\nexport class WavedLine extends Line implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IWavedLineProperties}\r\n\t */\r\n\tpublic _properties!: IWavedLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IWavedLineAdapters}\r\n\t */\r\n\tpublic _adapter!: IWavedLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IWavedLineEvents}\r\n\t */\r\n\tpublic _events!: IWavedLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedLine\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\t\tthis.tension = 0.8;\r\n\t\tthis.pixelPerfect = false;\r\n\r\n\t\tthis.fill = color();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\t//super.draw();\r\n\t\tlet p1: IPoint = { x: this.x1, y: this.y1 };\r\n\t\tlet p2: IPoint = { x: this.x2, y: this.y2 };\r\n\r\n\t\tthis.path = $path.moveTo(p1) + wavedLine(p1, p2, this.waveLength, this.waveHeight, this.tension, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param {number}  value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param {number}  value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param {number}  value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/WavedLine.ts","/**\r\n * Axis break module\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Axis, AxisDataItem } from \"./Axis\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { WavedLine } from \"../../core/elements/WavedLine\";\r\nimport { IWavedShape } from \"../../core/defs/IWavedShape\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of balues it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @type {number}\r\n\t */\r\n\tbreakSize?: number;\r\n\r\n\t/**\r\n\t * Starting value.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * End value.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tendValue?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisBreak]].\r\n */\r\nexport interface IAxisBreakEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines [[AxisBreak]] adapters.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisBreakAdapters extends IContainerAdapters, IAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on axes.\r\n *\r\n * @see {@link IAxisBreakEvents} for a list of available events\r\n * @see {@link IAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisBreak extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisBreakProperties}\r\n\t */\r\n\tpublic _properties!: IAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisBreakAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisBreakEvents}\r\n\t */\r\n\tpublic _events!: IAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic _axisType: Axis;\r\n\r\n\t/**\r\n\t * Reference to parent Axis.\r\n\t *\r\n\t * @type {MutableValueDisposer}\r\n\t */\r\n\tprotected _axis = new MutableValueDisposer<this[\"_axisType\"]>();\r\n\r\n\t/**\r\n\t * A reference to starting line element.\r\n\t *\r\n\t * @type {IWavedShape}\r\n\t */\r\n\tprotected _startLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to ending line element.\r\n\t *\r\n\t * @type {IWavedShape}\r\n\t */\r\n\tprotected _endLine: IWavedShape;\r\n\r\n\t/**\r\n\t * A reference to fill shape.\r\n\t *\r\n\t * @type {IWavedShape}\r\n\t */\r\n\tprotected _fillShape: IWavedShape;\r\n\r\n\t/**\r\n\t * A list of axis data items which fall within this break.\r\n\t *\r\n\t * @type {List<AxisDataItem>}\r\n\t */\r\n\tpublic dataItems: List<AxisDataItem> = new List<AxisDataItem>();\r\n\r\n\t/**\r\n\t * Adjusted start value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic adjustedStartValue: number;\r\n\r\n\t/**\r\n\t * Adjusted end value.\r\n\t *\r\n\t * Start and end values need to be adjusted so that they do not overlap with\r\n\t * adjacent breaks.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic adjustedEndValue: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisBreak\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.breakSize = 0.01;\r\n\t\tthis.marginLeft = -5;\r\n\t\tthis.marginRight = -5;\r\n\t\tthis.marginTop = -5;\r\n\t\tthis.marginBottom = -5;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create elements\r\n\t\t// (these won't be used actually, just for setting properties)\r\n\t\tlet fillShape = new WavedLine();\r\n\t\tfillShape.fill = interfaceColors.getFor(\"background\");\r\n\t\tfillShape.stroke = color();\r\n\t\tfillShape.fillOpacity = 0.9;\r\n\t\tfillShape.zIndex = 0;\r\n\t\tthis._fillShape = fillShape;\r\n\r\n\t\tlet startLine = new WavedLine();\r\n\t\tstartLine.fill = color();\r\n\t\tstartLine.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tstartLine.strokeOpacity = 0.3;\r\n\t\tstartLine.zIndex = 1;\r\n\t\tthis._startLine = startLine;\r\n\r\n\t\tlet endLine = new WavedLine();\r\n\t\tendLine.fill = color();\r\n\t\tendLine.stroke = color(\"#000000\");// interfaceColors.getFor(\"grid\");\r\n\t\tendLine.strokeOpacity = 0.3;\r\n\t\tendLine.zIndex = 2;\r\n\t\tthis._endLine = endLine;\r\n\r\n\t\tthis._disposers.push(this._axis);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the starting line of the break.\r\n\t *\r\n\t * @param {IWavedShape}  sprite  Element\r\n\t */\r\n\tpublic set startLine(sprite: IWavedShape) {\r\n\t\tif (this._startLine) {\r\n\t\t\tthis._startLine.dispose();\r\n\t\t}\r\n\t\tthis._startLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {IWavedShape} Element\r\n\t */\r\n\tpublic get startLine(): IWavedShape {\r\n\t\treturn this._startLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for the end line of the break.\r\n\t *\r\n\t * @param {IWavedShape} sprite Element\r\n\t */\r\n\tpublic set endLine(sprite: IWavedShape) {\r\n\t\tif (this._endLine) {\r\n\t\t\tthis._endLine.dispose();\r\n\t\t}\r\n\t\tthis._endLine = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {IWavedShape} Element\r\n\t */\r\n\tpublic get endLine(): IWavedShape {\r\n\t\treturn this._endLine;\r\n\t}\r\n\r\n\t/**\r\n\t * An element used for fill of the break.\r\n\t *\r\n\t * @param {IWavedShape} sprite Element\r\n\t */\r\n\tpublic set fillShape(sprite: IWavedShape) {\r\n\t\tif (this._fillShape) {\r\n\t\t\tthis._fillShape.dispose();\r\n\t\t}\r\n\r\n\t\tthis._fillShape = sprite;\r\n\t\tthis.addBreakSprite(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {IWavedShape} Element\r\n\t */\r\n\tpublic get fillShape(): IWavedShape {\r\n\t\treturn this._fillShape;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a break element (e.g. lines, fill) to the break, which is\r\n\t * [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IWavedShape} sprite Element to add\r\n\t */\r\n\tpublic addBreakSprite(sprite: IWavedShape) {\r\n\t\tsprite.parent = this;\r\n\t\tsprite.isMeasured = false;\r\n\t\tthis._disposers.push(sprite);\r\n\t}\r\n\r\n\t/**\r\n\t * An Axis this Break is associated with.\r\n\t *\r\n\t * @param {Axis}  axis  Axis\r\n\t */\r\n\tpublic set axis(axis: this[\"_axisType\"]) {\r\n\t\tif (this._axis.get() !== axis) {\r\n\t\t\tthis._axis.set(axis, axis.renderer.gridContainer.events.on(\"transformed\", this.invalidate, this, false));\r\n\t\t\taxis.renderer.createBreakSprites(this);\r\n\r\n\t\t\t// this can't go to copyFrom, as axis is set later\r\n\t\t\tlet breakTemplate: AxisBreak = axis.axisBreaks.template;\r\n\r\n\t\t\tthis.startLine.copyFrom(breakTemplate.startLine);\r\n\t\t\tthis.endLine.copyFrom(breakTemplate.endLine);\r\n\t\t\tthis.fillShape.copyFrom(breakTemplate.fillShape);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Axis} Axis\r\n\t */\r\n\tpublic get axis(): this[\"_axisType\"] {\r\n\t\treturn this._axis.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A size of the break relative to the actual size of the scope break spans.\r\n\t *\r\n\t * For example, if `breakSize = 0.1` and unbroken scope of balues it spans\r\n\t * would be 100 pixels, the break would be 10 pixels wide.\r\n\t *\r\n\t * 0 means the break will completely collapse and hide the values.\r\n\t * 1 means break would be not collapse at all, which would make it\r\n\t * effectively useless.\r\n\t *\r\n\t * @default 0.01\r\n\t * @param {number}  value  Relative axis break\r\n\t */\r\n\tpublic set breakSize(value: number) {\r\n\t\tif (this.setPropertyValue(\"breakSize\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Relative axis break\r\n\t */\r\n\tpublic get breakSize(): number {\r\n\t\treturn this.getPropertyValue(\"breakSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's start.\r\n\t *\r\n\t * @return {IPoint} Start point\r\n\t */\r\n\tpublic get startPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.startPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel coordinates of axis break's end.\r\n\t *\r\n\t * @return {IPoint} End point\r\n\t */\r\n\tpublic get endPoint(): IPoint {\r\n\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\tif (renderer) {\r\n\t\t\treturn renderer.positionToPoint(this.endPosition);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break starts.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return {number} Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative position at which axis break ends.\r\n\t *\r\n\t * This is a calculated position, meaning it shows relative position of the\r\n\t * break after break is applied.\r\n\t *\r\n\t * @return {number} End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the axis break.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis) {\r\n\t\t\tlet renderer: AxisRenderer = this.axis.renderer;\r\n\t\t\trenderer.updateBreakElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A starting value for the break.\r\n\t *\r\n\t * @param {number}  value  Starting value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Starting value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\treturn this.getPropertyValue(\"startValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An end value for the break.\r\n\t *\r\n\t * @param {number}  value  End value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataRange();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} End value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\treturn this.getPropertyValue(\"endValue\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisBreak\"] = AxisBreak;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisBreak.ts","/**\r\n * Defines Percent Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"./Series\";\r\nimport { ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem, LegendSettings } from \"../../charts/Legend\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Color, iRGB, color } from \"../../core/utils/Color\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { Dictionary, IDictionaryEvents, DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { PercentChart } from \"../types/PercentChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class PercentSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t *\r\n\t * @type {Slice}\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a slice label element.\r\n\t * \r\n\t * @ignore Exclude from docs\r\n\t * @type {AxisLabelCircular}\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a slice tick element.\r\n\t * @ignore Exclude from docs\r\n\t * @type {Tick}\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * A reference to a corresponding legend data item.\r\n\t *\r\n\t * @type {LegendDataItem<DataItem, IDataItemEvents>}\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Custom settings for the legend item.\r\n\t * Not used, only added to sattisfy LegendDataItem\r\n\t *\r\n\t * @type {LegendSettings}\r\n\t * @ignore\r\n\t */\r\n\tpublic legendSettings: LegendSettings;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {PercentSeries}\r\n\t */\r\n\tpublic _component!: PercentSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PercentSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds an `id` attribute the the slice element and returns its id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic uidAttr(): string {\r\n\t\treturn this.slice.uidAttr();\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param {number}    duration  Duration (ms)\r\n\t * @param {number}    delay     Delay hiding (ms)\r\n\t * @param {number}    toValue   Target value for animation\r\n\t * @param {string[]}  fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): Animation {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, 0, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param {boolean} value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?:boolean): void {\r\n\t\tif(!noChangeValues){\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setWorkingValue(\"value\", 0, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding cisual elements).\r\n\t *\r\n\t * @param {number}    duration  Duration (ms)\r\n\t * @param {number}    delay     Delay hiding (ms)\r\n\t * @param {string[]}  fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): Animation {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Category.\r\n\t *\r\n\t * @param {string}  value  Category\r\n\t */\r\n\tpublic set category(value: string) {\r\n\t\tthis.setProperty(\"category\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Category\r\n\t */\r\n\tpublic get category(): string {\r\n\t\treturn this.properties.category;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param {LegendDataItem<DataItem, IDataItemEvents>}  value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendDataItem<DataItem, IDataItemEvents>} Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * A Tick element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return {this[\"_tick\"]} Tick element\r\n\t */\r\n\tpublic get tick(): this[\"_tick\"] {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet tick = this.component.ticks.create();\r\n\t\t\tthis._tick = tick;\r\n\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\ttick.parent = this.component.ticksContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.ticks.removeValue(tick);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(tick);\r\n\t\t\ttick.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * A Label element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return {this[\"_label\"]} Label element\r\n\t */\r\n\tpublic get label(): this[\"_label\"] {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.component.labelsContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tlabel.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (slice)\r\n\t *\r\n\t * @readonly\r\n\t * @return {Sprite} Slice element\r\n\t */\r\n\tpublic get slice(): this[\"_slice\"] {\r\n\t\tif (!this._slice) {\r\n\t\t\tlet slice = this.component.slices.create();\r\n\t\t\tthis._slice = slice;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tslice.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.slices.removeValue(slice);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(slice);\r\n\t\t\tslice.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._slice;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (slice) be hidden in legend?\r\n\t *\r\n\t * @param {boolean} value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Disabled in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thiddenInLegend?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesProperties extends ISeriesProperties {\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t *\r\n\t * @type {ColorSet}\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * @default true\r\n\t * @type {number}\r\n\t */\r\n\talignLabels?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PercentSeries]].\r\n */\r\nexport interface IPercentSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PercentSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPercentSeriesAdapters extends ISeriesAdapters, IPercentSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nexport class PercentSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines type of the slice elements for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic _slice: Sprite;\r\n\r\n\t/**\r\n\t * Defines type of the tick elements for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Tick}\r\n\t */\r\n\tpublic _tick: Tick;\r\n\r\n\t/**\r\n\t * Defines type of the label elements for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Label}\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {PercentChart}\r\n\t */\r\n\tpublic _chart: PercentChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @type {IPercentSeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: IPercentSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPercentSeriesProperties}\r\n\t */\r\n\tpublic _properties!: IPercentSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPercentSeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: IPercentSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPercentSeriesEvents}\r\n\t */\r\n\tpublic _events!: IPercentSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t *\r\n\t * @type {PercentSeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: PercentSeriesDataItem;\r\n\r\n\t/**\r\n\t * Container slice elements are put in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic slicesContainer: Container;\r\n\r\n\t/**\r\n\t * Container tick elements are put in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic ticksContainer: Container;\r\n\r\n\t/**\r\n\t * Container label elements are put in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic labelsContainer: Container;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t *\r\n\t * @type {ListTemplate<Slice>}\r\n\t */\r\n\tprotected _slices: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * List of tick elements.\r\n\t *\r\n\t * @type {ListTemplate<this[\"_tick\"]>}\r\n\t */\r\n\tprotected _ticks: ListTemplate<this[\"_tick\"]>;\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t *\r\n\t * @type {ListTemplate<this[\"_label\"]>}\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_label\"]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PercentSeries\";\r\n\r\n\t\tthis._addAllDataItems = false;\r\n\r\n\t\tthis.alignLabels = false;\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 1;\r\n\t\tthis.isMeasured = true;\r\n\t\tthis.calculatePercent = true;\r\n\r\n\t\tlet slicesContainer = this.createChild(Container);\r\n\t\tslicesContainer.shouldClone = false;\r\n\t\tslicesContainer.isMeasured = false;\r\n\r\n\t\tthis.slicesContainer = slicesContainer;\r\n\r\n\t\tlet ticksContainer = this.createChild(Container);\r\n\t\tticksContainer.shouldClone = false;\r\n\t\tticksContainer.isMeasured = false;\r\n\t\tticksContainer.layout = \"none\";\r\n\t\tthis.ticksContainer = ticksContainer;\r\n\r\n\t\tlet labelsContainer = this.createChild(Container);\r\n\t\tlabelsContainer.shouldClone = false;\r\n\t\tlabelsContainer.isMeasured = false;\r\n\t\tlabelsContainer.layout = \"none\";\r\n\t\tthis.labelsContainer = labelsContainer;\r\n\r\n\t\tthis.bulletsContainer.toFront();\r\n\r\n\t\t// Make all slices focusable\r\n\t\tthis.skipFocusThreshold = 50;\r\n\r\n\t\tlet defaultState = this.defaultState;\r\n\t\tdefaultState.transitionEasing = $ease.sinOut;\r\n\r\n\t\t// Accessibility\r\n\t\tthis.itemReaderText = \"{category}: {value.percent.formatNumber('#.#')}%\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a slice element.\r\n\t * \r\n\t * @return {FunnelSlice} Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new Sprite();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a tick element.\r\n\t * \r\n\t * @return {Tick} Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new Tick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sreates label element.\r\n\t * \r\n\t * @return {Label} label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new Label();\r\n\t}\r\n\r\n\tpublic get slices(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._slices) {\r\n\t\t\tlet slice = this.createSlice();\r\n\r\n\t\t\tslice.applyOnClones = true;\r\n\t\t\tthis._disposers.push(slice);\r\n\t\t\tthis.initSlice(slice);\r\n\r\n\t\t\tthis._slices = new ListTemplate(slice);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._slices));\r\n\t\t}\r\n\t\treturn this._slices;\r\n\t}\r\n\r\n\tpublic get ticks(): ListTemplate<this[\"_tick\"]> {\r\n\t\tif (!this._ticks) {\r\n\t\t\tlet tick = this.createTick();\r\n\t\t\ttick.applyOnClones = true;\r\n\t\t\tthis._disposers.push(tick);\r\n\t\t\tthis.initTick(tick);\r\n\r\n\t\t\tthis._ticks = new ListTemplate(tick);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._ticks));\r\n\t\t}\r\n\t\treturn this._ticks;\r\n\t}\r\n\r\n\tpublic get labels(): ListTemplate<this[\"_label\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tthis.initLabel(label);\r\n\r\n\t\t\tthis._labels = new ListTemplate(label);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {PercentSeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new PercentSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new slice element.\r\n\t *\r\n\t * @param  {typeof Slice}  sliceType  Type of the slice element\r\n\t * @return {Slice}                    Slice\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\r\n\t}\r\n\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tlabel.text = \"{category}: {value.percent.formatNumber('#.0')}%\";\r\n\t\tlabel.isMeasured = false;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\tprotected initTick(label: this[\"_tick\"]) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {PercentSeriesDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\t\tif (slice) {\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tslice.role = \"menuitem\";\r\n\t\t\t\tslice.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tslice.role = \"listitem\";\r\n\t\t\t\tslice.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (slice.focusable) {\r\n\t\t\t\tslice.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (slice.hoverable) {\r\n\t\t\t\tslice.events.once(\"over\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = this.populateString(this.itemReaderText, dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tslice.events.once(\"out\", (ev) => {\r\n\t\t\t\t\tslice.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tif (slice.fill == undefined) {\r\n\t\t\t\tslice.fill = this.colors.getIndex(dataItem.index * this.colors.step);\r\n\t\t\t}\r\n\t\t\tif (slice.stroke == undefined) {\r\n\t\t\t\tslice.stroke = this.colors.getIndex(dataItem.index * this.colors.step);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Arranges slice labels according to position settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"][]}  dataItems  Data items\r\n\t */\r\n\tprotected arrangeLabels(dataItems: this[\"_dataItem\"][]): void {\r\n\t\tfor (let i = 0, len = dataItems.length; i < len; i++) {\r\n\t\t\tlet dataItem: this[\"_dataItem\"] = dataItems[i];\r\n\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\tif (label) {\r\n\t\t\t\tlet nextLabel = this.getNextLabel(i + 1, dataItems);\r\n\r\n\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\tlabel.validate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet bottom: number = label.pixelY + label.measuredHeight;\r\n\r\n\t\t\t\tif (nextLabel) {\r\n\t\t\t\t\tif (nextLabel.y < bottom) {\r\n\t\t\t\t\t\tnextLabel.y = bottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next label according to `index`.\r\n\t *\r\n\t * @param  {number}              index      Current index\r\n\t * @param  {PieSerisDataItem[]}  dataItems  Data items\r\n\t * @return {AxisLabelCircular}              Label element\r\n\t */\r\n\tprotected getNextLabel(index: number, dataItems: this[\"_dataItem\"][]): this[\"_label\"] {\r\n\t\tif (dataItems.length >= index) {\r\n\t\t\tlet nextDataItem: this[\"_dataItem\"] = dataItems[index];\r\n\t\t\tif (nextDataItem) {\r\n\t\t\t\tif (nextDataItem.label) {\r\n\t\t\t\t\treturn nextDataItem.label;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn this.getNextLabel(index + 1, dataItems);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for slices.\r\n\t *\r\n\t * For each new subsequent slice, the chart will assign the next color in\r\n\t * this set.\r\n\t *\r\n\t * @param {ColorSet}  value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ColorSet} Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}          marker    Container\r\n\t * @param {this[\"_dataItem\"]}  dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\t$iter.each(marker.children.iterator(), (child) => {\r\n\t\t\tlet slice: this[\"_slice\"] = dataItem.slice;\r\n\r\n\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tchild.fill = slice.fill;\r\n\t\t\tchild.stroke = slice.stroke;\r\n\t\t\tchild.fillOpacity = slice.fillOpacity;\r\n\t\t\tchild.strokeOpacity = slice.strokeOpacity;\r\n\r\n\t\t\tslice.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = slice.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = slice.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = slice.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = slice.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false)\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullets when slice's size changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Slice, ISpriteEvents>[\"propertychanged\"]}  event  Event\r\n\t */\r\n\tprotected handleSliceScale(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\t\tlet slice: this[\"_slice\"] = event.target;\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>slice.dataItem;\r\n\t\t$iter.each(dataItem.bullets.iterator(), (a) => {\r\n\t\t\tlet value = a[1];\r\n\t\t\tthis.positionBullet(value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions bullet and labels when slice moves.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Slice, ISpriteEvents>[\"propertychanged\"]}  event  Event\r\n\t */\r\n\tprotected handleSliceMove(event: AMEvent<this[\"_slice\"], ISpriteEvents>[\"propertychanged\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[PercentSeries]].\r\n\t *\r\n\t * @param {ColumnSeries}  source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.slices.template.copyFrom(source.slices.template);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t\tthis.ticks.template.copyFrom(source.ticks.template);\r\n\t}\r\n\r\n\t/**\r\n\t * Align labels into nice vertical columns?\r\n\t *\r\n\t * This will ensure that labels never overlap with each other.\r\n\t *\r\n\t * Arranging labels into columns makes them more readble, and better user\r\n\t * experience.\r\n\t *\r\n\t * If set to `false` labels will be positioned at `label.radius` distance,\r\n\t * and may, in some cases, overlap.\r\n\t *\r\n\t * @default true\r\n\t * @param {boolean}  value  Align labels?\r\n\t */\r\n\tpublic set alignLabels(value: boolean) {\r\n\t\tthis.setPropertyValue(\"alignLabels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Align labels?\r\n\t */\r\n\tpublic get alignLabels(): boolean {\r\n\t\treturn this.getPropertyValue(\"alignLabels\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/series/PercentSeries.ts","/**\r\n * FlowDiagramNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent, visualProperties, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { FlowDiagram, FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $string from \"../../core/utils/String\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport { LegendSettings, LegendDataItem } from \"../Legend\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Name of the node.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * Sum of all incomming+outgoing link values\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ttotal?: number;\r\n\r\n\t/**\r\n\t * Sum of all incoming link values\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ttotalIncoming?: number;\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\ttotalOutgoing?: number;\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tcolor?: Color;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramNode]].\r\n */\r\nexport interface IFlowDiagramNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramNodeAdapters extends IContainerAdapters, IFlowDiagramNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Flow Diagram.\r\n *\r\n * A Flow node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[FlowLink]] elements.\r\n *\r\n * @see {@link IFlowDiagramNodeEvents} for a list of available events\r\n * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramNode extends Container {\r\n\r\n\t/**\r\n\t * total ajusted taken in mind chart.minNodeSize\r\n\t */\r\n\tpublic adjustedTotal: number;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFlowDiagramNodeProperties}\r\n\t */\r\n\tpublic _properties!: IFlowDiagramNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFlowDiagramNodeAdapters}\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFlowDiagramNodeEvents}\r\n\t */\r\n\tpublic _events!: IFlowDiagramNodeEvents;\r\n\r\n\t/**\r\n\t * A list of data items of the items coming in from another node, one level\r\n\t * up.\r\n\t *\r\n\t * These are what ingoing links are build out of.\r\n\t *\r\n\t * @type {List<this[\"_dataItem\"]>}\r\n\t */\r\n\tprotected _incomingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A list of data items of the items going out of the node.\r\n\t *\r\n\t * These are what outgoing links are build out of.\r\n\t *\r\n\t * @type {List<this[\"_dataItem\"]>}\r\n\t */\r\n\tprotected _outgoingDataItems: List<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of incoming items.\r\n\t *\r\n\t * @type {Iterator<this[\"_dataItem\"]>}\r\n\t */\r\n\tprotected _incomingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Sorted list of outgoing items.\r\n\t * @type {Iterator<this[\"_dataItem\"]>}\r\n\t */\r\n\tprotected _outgoingSorted: $iter.Iterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t *\r\n\t * @type {FlowDiagram}\r\n\t */\r\n\tpublic chart: FlowDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[FlowDiagramDataItem]] used in the class.\r\n\t *\r\n\t * @type {FlowDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this node.\r\n\t *\r\n\t * @type {LegendDataItem<Series, ISeriesEvents>}\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramNode\";\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.draggable = true;\r\n\t\tthis.inert = true;\r\n\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.events.on(\"positionchanged\", this.invalidateLinks, this, false);\r\n\t\tthis.events.on(\"sizechanged\", this.invalidateLinks, this, false);\r\n\t\tthis.events.on(\"hit\", this.handleHit, this, false);\r\n\t}\r\n\r\n\tprotected handleHit(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tif (this.isHidden || this.isHiding) {\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden node.\r\n\t *\r\n\t * @param  {number}     duration  Duration of reveal animation (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tif (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {\r\n\t\t\t\tdataItem.setWorkingValue(\"value\", dataItem.getValue(\"value\"), duration);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides node.\r\n\t *\r\n\t * @param  {number}     duration  Duration of hiding animation (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet animation = super.hide(duration);\r\n\r\n\t\tthis.outgoingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t})\r\n\r\n\t\tthis.incomingDataItems.each(function(dataItem) {\r\n\t\t\tdataItem.setWorkingValue(\"value\", 0, duration);\r\n\t\t})\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Marks node as invalid, for redrawal in the next update cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif(!this.isDisposed()){\r\n\t\t\tsuper.validate();\r\n\t\t\tthis.invalidateLinks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\r\n\t\tthis.outgoingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"fromNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.fromNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.incomingDataItems.each((dataItem) => {\r\n\t\t\tlet link = dataItem.link;\r\n\t\t\tif (link.colorMode == \"toNode\") {\r\n\t\t\t\tlink.fill = link.dataItem.toNode.color;\r\n\t\t\t}\r\n\r\n\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\tlink.stroke = link.gradient;\r\n\r\n\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\r\n\t\t\t\tif (stop) {\r\n\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * List of incoming items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return {List<FlowDiagramDataItem>} Incoming items\r\n\t */\r\n\tpublic get incomingDataItems(): List<FlowDiagramDataItem> {\r\n\t\tif (!this._incomingDataItems) {\r\n\t\t\tlet incomingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\tincomingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._incomingSorted = $iter.sort(this._incomingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._incomingSorted = this._incomingDataItems.iterator();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._incomingDataItems = incomingDataItems;\r\n\t\t}\r\n\t\treturn this._incomingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * List of outgoing items (links).\r\n\t *\r\n\t * @readonly\r\n\t * @return {List<FlowDiagramDataItem>} Outgoing items\r\n\t */\r\n\tpublic get outgoingDataItems(): List<FlowDiagramDataItem> {\r\n\t\tif (!this._outgoingDataItems) {\r\n\t\t\tlet outgoingDataItems = new List<FlowDiagramDataItem>();\r\n\t\t\toutgoingDataItems.events.on(\"inserted\", () => {\r\n\t\t\t\tif (this.chart.sortBy == \"name\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $string.order(x.fromName, y.fromName));\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.chart.sortBy == \"value\") {\r\n\t\t\t\t\tthis._outgoingSorted = $iter.sort(this._outgoingDataItems.iterator(), (x, y) => $order.reverse($number.order(x.value, y.value)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._outgoingSorted = this._outgoingDataItems.iterator();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._outgoingDataItems = outgoingDataItems;\r\n\t\t}\r\n\t\treturn this._outgoingDataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * A name of the node.\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incoming+outgoing link values\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set total(value: number) {\r\n\t\tthis.setPropertyValue(\"total\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get total(): number {\r\n\t\treturn this.getPropertyValue(\"total\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all incomming link values.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set totalIncoming(value: number) {\r\n\t\tthis.setPropertyValue(\"totalIncoming\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get totalIncoming(): number {\r\n\t\treturn this.getPropertyValue(\"totalIncoming\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sum of all outgoing link values.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set totalOutgoing(value: number) {\r\n\t\tthis.setPropertyValue(\"totalOutgoing\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get totalOutgoing(): number {\r\n\t\treturn this.getPropertyValue(\"totalOutgoing\");\r\n\t}\r\n\r\n\t/**\r\n\t * Node's color.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setColorProperty(\"color\", value);\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.fill = value;\r\n\t\t}\r\n\t\tthis.fill = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.getPropertyValue(\"color\");\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\tcolumn.shouldClone = false;\r\n\t\t$object.copyProperties(this, column, visualProperties);\r\n\t\tcolumn.stroke = this.fill;\r\n\r\n\t\tcolumn.copyFrom(<any>this);\r\n\t\tcolumn.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n\t\tcolumn.width = w;\r\n\t\tcolumn.height = h;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param {LegendDataItem<Series, ISeriesEvents>}  value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendDataItem<Series, ISeriesEvents>} Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramNode\"] = FlowDiagramNode;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/FlowDiagramNode.ts","/**\r\n * FlowDiagramLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { FlowDiagramDataItem } from \"../types/FlowDiagram\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LabelBullet } from \"../elements/LabelBullet\";\r\nimport { Color, color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tendAngle?: number;\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t *\r\n\t * @type {\"solid\" | \"gradient\" | \"fromNode\" | \"toNode\"}\r\n\t */\r\n\tcolorMode?: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\";\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n\r\n\t/**\r\n\t * [maskBullets description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tmaskBullets?: boolean;\r\n\r\n\t/**\r\n\t * [tooltipLocation description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\ttooltipLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagramLink]].\r\n */\r\nexport interface IFlowDiagramLinkEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagramLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramLinkAdapters extends IContainerAdapters, IFlowDiagramLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Flow Diagram.\r\n *\r\n * @see {@link IFlowDiagramLinkEvents} for a list of available events\r\n * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagramLink extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFlowDiagramLinkProperties}\r\n\t */\r\n\tpublic _properties!: IFlowDiagramLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFlowDiagramLinkAdapters}\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFlowDiagramLinkEvents}\r\n\t */\r\n\tpublic _events!: IFlowDiagramLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t *\r\n\t * @type {FlowDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t *\r\n\t * @type {LinearGradient}\r\n\t */\r\n\tprotected _gradient: LinearGradient;\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Link sprite\r\n\t *\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic link: Sprite;\r\n\r\n\t/**\r\n\t * Bullets mask spite\r\n\t * @type Sprite\r\n     */\r\n\tprotected _bulletsMask: Sprite;\r\n\r\n\t/**\r\n\t * Bullets container\r\n\t * @type Container\r\n     */\r\n\tprotected _bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n\t * @type Polyspline\r\n     */\r\n\tpublic middleLine: Line | Polyline;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.maskBullets = false;\r\n\r\n\t\tthis.colorMode = \"fromNode\";\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.strokeOpacity = 0;\r\n\r\n\t\t// this is very important, otherwise the container will be shifted\r\n\t\tthis.verticalCenter = \"none\";\r\n\t\tthis.horizontalCenter = \"none\";\r\n\r\n\t\tthis.tooltipText = \"{fromName}→{toName}:{value.value}\";\r\n\t\tthis.tooltipLocation = 0.5;\r\n\r\n\t\tthis.link = this.createChild(Sprite);\r\n\t\tthis.link.shouldClone = false;\r\n\t\tthis.link.setElement(this.paper.add(\"path\"));\r\n\t\tthis.link.isMeasured = false;\r\n\t\tthis.fillOpacity = 0.2;\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullets() {\r\n\t\t$iter.each(this.bullets.iterator(), (bullet) => {\r\n\t\t\tbullet.parent = this.bulletsContainer;\r\n\r\n\t\t\tbullet.maxWidth = this.maxWidth;\r\n\t\t\tbullet.maxHeight = this.maxHeight;\r\n\t\t\t\r\n\t\t\tthis.positionBullet(bullet);\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Bullets container\r\n\t * @type Container\r\n     */\r\n\tpublic get bulletsContainer(){\r\n\t\tif(!this._bulletsContainer){\r\n\t\t\tlet bulletsContainer = this.createChild(Container);\r\n\t\t\tbulletsContainer.shouldClone = false;\r\n\t\t\tbulletsContainer.layout = \"none\";\r\n\t\t\tthis._bulletsContainer = bulletsContainer;\r\n\t\t}\r\n\t\treturn this._bulletsContainer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bullets mask spite\r\n\t * @type Sprite\r\n     */\r\n\tpublic get bulletsMask(){\r\n\t\tif(!this._bulletsMask){\r\n\t\t\tlet bulletsMask = this.createChild(Sprite);\r\n\t\t\tbulletsMask.shouldClone = false;\r\n\t\t\tbulletsMask.setElement(this.paper.add(\"path\"));\r\n\t\t\tbulletsMask.isMeasured = false;\r\n\t\t\tthis._bulletsMask = bulletsMask;\r\n\t\t}\r\n\t\treturn this._bulletsMask;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullets at relative bullet.locationX position on the link.\r\n\t * @ignore\r\n\t */\r\n\tprotected positionBullet(bullet: Bullet) {\r\n\r\n\t\tlet location = bullet.locationX;\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = bullet.locationY;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(location)) {\r\n\t\t\tlocation = 0.5;\r\n\t\t}\r\n\t\tlet point = this.middleLine.positionToPoint(location);\r\n\r\n\t\tbullet.moveTo(point);\r\n\r\n\t\tlet rotationField = bullet.propertyFields.rotation;\r\n\t\tlet angle: number;\r\n\t\tif (bullet.dataItem) {\r\n\t\t\tlet dataContext: any = bullet.dataItem.dataContext;\r\n\t\t\tangle = dataContext[rotationField];\r\n\t\t}\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = point.angle;\r\n\t\t}\r\n\r\n\t\tbullet.rotation = angle;\r\n\t}\r\n\r\n\t/**\r\n\t * [startAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number}  value  Start angle\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Start angle\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endAngle description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number}  value  End angle\r\n\t */\r\n\tpublic set endAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"endAngle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} End angle\r\n\t */\r\n\tpublic get endAngle(): number {\r\n\t\treturn this.getPropertyValue(\"endAngle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.\r\n\t * Some of the links, like ChordLink does not support gradiens well.\r\n\t *\r\n\t * @param {\"solid\" | \"gradient\" | \"fromNode\" | \"toNode\"}  value  Fill mode\r\n\t */\r\n\tpublic set colorMode(value: \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\") {\r\n\t\tif (value == \"gradient\") {\r\n\t\t\tlet color = this.fill;\r\n\r\n\t\t\tthis.gradient.stops.clear();\r\n\t\t\tif(color instanceof Color){\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t\tthis.gradient.addColor(color);\r\n\t\t\t}\r\n\t\t\tthis.fill = this.gradient;\r\n\t\t\tthis.stroke = this.gradient;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"colorMode\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @type {\"solid\" | \"gradient\"} Fill mode\r\n\t */\r\n\tpublic get colorMode(): \"solid\" | \"gradient\" | \"fromNode\" | \"toNode\" {\r\n\t\treturn this.getPropertyValue(\"colorMode\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Should link bullets be masked or not\r\n\t *\r\n\t * @param {boolean}  value\r\n\t * @default false;\r\n\t */\r\n\tpublic set maskBullets(value: boolean) {\r\n\t\tthis.setPropertyValue(\"maskBullets\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} mask bullets value\r\n\t */\r\n\tpublic get maskBullets(): boolean {\r\n\t\treturn this.getPropertyValue(\"maskBullets\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of a tooltip.\r\n\t * @default 0.5\r\n\t *\r\n\t * @param {number} value\r\n\t */\r\n\tpublic set tooltipLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"tooltipLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @type {number} tooltip location value\r\n\t */\r\n\tpublic get tooltipLocation(): number {\r\n\t\treturn this.getPropertyValue(\"tooltipLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Adds color steps in the link gradient.\r\n\t *\r\n\t * @param {Color | Pattern | LinearGradient | RadialGradient}  value  Fill option\r\n\t */\r\n\tprotected setFill(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tsuper.setFill(value)\r\n\t\tlet gradient = this._gradient;\r\n\r\n\t\tif (gradient && value instanceof Color) {\r\n\t\t\tgradient.stops.clear();\r\n\t\t\tgradient.addColor(value);\r\n\t\t\tgradient.addColor(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box based on element dimension settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * List of bullets\r\n\t *\r\n\t * @return {ListTemplate<Bullet>} [description]\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t\tthis._bullets.events.on(\"inserted\", (event) => {\r\n\t\t\t\tevent.newValue.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"locationX\" || event.property == \"locationY\") {\r\n\t\t\t\t\t\tthis.positionBullet(event.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false)\r\n\t\t\t}, undefined, false)\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties from another [[FlowDiagramLink]].\r\n\t *\r\n\t * @param {FlowDiagramLink}  source  Source link\r\n\t */\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tlet middleLine = this.middleLine;\r\n\t\tif(middleLine){\r\n\t\t\tif (middleLine instanceof Line && source.middleLine instanceof Line) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\r\n\t\t\tif (middleLine instanceof Polyline && source.middleLine instanceof Polyline) {\r\n\t\t\t\tmiddleLine.copyFrom(source.middleLine);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.link.copyFrom(source.link);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Tooltip X (px)\r\n\t */\r\n\tgetTooltipX(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).x;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Tooltip Y (px)\r\n\t */\r\n\tgetTooltipY(): number {\r\n\t\tif (this.middleLine) {\r\n\t\t\treturn this.middleLine.positionToPoint(this.tooltipLocation).y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A gradiend instance that is used to provided colored gradient fills for\r\n\t * the Flow link.\r\n\t *\r\n\t * @type {LinearGradient}\r\n\t */\r\n\tpublic get gradient(){\r\n\t\tif(!this._gradient){\r\n\t\t\tthis._gradient = new LinearGradient();\r\n\t\t}\r\n\t\treturn this._gradient;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagramLink\"] = FlowDiagramLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/FlowDiagramLink.ts","/**\r\n * Polyspline (smoothed line) module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline, IPolylineProperties, IPolylineAdapters, IPolylineEvents } from \"./Polyline\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyspline]].\r\n */\r\nexport interface IPolysplineProperties extends IPolylineProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @type {number}\r\n\t */\r\n\ttensionX: number;\r\n\r\n\t/**\r\n\t * Vertical tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @type {number}\r\n\t */\r\n\ttensionY: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyspline]].\r\n */\r\nexport interface IPolysplineEvents extends IPolylineEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolysplineAdapters extends IPolylineAdapters, IPolysplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polysline. (smoothed multi-sigment line)\r\n *\r\n * @see {@link IPolysplineEvents} for a list of available events\r\n * @see {@link IPolysplineAdapters} for a list of available Adapters\r\n */\r\nexport class Polyspline extends Polyline {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @todo Description\r\n\t * @type {IPolysplineProperties}\r\n\t */\r\n\tpublic _properties!: IPolysplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @todo Description\r\n\t * @type {IPolysplineAdapters}\r\n\t */\r\n\tpublic _adapter!: IPolysplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPolysplineEvents}\r\n\t */\r\n\tpublic _events!: IPolysplineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyspline\";\r\n\r\n\t\tthis.tensionX = 0.5;\r\n\t\tthis.tensionY = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tlet tensionX: number = this.tensionX;\r\n\t\tlet tensionY: number = this.tensionY;\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\t\t\tthis._realSegments = [];\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tlet realPoints: IPoint[] = [];\r\n\t\t\t\tthis._realSegments.push(realPoints);\r\n\r\n\t\t\t\tif (points.length > 0) {\r\n\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 0; p < points.length - 1; p++) {\r\n\r\n\t\t\t\t\t\tlet p0: IPoint = points[p - 1];\r\n\r\n\t\t\t\t\t\tlet p1: IPoint = points[p];\r\n\r\n\t\t\t\t\t\tlet p2: IPoint = points[p + 1];\r\n\r\n\t\t\t\t\t\tlet p3: IPoint = points[p + 2];\r\n\r\n\t\t\t\t\t\tif (p === 0) {\r\n\t\t\t\t\t\t\tp0 = points[p];\r\n\t\t\t\t\t\t} else if (p == points.length - 2) {\r\n\t\t\t\t\t\t\tp3 = points[p + 1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!p3) {\r\n\t\t\t\t\t\t\tp3 = p2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet controlPointA: IPoint = $math.getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY);\r\n\t\t\t\t\t\tlet controlPointB: IPoint = $math.getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY);\r\n\r\n\t\t\t\t\t\tpath += $path.cubicCurveTo(p2, controlPointA, controlPointB);\r\n\r\n\t\t\t\t\t\t// now split to small segments so that we could have positionToPoint later\r\n\t\t\t\t\t\tlet stepCount: number = Math.ceil($math.getDistance(p1, p2)) / 2;\r\n\t\t\t\t\t\tlet prevPoint: IPoint = p1;\r\n\t\t\t\t\t\tif (stepCount > 0) {\r\n\t\t\t\t\t\t\tfor (let s = 0; s <= stepCount; s++) {\r\n\t\t\t\t\t\t\t\tlet point = $math.getPointOnCubicCurve(p1, p2, controlPointA, controlPointB, s / stepCount);\r\n\t\t\t\t\t\t\t\trealPoints.push(point);\r\n\t\t\t\t\t\t\t\tthis._distance += $math.getDistance(prevPoint, point);\r\n\t\t\t\t\t\t\t\t//path += $path.lineTo(point);\r\n\t\t\t\t\t\t\t\tprevPoint = point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trealPoints.push(p0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @param {number}  value  Tension\r\n\t */\r\n\tpublic set tensionX(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionX\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tension\r\n\t */\r\n\tpublic get tensionX(): number {\r\n\t\treturn this.getPropertyValue(\"tensionX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @param {number}  value  Tensions\r\n\t */\r\n\tpublic set tensionY(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionY\", value, true);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tension\r\n\t */\r\n\tpublic get tensionY(): number {\r\n\t\treturn this.getPropertyValue(\"tensionY\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyspline\"] = Polyspline;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Polyspline.ts","/**\r\n * Functionality for drawing triangles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Triangle]].\r\n */\r\nexport interface ITriangleProperties extends ISpriteProperties {\r\n\tdirection: \"left\" | \"right\" | \"top\" | \"bottom\"\r\n}\r\n\r\n/**\r\n * Defines events for [[Triangle]].\r\n */\r\nexport interface ITriangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Triangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITriangleAdapters extends ISpriteAdapters, ITriangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a triangle.\r\n *\r\n * @see {@link ITriangleEvents} for a list of available events\r\n * @see {@link ITriangleAdapters} for a list of available Adapters\r\n */\r\nexport class Triangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ITriangleProperties}\r\n\t */\r\n\tpublic _properties!: ITriangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ITriangleAdapters}\r\n\t */\r\n\tpublic _adapter!: ITriangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ITriangleEvents}\r\n\t */\r\n\tpublic _events!: ITriangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Triangle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.direction = \"top\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this.pixelHeight;\r\n\r\n\t\tlet path: string;\r\n\r\n\r\n\r\n\t\tswitch (this.direction) {\r\n\t\t\tcase \"right\":\r\n\t\t\t\tpath = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h / 2 })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"left\":\r\n\t\t\t\tpath = $path.moveTo({ x: w, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h / 2 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"bottom\":\r\n\t\t\t\tpath = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w / 2, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"top\":\r\n\t\t\t\tpath = $path.moveTo({ x: w / 2, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets direction of a triangle\r\n\t *\r\n\t * @param {\"left\" | \"right\" | \"top\" | \"bottom\"} value\r\n\t */\r\n\tpublic set direction(value: \"left\" | \"right\" | \"top\" | \"bottom\") {\r\n\t\tthis.setPropertyValue(\"direction\", value, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns direction of a triangle\r\n\t *\r\n\t * @return {\"left\" | \"right\" | \"top\" | \"bottom\"} value\r\n\t */\r\n\tpublic get direction(): \"left\" | \"right\" | \"top\" | \"bottom\" {\r\n\t\treturn this.getPropertyValue(\"direction\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Triangle\"] = Triangle;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Triangle.ts","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_shared.js\n// module id = 133\n// module chunks = 302","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-includes.js\n// module id = 134\n// module chunks = 302","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gops.js\n// module id = 135\n// module chunks = 302","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-array.js\n// module id = 136\n// module chunks = 302","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-regexp.js\n// module id = 137\n// module chunks = 302","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-detect.js\n// module id = 138\n// module chunks = 302","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_flags.js\n// module id = 139\n// module chunks = 302","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fix-re-wks.js\n// module id = 140\n// module chunks = 302","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_species-constructor.js\n// module id = 141\n// module chunks = 302","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection.js\n// module id = 142\n// module chunks = 302","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed.js\n// module id = 143\n// module chunks = 302","'use strict';\n// Forced replacement prototype accessors methods\nmodule.exports = require('./_library') || !require('./_fails')(function () {\n  var K = Math.random();\n  // In FF throws only define methods\n  // eslint-disable-next-line no-undef, no-useless-call\n  __defineSetter__.call(null, K, function () { /* empty */ });\n  delete require('./_global')[K];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-forced-pam.js\n// module id = 144\n// module chunks = 302","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-collection-of.js\n// module id = 145\n// module chunks = 302","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-collection-from.js\n// module id = 146\n// module chunks = 302","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { Axis, AxisItemLocation, AxisDataItem } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisFill]].\r\n */\r\nexport interface IAxisFillProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Start position. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstartPosition?: number;\r\n\r\n\t/**\r\n\t * End position. (0-1)\r\n\t * @type {number}\r\n\t */\r\n\tendPosition?: number;\r\n\r\n\t/**\r\n\t * Location within the axis.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisFill]].\r\n */\r\nexport interface IAxisFillEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisFill]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisFillAdapters extends ISpriteAdapters, IAxisFillProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * AxisFill is a base class used to defines fill shapes for various\r\n * type-specific Axes.\r\n *\r\n * Axis fills are used to add fills to specific ranges of those axes.\r\n *\r\n * @see {@link IAxisFillEvents} for a list of available events\r\n * @see {@link IAxisFillAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisFill extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisFillProperties}\r\n\t */\r\n\tpublic _properties!: IAxisFillProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisFillAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisFillAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisFillEvents}\r\n\t */\r\n\tpublic _events!: IAxisFillEvents;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * An SVG path, used to draw fill shape.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @type {string}\r\n\t */\r\n\tpublic fillPath: string;\r\n\r\n\t/**\r\n\t * [_dataItem description]\r\n\t *\r\n\t * Not sure what this is doing here?\r\n\t *\r\n\t * @todo Description\r\n\t * @type {AxisDataItem}\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {Axis} axis Axis\r\n\t */\r\n\tconstructor(axis: Axis) {\r\n\t\tsuper();\r\n\t\tthis.axis = axis;\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.className = \"AxisFill\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.location = 0;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.fillOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tsuper.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the fill element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.axis && $type.isNumber(this.startPosition) && $type.isNumber(this.endPosition)) {\r\n\t\t\tthis.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);\r\n\t\t\tthis.path = this.fillPath;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An actual starting position of the fill.\r\n\t *\r\n\t * @param {number}  value  Starting position\r\n\t */\r\n\tpublic set startPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"startPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Start position\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\treturn this.getPropertyValue(\"startPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * An actual end position of the fill.\r\n\t *\r\n\t * @param {number} value End position\r\n\t */\r\n\tpublic set endPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"endPosition\", value);\r\n\t\tthis.invalidate(); // this is needed as relative position might not change when zooming\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} End position\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\treturn this.getPropertyValue(\"endPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the fill. (0-1)\r\n\t *\r\n\t * @param {number} value Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisItemLocation} Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisFill\"] = AxisFill;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisFill.ts","/**\r\n * A module defining functionality for axis grid elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteEvents, SpriteEventDispatcher, AMEvent, ISpriteAdapters } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grid]].\r\n */\r\nexport interface IGridProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Location of the grid item within cell. (0-1)\r\n\t *\r\n\t * @type {AxisItemLocation}\r\n\t */\r\n\tlocation?: AxisItemLocation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Grid]].\r\n */\r\nexport interface IGridEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters  for [[Grid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGridAdapters extends ISpriteAdapters, IGridProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Displays an axis grid line.\r\n *\r\n * @see {@link IGridEvents} for a list of available events\r\n * @see {@link IGridAdapters} for a list of available Adapters\r\n * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements\r\n * @important\r\n */\r\nexport class Grid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IGridProperties}\r\n\t */\r\n\tpublic _properties!: IGridProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IGridAdapters}\r\n\t */\r\n\tpublic _adapter!: IGridAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IGridEvents}\r\n\t */\r\n\tpublic _events!: IGridEvents;\r\n\r\n\t/**\r\n\t * An axis data item that corresponds to the this grid element.\r\n\t *\r\n\t * @type {AxisDataItem}\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic axis: Axis;\t\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Grid\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.fill = color(); // \"none\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Location within axis cell to place grid line on.\r\n\t *\r\n\t * * 0 - start\r\n\t * * 0.5 - middle\r\n\t * * 1 - end\r\n\t *\r\n\t * @param {AxisItemLocation}  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisItemLocation} Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tsuper.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t}\t\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grid\"] = Grid;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/Grid.ts","/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisLabelProperties}\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisLabelAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisLabelEvents}\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t *\r\n\t * @type {AxisDataItem}\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic axis: Axis;\t\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\tthis.nonScaling = true;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param {AxisItemLocation}  value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisItemLocation} Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param {boolean}  value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return {boolean} Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tsuper.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t}\t\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisLabel.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for cache items.\r\n */\r\ninterface CacheItem<A> {\r\n\r\n\t/**\r\n\t * A timestamp of when the item was created/updated.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\t\"touched\": number,\r\n\r\n\t/**\r\n\t * TTL (time to live) in milliseconds.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\t\"ttl\"?: number,\r\n\r\n\t/**\r\n\t * Cached value.\r\n\t * \r\n\t * @type {A}\r\n\t */\r\n\t\"value\": A,\r\n\r\n\t/**\r\n\t * Is this item expired?\r\n\t * \r\n\t * @todo a system process that would check chace element TTLs and expire them\r\n\t * @type {boolean}\r\n\t */\r\n\t\"expired\"?: boolean\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents object cache.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better storage\r\n * @todo TTL logging\r\n * @todo Garbage collector\r\n */\r\nexport class Cache<A> {\r\n\r\n\t/**\r\n\t * Storage for cache items.\r\n\t * \r\n\t * @type {Object}\r\n\t */\r\n\tprivate _storage = new Dictionary<string, Dictionary<string, CacheItem<A>>>();\r\n\r\n\t/**\r\n\t * Default TTL in milliseconds.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tpublic ttl: number = 1000;\r\n\r\n\t/**\r\n\t * Caches or updates cached value, resets TTL.\r\n\t *\r\n\t * If `ttl` is set to zero, item will never expire.\r\n\t * \r\n\t * @param {string}  owner  An id of the object that owns this cache\r\n\t * @param {string}  key    Index key\r\n\t * @param {A}       value  Value\r\n\t * @param {number}  ttl    TTL of the cache to live in milliseconds\r\n\t */\r\n\tpublic set(owner: string, key: string, value: A, ttl?: number): void {\r\n\r\n\t\t// Create if storage does not exist for this owner\r\n\t\tlet ownerStorage = this._storage.insertKeyIfEmpty(owner, () => new Dictionary<string, CacheItem<A>>());\r\n\r\n\t\t// Create cache item\r\n\t\tlet item: CacheItem<A> = {\r\n\t\t\t\"touched\": new Date().getTime(),\r\n\t\t\t\"ttl\": $type.isNumber(ttl) ? ttl : this.ttl,\r\n\t\t\t\"value\": value\r\n\t\t};\r\n\r\n\t\t// Set\r\n\t\townerStorage.setKey(key, item);\r\n\t}\r\n\r\n\t/**\r\n\t * Rerturns cached item, respecting TTL.\r\n\t * \r\n\t * @param  {string}  owner  An id of the object that owns this cache\r\n\t * @param  {string}  key    Index key\r\n\t * @param  {string}  value  Value to return if cache not available\r\n\t * @return {A}              Value, or `undefined` if not set\r\n\t */\r\n\tpublic get(owner: string, key: string, value: any = undefined): $type.Optional<A> {\r\n\t\t// \t\t || ypeof this._storage[owner][key] === \"undefined\" || this._storage[owner][key].expired === true) {\r\n\t\tif (this._storage.hasKey(owner)) {\r\n\t\t\tlet ownerStorage = <Dictionary<string, CacheItem<A>>>this._storage.getKey(owner);\r\n\r\n\t\t\tif (ownerStorage.hasKey(key)) {\r\n\t\t\t\tlet cacheItem: CacheItem<A> = <CacheItem<A>>ownerStorage.getKey(key);\r\n\t\t\t\tif (cacheItem.ttl && ((cacheItem.touched + cacheItem.ttl) < new Date().getTime())) {\r\n\t\t\t\t\tcacheItem.expired = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (cacheItem.expired) {\r\n\t\t\t\t\townerStorage.removeKey(key);\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t\treturn cacheItem.value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears cache for specific owner or everything.\r\n\t * \r\n\t * @param {string} owner Owner to clear cache for\r\n\t */\r\n\tpublic clear(owner?: string): void {\r\n\t\tif (owner) {\r\n\t\t\tthis._storage.removeKey(owner);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._storage.clear();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * GLOBAL INSTANCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A global instance of cache. Use this instance to cache any values.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let cache: Cache<any> = new Cache();\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Cache.ts","/**\r\n * This functionality is related to the HTML wrapper that houses `<svg>` tag.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { IDisposer, Disposer } from \"../utils/Disposer\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * A array of all SVG Containers (one SVG container per chart instance).\r\n *\r\n * @ignore Exclude from docs\r\n * @type {Array<SVGContainer>}\r\n */\r\nexport const svgContainers: Array<SVGContainer> = [];\r\n\r\n/**\r\n * A class used to create an HTML wrapper for the SVG contents.\r\n */\r\nexport class SVGContainer implements IDisposer {\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * Width of HTML element.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tpublic width: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Height of HTML element.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tpublic height: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * A [[Container]] element which is placed into container.\r\n\t *\r\n\t * @type {Optional<Container>}\r\n\t */\r\n\tprotected _container: $type.Optional<Container>;\r\n\r\n\t/**\r\n\t * A parent HTML container that SVG wrapper element is placed in.\r\n\t *\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tpublic htmlElement: HTMLElement;\r\n\r\n\t/**\r\n\t * If this component is in a separate HTML container, `autoResize` means the\r\n\t * module will constantly measure container's size and adopt contents to it.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tpublic autoResize: Boolean = true;\r\n\r\n\t/**\r\n\t * A `<div>` element which acts as a wrapper/holder for the SVG element.\r\n\t *\r\n\t * @type {HTMLDivElement}\r\n\t */\r\n\tpublic SVGContainer: HTMLDivElement;\r\n\r\n\r\n\t/**\r\n\t * A reference to ResizeSensor object which monitors changes of div size\r\n\t * @type {ResizeSensor}\r\n\t */\r\n\tpublic resizeSensor: ResizeSensor;\r\n\r\n\r\n\tprotected _resizeSensorDisposer: Disposer;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * * Creates an HTML wrapper for SVG\r\n\t */\r\n\tconstructor(htmlElement: HTMLElement) {\r\n\r\n\t\t// Log parent HTML element\r\n\t\tthis.htmlElement = htmlElement;\r\n\r\n\t\tconst callback = () => { this.measure() };\r\n\r\n\t\tthis.resizeSensor = new ResizeSensor(htmlElement, callback);\r\n\r\n\t\tthis._resizeSensorDisposer = new Disposer(() => {\r\n\t\t\tthis.resizeSensor.detach(callback);\r\n\t\t});\r\n\r\n\t\t// Adds to containers array\r\n\t\tsvgContainers.push(this);\r\n\r\n\t\t/**\r\n\t\t * Create child div for the container - it will have svg node\r\n\t\t * It might seem that this container is not necessay, however having it solves\r\n\t\t * a problems with mouse position detection and some other.\r\n\t\t */\r\n\t\tlet svgContainer = document.createElement(\"div\");\r\n\t\tlet style = svgContainer.style;\r\n\t\tstyle.width = \"100%\";\r\n\t\tstyle.height = \"100%\";\r\n\t\tstyle.position = \"relative\";\r\n\t\thtmlElement.appendChild(svgContainer);\r\n\r\n\t\tthis.SVGContainer = svgContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Measures size of parent HTML element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measure(): void {\r\n\t\tlet width: number = $utils.width(this.htmlElement);\r\n\t\tlet height: number = $utils.height(this.htmlElement);\r\n\t\tlet container = this.container;\r\n\t\tif (container) {\r\n\t\t\tif (this.width != width || this.height != height) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\r\n\t\t\t\tif (width > 0) {\r\n\t\t\t\t\tcontainer.maxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t\tif (height > 0) {\r\n\t\t\t\t\tcontainer.maxHeight = height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$dom.fixPixelPerfect(this.SVGContainer);\r\n\t\t\t}\r\n\r\n\t\t\tif (!container.maxWidth) {\r\n\t\t\t\tcontainer.maxWidth = 0;\r\n\t\t\t}\r\n\t\t\tif (!container.maxHeight) {\r\n\t\t\t\tcontainer.maxHeight = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] element which is placed into container.\r\n\t *\r\n\t * @param {Optional<Container>}  container  Container\r\n\t */\r\n\tpublic set container(container: $type.Optional<Container>) {\r\n\t\tthis._container = container;\r\n\t\tthis.measure();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Container>} Container\r\n\t */\r\n\tpublic get container(): $type.Optional<Container> {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return {boolean} Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes this container from SVG container list in system, which\r\n\t * effectively disables size change monitoring for it.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\t$array.remove(svgContainers, this);\r\n\t\t}\r\n\r\n\t\tif (this._resizeSensorDisposer) {\r\n\t\t\tthis._resizeSensorDisposer.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if chart container should have its style set\r\n\t * to `overflow: hidden`.\r\n\t *\r\n\t * Normally, we don't want that, so that certain elements, such as tooltips,\r\n\t * would be able to go outside chart area.\r\n\t *\r\n\t * There is one issue though. Some browsers ignore SVG masks and would\r\n\t * display scrollbars if chart elements, that go outside chart area extend\r\n\t * outside window.\r\n\t *\r\n\t * This is especially true for [[MapChart]], which can have its elements\r\n\t * extend very widely when zoomed in. Even if those parts are not visible\r\n\t * because of SVG masks, some browsers might still display window scrollbars.\r\n\t *\r\n\t * This is why we set this setting to `true` in [[MapChart]].\r\n\t *\r\n\t * Other charts use default of `false`.\r\n\t */\r\n\tpublic set hideOverflow(value: boolean) {\r\n\t\tif (value) {\r\n\t\t\tthis.SVGContainer.style.overflow = \"hidden\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.SVGContainer.style.overflow = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/SVGContainer.ts","/**\r\n * Popup class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport popupCSS from \"./PopupCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IPopupAdapters {\r\n\r\n\t/**\r\n\t * Applied to the class prefixes.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tclassPrefix: string,\r\n\r\n\t/**\r\n\t * Applied to popup content before it is shown.\r\n\t * @type {string}\r\n\t */\r\n\tcontent: string,\r\n\r\n\t/**\r\n\t * Applied to popup title before it is shown.\r\n\t * @type {string}\r\n\t */\r\n\ttitle: string,\r\n\r\n\t/**\r\n\t * Applied to the screen reader title.\r\n\t * @type {string}\r\n\t */\r\n\treaderTitle: string,\r\n\r\n\t/**\r\n\t * Applied to default `defaultStyles` property before it is retrieved.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tdefaultStyles: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `showCurtain` property before it is retrieved.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tshowCurtain: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `draggable` property before it is retrieved.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tdraggable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `closable` property before it is retrieved.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tclosable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `fitTo` property before it's retrieved.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t * @type {\"none\" | \"container\" | \"window\"}\r\n\t */\r\n\tfitTo: \"none\" | \"container\" | \"window\",\r\n\r\n\t/**\r\n\t * Applied to horizontal alignment of the popup.\r\n\t *\r\n\t * @type {Align}\r\n\t */\r\n\talign: Optional<Align>;\r\n\r\n\t/**\r\n\t * Applied to vertical alignment of the popup.\r\n\t *\r\n\t * @type {VerticalAlign}\r\n\t */\r\n\tverticalAlign: Optional<VerticalAlign>;\r\n\r\n\t/**\r\n\t * Applied to `left` position value.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tleft: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `right` position value.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tright: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `top` position value.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\ttop: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `bottom` position value.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tbottom: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to class names list that are added as class for various popup\r\n\t * elements.\r\n\t */\r\n\tclassNames: {\r\n\t\twrapperClass: string,\r\n\t\ttitleClass: string,\r\n\t\tcontentClass: string,\r\n\t\tcurtainClass: string,\r\n\t\tcloseClass: string\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for Popup.\r\n */\r\nexport interface IPopupEvents {\r\n\r\n\t/**\r\n\t * Invoked when Popup is opened.\r\n\t */\r\n\topened: {};\r\n\r\n\t/**\r\n\t * Invoked when Popup is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\r\nexport class Popup extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPopupEvents}\r\n\t */\r\n\tpublic _events!: IPopupEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IPopupAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Popup, IPopupAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<Popup, IPopupAdapters> = new Adapter<Popup, IPopupAdapters>(this);\r\n\r\n\t/**\r\n\t * A reference to an HTML element to be used for container. If not set, popup\r\n\t * will cover the whole window.\r\n\t *\r\n\t * @type {Optional<HTMLElement>}\r\n\t */\r\n\tpublic container: $type.Optional<HTMLElement | Document>;\r\n\r\n\t/**\r\n\t * A parent element this Popup belongs to.\r\n\t *\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds references to various HTML elements, Popup consists of.\r\n\t */\r\n\tprotected _elements: {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Holdes Interaction objects for various Popup's elements.\r\n\t */\r\n\tprotected _IOs: {\r\n\t\twrapper?: InteractionObject;\r\n\t\tcontent?: InteractionObject;\r\n\t\tclose?: InteractionObject;\r\n\t\tcurtain?: InteractionObject;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Contents of popup window.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _content: string = \"\";\r\n\r\n\t/**\r\n\t * Title of the popup window.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _title: string = \"\";\r\n\r\n\t/**\r\n\t * Prefix to apply to class names for popup elements.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _classPrefix: string = \"ampopup\"\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will use default styles.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n\t * showing a semi-transparent fill. (curtain)\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _showCurtain: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether popup can be dragged.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _draggable: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal position of the content window.\r\n\t *\r\n\t * @type {Align}\r\n\t */\r\n\tprotected _align: Optional<Align> = \"center\";\r\n\r\n\t/**\r\n\t * Vertical position of the content window.\r\n\t *\r\n\t * @type {VerticalAlign}\r\n\t */\r\n\tprotected _verticalAlign: Optional<VerticalAlign> = \"middle\";\r\n\r\n\t/**\r\n\t * Shift in position of the element. (used for dragging)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _shift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * Temporary shift in position of the element. (used for dragging)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _tempShift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * \"left\" position of the popup content.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tprotected _left: number | Percent;\r\n\r\n\t/**\r\n\t * \"right\" position of the popup content.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tprotected _right: number | Percent;\r\n\r\n\t/**\r\n\t * \"top\" position of the popup content.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tprotected _top: number | Percent;\r\n\r\n\t/**\r\n\t * \"bottom\" position of the popup content.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tprotected _bottom: number | Percent;\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic _readerTitle: string = \"\";\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _closable: boolean = true;\r\n\r\n\t/**\r\n\t * Was CSS already loaded?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _cssLoaded: boolean = false;\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t * @todo Implement\r\n\t * @type {\"none\" | \"container\" | \"window\"}\r\n\t */\r\n\tprivate _fitTo: \"none\" | \"container\" | \"window\" = \"window\";\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t *\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if the element was already sized and should not be measured for\r\n\t * sized again, saving some precious resources.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _sized: boolean = false;\r\n\r\n\t/**\r\n\t * Cached bounding rectangle info.\r\n\t *\r\n\t * @type {Optional<DOMRect | ClientRect>}\r\n\t */\r\n\tprivate _bbox: $type.Optional<DOMRect | ClientRect>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Popup\";\r\n\t}\r\n\r\n\t/**\r\n\t * Shows popup window.\r\n\t */\r\n\tpublic open(): void {\r\n\t\tif (this.container) {\r\n\t\t\tif (this._elements.wrapper) {\r\n\t\t\t\tthis.container.appendChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis.container.appendChild(this._elements.curtain);\r\n\t\t\t\tthis.showCurtain = this.showCurtain;\r\n\t\t\t}\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.dispatchImmediately(\"opened\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides popup window.\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\tif (this._elements.wrapper.parentElement) {\r\n\t\t\t\tthis._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._elements.curtain) {\r\n\t\t\tif (this._elements.curtain.parentElement) {\r\n\t\t\t\tthis._elements.curtain.parentElement.removeChild(this._elements.curtain);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchImmediately(\"closed\");\r\n\t\tthis.releasePointers();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy (dispose) popup.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.close();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions content element in the center of popup based on its actual size.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic positionElement(forceResize: boolean = true): void {\r\n\r\n\t\tif (!this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (forceResize || !this._sized) {\r\n\t\t\t\tthis._elements.wrapper.style.opacity = \"0.01\";\r\n\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.margin = \"0 0 0 0\";\r\n\r\n\t\t\t\t// Size the element, but only for the first time\r\n\t\t\t\tif (!this._elements.wrapper.style.width) {\r\n\t\t\t\t\tlet bbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\t\tthis._elements.wrapper.style.width = bbox.width + \"px\";\r\n\t\t\t\t\tthis._elements.wrapper.style.height = bbox.height + \"px\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._sized = true;\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet bbox: DOMRect | ClientRect;\r\n\t\t\t\tif ((forceResize || !this._sized) && this._bbox) {\r\n\t\t\t\t\tbbox = this._bbox;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\t\tthis._elements.wrapper.style.opacity = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set horizontal positioning\r\n\t\t\t\tswitch (this.align) {\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(Math.round(-bbox.width / 2) + (this._shift.x + this._tempShift.x));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = this.toStyle(this.left) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = this.toStyle(this.right) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set vertical positioning\r\n\t\t\t\tswitch (this.verticalAlign) {\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(Math.round(-bbox.height / 2) + (this._shift.y + this._tempShift.y));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = this.toStyle(this.top) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = this.toStyle(this.bottom) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 1);\r\n\t\t}, 1);\r\n\r\n\t}\r\n\r\n\tprotected setupDragging(): void {\r\n\t\tif (this.draggable) {\r\n\t\t\tif (!this._IOs.wrapper.events.has(\"drag\")) {\r\n\t\t\t\tthis._IOs.wrapper.events.on(\"drag\", (ev) => {\r\n\t\t\t\t\tthis._tempShift.x = ev.shift.x;\r\n\t\t\t\t\tthis._tempShift.y = ev.shift.y;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (!this._IOs.wrapper.events.has(\"dragstop\")) {\r\n\t\t\t\tthis._IOs.wrapper.events.on(\"dragstop\", (ev) => {\r\n\t\t\t\t\tthis._shift.x += this._tempShift.x;\r\n\t\t\t\t\tthis._shift.y += this._tempShift.y;\r\n\t\t\t\t\tthis._tempShift.x = 0;\r\n\t\t\t\t\tthis._tempShift.y = 0;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// @todo Remove events\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toStyle(value: number | Percent): string | null {\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\telse if ($type.isNumber(value)) {\r\n\t\t\treturn \"\" + value + \"px\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A prefix that is applied to class names of various popup elements.\r\n\t *\r\n\t * @return {string} Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", this._classPrefix);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns raw prefix (without adapters applied).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Class name prefix\r\n\t */\r\n\tpublic get classPrefixRaw(): string {\r\n\t\treturn this._classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Popup content.\r\n\t *\r\n\t * Popup content can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param {string} value Popup content\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tif (this._content != value) {\r\n\t\t\tthis._content = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.content.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Popup content\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.adapter.apply(\"content\", this._content);\r\n\t}\r\n\r\n\tprotected getClassNames() {\r\n\t\treturn this.adapter.apply(\"classNames\", {\r\n\t\t\twrapperClass: this.classPrefix + \"\",\r\n\t\t\ttitleClass: this.classPrefix + \"-title\",\r\n\t\t\tcontentClass: this.classPrefix + \"-content\",\r\n\t\t\tcurtainClass: this.classPrefix + \"-curtain\",\r\n\t\t\tcloseClass: this.classPrefix + \"-close\"\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates content element.\r\n\t */\r\n\tprotected createContentElement(): void {\r\n\r\n\t\t// Check if it's created already\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create content element\r\n\t\tlet wrapper = document.createElement(\"div\");\r\n\t\twrapper.className = classNames.contentClass;\r\n\t\twrapper.style.opacity = \"0.01\";\r\n\r\n\t\t// Create close button\r\n\t\tlet close = document.createElement(\"a\");\r\n\t\tclose.className = classNames.closeClass;\r\n\r\n\t\t// Content title\r\n\t\tlet title = document.createElement(\"div\");\r\n\t\ttitle.innerHTML = this.title;\r\n\t\ttitle.className = classNames.titleClass;\r\n\t\tif (!this.title) {\r\n\t\t\ttitle.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Content div\r\n\t\tlet content = document.createElement(\"div\");\r\n\t\tcontent.innerHTML = this.content;\r\n\r\n\t\t// Set up events for content\r\n\t\tthis._IOs.wrapper = getInteraction().getInteraction(wrapper);\r\n\t\tthis._disposers.push(this._IOs.wrapper);\r\n\r\n\t\t// Set hover/out events\r\n\t\tthis._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Create an InteractionObject for close\r\n\t\tthis._IOs.close = getInteraction().getInteraction(close);\r\n\t\tthis._disposers.push(this._IOs.close);\r\n\r\n\t\t// Hide close for now\r\n\t\tclose.style.visibility = \"hidden\";\r\n\r\n\t\t// Add accessible stuff\r\n\t\twrapper.setAttribute(\"role\", \"dialog\");\r\n\r\n\t\t// Add to wrapper\r\n\t\twrapper.appendChild(close);\r\n\t\twrapper.appendChild(title);\r\n\t\twrapper.appendChild(content);\r\n\t\tthis.container.appendChild(wrapper);\r\n\r\n\t\t// Save for later access\r\n\t\tthis._elements.wrapper = wrapper;\r\n\t\tthis._elements.content = content;\r\n\t\tthis._elements.title = title;\r\n\t\tthis._elements.close = close;\r\n\r\n\t\t// Load CSS\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t\t// Create curtain as well\r\n\t\tthis.createCurtainElement();\r\n\r\n\t\t// Apply events\r\n\t\tthis.applyEvents();\r\n\r\n\t\tthis.applyReaderSettings();\r\n\r\n\t\t// Draggable?\r\n\t\tthis.setupDragging();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Popup title.\r\n\t *\r\n\t * Popup title can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param {string}  value  Popup title\r\n\t */\r\n\tpublic set title(value: string) {\r\n\t\tif (this._title != value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.title.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Popup title\r\n\t */\r\n\tpublic get title(): string {\r\n\t\treturn this.adapter.apply(\"title\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t *\r\n\t * @param {string}  value  Reader title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tif (this._readerTitle != value) {\r\n\t\t\tthis._readerTitle = value;\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Popup content\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"readerTitle\",\r\n\t\t\tthis._readerTitle != \"\" ? this._readerTitle : this.title\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t *\r\n\t * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n\t * clicking curtain, or clicking the close button.\r\n\t *\r\n\t * If it is not closable, the only way to close it is via `close()` call.\r\n\t *\r\n\t * @param {boolean} value Closable?\r\n\t */\r\n\tpublic set closable(value: boolean) {\r\n\t\tif (value !== this._closable) {\r\n\t\t\tthis._closable = value;\r\n\t\t\tthis.applyEvents();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Closable?\r\n\t */\r\n\tpublic get closable(): boolean {\r\n\t\treturn this.adapter.apply(\"closable\", this._closable);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @default \"window\"\r\n\t * @param {\"none\" | \"container\" | \"window\"}  value  Fit option\r\n\t */\r\n\tpublic set fitTo(value: \"none\" | \"container\" | \"window\") {\r\n\t\tif (value != this._fitTo) {\r\n\t\t\tthis._fitTo = value;\r\n\t\t\tthis.positionElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @return {\"none\" | \"container\" | \"window\"} Fit option\r\n\t */\r\n\tpublic get fitTo(): \"none\" | \"container\" | \"window\" {\r\n\t\treturn this.adapter.apply(\"fitTo\", this._fitTo);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use default CSS?\r\n\t *\r\n\t * If default CSS is disabled, an external CSS should handle the look of the\r\n\t * popup, since it will look quite out of place otherwise.\r\n\t *\r\n\t * @default true\r\n\t * @param {string} Use default CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use default CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", this._defaultStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use dim out all content behind it?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} Show curtain?\r\n\t */\r\n\tpublic set showCurtain(value: boolean) {\r\n\t\tif (this._showCurtain != value) {\r\n\t\t\tthis._showCurtain = value;\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis._elements.curtain.style.display = value ? \"block\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Show curtain?\r\n\t */\r\n\tpublic get showCurtain(): boolean {\r\n\t\treturn this.adapter.apply(\"showCurtain\", this._showCurtain);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates curtain element.\r\n\t */\r\n\tprotected createCurtainElement(): void {\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create the curtain\r\n\t\tlet curtain = document.createElement(\"div\");\r\n\t\tcurtain.className = classNames.curtainClass;\r\n\r\n\t\t// Append curtain to wrapper\r\n\t\tthis.container.appendChild(curtain);\r\n\r\n\t\t// Create an InteractionObject for curtain because we might need to\r\n\t\t// set interactions on it\r\n\t\tthis._IOs.curtain = getInteraction().getInteraction(curtain);\r\n\r\n\t\t// Add Curtain IO to disposers\r\n\t\tthis._disposers.push(this._IOs.curtain);\r\n\r\n\t\t// Set events to disable underlying interactivity\r\n\t\tthis._IOs.curtain.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.curtain.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Hide it?\r\n\t\tcurtain.style.display = this.showCurtain ? \"block\" : \"none\";\r\n\r\n\t\t// Save for later\r\n\t\tthis._elements.curtain = curtain;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Can the popup be dragged with a pointer?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} Show curtain?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable != value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tthis.setupDragging();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Show curtain?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.adapter.apply(\"draggable\", this._draggable);\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal positioning of the content window.\r\n\t *\r\n\t * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n\t *\r\n\t * @default \"center\"\r\n\t * @param {Align} Horizontal position\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tif (this._align != value) {\r\n\t\t\tthis._align = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Horizontal position\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", this._align);\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical positioning of the content window.\r\n\t *\r\n\t * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n\t *\r\n\t * @default \"middle\"\r\n\t * @param {VerticalAlign} Vertical position\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tif (this._verticalAlign != value) {\r\n\t\t\tthis._verticalAlign = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Vertical position\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", this._verticalAlign);\r\n\t}\r\n\r\n\t/**\r\n\t * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param {number | Percent} Left\r\n\t */\r\n\tpublic set left(value: number | Percent) {\r\n\t\tif (this.left != value) {\r\n\t\t\tthis._left = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Left\r\n\t */\r\n\tpublic get left(): number | Percent {\r\n\t\treturn this.adapter.apply(\"left\", this._left);\r\n\t}\r\n\r\n\t/**\r\n\t * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param {number | Percent} Right\r\n\t */\r\n\tpublic set right(value: number | Percent) {\r\n\t\tif (this.right != value) {\r\n\t\t\tthis._right = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Right\r\n\t */\r\n\tpublic get right(): number | Percent {\r\n\t\treturn this.adapter.apply(\"right\", this._right);\r\n\t}\r\n\r\n\t/**\r\n\t * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param {number | Percent} Top\r\n\t */\r\n\tpublic set top(value: number | Percent) {\r\n\t\tif (this.top != value) {\r\n\t\t\tthis._top = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Top\r\n\t */\r\n\tpublic get top(): number | Percent {\r\n\t\treturn this.adapter.apply(\"top\", this._top);\r\n\t}\r\n\r\n\t/**\r\n\t * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param {number | Percent} Bottom\r\n\t */\r\n\tpublic set bottom(value: number | Percent) {\r\n\t\tif (this.bottom != value) {\r\n\t\t\tthis._bottom = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Bottom\r\n\t */\r\n\tpublic get bottom(): number | Percent {\r\n\t\treturn this.adapter.apply(\"bottom\", this._bottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with references to various elements of the Popup.\r\n\t *\r\n\t * * `wrapper`\r\n\t * * `title`\r\n\t * * `content`\r\n\t * * `close`\r\n\t * * `curtain`\r\n\t */\r\n\tpublic get elements(): {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads popup CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tif (!this._cssLoaded) {\r\n\t\t\tthis._disposers.push(popupCSS(this.classPrefix));\r\n\t\t\t$object.each(this._elements, (key, el) => {\r\n\t\t\t\tel.style.display = \"\";\r\n\t\t\t});\r\n\t\t\tthis._cssLoaded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If popup is closable, this method adds various events to popup elements.\r\n\t */\r\n\tprotected applyEvents(): void {\r\n\t\tif (this._IOs.close) {\r\n\t\t\tif (this.closable) {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"visible\";\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\t\tif (keyboard.isKey(ev.event, \"esc\") && this.closable) {\r\n\t\t\t\t\t\t\tthis.close()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis._IOs.close.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t\t\tdisposers.push(this._IOs.curtain.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\tif (this.showCurtain) {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tthis._disposers.push(new MultiDisposer(disposers));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected disablePointers(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t\tthis.sprite.interactionsEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t\tthis._spriteInteractionsEnabled = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets screen reader related settings.\r\n\t */\r\n\tprotected applyReaderSettings(): void {\r\n\t\tthis.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param {this} object Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.container = source.container;\r\n\t\tthis.sprite = source.sprite;\r\n\t\tthis.classPrefix = source.classPrefixRaw;\r\n\t\tthis.content = source.content;\r\n\t\tthis.title = source.title;\r\n\t\tthis.readerTitle = source.readerTitle;\r\n\t\tthis.defaultStyles = source.defaultStyles;\r\n\t\tthis.showCurtain = source.showCurtain;\r\n\t\tthis.align = source.align;\r\n\t\tthis.verticalAlign = source.verticalAlign;\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.adapter.copyFrom(source.adapter);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Popup.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { TimeUnit } from \"../defs/TimeUnit\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations: {[Key in TimeUnit]: number } = {\r\n\tmillisecond: 1,\r\n\tsecond: 1000,\r\n\tminute: 60000,\r\n\thour: 3600000,\r\n\tday: 86400000,\r\n\tweek: 604800000,\r\n\tmonth: 2592000000,\r\n\tyear: 31536000000\r\n};\r\n\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {TimeUnit}            unit  Source time unit\r\n * @return {Optional<TimeUnit>}        Next time unit\r\n */\r\nexport function getNextUnit(unit: TimeUnit): $type.Optional<TimeUnit> {\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\treturn\r\n\r\n\t\tcase \"month\":\r\n\t\t\treturn \"year\";\r\n\r\n\t\tcase \"week\":\r\n\t\t\treturn \"month\";\r\n\r\n\t\tcase \"day\":\r\n\t\t\treturn \"month\"; // not a mistake\r\n\r\n\t\tcase \"hour\":\r\n\t\t\treturn \"day\";\r\n\r\n\t\tcase \"minute\":\r\n\t\t\treturn \"hour\";\r\n\r\n\t\tcase \"second\":\r\n\t\t\treturn \"minute\"\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\treturn \"second\";\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {TimeUnit}  unit   Time unit\r\n * @param  {number}    count  Number of units\r\n * @return {number}           Milliseconds\r\n */\r\nexport function getDuration(unit: TimeUnit, count?: number): number {\r\n\tif (!$type.hasValue(count)) {\r\n\t\tcount = 1;\r\n\t}\r\n\treturn timeUnitDurations[unit] * count;\r\n}\r\n\r\n/**\r\n * Returns current `Date` object.\r\n * \r\n * @return {Date} Current date\r\n */\r\nexport function now(): Date {\r\n\treturn new Date();\r\n}\r\n\r\n/**\r\n * Returns current timestamp.\r\n * \r\n * @return {Date} Current timestamp\r\n */\r\nexport function getTime(): number {\r\n\treturn now().getTime();\r\n}\r\n\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {Date}  date  Source date\r\n * @return {Date}        Copy\r\n */\r\nexport function copy(date: Date): Date {\r\n\treturn new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {Date}      dateOne  Date 1\r\n * @param  {Date}      dateTwo  Date 2\r\n * @param  {TimeUnit}  unit     Time unit to check\r\n * @return {boolean}            Range?\r\n */\r\nexport function checkChange(dateOne: Date, dateTwo: Date, unit: TimeUnit): boolean {\r\n\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\tif (dateOne.getFullYear() != dateTwo.getFullYear()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"month\":\r\n\t\t\tif (dateOne.getMonth() != dateTwo.getMonth()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"day\":\r\n\t\t\tif (dateOne.getDate() != dateTwo.getDate()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\t\t\tif (dateOne.getHours() != dateTwo.getHours()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\t\t\tif (dateOne.getMinutes() != dateTwo.getMinutes()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tif (dateOne.getSeconds() != dateTwo.getSeconds()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tif (dateOne.getTime() != dateTwo.getTime()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tlet nextUnit: $type.Optional<TimeUnit> = getNextUnit(unit);\r\n\tif (nextUnit) {\r\n\t\treturn checkChange(dateOne, dateTwo, nextUnit);\r\n\t}\r\n\telse {\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {Date}      date   Source date\r\n * @param  {TimeUnit}  unit   Time unit\r\n * @param  {number}    count  Number of units to add\r\n * @return {Date}             Modified date\r\n */\r\nexport function add(date: Date, unit: TimeUnit, count: number): Date {\r\n\tlet year: number = date.getFullYear();\r\n\tlet month: number = date.getMonth();\r\n\tlet day: number = date.getDate();\r\n\tlet hours: number = date.getHours();\r\n\tlet minutes: number = date.getMinutes();\r\n\tlet seconds: number = date.getSeconds();\r\n\tlet milliseconds: number = date.getMilliseconds();\r\n\t//let weekDay: number = date.getDay();\r\n\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\tdate.setFullYear(year + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"month\":\r\n\t\t\tdate.setMonth(month + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"week\":\r\n\t\t\tdate.setDate(day + count * 7);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"day\":\r\n\t\t\tdate.setDate(day + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\t\t\tdate.setHours(hours + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\t\t\tdate.setMinutes(minutes + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tdate.setSeconds(seconds + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tdate.setMilliseconds(milliseconds + count);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {Date}      date             Source date\r\n * @param  {TimeUnit}  unit             Time unit\r\n * @param  {number}    count            Number of units to round to\r\n * @param  {number}    firstDateOfWeek  First day of week\r\n * @return {Date}                       New date\r\n */\r\nexport function round(date: Date, unit: TimeUnit, count?: number, firstDateOfWeek?: number): Date {\r\n\r\n\tif (!$type.isNumber(count)) {\r\n\t\tcount = 1;\r\n\t}\r\n\r\n\tif (!$type.isNumber(firstDateOfWeek)) {\r\n\t\tfirstDateOfWeek = 1;\r\n\t}\r\n\r\n\tlet year: number = date.getFullYear();\r\n\tlet month: number = date.getMonth();\r\n\tlet day: number = date.getDate();\r\n\tlet hours: number = date.getHours();\r\n\tlet minutes: number = date.getMinutes();\r\n\tlet seconds: number = date.getSeconds();\r\n\tlet milliseconds: number = date.getMilliseconds();\r\n\tlet weekDay: number = date.getDay();\r\n\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\tyear = Math.floor(year / count) * count;\r\n\t\t\tmonth = 0;\r\n\t\t\tday = 1;\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"month\":\r\n\t\t\tmonth = Math.floor(month / count) * count;\r\n\t\t\tday = 1;\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"week\":\r\n\t\t\t// todo: rounding when count is not 1\r\n\t\t\tif (weekDay >= firstDateOfWeek) {\r\n\t\t\t\tday = day - weekDay + firstDateOfWeek;\r\n\t\t\t} else {\r\n\t\t\t\tday = day - (7 + weekDay) + firstDateOfWeek;\r\n\t\t\t}\r\n\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"day\":\r\n\t\t\tday = Math.floor(day / count) * count;\r\n\t\t\tday = day;\r\n\t\t\thours = 0;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\t\t\thours = Math.floor(hours / count) * count;\r\n\t\t\tminutes = 0;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\t\t\tminutes = Math.floor(minutes / count) * count;\r\n\t\t\tseconds = 0;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tseconds = Math.floor(seconds / count) * count;\r\n\t\t\tmilliseconds = 0;\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tmilliseconds = Math.floor(milliseconds / count) * count;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tdate.setFullYear(year, month, day);\r\n\tdate.setHours(hours, minutes, seconds, milliseconds);\r\n\r\n\treturn date;\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Time.ts","/**\r\n * Modal class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Popup, IPopupAdapters } from \"./Popup\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IModalAdapters extends IPopupAdapters {}\r\n\r\n/**\r\n * Shows an HTML modal which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n */\r\nexport class Modal extends Popup {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IModalAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Modal, IModalAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<Modal, IModalAdapters> = new Adapter<Modal, IModalAdapters>(this);\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Modal\";\r\n\t\tthis.showCurtain = true;\r\n\t\tthis.draggable = false;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Modal.ts","/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Validatable extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Is invalid and should be revalidated?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _invalid: boolean = false;\r\n\r\n\t/**\r\n\t * Invalidates the element, so that it can re-validate/redraw itself in the\r\n\t * next cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this._invalid === false) {\r\n\t\t\tthis._invalid = true;\r\n\t\t\tregistry.events.on(\"exitframe\", this.validate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates itself.\r\n\t *\r\n\t * Most probably the extending class will have an overriding `validate()`\r\n\t * method which will do actual work, as well as call this method using\r\n\t * `super.validate()`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this._invalid === true) {\r\n\t\t\tthis._invalid = false;\r\n\t\t\tregistry.events.off(\"exitframe\", this.validate, this);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Validatable.ts","/**\r\n * CSV parser.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser, IDataParserOptions } from \"./DataParser\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Defines options for CSV format parser\r\n */\r\nexport interface ICSVOptions extends IDataParserOptions {\r\n\r\n\t/**\r\n\t * A delimiter character for columns.\r\n\t *\r\n\t * @default ','\r\n\t * @type {string}\r\n\t */\r\n\tdelimiter?: string;\r\n\r\n\t/**\r\n\t * The data is in reverse order.\r\n\t *\r\n\t * If iset to `true`, parser will invert the order of the data items before\r\n\t * passing back the data.\r\n\t *\r\n\t * @default false\r\n\t * @type {number}\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Skip a number of rows from the beginning of the data.\r\n\t *\r\n\t * Useful if your data contains non-data headers, such as column names.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tskipRows?: number;\r\n\r\n\t/**\r\n\t * Skip empty rows.\r\n\t *\r\n\t * If set to `false`, parser will generate empty data points for empty rows\r\n\t * in data.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tskipEmpty?: boolean;\r\n\r\n\t/**\r\n\t * Use the first row in data to generte column names.\r\n\t *\r\n\t * Normally, parser will name each column `col0`, `col1`, etc.\r\n\t *\r\n\t * Setting this to `true` will make the parser look at the first row, for\r\n\t * actual column names.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * A list of fields that should be treaded as numeric.\r\n\t *\r\n\t * Any information container in such fields will be converted to `number`.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * A list of fields that hold date/time infromation.\r\n\t *\r\n\t * Parser will try to convert such fields into `Date` objects.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * A date formatted to be used when parsing dates.\r\n\t *\r\n\t * @type {DateFormatter}\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n}\r\n\r\n/**\r\n * Define possible separators.\r\n */\r\nlet separators = [\",\", \";\", \"\\t\"];\r\n\r\n/**\r\n * A parser for CSV format.\r\n *\r\n * @important\r\n */\r\nexport class CSVParser extends DataParser {\r\n\r\n\t/**\r\n\t * Tests if the format is CSV.\r\n\t *\r\n\t * @param  {string}   data  Source data\r\n\t * @return {boolean}        Is it CSV?\r\n\t */\r\n\tstatic isCSV(data: string): boolean {\r\n\t\treturn CSVParser.getDelimiterFromData(data) ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to determine a column separator.\r\n\t *\r\n\t * @param  {string}  data  Source data\r\n\t * @return {string}        Separator\r\n\t */\r\n\tstatic getDelimiterFromData(data: string): string {\r\n\r\n\t\t// We're going to take first few lines of the CSV with different\r\n\t\t// possible separators and check if it results in same number of columns.\r\n\t\t// If it does, we're going to assume it's a CSV\r\n\t\tlet lines = data.split(\"\\n\");\r\n\t\tlet separator: string;\r\n\r\n\t\t// TODO replace with iterators\r\n\t\tfor (let sep of separators) {\r\n\t\t\tlet columns = 0,\r\n\t\t\t\tlineColums = 0;\r\n\t\t\tfor (let i in lines) {\r\n\r\n\t\t\t\t// Get number of columns in a line\r\n\t\t\t\tcolumns = lines[i].split(sep).length;\r\n\r\n\t\t\t\tif (columns > 1) {\r\n\r\n\t\t\t\t\t// More than one column - possible candidate\r\n\t\t\t\t\tif (lineColums === 0) {\r\n\t\t\t\t\t\t// First line\r\n\t\t\t\t\t\tlineColums = columns;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (columns != lineColums) {\r\n\t\t\t\t\t\t// Incorrect number of columns, give up on this separator\r\n\t\t\t\t\t\tlineColums = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Not this separator\r\n\t\t\t\t\t// Not point in continuing\r\n\t\t\t\t\tlineColums = 0;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check if we have a winner\r\n\t\t\tif (lineColums) {\r\n\t\t\t\tseparator = sep;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn separator;\r\n\t}\r\n\r\n\t/**\r\n\t * Content-type suitable for CSV format.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic contentType: string = \"text/csv\";\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link ICSVOptions} for description of each option\r\n\t * @type {ICSVOptions}\r\n\t */\r\n\tpublic options: ICSVOptions = {\r\n\t\tdelimiter: \"\",\r\n\t\treverse: false,\r\n\t\tskipRows: 0,\r\n\t\tskipEmpty: true,\r\n\t\tuseColumnNames: false\r\n\t};\r\n\r\n\t/**\r\n\t * Parses and returns data.\r\n\t *\r\n\t * @param  {string}  data  Unparsed data\r\n\t * @return {any}           Parsed data\r\n\t */\r\n\tpublic parse(csv: string): any[] {\r\n\r\n\t\t// Check if we have delimiter set\r\n\t\tif (!this.options.delimiter) {\r\n\t\t\tthis.options.delimiter = CSVParser.getDelimiterFromData(csv);\r\n\t\t}\r\n\r\n\t\t// Get CSV data as array\r\n\t\tlet data = this.CSVToArray(csv, this.options.delimiter);\r\n\r\n\t\t// Do we need to cast some fields to numbers?\r\n\t\tlet empty = $type.hasValue(this.options.emptyAs);\r\n\t\tlet numbers = this.parsableNumbers;\r\n\t\tlet dates = this.parsableDates;\r\n\r\n\t\t// Init resuling array\r\n\t\tlet res: any[] = [],\r\n\t\t\tcols: string[] = [],\r\n\t\t\tcol: string,\r\n\t\t\ti: number;\r\n\r\n\t\t// First row holds column names?\r\n\t\tif (this.options.useColumnNames) {\r\n\t\t\tcols = data.shift();\r\n\r\n\t\t\t// Normalize column names\r\n\t\t\tfor (let x = 0; x < cols.length; x++) {\r\n\t\t\t\t// trim\r\n\t\t\t\tcol = $type.hasValue(cols[x]) ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n\r\n\t\t\t\t// Check for empty\r\n\t\t\t\tif (\"\" === col) {\r\n\t\t\t\t\tcol = \"col\" + x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcols[x] = col;\r\n\t\t\t}\r\n\r\n\t\t\tif (0 < this.options.skipRows)\r\n\t\t\t\tthis.options.skipRows--;\r\n\t\t}\r\n\r\n\t\t// Skip rows\r\n\t\tfor (i = 0; i < this.options.skipRows; i++) {\r\n\t\t\tdata.shift();\r\n\t\t}\r\n\r\n\t\t// Iterate through the result set\r\n\t\tlet row;\r\n\t\twhile ((row = this.options.reverse ? data.pop() : data.shift())) {\r\n\t\t\tif (this.options.skipEmpty && row.length === 1 && row[0] === \"\")\r\n\t\t\t\tcontinue;\r\n\t\t\tlet dataPoint: any = {};\r\n\t\t\tfor (i = 0; i < row.length; i++) {\r\n\t\t\t\tcol = undefined === cols[i] ? \"col\" + i : cols[i];\r\n\t\t\t\tdataPoint[col] = row[i] === \"\" ? this.options.emptyAs : row[i];\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tif (empty) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToEmpty(dataPoint[col]);\r\n\t\t\t\t}\r\n\t\t\t\tif (numbers) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToNumber(col, dataPoint[col]);\r\n\t\t\t\t}\r\n\t\t\t\tif (dates) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToDate(col, dataPoint[col]);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tres.push(dataPoint);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n \t * Converts CSV into array.\r\n \t *\r\n \t * The functionality of this function is taken from here:\r\n \t * http://www.bennadel.com/blog/1504-ask-ben-parsing-csv-strings-with-javascript-exec-regular-expression-command.htm\r\n \t *\r\n \t * @param  {string}  data       Source data\r\n \t * @param  {string}  delimiter  Column delimiter\r\n \t * @return {any[]}              Parsed array\r\n \t */\r\n\tpublic CSVToArray(data: string, delimiter: string): any[] {\r\n\r\n\t\t// Check to see if the delimiter is defined. If not,\r\n\t\t// then default to comma.\r\n\t\tdelimiter = (delimiter || ',');\r\n\r\n\t\t// Create a regular expression to parse the CSV values.\r\n\t\tlet objPattern = new RegExp(\r\n\t\t\t(\r\n\t\t\t\t// Delimiters.\r\n\t\t\t\t\"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n\r\n\t\t\t\t// Quoted fields.\r\n\t\t\t\t\"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n\r\n\t\t\t\t// Standard fields.\r\n\t\t\t\t\"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"\r\n\t\t\t),\r\n\t\t\t\"gi\"\r\n\t\t);\r\n\r\n\r\n\t\t// Create an array to hold our data. Give the array\r\n\t\t// a default empty first row.\r\n\t\tlet arrData: any[] = [\r\n\t\t\t[]\r\n\t\t];\r\n\r\n\t\t// Create an array to hold our individual pattern\r\n\t\t// matching groups.\r\n\t\tlet arrMatches = null;\r\n\r\n\t\t// Keep looping over the regular expression matches\r\n\t\t// until we can no longer find a match.\r\n\t\twhile ((arrMatches = objPattern.exec(data))) {\r\n\r\n\t\t\t// Get the delimiter that was found.\r\n\t\t\tlet strMatchedDelimiter = arrMatches[1];\r\n\r\n\t\t\t// Check to see if the given delimiter has a length\r\n\t\t\t// (is not the start of string) and if it matches\r\n\t\t\t// field delimiter. If id does not, then we know\r\n\t\t\t// that this delimiter is a row delimiter.\r\n\t\t\tif (\r\n\t\t\t\tstrMatchedDelimiter.length &&\r\n\t\t\t\t(strMatchedDelimiter !== delimiter)\r\n\t\t\t) {\r\n\r\n\t\t\t\t// Since we have reached a new row of data,\r\n\t\t\t\t// add an empty row to our data array.\r\n\t\t\t\tarrData.push([]);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Now that we have our delimiter out of the way,\r\n\t\t\t// let's check to see which kind of value we\r\n\t\t\t// captured (quoted or unquoted).\r\n\t\t\tlet strMatchedValue;\r\n\t\t\tif (arrMatches[2]) {\r\n\r\n\t\t\t\t// We found a quoted value. When we capture\r\n\t\t\t\t// this value, unescape any double quotes.\r\n\t\t\t\tstrMatchedValue = arrMatches[2].replace(\r\n\t\t\t\t\tnew RegExp(\"\\\"\\\"\", \"g\"),\r\n\t\t\t\t\t\"\\\"\"\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// We found a non-quoted value.\r\n\t\t\t\tstrMatchedValue = arrMatches[3];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Now that we have our value string, let's add\r\n\t\t\t// it to the data array.\r\n\t\t\tarrData[arrData.length - 1].push(strMatchedValue);\r\n\t\t}\r\n\r\n\t\t// Return the parsed data.\r\n\t\treturn (arrData);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/data/CSVParser.ts","/**\r\n * Data parser module.\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines common options for all data parsers.\r\n */\r\nexport interface IDataParserOptions {\r\n\r\n\t/**\r\n\t * Empty values (e.g. empty strings, `null`, etc.) will be replaced with\r\n\t * this.\r\n\t * \r\n\t * @type {any}\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * List of fields in data that hold numeric values. Parser will try to \r\n\t * convert the value in those fields to a `number`.\r\n\t * \r\n\t * @type {string[]}\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * List of fields in data that need to be treated as Dates, i.e. converted \r\n\t * to `Date` objects from whatever source format they are currently in.\r\n\t * \r\n\t * @type {string[]}\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]] to use when parsing string-based dates.\r\n\t * If it's not set, the parser will create it's own instance of \r\n\t * [[DateFormatter]], should any date parsing required. (`dateFields` is set)\r\n\t *\r\n\t * Unless `dateFormat` is set in parser options, the parser will try to look\r\n\t * for `dateFormat` in `dateFormatter`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date parsing\r\n\t * @type {DateFormatter}\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n\r\n\t/**\r\n\t * Override date format set in `dateFormatter`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date parsing \r\n\t * @type {string}\r\n\t */\r\n\tdateFormat?: string;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class for the data parsers.\r\n */\r\nexport class DataParser {\r\n\r\n\t/**\r\n\t * Content type, relevant to the specific format.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tpublic contentType: string;\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link IDataParserOptions} for description of each option\r\n\t * @type {IDataParserOptions}\r\n\t */\r\n\tpublic options: IDataParserOptions;\r\n\r\n\t/**\r\n\t * A \"placeholder\" function for real parsers to override.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  data  Source data\r\n\t * @return {any}           Parsed data (empty)\r\n\t */\r\n\tpublic parse(data: string): any {\r\n\t\treturn [];\r\n\t};\r\n\r\n\t/**\r\n\t * Checks if there are any numeric fields that need to be converted to\r\n\t * numbers.\r\n\t * \r\n\t * @return {boolean} Numeric fields?\r\n\t */\r\n\tprotected get parsableNumbers(): boolean {\r\n\t\treturn this.options.numberFields && (this.options.numberFields.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a value to 'number' if it is in `numberFields`.\r\n\t * \r\n\t * @param  {string}  field  Field name\r\n\t * @param  {any}     value  Value\r\n\t * @return {any}            Parsed or original value\r\n\t */\r\n\tprotected maybeToNumber(field: string, value: any): any {\r\n\t\tif (this.options.numberFields.indexOf(field) !== -1) {\r\n\t\t\treturn $utils.anyToNumber(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are any date fields that need to be converted to `Date`\r\n\t * objects.\r\n\t * \r\n\t * @return {boolean} Date fields?\r\n\t */\r\n\tprotected get parsableDates(): boolean {\r\n\t\treturn this.options.dateFields && (this.options.dateFields.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a value to `Date` if it is in `dateFields`.\r\n\t * \r\n\t * @param  {string}  field  Field name\r\n\t * @param  {any}     value  Value\r\n\t * @return {any}            Parsed or original value\r\n\t */\r\n\tprotected maybeToDate(field: string, value: any): any {\r\n\t\tif (this.options.dateFields.indexOf(field) !== -1) {\r\n\t\t\treturn this.options.dateFormatter.parse(value, this.dateFormat);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces empty value with something else.\r\n\t * \r\n\t * @param  {any}  value  Source value\r\n\t * @return {any}         Source value or replacement\r\n\t */\r\n\tprotected maybeToEmpty(value: any): any {\r\n\t\tif ((!$type.hasValue(value) || value == \"\") && $type.hasValue(this.options.emptyAs)) {\r\n\t\t\treturn this.options.emptyAs;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * [[DateFormatter]] object for date parsing.\r\n\t * \r\n\t * If there was not [[DateFormatter]] supplied in parser options, a new one \r\n\t * is created.\r\n\t * \r\n\t * @return {DateFormatter} Date formatter\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tprotected get dateFormatter(): DateFormatter {\r\n\t\tif (!this.options.dateFormatter) {\r\n\t\t\tthis.options.dateFormatter = new DateFormatter;\r\n\t\t\tif (this.options.dateFormat) {\r\n\t\t\t\tthis.options.dateFormat = this.options.dateFormat;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.options.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use when parsing dates.\r\n\t * \r\n\t * @return {string} Date format\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tprotected get dateFormat(): string {\r\n\t\treturn this.options.dateFormat || this.dateFormatter.inputDateFormat;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/data/DataParser.ts","/**\r\n * JSON parser.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser, IDataParserOptions } from \"./DataParser\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * Defines options for JSON format parser\r\n */\r\nexport interface IJSONOptions extends IDataParserOptions {\r\n\r\n\t/**\r\n\t * A list of fields that should be treaded as numeric.\r\n\t *\r\n\t * Any information container in such fields will be converted to `number`.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * A list of fields that hold date/time infromation.\r\n\t *\r\n\t * Parser will try to convert such fields into `Date` objects.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * A date formatted to be used when parsing dates.\r\n\t * \r\n\t * @type {DateFormatter}\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n\r\n}\r\n\r\n/**\r\n * A parser for JSON.\r\n *\r\n * @important\r\n */\r\nexport class JSONParser extends DataParser {\r\n\r\n\t/**\r\n\t * Tests if the data is valid JSON.\r\n\t * \r\n\t * @param  {string}   data  Source data\r\n\t * @return {boolean}        Is it JSON?\r\n\t */\r\n\tstatic isJSON(data: string): boolean {\r\n\t\ttry {\r\n\r\n\t\t\t// Try parsing JSON\r\n\t\t\tJSON.parse(data);\r\n\r\n\t\t\t// If we got to this point it means it's a valid JSON\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Content-type suitable for JSON format.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tpublic contentType: string = \"application/json\";\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link IJSONOptions} for description of each option\r\n\t * @type {IJSONOptions}\r\n\t */\r\n\tpublic options: IJSONOptions = {};\r\n\r\n\t/**\r\n\t * Parses and returns data.\r\n\t * \r\n\t * @param  {string}  data  Unparsed data\r\n\t * @return {any}           Parsed data\r\n\t */\r\n\tpublic parse(data: string): any {\r\n\r\n\t\t// Init return\r\n\t\tlet res: any;\r\n\r\n\t\t// Try parsing\r\n\t\ttry {\r\n\t\t\tif ($type.hasValue(JSON)) {\r\n\t\t\t\tres = JSON.parse(data);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Do we need to cast some fields to numbers or dates?\r\n\t\tlet empty = $type.hasValue(this.options.emptyAs);\r\n\t\tlet numbers = this.parsableNumbers;\r\n\t\tlet dates = this.parsableDates;\r\n\t\tif (Array.isArray(res) && (numbers || dates || empty)) {\r\n\r\n\t\t\t// Iterate through the data and check if it needs to be converted\r\n\t\t\tfor (let i = 0, len = res.length; i < len; i++) {\r\n\t\t\t\tlet row = res[i];\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (empty) {\r\n\t\t\t\t\t\trow[key] = this.maybeToEmpty(row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (numbers) {\r\n\t\t\t\t\t\trow[key] = this.maybeToNumber(key, row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (dates) {\r\n\t\t\t\t\t\trow[key] = this.maybeToDate(key, row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Convert to array\r\n\t\t//return Array.isArray(res) ? res : [res];\r\n\t\treturn res;\r\n\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/data/JSONParser.ts","/**\r\n * Functionality for drawing rectangles with waved edges.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Rectangle, IRectangleProperties, IRectangleAdapters, IRectangleEvents } from \"./Rectangle\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { wavedLine } from \"../rendering/Smoothing\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[WavedRectangle]].\r\n */\r\nexport interface IWavedRectangleProperties extends IRectangleProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @type {number}\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @type {number}\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t * @type {number}\r\n\t */\r\n\ttension?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedRectangle]].\r\n */\r\nexport interface IWavedRectangleEvents extends IRectangleEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedRectangleAdapters extends IRectangleAdapters, IWavedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with waved edges.\r\n *\r\n * @see {@link IWavedRectangleEvents} for a list of available events\r\n * @see {@link IWavedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class WavedRectangle extends Rectangle implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IWavedRectangleProperties}\r\n\t */\r\n\tpublic _properties!: IWavedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IWavedRectangleAdapters}\r\n\t */\r\n\tpublic _adapter!: IWavedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IWavedRectangleEvents}\r\n\t */\r\n\tpublic _events!: IWavedRectangleEvents;\r\n\r\n\t/**\r\n\t * Top waved?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _twaved: boolean = true;\r\n\r\n\t/**\r\n\t * Right side waved?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _rwaved: boolean = true;\r\n\r\n\t/**\r\n\t * Bottom waved?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _bwaved: boolean = true;\r\n\r\n\t/**\r\n\t * Left side waved?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _lwaved: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedRectangle\";\r\n\r\n\t\t// Add path element\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\t// Set defaults\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\t\tthis.tension = 0.8;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved rectangle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this._pixelHeight;\r\n\r\n\t\tif (w > 0 && h > 0) {\r\n\t\t\tlet p1: IPoint = { x: 0, y: 0 };\r\n\t\t\tlet p2: IPoint = { x: w, y: 0 };\r\n\t\t\tlet p3: IPoint = { x: w, y: h };\r\n\t\t\tlet p4: IPoint = { x: 0, y: h };\r\n\r\n\t\t\tlet waveLength: number = this.waveLength;\r\n\t\t\tlet waveHeight: number = this.waveHeight;\r\n\r\n\t\t\tlet td: string = \"\";\r\n\t\t\tlet rd: string = \"\";\r\n\t\t\tlet bd: string = \"\";\r\n\t\t\tlet ld: string = \"\";\r\n\r\n\t\t\tif (this._twaved) {\r\n\t\t\t\ttd = wavedLine(p1, p2, waveLength, waveHeight, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this._rwaved) {\r\n\t\t\t\tld = wavedLine(p2, p3, waveLength, waveHeight, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this._bwaved) {\r\n\t\t\t\tbd = wavedLine(p3, p4, waveLength, waveHeight, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this._rwaved) {\r\n\t\t\t\trd = wavedLine(p4, p1, waveLength, waveHeight, this.tension, true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.path = $path.moveTo(p1) + td + $path.lineTo(p2) + ld + $path.lineTo(p3) + bd + $path.lineTo(p4) + rd + \"z\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param {number}  value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param {number}  value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets which side should be waved or not. If particular side is set to\r\n\t * `false`, a straight line will be drawn on that side.\r\n\t *\r\n\t * @param {boolean}  top     Top waved?\r\n\t * @param {boolean}  right   Right side waved?\r\n\t * @param {boolean}  bottom  Bottom Waved?\r\n\t * @param {boolean}  left    Left side waved?\r\n\t */\r\n\tpublic setWavedSides(top: boolean, right: boolean, bottom: boolean, left: boolean): void {\r\n\t\tthis._twaved = top;\r\n\t\tthis._lwaved = right;\r\n\t\tthis._bwaved = bottom;\r\n\t\tthis._rwaved = left;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box based on element dimension settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tthis._bbox = {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this.innerWidth,\r\n\t\t\theight: this.innerHeight\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param {number}  value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/WavedRectangle.ts","/**\r\n * Base class for all Axis\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\n\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { AxisRenderer } from \"./AxisRenderer\";\r\n\r\n// Charts\r\nimport { Chart } from \"../Chart\";\r\n\r\n// Series\r\nimport { XYSeries, XYSeriesDataItem } from \"../series/XYSeries\";\r\n\r\n// Elements\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Tooltip, PointerOrientation } from \"../../core/elements/Tooltip\";\r\nimport { PointedRectangle } from \"../../core/elements/PointedRectangle\";\r\n\r\n// Types\r\nimport { IRange } from \"../../core/defs/IRange\";\r\n\r\n// Utils\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class AxisDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Reference to a related [[Grid]] element.\r\n\t *\r\n\t * @type {Grid}\r\n\t */\r\n\tprotected _grid: Grid;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisTick]] element.\r\n\t *\r\n\t * @type {AxisTick}\r\n\t */\r\n\tprotected _tick: AxisTick;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisLabel]] element.\r\n\t *\r\n\t * @type {AxisLabel}\r\n\t */\r\n\tprotected _label: AxisLabel;\r\n\r\n\t/**\r\n\t * Reference to a related [[AxisFill]] element.\r\n\t *\r\n\t * @type {AxisFill}\r\n\t */\r\n\tprotected _axisFill: AxisFill;\r\n\r\n\t/**\r\n\t * A mask for axis. We're using [[AxisFill]] since the mask, basically, has\r\n\t * the same shape and features.\r\n\t *\r\n\t * @type {AxisFill}\r\n\t */\r\n\tprotected _mask: AxisFill;\r\n\r\n\t/**\r\n\t * Container which might be used to hold some extra items, like series\r\n\t * segments when data item is used for axis range.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _contents: Container;\r\n\r\n\t/**\r\n\t * A text to be used as label for this data item.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _text: string;\r\n\r\n\t/**\r\n\t * Holds a physical position of the grid line associated with this data item,\r\n\t * so that it can be used when measuring distance between points, and hiding\r\n\t * some of them so they don't overlap.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * If the data item is within an existing [[AxisBreak]] this property will\r\n\t * hold a reference to that [[AxisBreak]].\r\n\t *\r\n\t * @type {AxisBreak}\r\n\t */\r\n\tprotected _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic _component!: Axis;\r\n\r\n\t/**\r\n\t * Used to distinguish from real data points and those data items that are\r\n\t * used for ranges, like `series.axisRanges` or `axis.axisRanges`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isRange: boolean;\r\n\r\n\t/**\r\n\t * relative position of data item on axis\r\n\t */\r\n\tpublic position: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Grid]] element associated with this data item.\r\n\t *\r\n\t * If there is no grid element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param {Grid}  grid  Grid element\r\n\t */\r\n\tpublic set grid(grid: Grid) {\r\n\t\tif (this._grid && this._grid != grid) {\r\n\t\t\t$array.remove(this.sprites, this._grid);\r\n\t\t\tthis._grid.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (grid) {\r\n\t\t\tif (grid.dataItem && grid.dataItem != this) {\r\n\t\t\t\t$array.remove(grid.dataItem.sprites, grid);\r\n\t\t\t\tgrid.dataItem.grid = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(grid);\r\n\t\t}\r\n\t\tthis._grid = grid;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Grid} Grid element\r\n\t */\r\n\tpublic get grid(): Grid {\r\n\t\tif (!this._grid) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet grid = component.renderer.grid.create();\r\n\t\t\t\tthis.grid = grid;\r\n\t\t\t\tthis._disposers.push(grid);\r\n\t\t\t\tgrid.axis = this.component;\r\n\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\tcomponent.renderer.grid.removeValue(grid);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._grid;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisTick]] element associated with this data item.\r\n\t *\r\n\t * If there is no tick element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param {AxisTick}  tick  Tick element\r\n\t */\r\n\tpublic set tick(tick: AxisTick) {\r\n\t\tif (this._tick && this._tick != tick) {\r\n\t\t\t$array.remove(this.sprites, this._tick);\r\n\t\t\tthis._tick.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (tick) {\r\n\t\t\tif (tick.dataItem && tick.dataItem != this) {\r\n\t\t\t\t$array.remove(tick.dataItem.sprites, tick);\r\n\t\t\t\ttick.dataItem.tick = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(tick);\r\n\t\t}\r\n\t\tthis._tick = tick;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisTick} Tick element\r\n\t */\r\n\tpublic get tick(): AxisTick {\r\n\t\tif (!this._tick) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet tick = component.renderer.ticks.create();\r\n\t\t\t\tthis.tick = tick;\r\n\t\t\t\ttick.axis = this.component;\r\n\t\t\t\tthis._disposers.push(tick);\r\n\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\tcomponent.renderer.ticks.removeValue(tick);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._tick;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisLabel]] element associated with this data item.\r\n\t *\r\n\t * If there is no label element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param {AxisLabel} label Label element\r\n\t */\r\n\tpublic set label(label: AxisLabel) {\r\n\t\tif (this._label && this._label != label) {\r\n\t\t\t$array.remove(this.sprites, this._label);\r\n\t\t\tthis._label.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (label) {\r\n\t\t\tif (label.dataItem && label.dataItem != this) {\r\n\t\t\t\t$array.remove(label.dataItem.sprites, label);\r\n\t\t\t\tlabel.dataItem.label = undefined;\r\n\t\t\t}\r\n\t\t\tthis.addSprite(label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisLabel} Label element\r\n\t */\r\n\tpublic get label(): AxisLabel {\r\n\t\tif (!this._label) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet label = component.renderer.labels.create();\r\n\t\t\t\tthis._disposers.push(label);\r\n\t\t\t\tthis.label = label;\r\n\t\t\t\tlabel.axis = this.component;\r\n\r\n\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\tcomponent.renderer.labels.removeValue(label);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisFill]] associated element with this data item.\r\n\t *\r\n\t * If there is no fill element associated with data item, a new one is\r\n\t * created and returned.\r\n\t *\r\n\t * @param {AxisFill} label Label element\r\n\t */\r\n\tpublic set axisFill(axisFill: AxisFill) {\r\n\t\tif (this._axisFill && this._axisFill != axisFill) {\r\n\t\t\t$array.remove(this.sprites, this._axisFill);\r\n\t\t\tthis._axisFill.dataItem = undefined;\r\n\t\t}\r\n\r\n\t\tif (axisFill) {\r\n\t\t\tif (axisFill.dataItem && axisFill.dataItem != this) {\r\n\t\t\t\t$array.remove(axisFill.dataItem.sprites, axisFill);\r\n\t\t\t\taxisFill.dataItem.axisFill = undefined;\r\n\t\t\t}\r\n\t\t\taxisFill.axis = this.component;\r\n\t\t\tthis.addSprite(axisFill);\r\n\t\t}\r\n\t\tthis._axisFill = axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisFill} Label element\r\n\t */\r\n\tpublic get axisFill(): AxisFill {\r\n\t\tif (!this._axisFill) {\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet axisFill = component.renderer.axisFills.create();\r\n\t\t\t\tthis.axisFill = axisFill;\r\n\t\t\t\tthis._disposers.push(axisFill);\r\n\r\n\t\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t\tcomponent.renderer.axisFills.removeValue(axisFill);\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._axisFill;\r\n\t}\r\n\r\n\t/**\r\n\t * Text to be used as data item's label.\r\n\t *\r\n\t * @param {string} text Text label\r\n\t */\r\n\tpublic set text(text: string) {\r\n\t\tthis._text = text;\r\n\t\tif (this._label) { // do not use getter, it will create unwanted instances!\r\n\t\t\tthis._label.text = text;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Text label\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\t/**\r\n\t * Data item's mask.\r\n\t *\r\n\t * @return {AxisFill} Mask\r\n\t */\r\n\tpublic get mask(): AxisFill {\r\n\t\treturn this._mask;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Container]] to place all visual elements, related to data item\r\n\t * in.\r\n\t *\r\n\t * If there is no Container, a new one is created.\r\n\t *\r\n\t * @return {Container} Contents container\r\n\t */\r\n\tpublic get contents(): Container {\r\n\t\tif (!this._contents) {\r\n\t\t\tlet contents = new Container();\r\n\t\t\tthis.addSprite(contents);\r\n\t\t\tcontents.isMeasured = false;\r\n\t\t\tthis._contents = contents;\r\n\r\n\t\t\tlet component = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tlet mask: AxisFill = component.renderer.axisFills.create();\r\n\t\t\t\tmask.disabled = false;\r\n\t\t\t\tmask.axis = component;\r\n\t\t\t\tthis.addSprite(mask);\r\n\t\t\t\tthis._mask = mask;\r\n\r\n\t\t\t\tcontents.mask = mask;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._contents;\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisBreak]] this data item falls within.\r\n\t *\r\n\t * @param {AxisBreak} axisBreak Axis break\r\n\t */\r\n\tpublic set axisBreak(axisBreak: AxisBreak) {\r\n\t\tif (this._axisBreak) {\r\n\t\t\tthis._axisBreak.dataItems.removeValue(this);\r\n\t\t}\r\n\t\tif (axisBreak) {\r\n\t\t\taxisBreak.dataItems.push(this);\r\n\t\t}\r\n\t\tthis._axisBreak = axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisBreak} Axis break\r\n\t */\r\n\tpublic get axisBreak(): AxisBreak {\r\n\t\treturn this._axisBreak;\r\n\t}\r\n\r\n\t/**\r\n\t * Re-draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.validateDataElement(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends data item's elements to the parent [[Container]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendChildren() {\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.appendDataItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Ordering function used in JSON setup.\r\n\t *\r\n\t * @param  {string}  a  Item A\r\n\t * @param  {string}  b  Item B\r\n\t * @return {Ordering}   Order\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse if (a == \"language\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"language\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (a == \"component\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"component\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data item has particular property set.\r\n\t *\r\n\t * @param  {string}   prop  Property name\r\n\t * @return {boolean}        Property set?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop == \"component\" ? true : super.hasProperty(prop);\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport enum AxisItemLocation {\r\n\tStart = 0,\r\n\tMiddle = 0.5,\r\n\tEnd = 1\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Axis]].\r\n */\r\nexport interface IAxisDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Axis]].\r\n */\r\nexport interface IAxisProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Axis start location.\r\n\t *\r\n\t * * 0 - None of the first cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the first cell is shown.\r\n\t * * 1 - Full first cell is shown.\r\n\t *\r\n\t * @param {number} value Location (0-1)\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\r\n\t/**\r\n\t * Axis end location.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param {number} value Location (0-1)\r\n\t */\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Axis]].\r\n */\r\nexport interface IAxisEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * Invoked when available axis lenght chganges, e.g. after resizing the whole\r\n\t * chart.\r\n\t */\r\n\tlengthchanged: {}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Axis]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisAdapters extends IComponentAdapters, IAxisProperties {\r\n\r\n\t/**\r\n\t * Applied to an axis label text before it's drawn.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tlabel: string\r\n\r\n\t/**\r\n\t * Applied to the tooltip text before it is shown.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tgetTooltipText: string;\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nexport class Axis<T extends AxisRenderer = AxisRenderer> extends Component {\r\n\r\n\t/**\r\n\t * Defines list of data fields.\r\n\t *\r\n\t * @type {IAxisDataFields}\r\n\t */\r\n\tpublic _dataFields: IAxisDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisProperties}\r\n\t */\r\n\tpublic _properties!: IAxisProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisAdapters;\r\n\r\n\t/**\r\n\t * Defines the type of the [[DataItem]] used in the class.\r\n\t *\r\n\t * @type {AxisDataItem}\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A list of Axis Ranges.\r\n\t */\r\n\tprotected _axisRanges: ListTemplate<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of the axis breaks.\r\n\t *\r\n\t * @type {AxisBreak}\r\n\t */\r\n\tpublic _axisBreak: AxisBreak;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisEvents}\r\n\t */\r\n\tpublic _events!: IAxisEvents;\r\n\r\n\t/**\r\n\t * A [[Label]] instance that is used for Axis title label.\r\n\t *\r\n\t * @type {Label}\r\n\t */\r\n\tpublic title: Label;\r\n\r\n\t/**\r\n\t * \"X\", \"Y\", etc.\r\n\t *\r\n\t * This is needed so that Axis knows which of the values from series' data\r\n\t * items it should use.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tpublic axisLetter: string;\r\n\r\n\t/**\r\n\t * A reference to chart the axis is for.\r\n\t *\r\n\t * @type {Chart}\r\n\t */\r\n\tprotected _chart: Chart;\r\n\r\n\t/**\r\n\t * Indicates if cusor's tooltip should be shown on this Axis.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _cursorTooltipEnabled: boolean;\r\n\r\n\t/**\r\n\t * A type for renderer used for this Axis.\r\n\t * @type {T}\r\n\t */\r\n\tprotected _renderer: T;\r\n\r\n\t/**\r\n\t * Number of Grid elements on the axis.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _gridCount: number = 10;\r\n\r\n\t/**\r\n\t * A list of [[XYSeries]] that are using this Axis.\r\n\t *\r\n\t * @type {List<XYSeries>}\r\n\t */\r\n\tprotected _series: List<XYSeries> = new List<XYSeries>();\r\n\r\n\t/**\r\n\t * Holds the length of the Axis, so that we can check if it changed after\r\n\t * other changes and we need to update layouts.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _prevLength: number;\r\n\r\n\t/**\r\n\t * A list of Axis Breaks associated with this Axis.\r\n\t */\r\n\tprotected _axisBreaks: SortedListTemplate<this[\"_axisBreak\"]>;\r\n\r\n\t/**\r\n\t * A reference to the Iterator for Axis' data items.\r\n\t */\r\n\tprotected _dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]>;\r\n\r\n\t/**\r\n\t * A name of the data field this Axis looks for its data in, e.g. \"category\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tpublic axisFieldName: string;\r\n\r\n\t// we save these values so that cursur could use them if axis line is a fill\r\n\r\n\t/**\r\n\t * [currentItemStartPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic currentItemStartPoint: IPoint;\r\n\r\n\t/**\r\n\t * [currentItemEndPoint description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic currentItemEndPoint: IPoint;\r\n\r\n\t/**\r\n\t * Holds reference to a function that accepts a DataItem and its index as\r\n\t * parameters.\r\n\t *\r\n\t * It can either return a fill opacity for a fill, or manipulate data item\r\n\t * directly, to create various highlighting scenarios.\r\n\t *\r\n\t * For example, you can set it up to highlight only weekends on a\r\n\t * [[DateAxis]].\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tpublic fillRule: (dataItem: AxisDataItem, index?: number) => any = function(dataItem: AxisDataItem, index?: number) {\r\n\t\tif (!$type.isNumber(index)) {\r\n\t\t\tindex = dataItem.index;\r\n\t\t}\r\n\t\tif (index / 2 == Math.round(index / 2)) {\r\n\t\t\tdataItem.axisFill.__disabled = true;\r\n\t\t\tdataItem.axisFill.opacity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.axisFill.opacity = 1;\r\n\t\t\tdataItem.axisFill.__disabled = false;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Full length of the axis, in pixels\r\n\t */\r\n\tpublic axisFullLength: number;\r\n\r\n\r\n\t/**\r\n\t * Ghost label is used to prevent chart shrinking/expanding when zooming or when data is invalidated. You can set custom text on it so that it would be bigger/smaller\r\n\t */\r\n\tpublic ghostLabel: AxisLabel;\r\n\r\n\t/**\r\n\t * Specifies if axis should be automatically disposed when removing from chart's axis list.\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Axis\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.cursorTooltipEnabled = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create title\r\n\t\tthis.title = new Label();\r\n\t\tthis.title.shouldClone = false;\r\n\t\tthis._disposers.push(this.title);\r\n\t\tthis.setPropertyValue(\"startLocation\", 0);\r\n\t\tthis.setPropertyValue(\"endLocation\", 1);\r\n\r\n\t\t// Data item iterator\r\n\t\tthis._dataItemsIterator = new $iter.ListIterator<this[\"_dataItem\"]>(this.dataItems, () => this.dataItems.create());\r\n\t\tthis._dataItemsIterator.createNewItems = true;\r\n\r\n\t\t// Create tooltip\r\n\t\tlet tooltip: Tooltip = new Tooltip();\r\n\t\tthis._disposers.push(tooltip);\r\n\t\ttooltip.label.padding(5, 10, 5, 10);\r\n\t\ttooltip.background.pointerLength = 5;\r\n\t\ttooltip.fitPointerToBounds = true;\r\n\t\ttooltip.filters.clear();\r\n\r\n\t\t// Set virtual parentfor the tooltip so that it can properly inheirt\r\n\t\t// formatters from the axis.\r\n\t\ttooltip.virtualParent = this;\r\n\r\n\t\t// Create background element for the tooltip\r\n\t\tlet background: PointedRectangle = <PointedRectangle>tooltip.background;\r\n\t\tbackground.cornerRadius = 0;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.stroke = background.fill;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.fillOpacity = 1;\r\n\t\ttooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n\r\n\t\tthis.tooltip = tooltip;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {AxisDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new AxisDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tsuper.invalidateLayout();\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateLayout();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates series of this axis.\r\n\t *\r\n\t */\r\n\tpublic invalidateSeries(): void {\r\n\t\t// this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\tseries.invalidateDataRange();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Override to cancel super call for data element validation.\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataElements() {\r\n\t\tif (this.ghostLabel) {\r\n\t\t\tthis.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates the number of grid items on the axis.\r\n\t */\r\n\tprotected updateGridCount() {\r\n\t\tif (this.renderer) {\r\n\t\t\tthis._gridCount = this.axisLength / this.renderer.minGridDistance;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\r\n\t\tsuper.validateLayout();\r\n\t\tthis.updateGridCount();\r\n\t\tthis.renderer.updateAxisLine();\r\n\t\tthis.renderer.updateTooltip();\r\n\t\tthis.renderer.updateBaseGridElement();\r\n\r\n\t\tif (this._prevLength != this.axisLength) {\r\n\t\t\tthis.dispatchImmediately(\"lengthchanged\");\r\n\t\t\tthis._prevLength = this.axisLength;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes Axis' renderer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic initRenderer(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a data item to the Axis.\r\n\t *\r\n\t * @param {this[\"_dataItem\"]} dataItem Data item\r\n\t */\r\n\tpublic appendDataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\tlet renderer: AxisRenderer = this.renderer;\r\n\t\tdataItem.tick.parent = renderer.gridContainer;\r\n\t\tdataItem.label.parent = renderer;\r\n\t\tdataItem.grid.parent = renderer.gridContainer;\r\n\t\tdataItem.axisFill.parent = renderer.gridContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws Axis' related items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis.axisFullLength = this.axisLength / (this.end - this.start);\r\n\t\tthis.validateAxisRanges();\r\n\t\tthis.validateBreaks();\r\n\t}\r\n\r\n\t/**\r\n\t * Redars Axis ranges.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateAxisRanges(): void {\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\tthis.appendDataItem(axisRange);\r\n\t\t\tthis.validateDataElement(axisRange);\r\n\t\t\taxisRange.grid.validate();\r\n\t\t\taxisRange.tick.validate();\r\n\t\t\taxisRange.axisFill.validate();\r\n\t\t\taxisRange.label.validate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates all axis breaks, so they are redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateBreaks(): void {\r\n\t\t$iter.each(this.axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\taxisBreak.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Associates an Axis break with this Axis, after it is inserted into\r\n\t * `axisBreaks`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<AxisBreak>[\"inserted\"]} event Event\r\n\t */\r\n\tpublic processBreak(event: IListEvents<AxisBreak>[\"inserted\"]) {\r\n\t\tlet axisBreak: AxisBreak = event.newValue;\r\n\t\taxisBreak.parent = this.renderer.breakContainer;\r\n\t\taxisBreak.axis = this;\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a [[XYSeries]] element with this Axis.\r\n\t *\r\n\t * Returns a [[Disposer]] for all events, added to Series for watching\r\n\t * changes in Axis, and vice versa.\r\n\t * @ignore\r\n\t * @param  {XYSeries}     series  Series\r\n\t * @return {IDisposer}          Event disposer\r\n\t */\r\n\tpublic registerSeries(series: XYSeries): IDisposer {\r\n\t\tthis.series.moveValue(series);\r\n\r\n\t\treturn new MultiDisposer([\r\n\t\t\tnew Disposer(() => {\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}),\r\n\r\n\t\t\tthis.events.on(\"lengthchanged\", series.invalidate, series, false)//,\r\n\r\n\t\t\t// TODO should these be disposed of ?\r\n\t\t\t//series.events.on(\"datavalidated\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"visibilitychanged\", this.processSeriesDataItems, this),\r\n\t\t\t//series.events.on(\"hidden\", this.processSeriesDataItems, this)\r\n\t\t]);\r\n\t}\r\n\r\n\t/**\r\n\t * An [[AxisRenderer]] to be used to render this Axis.\r\n\t *\r\n\t * Please note that most of the settings, related to Axis' appearance are set\r\n\t * via its renderer. Not directly on the Axis.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * axis.renderer.inside = true;\r\n\t * axis.renderer.minLabelPosition = 0.1;\r\n\t * axis.renderer.maxLabelPosition = 0.9;\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n\t * @param {T}  renderer  Renderer\r\n\t */\r\n\tpublic set renderer(renderer: T) {\r\n\t\tif (renderer != this._renderer) {\r\n\t\t\tthis._renderer = renderer;\r\n\t\t\trenderer.chart = this.chart;\r\n\t\t\trenderer.axis = this;\r\n\t\t\trenderer.parent = this;\r\n\t\t\tthis.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n\t\t\tthis.initRenderer();\r\n\r\n\t\t\tlet ghostLabel = this.renderer.labels.create();\r\n\t\t\tthis._disposers.push(ghostLabel);\r\n\t\t\tghostLabel.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n\t\t\tghostLabel.text = \"L\";\r\n\t\t\tghostLabel.parent = this.renderer;\r\n\t\t\tghostLabel.fillOpacity = 0;\r\n\t\t\tghostLabel.opacity = 0;\r\n\t\t\tghostLabel.strokeOpacity = 0;\r\n\t\t\tghostLabel.validate();\r\n\t\t\tthis.ghostLabel = ghostLabel;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {T} Renderer\r\n\t */\r\n\tpublic get renderer(): T {\r\n\t\treturn this._renderer;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to angle. (for circular axes)\r\n\t *\r\n\t * @param  {number} position Position (0-1)\r\n\t * @return {number}          Angle\r\n\t */\r\n\tpublic positionToAngle(position: number): number {\r\n\t\treturn this.renderer.positionToAngle(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts pixel coordinates to a relative position. (0-1)\r\n\t *\r\n\t * @param {IPoint}   point  Coorinates (px)\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic pointToPosition(point: IPoint): number {\r\n\t\treturn this.renderer.pointToPosition(point);\r\n\t}\r\n\r\n\t/**\r\n\t * [getAnyRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {any}     start  [description]\r\n\t * @param  {any}     end    [description]\r\n\t * @return {string}         [description]\r\n\t */\r\n\tpublic getAnyRangePath(start: any, end: any): string {\r\n\t\treturn this.renderer.getPositionRangePath(start, end);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param  {any}     value  Pisition\r\n\t * @return {number}         Position (0-1)\r\n\t */\r\n\tpublic anyToPosition(value: any): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts any positional parameter to a relative position on axis.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param  {any}     value  Pisition\r\n\t * @return {IOrientationPoint}  Orientation point\r\n\t */\r\n\tpublic anyToPoint(value: any): IOrientationPoint {\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [getPositionRangePath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number} startPosition [description]\r\n\t * @param  {number} endPosition   [description]\r\n\t * @return {string}               [description]\r\n\t */\r\n\tpublic getPositionRangePath(startPosition: number, endPosition: number): string {\r\n\t\treturn this.renderer.getPositionRangePath(startPosition, endPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * Actual axis length in pixels.\r\n\t *\r\n\t * @return {number} Axis length (px)\r\n\t */\r\n\tpublic get axisLength(): number {\r\n\t\treturn this.renderer.axisLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if axis should display a tooltip for chart's cursor.\r\n\t *\r\n\t * @param {boolean} value Display tooltip?\r\n\t */\r\n\tpublic set cursorTooltipEnabled(value: boolean) {\r\n\t\tthis._cursorTooltipEnabled = value;\r\n\r\n\t\tif (value && this.renderer) {\r\n\t\t\tthis.renderer.updateTooltip();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Display tooltip?\r\n\t */\r\n\tpublic get cursorTooltipEnabled(): boolean {\r\n\t\treturn this._cursorTooltipEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n\t *\r\n\t * @param {number} position Position (0-1)\r\n\t */\r\n\tpublic showTooltipAtPosition(position: number) {\r\n\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\r\n\t\tposition = this.toAxisPosition(position);\r\n\r\n\t\tlet renderer = this.renderer;\r\n\r\n\t\tif (tooltip && this.dataItems.length > 0) {\r\n\t\t\t//@todo: think of how to solve this better\r\n\t\t\tif (tooltip && !tooltip.parent) {\r\n\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t}\r\n\r\n\t\t\tlet tooltipLocation = renderer.tooltipLocation;\r\n\r\n\r\n\t\t\tlet startPosition: number = this.getCellStartPosition(position);\r\n\t\t\tlet endPosition: number = this.getCellEndPosition(position);\r\n\r\n\t\t\tif (this.tooltipPosition == \"fixed\") {\r\n\t\t\t\tposition = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n\t\t\t}\r\n\t\t\tposition = $math.fitToRange(position, this.start, this.end);\r\n\r\n\t\t\tlet startPoint: IPoint = renderer.positionToPoint(startPosition);\r\n\t\t\tlet endPoint: IPoint = renderer.positionToPoint(endPosition);\r\n\r\n\t\t\t// save values so cursor could use them\r\n\t\t\tthis.currentItemStartPoint = startPoint;\r\n\t\t\tthis.currentItemEndPoint = endPoint;\r\n\r\n\t\t\tif (renderer.fullWidthTooltip) {\r\n\t\t\t\ttooltip.width = endPoint.x - startPoint.x;\r\n\t\t\t\ttooltip.height = endPoint.y - startPoint.y;\r\n\t\t\t}\r\n\r\n\t\t\tlet point: IPoint = renderer.positionToPoint(position);\r\n\t\t\tlet globalPoint: IPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n\t\t\ttooltip.text = this.getTooltipText(position);\r\n\r\n\t\t\tif (tooltip.text) {\r\n\t\t\t\ttooltip.pointTo(globalPoint);\r\n\t\t\t\ttooltip.show();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.cursorTooltipEnabled) {\r\n\t\t\t\ttooltip.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position (0-1) to Axis position with zoom level and\r\n\t * inversed taken into account.\r\n\t *\r\n\t * @param  {number} position Global position (0-1)\r\n\t * @return {number}          Position within Axis (0-1)\r\n\t */\r\n\tpublic toAxisPosition(position: number): number {\r\n\t\tposition = position * (this.end - this.start);\r\n\t\tif (this.renderer.inversed) {\r\n\t\t\tposition = this.end - position;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tposition = this.start + position;\r\n\t\t}\r\n\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns text to be used for cursor's Axis tooltip.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  position  Position coordinate (px)\r\n\t * @return {string}            Label text\r\n\t */\r\n\tpublic getTooltipText(position: number): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n\t * place.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {PointerOrientation}  pointerOrientation  Pointer (stem) orientation\r\n\t * @param {IRectangle}          boundingRectangle   A rectangle for tooltip to fit within\r\n\t */\r\n\tpublic updateTooltip(pointerOrientation: PointerOrientation, boundingRectangle: IRectangle): void {\r\n\t\tlet tooltip: Tooltip = this._tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.pointerOrientation = pointerOrientation;\r\n\t\t\ttooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [roundPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number}            position  Relative position\r\n\t * @param  {AxisItemLocation}  location  Location on axis\r\n\t * @return {number}                      Rounded position\r\n\t */\r\n\tpublic roundPosition(position: number, location: AxisItemLocation): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellStartPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number} position [description]\r\n\t * @return {number}          [description]\r\n\t */\r\n\tpublic getCellStartPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * [getCellEndPosition description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {number} position [description]\r\n\t * @return {number}          [description]\r\n\t */\r\n\tpublic getCellEndPosition(position: number): number {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis ranges for this Axis.\r\n\t *\r\n\t * @return {ListTemplate} Axis ranges\r\n\t */\r\n\tpublic get axisRanges(): ListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (!this._axisRanges) {\r\n\t\t\tlet dataItem: AxisDataItem = this.createDataItem();\r\n\t\t\tthis._axisRanges = new ListTemplate<this[\"_dataItem\"]>(dataItem);\r\n\t\t\tthis._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisRanges));\r\n\t\t\tthis._disposers.push(this._axisRanges.template);\r\n\t\t}\r\n\t\treturn this._axisRanges;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates an axis range after it has been added to the axis range list.\r\n\t *\r\n\t * @param {IListEvents<AxisDataItem>[\"inserted\"]} event Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]) {\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\taxisRange.component = this;\r\n\t\taxisRange.isRange = true;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of axis breaks on this Axis.\r\n\t *\r\n\t * @return {SortedListTemplate} Axis breaks.\r\n\t */\r\n\tpublic get axisBreaks(): SortedListTemplate<this[\"_axisBreak\"]> {\r\n\t\tif (!this._axisBreaks) {\r\n\t\t\tthis._axisBreaks = new SortedListTemplate<AxisBreak>(this.createAxisBreak(), (a, b) => {\r\n\t\t\t\treturn $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n\t\t\t});\r\n\r\n\t\t\tthis._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._axisBreaks));\r\n\t\t\tthis._disposers.push(this._axisBreaks.template);\r\n\t\t}\r\n\t\treturn this._axisBreaks;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new axis break.\r\n\t *\r\n\t * @return {this[\"_axisBreak\"]} Axis break\r\n\t */\r\n\tprotected createAxisBreak(): this[\"_axisBreak\"] {\r\n\t\treturn new AxisBreak();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of Series currently associated with this Axis.\r\n\t *\r\n\t * @return {List<XYSeries>} Series\r\n\t */\r\n\tpublic get series(): List<XYSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<XYSeries>();\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes Series' single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {XYSeriesDataItem} dataItem Data item\r\n\t */\r\n\tpublic processSeriesDataItem(dataItem: XYSeriesDataItem, axisLetter?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's data items.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic postProcessSeriesDataItems(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-processes Serie's single data item.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {XYSeriesDataItem} dataItem Data item\r\n\t */\r\n\tpublic postProcessSeriesDataItem(dataItem: XYSeriesDataItem): void {\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t/**\r\n\t * Updates Axis based on all Series that might influence it.\r\n\t *\r\n\t * Called by Series after Series data is validated.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateAxisBySeries(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideUnusedDataItems(): void {\r\n\t\t// hide all unused\r\n\t\tlet dataItemsIterator: $iter.ListIterator<this[\"_dataItem\"]> = this._dataItemsIterator;\r\n\r\n\t\tdataItemsIterator.createNewItems = false;\r\n\r\n\t\t$iter.each(dataItemsIterator.iterator(), (dataItem) => {\r\n\t\t\tthis.validateDataElement(dataItem); // solves shrinking\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t});\r\n\r\n\t\tdataItemsIterator.clear();\r\n\t\tdataItemsIterator.createNewItems = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Series' data item that corresponds to specific position on Axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Series}          series    Series\r\n\t * @param  {number}          position  Position (0-1)\r\n\t * @return {XYSeriesDataItem}            Data item\r\n\t */\r\n\tpublic getSeriesDataItem(series: XYSeries, position: number): XYSeriesDataItem {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an angle that corresponds to specific position on axis.\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem}  dataItem  Data item\r\n\t * @param  {string}          key       ???\r\n\t * @param  {number}          location  Location\r\n\t * @param  {string}          stackKey  ???\r\n\t * @return {number}                    Angle\r\n\t */\r\n\tpublic getAngle(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getX description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem} dataItem [description]\r\n\t * @param  {string}         key      [description]\r\n\t * @param  {number}         location [description]\r\n\t * @param  {string}         stackKey [description]\r\n\t * @return {number}                  [description]\r\n\t */\r\n\tpublic getX(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [getY description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {XYSeriesDataItem} dataItem [description]\r\n\t * @param  {string}         key      [description]\r\n\t * @param  {number}         location [description]\r\n\t * @param  {string}         stackKey [description]\r\n\t * @return {number}                  [description]\r\n\t */\r\n\tpublic getY(dataItem: XYSeriesDataItem, key: string, location?: number, stackKey?: string): number {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Coordinates of the actual axis start.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {IPoint} Base point coordinates\r\n\t */\r\n\tpublic get basePoint(): IPoint {\r\n\t\treturn { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * [dataChangeUpdate description]\r\n\t *\r\n\t * This is a placeholder to override for extending classes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataChangeUpdate(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes axis breaks that fall between `min` and `max` (???)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @param  {number}  min  Start value\r\n\t * @param  {number}  max  End value\r\n\t * @return {number}       Spread o\r\n\t */\r\n\tprotected adjustDifference(min: number, max: number): number {\r\n\t\tlet difference: number = max - min;\r\n\t\tif ($type.isNumber(difference)) {\r\n\t\t\t$iter.eachContinue(this.axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t// breaks are sorted, we don't need go further anymore\r\n\t\t\t\t\tif (startValue > max) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (endValue >= min) {\r\n\t\t\t\t\t\tif ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n\t\t\t\t\t\t\tlet breakSize: number = axisBreak.breakSize;\r\n\r\n\t\t\t\t\t\t\tlet intersection: IRange = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n\r\n\t\t\t\t\t\t\tif (intersection) {\r\n\t\t\t\t\t\t\t\tdifference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn difference;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if specific value falls within a break.\r\n\t *\r\n\t * Returns [[AxisBreak]] the value falls into.\r\n\t *\r\n\t * @param  {number}     value  Value to check\r\n\t * @return {AxisBreak}         Axis break\r\n\t */\r\n\tprotected isInBreak(value: number): AxisBreak {\r\n\t\treturn $iter.find(this.axisBreaks.iterator(), (axisBreak) =>\r\n\t\t\tvalue >= axisBreak.adjustedStartValue &&\r\n\t\t\tvalue <= axisBreak.adjustedEndValue);\r\n\t}\r\n\r\n\t/**\r\n\t * [fixAxisBreaks description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected fixAxisBreaks(): void {\r\n\t\tlet axisBreaks: SortedListTemplate<AxisBreak> = this.axisBreaks;\r\n\t\tif (axisBreaks.length > 0) {\r\n\t\t\t// first make sure that startValue is <= end value\r\n\t\t\t// This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n\t\t\t// TODO very inefficient\r\n\t\t\t$array.each($iter.toArray(axisBreaks.iterator()), (axisBreak) => {\r\n\t\t\t\tlet startValue: number = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n\t\t\t\tlet endValue: number = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n\r\n\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\r\n\t\t\t\tthis.axisBreaks.update(axisBreak);\r\n\t\t\t});\r\n\r\n\r\n\t\t\tlet firstAxisBreak: AxisBreak = axisBreaks.first;\r\n\t\t\tlet previousEndValue: number = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n\r\n\t\t\t// process breaks\r\n\t\t\t// TODO does this need to call axisBreaks.update ?\r\n\t\t\t$iter.each(this.axisBreaks.iterator(), (axisBreak) => {\r\n\t\t\t\tlet startValue: number = axisBreak.adjustedStartValue;\r\n\t\t\t\tlet endValue: number = axisBreak.adjustedEndValue;\r\n\r\n\t\t\t\t// breaks can't overlap\r\n\t\t\t\t// if break starts before previous break ends\r\n\t\t\t\tif (startValue < previousEndValue) {\r\n\t\t\t\t\tstartValue = previousEndValue;\r\n\r\n\t\t\t\t\tif (endValue < previousEndValue) {\r\n\t\t\t\t\t\tendValue = previousEndValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxisBreak.adjustedStartValue = startValue;\r\n\t\t\t\taxisBreak.adjustedEndValue = endValue;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n\t *\r\n\t * Yes, also for category axis, this helps to avoid jumping of categories\r\n\t * while scrolling and does not do a lot of extra work as we use\r\n\t * protected `_startIndex` and `_endIndex` when working with items.\r\n\t *\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * [startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param {number} value [description]\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param {number} value [description]\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a formatted label based on position.\r\n\t *\r\n\t * Individual axis types should override this method to generate a label\r\n\t * that is relevant to axis type.\r\n\t *\r\n\t * @param  {number}  position  Relative position on axis (0-1)\r\n\t * @return {string}            Position label\r\n\t */\r\n\tpublic getPositionLabel(position: number): string {\r\n\t\treturn Math.round(position * 100) + \"%x\";\r\n\t}\r\n\r\n\t/**\r\n\t * A Chart this Axis belongs to.\r\n\t *\r\n\t * @param {Chart}  value  Chart\r\n\t */\r\n\tpublic set chart(value: Chart) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Chart} Chart\r\n\t */\r\n\tpublic get chart(): Chart {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a data item for a Series range.\r\n\t *\r\n\t * @param  {XYSeries}  series  Target Series\r\n\t * @return {this}            Range data item\r\n\t */\r\n\tpublic createSeriesRange(series: XYSeries): this[\"_dataItem\"] {\r\n\t\tlet range = this.createDataItem();\r\n\t\trange.component = this;\r\n\t\trange.axisFill.disabled = false;\r\n\t\tseries.axisRanges.push(range);\r\n\t\treturn range;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param {this} source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.copyFrom(source.renderer);\r\n\t\t}\r\n\t\tif (source.title) {\r\n\t\t\tthis.title = source.title.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t */\r\n\tprotected resetIterators(): void {\r\n\t\tthis._dataItemsIterator.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up axis ranges\r\n\t\t\tif ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n\t\t\t\tfor (let i = 0, len = config.axisRanges.length; i < len; i++) {\r\n\t\t\t\t\tlet range = config.axisRanges[i];\r\n\r\n\t\t\t\t\t// If `series` is set, we know it's a series range\r\n\t\t\t\t\tif ($type.hasValue(range[\"series\"])) {\r\n\t\t\t\t\t\tif ($type.isString(range[\"series\"])) {\r\n\t\t\t\t\t\t\tif (this.map.hasKey(range[\"series\"])) {\r\n\t\t\t\t\t\t\t\t//range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n\t\t\t\t\t\t\t\tdelete (range[\"series\"]);\r\n\t\t\t\t\t\t\t\tconfig.axisRanges[i].config = range;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - Full first cell is shown.\r\n\t * * 0.5 - Half of first cell is shown.\r\n\t * * 1 - None of the first cell is visible. (you probably don't want that)\r\n\t *\r\n\t * @param {number} value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n\t *\r\n\t * * 0 - None of the last cell is shown. (don't do that)\r\n\t * * 0.5 - Half of the last cell is shown.\r\n\t * * 1 - Full last cell is shown.\r\n\t *\r\n\t * @param {number} value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/Axis.ts","/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IValueAxisBreakProperties}\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IValueAxisBreakAdapters}\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IValueAxisBreakEvents}\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t *\r\n\t * @type {ValueAxis}\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return {number} Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return {number} Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/ValueAxisBreak.ts","/**\r\n * Resize button module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { RoundedRectangle, IRoundedRectangleProperties, IRoundedRectangleAdapters } from \"./RoundedRectangle\";\r\nimport { Orientation } from \"../defs/Orientation\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ResizeButton]].\r\n */\r\nexport interface IResizeButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ResizeButton]] for [[ResizeButton]].\r\n */\r\nexport interface IResizeButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ResizeButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResizeButtonAdapters extends IButtonAdapters, IResizeButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ResizeButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IResizeButtonProperties}\r\n\t */\r\n\tpublic _properties!: IResizeButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IResizeButtonAdapters}\r\n\t */\r\n\tpublic _adapter!: IResizeButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IResizeButtonEvents}\r\n\t */\r\n\tpublic _events!: IResizeButtonEvents;\r\n\r\n\t/**\r\n\t * Orientation of the resize direction.\r\n\t *\r\n\t * @deprecated Not used\r\n\t * @type {Orientation}\r\n\t */\r\n\tprotected _orientation: Orientation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ResizeButton\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.orientation = \"horizontal\";\r\n\t\tthis.layout = \"absolute\";\r\n\t\tthis.horizontalCenter = \"middle\";\r\n\t\tthis.verticalCenter = \"middle\";\r\n\r\n\t\tthis.draggable = true;\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\r\n\t\tthis.background.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -2, y: -6 });\r\n\t\tpath += $path.lineTo({ x: -2, y: 6 });\r\n\t\tpath += $path.moveTo({ x: 2, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 2, y: 6 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\t//icon.align = \"center\";\r\n\t\t//icon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Use for setting of direction (orientation) of the resize button.\r\n\t *\r\n\t * Available options: \"horizontal\", \"vertical\".\r\n\t *\r\n\t * @param {Orientation} value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tlet icon = this.icon;\r\n\t\tif (icon) {\r\n\t\t\tif (value == \"horizontal\") {\r\n\t\t\t\ticon.rotation = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ticon.rotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/ResizeButton.ts","/**\r\n * Module for \"Desaturate\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Desaturate\" filter\r\n */\r\nexport interface DesaturateFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Saturation. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tsaturation: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creats a \"Desaturate\" filter\r\n */\r\nexport class DesaturateFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {DesaturateFilterProperties}\r\n\t */\r\n\tpublic _properties!: DesaturateFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link DesaturateFilterProperties]\r\n\t * @type {Dictionary<DesaturateFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<DesaturateFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DesaturateFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"saturate\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 120;\r\n\t\tthis.height = 120;\r\n\r\n\t\tthis.saturation = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Saturation.\r\n\t *\r\n\t * 0 - completely desaturated.\r\n\t * 1 - fully saturated (gray).\r\n\t *\r\n\t * @param {number}  value  Saturation (0-1)\r\n\t */\r\n\tpublic set saturation(value: number) {\r\n\t\tthis.properties[\"saturation\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": value.toString() });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Saturation (0-1)\r\n\t */\r\n\tpublic get saturation(): number {\r\n\t\treturn this.properties[\"saturation\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DesaturateFilter\"] = DesaturateFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/DesaturateFilter.ts","/**\r\n * Module for \"Lighten\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Lighten\" filter\r\n */\r\nexport interface LightenFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Lightness.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlightness: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Lighten\" filter.\r\n */\r\nexport class LightenFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {LightenFilterProperties}\r\n\t */\r\n\tpublic _properties!: LightenFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link LightenFilterProperties]\r\n\t * @type {Dictionary<LightenFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<LightenFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LightenFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.lightness = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Lightness of the target colors.\r\n\t *\r\n\t * If `lightness` is a positive number, the filter will make all colors\r\n\t * lighter.\r\n\t *\r\n\t * If `lightness` is negative, colors will be darkened.\r\n\t *\r\n\t * @param {number}  value  Lightness\r\n\t */\r\n\tpublic set lightness(value: number) {\r\n\t\tthis.properties[\"lightness\"] = value;\r\n\t\tlet v = value + 1;\r\n\t\tthis.feColorMatrix.attr({ \"values\": v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Lightness\r\n\t */\r\n\tpublic get lightness(): number {\r\n\t\treturn this.properties[\"lightness\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LightenFilter\"] = LightenFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/LightenFilter.ts","/**\r\n * FlowDiagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Legend, ILegendDataFields, LegendDataItem } from \"../Legend\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { FlowDiagramNode } from \"../elements/FlowDiagramNode\";\r\nimport { FlowDiagramLink } from \"../elements/FlowDiagramLink\";\r\nimport { LinearGradientModifier } from \"../../core/rendering/fills/LinearGradientModifier\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FlowDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FlowDiagramDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {FlowDiagram}\r\n\t */\r\n\tpublic _component!: FlowDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t * @type {FlowDiagramLink}\r\n\t */\r\n\tpublic _link: FlowDiagramLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t *\r\n\t * @type {FlowDiagramNode}\r\n\t */\r\n\tpublic fromNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t *\r\n\t * @type {FlowDiagramNode}\r\n\t */\r\n\tpublic toNode: FlowDiagramNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagramDataItem\";\r\n\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Source node's name.\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set fromName(value: string) {\r\n\t\tthis.setProperty(\"fromName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} name\r\n\t */\r\n\tpublic get fromName(): string {\r\n\t\treturn this.properties.fromName;\r\n\t}\r\n\r\n\t/**\r\n\t * Destination node's name.\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set toName(value: string) {\r\n\t\tthis.setProperty(\"toName\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} name\r\n\t */\r\n\tpublic get toName(): string {\r\n\t\treturn this.properties.toName;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Node color\r\n\t *\r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.setProperty(\"color\", toColor(value));\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Link's value.\r\n\t *\r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * A visual element, representing link between the source and target nodes.\r\n\t *\r\n\t * Link's actual thickness will be determined by `value` of this link and\r\n\t * `value` of the source node.\r\n\t *\r\n\t * @readonly\r\n\t * @return {FlowDiagramLink} Link element\r\n\t */\r\n\tpublic get link(): this[\"_link\"] {\r\n\t\tif (!this._link) {\r\n\t\t\tlet link = this.component.links.create();\r\n\t\t\tthis._link = link;\r\n\r\n\t\t\tthis.addSprite(link);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.links.removeValue(link);\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._link;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramDataFields extends IChartDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Visibility of a node\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[FlowDiagram]]\r\n */\r\nexport interface IFlowDiagramProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tnodePadding?: number;\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort a\r\n\t *\r\n\t * @type {\"none\" | \"name\" | \"value\"}\r\n\t */\r\n\tsortBy?: \"none\" | \"name\" | \"value\";\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t */\r\n\tminNodeSize: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FlowDiagram]].\r\n */\r\nexport interface IFlowDiagramEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FlowDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFlowDiagramAdapters extends IChartAdapters, IFlowDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Pie chart\r\n * @see {@link IFlowDiagramEvents} for a list of available Events\r\n * @see {@link IFlowDiagramAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class FlowDiagram extends Chart {\r\n\r\n\t/**\r\n\t * A Color Set to use when applying/generating colors for each subsequent\r\n\t * node.\r\n\t *\r\n\t * @type {ColorSet}\r\n\t */\r\n\tpublic colors: ColorSet = new ColorSet();\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t *\r\n\t * @type {FlowDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: FlowDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t *\r\n\t * @type {IFlowDiagramDataFields}\r\n\t */\r\n\tpublic _dataFields: IFlowDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFlowDiagramProperties}\r\n\t */\r\n\tpublic _properties!: IFlowDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {SeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: IFlowDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFlowDiagramEvents}\r\n\t */\r\n\tpublic _events!: IFlowDiagramEvents;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node:FlowDiagramNode;\r\n\r\n\r\n\t/**\r\n\t * A list of chart's FlowDiagram nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tprotected _nodes: DictionaryTemplate<string, this[\"_node\"]>;\r\n\r\n\r\n\t/**\r\n\t */\r\n\tpublic _link:FlowDiagramLink;\r\n\r\n\t/**\r\n\t * A list of FlowDiagram links connecting nodes.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * A container that holds all of the link elements.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic linksContainer: Container;\r\n\r\n\t/**\r\n\t * A container that holds all of the node elements.\r\n\t * @type {Container}\r\n\t */\r\n\tpublic nodesContainer: Container;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t * @type {Iterator}\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, FlowDiagramNode]>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"FlowDiagram\";\r\n\t\tthis.nodePadding = 20;\r\n\t\tthis.sortBy = \"none\";\r\n\t\tthis.sequencedInterpolation = true;\r\n\r\n\t\tthis.colors.step = 2;\r\n\t\tthis.minNodeSize = 0.02;\r\n\r\n\t\tlet linksContainer = this.chartContainer.createChild(Container);\r\n\t\tlinksContainer.shouldClone = false;\r\n\t\tlinksContainer.layout = \"none\";\r\n\t\tlinksContainer.isMeasured = false;\r\n\t\tthis.linksContainer = linksContainer;\r\n\r\n\t\tlet nodesContainer = this.chartContainer.createChild(Container);\r\n\t\tnodesContainer.shouldClone = false;\r\n\t\tnodesContainer.layout = \"none\";\r\n\t\tnodesContainer.isMeasured = false;\r\n\t\tthis.nodesContainer = nodesContainer;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tthis.dataItem.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif(this._parseDataFrom == 0){\r\n\t\t\tthis.nodes.clear();\r\n\t\t}\r\n\r\n\t\tthis.sortNodes();\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\tlet sum = 0;\r\n\t\tlet count = 0;\r\n\t\tlet low: number;\r\n\t\tlet high: number;\r\n\r\n\t\t// build blocks\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet fromName = dataItem.fromName;\r\n\r\n\t\t\tif (fromName) {\r\n\t\t\t\tlet node = this.nodes.getKey(fromName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(fromName);\r\n\t\t\t\t\tnode.name = fromName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.fromNode = node;\r\n\t\t\t\tdataItem.fromNode.outgoingDataItems.push(dataItem);\r\n\t\t\t}\r\n\t\t\tlet toName = dataItem.toName;\r\n\t\t\tif (toName) {\r\n\t\t\t\tlet node = this.nodes.getKey(toName);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tnode = this.nodes.create(toName);\r\n\t\t\t\t\tnode.name = toName;\r\n\t\t\t\t\tnode.chart = this;\r\n\t\t\t\t\tnode.dataItem = dataItem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.toNode = node;\r\n\t\t\t\tdataItem.toNode.incomingDataItems.push(dataItem);\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\tlet strokeModifier = new LinearGradientModifier();\r\n\t\t\t\tstrokeModifier.opacities = [0, 1];\r\n\t\t\t\tdataItem.link.strokeModifier = strokeModifier;\r\n\t\t\t}\r\n\r\n\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\tlet fillModifier = new LinearGradientModifier();\r\n\t\t\t\tfillModifier.opacities = [1, 0];\r\n\t\t\t\tdataItem.link.strokeModifier = fillModifier;\r\n\t\t\t}\r\n\r\n\t\t\tlet value = dataItem.value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\tsum += value;\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif (low > value || !$type.isNumber(low)) {\r\n\t\t\t\t\tlow = value;\r\n\t\t\t\t}\r\n\t\t\t\tif (high < value || !$type.isNumber(high)) {\r\n\t\t\t\t\thigh = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet key = \"value\";\r\n\r\n\t\tthis.dataItem.setCalculatedValue(key, high, \"high\");\r\n\t\tthis.dataItem.setCalculatedValue(key, low, \"low\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum, \"sum\");\r\n\t\tthis.dataItem.setCalculatedValue(key, sum / count, \"average\");\r\n\t\tthis.dataItem.setCalculatedValue(key, count, \"count\");\r\n\r\n\r\n\t\t$iter.each(this.nodes.iterator(), (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\r\n\t\t\tif (node.fill instanceof Color) {\r\n\t\t\t\tnode.color = node.fill;\r\n\t\t\t}\r\n\r\n\t\t\tif (node.color == undefined) {\r\n\t\t\t\tnode.color = this.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tif (node.dataItem.color != undefined) {\r\n\t\t\t\tnode.color = node.dataItem.color;\r\n\t\t\t}\r\n\r\n\t\t\tif(!node.dataItem.visible){\r\n\t\t\t\tnode.hide(0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.sortNodes();\r\n\t\tthis.feedLegend();\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\t\r\n\tpublic handleDataItemWorkingValueChange(dataItem?:this[\"_dataItem\"]): void {\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sorts nodes by either their values or names, based on `sortBy` setting.\r\n\t */\r\n\tprotected sortNodes() {\r\n\t\tif (this.sortBy == \"name\") {\r\n\t\t\tthis._sorted = this.nodes.sortedIterator();\r\n\t\t}\r\n\t\telse if (this.sortBy == \"value\") {\r\n\t\t\tthis._sorted = $iter.sort(this.nodes.iterator(), (x, y) => $order.reverse($number.order(x[1].total, y[1].total)));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._sorted = this.nodes.iterator();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates a cummulative value of the node.\r\n\t *\r\n\t * A node's value is determined by summing values of all of the incoming\r\n\t * links or all of the outgoing links, whichever results in bigger number.\r\n\t *\r\n\t * @param {FlowDiagramNode}  node  Node value\r\n\t */\r\n\tprotected getNodeValue(node: FlowDiagramNode) {\r\n\r\n\t\t// todo: totalIncomming totalOutgoing, total\r\n\r\n\t\tlet incomingTotal = 0;\r\n\t\tlet outgoingTotal = 0;\r\n\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif($type.isNumber(value)){\r\n\t\t\t\tincomingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem: FlowDiagramDataItem) => {\r\n\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\tif($type.isNumber(value)){\r\n\t\t\t\toutgoingTotal += value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tnode.total = incomingTotal + outgoingTotal;\r\n\t\tnode.totalIncoming = incomingTotal;\r\n\t\tnode.totalOutgoing = outgoingTotal;\r\n\t};\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Flow diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return {this} Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FlowDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Padding for node square in pixels.\r\n\t *\r\n\t * Padding will add extra space around node's name label.\r\n\t *\r\n\t * @param {number} value Padding (px)\r\n\t */\r\n\tpublic set nodePadding(value: number) {\r\n\t\tthis.setPropertyValue(\"nodePadding\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Padding (px)\r\n\t */\r\n\tpublic get nodePadding(): number {\r\n\t\treturn this.getPropertyValue(\"nodePadding\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sort nodes by \"name\" or \"value\" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.\r\n\t * @default \"none\"\r\n\t * @param {\"none\" | \"name\" | \"value\"}  value  Node sorting\r\n\t */\r\n\tpublic set sortBy(value: \"none\" | \"name\" | \"value\") {\r\n\t\tthis.setPropertyValue(\"sortBy\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {\"none\" | name\" | \"value\"} Node sorting\r\n\t */\r\n\tpublic get sortBy(): \"none\" | \"name\" | \"value\" {\r\n\t\treturn this.getPropertyValue(\"sortBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sometimes nodes can get very small if their value is little. With this setting you\r\n\t * can set min size of a node (this is relative value from the total size of all nodes)\r\n\t * @default 0.02\r\n\t * @param {\"none\" | \"name\" | \"value\"}  value  Node sorting\r\n\t */\r\n\tpublic set minNodeSize(value: number) {\r\n\t\tthis.setPropertyValue(\"minNodeSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {number} min node size\r\n\t */\r\n\tpublic get minNodeSize(): number {\r\n\t\treturn this.getPropertyValue(\"minNodeSize\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of chart's nodes.\r\n\t *\r\n\t * @param {DictionaryTemplate<string, this[\"_node\"]>}\r\n\t */\r\n\tpublic get nodes():DictionaryTemplate<string, this[\"_node\"]>{\r\n\t\tif(!this._nodes){\r\n\t\t\tthis._nodes = new DictionaryTemplate<string, this[\"_node\"]>(this.createNode());\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode():this[\"_node\"]{\r\n\t\tlet node = new FlowDiagramNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's links.\r\n\t *\r\n\t * @param {ListTemplate<this[\"_link\"]>}\r\n\t */\r\n\tpublic get links():ListTemplate<this[\"_link\"]>{\r\n\t\tif(!this._links){\r\n\t\t\tthis._links = new ListTemplate<this[\"_link\"]>(this.createLink());\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink():this[\"_link\"]{\r\n\t\tlet link = new FlowDiagramLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.nodes.each((key, node)=>{\r\n\t\t\t\tlegendData.push(node);\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t\tlegend.itemContainers.template.propertyFields.disabled = \"hiddenInLegend\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData(){\r\n\t\tsuper.disposeData();\r\n\t\tthis.nodes.clear();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FlowDiagram\"] = FlowDiagram;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/types/FlowDiagram.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColorModifier } from \"./ColorModifier\";\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify linear gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class LinearGradientModifier extends GradientModifier {\r\n\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t *\r\n\t * @type {LinearGradient}\r\n\t */\r\n\tpublic gradient: LinearGradient;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LinearGradientModifier\";\r\n\t\tthis.gradient = new LinearGradient();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.gradient = source.gradient.clone();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradientModifier\"] = LinearGradientModifier;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/LinearGradientModifier.ts","/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column3D]].\r\n */\r\nexport interface IColumn3DProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Column3D]].\r\n */\r\nexport interface IColumn3DEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumn3DAdapters extends IColumnAdapters, IColumn3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column3D extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IColumn3DProperties}\r\n\t */\r\n\tpublic _properties!: IColumn3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IColumn3DAdapters}\r\n\t */\r\n\tpublic _adapter!: IColumn3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IColumn3DEvents}\r\n\t */\r\n\tpublic _events!: IColumn3DEvents;\r\n\r\n\r\n\t/**\r\n\t * column3D element\r\n\t * @type {Slice}\r\n\t */\r\n\tpublic column3D: Rectangle3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column3D\";\r\n\t}\r\n\r\n\tcreateAssets() {\r\n\t\tthis.column3D = this.createChild(Rectangle3D);\r\n\t\tthis.column3D.shouldClone = false;\r\n\t\tthis.column3D.strokeOpacity = 0;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.column3D;\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.width = this.pixelWidth;\r\n\t\t\tthis.column3D.height = this.pixelHeight;\r\n\t\t}\r\n\t}\r\n\r\n\tcopyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.copyFrom(source.column3D);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/Column3D.ts","/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { LegendDataItem, LegendSettings } from \"../../charts/Legend\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Dictionary, IDictionaryEvents, DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { SlicedChart } from \"../types/SlicedChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { Color, color } from \"../../core/utils/Color\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t *\r\n\t * @type {FunnelSlice}\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * A reference to a label element.\r\n\t * @ignore Exclude from docs\r\n\t * @type {Label}\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a tick element.\r\n\t * @ignore Exclude from docs\r\n\t * @type {FunnelTick}\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {FunnelSeries}\r\n\t */\r\n\tpublic _component!: FunnelSeries;\r\n\r\n\t/**\r\n\t * Defines a type of elements linking slices.\r\n\t * \r\n\t * @type {FunnelSlice}\r\n\t */\r\n\tpublic _sliceLink: FunnelSlice;\r\n\r\n\t/**\r\n\t * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n\t *\r\n\t * @readonly\r\n\t * @return {FunnelSlice} Slice element\r\n\t */\r\n\tpublic get sliceLink(): this[\"_sliceLink\"] {\r\n\t\tif (!this._sliceLink) {\r\n\t\t\tlet sliceLink = this.component.sliceLinks.create();\r\n\t\t\tthis._sliceLink = sliceLink;\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\t\t\tsliceLink.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tthis.component.sliceLinks.removeValue(sliceLink);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(sliceLink);\r\n\t\t\tsliceLink.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._sliceLink;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesDataFields extends IPercentSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative width of the slice bottom. See description of `bottomRatio`\r\n\t * property for full description.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tbottomRatio?: number;\r\n\r\n\t/**\r\n\t * Orientation of series\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @type {Orientation}\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSeriesAdapters extends IPercentSeriesAdapters, IFunnelSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @type {IFunnelSeriesDataFields}\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFunnelSeriesProperties}\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFunnelSeriesAdapters}\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {SlicedChart}\r\n\t */\r\n\tpublic _chart: SlicedChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @type {IFunnelSeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: IFunnelSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFunnelSeriesProperties}\r\n\t */\r\n\tpublic _properties!: IFunnelSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFunnelSeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: IFunnelSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFunnelSeriesEvents}\r\n\t */\r\n\tpublic _events!: IFunnelSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t *\r\n\t * @type {FunnelSeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: FunnelSeriesDataItem;\r\n\r\n\r\n\tprotected _nextY: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t *\r\n\t * @type {ListTemplate<Slice>}\r\n\t */\r\n\tprotected _sliceLinks: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * Holds sum of values for all slices\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tprotected _total: number;\r\n\r\n\t/**\r\n\t * Holds number of slices.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\tprotected _count: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FunnelSeries\";\r\n\t\tthis.orientation = \"vertical\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.slicesContainer.width = percent(100);\r\n\t\tthis.slicesContainer.height = percent(100);\r\n\r\n\t\tthis.bottomRatio = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelSlice]] element.\r\n\t * \r\n\t * @return {FunnelSlice} Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new FunnelSlice();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelTick]] element.\r\n\t * \r\n\t * @return {FunnelTick} Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new FunnelTick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return {FunnelSeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FunnelSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param  {FunnelSlice} slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.expandDistance = 0.2;\r\n\t}\r\n\r\n\t/**\r\n\t * [initLabel description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {this[\"_label\"]} label [description]\r\n\t */\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tsuper.initLabel(label);\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.isMeasured = true;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t * \r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\r\n\t\tlet slicesContainer = this.slicesContainer;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tlet labelTemplate = this.labels.template;\r\n\t\tlabelsContainer.layout = \"absolute\";\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlabelTemplate.interactionsEnabled = true;\r\n\t\t\tslicesContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.margin(10, 10, 10, 10);\r\n\t\t\tthis.ticks.template.disabled = false;\r\n\t\t\tlabelTemplate.horizontalCenter = \"left\";\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tthis.layout = \"vertical\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.layout = \"horizontal\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.layout = \"absolute\";\r\n\t\t\tlabelTemplate.interactionsEnabled = false;\r\n\t\t\tslicesContainer.isMeasured = false;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t\tthis.ticks.template.disabled = true;\r\n\t\t\tlabelTemplate.horizontalCenter = \"middle\";\r\n\t\t}\r\n\r\n\t\tlet total = 0;\r\n\t\tlet count = 0;\r\n\t\tthis.dataItems.each((dItem) => {\r\n\t\t\tif ($type.hasValue(dItem.value)) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttotal += dItem.getWorkingValue(\"value\") / dItem.value;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._total = 1 / count * total;\r\n\t\tthis._count = count;\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tthis.arrangeLabels();\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param  {FunnelSeriesDataItem}  dataItem  [description]\r\n\t * @return {number}                          [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\r\n\t\t\tif (!nextItem.visible || nextItem.isHiding) {\r\n\t\t\t\treturn this.getNextValue(nextItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [formDataElement description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected formDataElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {FunnelSeriesDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet percentValue = dataItem.values.value.percent;\r\n\t\tif ($type.hasValue(dataItem.value)) {\r\n\t\t\t// FunnelSlice\r\n\t\t\tlet slice = dataItem.slice;\r\n\t\t\tslice.orientation = this.orientation;\r\n\r\n\t\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\t\tsliceLink.orientation = this.orientation;\r\n\r\n\t\t\tlet tick = dataItem.tick;\r\n\t\t\tlet label = dataItem.label;\r\n\r\n\t\t\ttick.slice = slice;\r\n\t\t\ttick.label = label;\r\n\r\n\t\t\tthis.decorateSlice(dataItem);\r\n\r\n\t\t\tsliceLink.fill = slice.fill;\r\n\r\n\t\t\tif (dataItem.index == this.dataItems.length - 1) {\r\n\t\t\t\tsliceLink.disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\t\tsuper.validateDataElement(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {this[\"_dataItem\"]} dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet nextValue = this.getNextValue(dataItem);\r\n\t\tlet workingValue = dataItem.getWorkingValue(\"value\");\r\n\t\tlet bottomRatio = this.bottomRatio;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\r\n\t\t\tlet linkHeight = sliceLink.pixelHeight * workingValue / dataItem.value;\r\n\r\n\t\t\tmaxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\tslice.height = $math.max(0, maxHeight / this._count * workingValue / dataItem.value * 1 / this._total - linkHeight);\r\n\r\n\t\t\tslice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = slice.x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = 0;\r\n\t\t\t}\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight;\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = slice.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linkWidth = sliceLink.pixelWidth * workingValue / dataItem.value;\r\n\r\n\t\t\tmaxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\t\t\tslice.width = maxWidth / this._count * workingValue / dataItem.value * 1 / this._total - linkWidth;\r\n\t\t\tslice.y = maxHeight / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = slice.y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth;\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\r\n\t\t\tsliceLink.y = slice.y;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrangeLabels description]\r\n\t * \r\n\t * @todo Description\r\n\t */\r\n\tprotected arrangeLabels(): void {\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlet count = this.labels.length;\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tlet lastLabel = this.labels.getIndex(count - 1);\r\n\r\n\t\t\t\tlet lastY = lastLabel.pixelY;\r\n\t\t\t\tlet lastX = lastLabel.pixelX;\r\n\r\n\t\t\t\tif (this.labels.length > 1) {\r\n\t\t\t\t\tfor (let i = count - 2; i >= 0; i--) {\r\n\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\tif (label.visible) {\r\n\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\tif (label.pixelY + label.measuredHeight > lastY) {\r\n\t\t\t\t\t\t\t\t\tlabel.y = lastY - label.measuredHeight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (label.pixelX + label.measuredWidth > lastX) {\r\n\t\t\t\t\t\t\t\t\tlabel.x = lastX - label.measuredWidth;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlastY = label.pixelY;\r\n\t\t\t\t\t\t\tlastX = label.pixelX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlastY = 0;\r\n\t\t\t\t\tlastX = 0;\r\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\tif (label.visible) {\r\n\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\tif (label.pixelY < lastY) {\r\n\t\t\t\t\t\t\t\t\tlabel.y = lastY;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (label.pixelX < lastX) {\r\n\t\t\t\t\t\t\t\t\tlabel.x = lastX;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlastY += label.measuredHeight;\r\n\t\t\t\t\t\t\tlastX += label.measuredWidth;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Bullet}  bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: FunnelSlice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tbullet.x = slice.measuredWidth * locationX;\r\n\t\tbullet.y = slice.measuredHeight * locationY;\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param {Orientation} value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t\tif (value == \"vertical\") {\r\n\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\tthis.ticks.template.locationY = 0.5;\r\n\t\t\t\tthis.labels.template.rotation = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.ticks.template.locationX = 0.5;\r\n\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\tthis.labels.template.rotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Orientation} Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's bottom will change in relation to slices top AND\r\n\t * next slices top.\r\n\t *\r\n\t * Basically it's a relative value (0-1) that indicates bottom width\r\n\t * position between current slice's top width and the top withd of the next\r\n\t * one.\r\n\t *\r\n\t * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n\t * slice with).\r\n\t *\r\n\t * `0` (default) will mean that bottom will be the same as top, resulting in\r\n\t * a prefectly square slice.\r\n\t *\r\n\t * From the data-viz standpoint `0` is a correct setting, since area of the\r\n\t * slices will depict their value correctly.\r\n\t *\r\n\t * `1` will mean that slice will become trapezoid with its bottom matching\r\n\t * width of the next slice.\r\n\t *\r\n\t * `0.5` will make bottom width be in the middle of width of current slice\r\n\t * and the next slice.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set bottomRatio(value: number) {\r\n\t\tif (this.setPropertyValue(\"bottomRatio\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get bottomRatio(): number {\r\n\t\treturn this.getPropertyValue(\"bottomRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of elements linking each actual slice.\r\n\t *\r\n\t * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n\t * so they have all the same configuration options.\r\n\t *\r\n\t * You can use `template` of this link, to specify how links will look.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"FunnelSeries\",\r\n\t *      // ...\r\n\t *      \"sliceLinks\": {\r\n\t *        \"fillOpacity\": 0.5\r\n\t *      }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * \r\n\t * @return {ListTemplate} Funnel links\r\n\t */\r\n\tpublic get sliceLinks(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._sliceLinks) {\r\n\t\t\tlet sliceLink = new FunnelSlice();\r\n\t\t\tsliceLink.applyOnClones = true;\r\n\t\t\tsliceLink.fillOpacity = 0.5;\r\n\t\t\tsliceLink.expandDistance = - 0.3;\r\n\t\t\tsliceLink.hiddenState.properties.opacity = 0;\r\n\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\r\n\t\t\tthis._sliceLinks = new ListTemplate(sliceLink);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._sliceLinks));\r\n\t\t}\r\n\t\treturn this._sliceLinks;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param  {number}     duration  Duration of reveal animation (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tlet delay: number = 0;\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.show(interpolationDuration, delay, [\"value\"]);\r\n\t\t});\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param  {number}     duration  Duration of hiding animation (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[] = [\"value\"];\r\n\t\tlet value: number = 0;\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.hide(interpolationDuration, delay, value, fields);\r\n\t\t});\r\n\r\n\t\tlet animation: Animation = super.hide(duration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/series/FunnelSeries.ts","/**\r\n * Module that defines everything related to building Funnel slices.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Width of the top edge of the slice.\r\n\t * \r\n\t * @type {number | Percent}\r\n\t */\r\n\ttopWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * Width of the bottom edge of the slice.\r\n\t * \r\n\t * @type {number | Percent}\r\n\t */\r\n\tbottomWidth?: number | Percent;\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\texpandDistance?: number;\r\n\r\n\t/**\r\n\t * Orientation of the slice.\r\n\t * \r\n\t * @type {Orientation}\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSlice]].\r\n */\r\nexport interface IFunnelSliceEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSlice]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSliceAdapters extends IContainerAdapters, IFunnelSliceProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to create [[FunnelSlice]] elements.\r\n *\r\n * @see {@link IFunnelSliceEvents} for a list of available events\r\n * @see {@link IFunnelSliceAdapters} for a list of available adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSlice extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFunnelSliceProperties}\r\n\t */\r\n\tpublic _properties!: IFunnelSliceProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFunnelSliceAdapters}\r\n\t */\r\n\tpublic _adapter!: IFunnelSliceAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFunnelSliceEvents}\r\n\t */\r\n\tpublic _events!: IFunnelSliceEvents;\r\n\r\n\t/**\r\n\t * Main slice element.\r\n\t *\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic slice: Sprite;\r\n\r\n\t/**\r\n\t * Am anchor point the slice tick line is pointing to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @readonly \r\n\t */\r\n\tpublic tickPoint: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.slice = this.createChild(Sprite);\r\n\t\tthis.slice.setElement(this.paper.add(\"path\"));\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tthis.orientation = \"vertical\";\r\n\t\tthis.bottomWidth = percent(100);\r\n\t\tthis.topWidth = percent(100);\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tthis.expandDistance = 0;\r\n\r\n\t\tthis.className = \"FunnelSlice\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tlet ed = this.expandDistance;\r\n\r\n\t\tlet path = \"\";\r\n\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };\r\n\t\t\tlet cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };\r\n\r\n\t\t\tlet qp1 = $path.lineTo(br);\r\n\t\t\tlet qp2 = \"\";\r\n\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(br, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tl, cpl);\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tpath = $path.moveTo(tl) + $path.lineTo(tr) + qp1 + $path.lineTo(bl) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };\r\n\t\t\tlet cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };\r\n\t\t\t\r\n\t\t\tlet qp1 = $path.lineTo(bt);\r\n\t\t\tlet qp2 = \"\"\r\n\t\t\tif(ed != 0){\r\n\t\t\t\tqp1 = $path.quadraticCurveTo(bt, cpr);\r\n\t\t\t\tqp2 = $path.quadraticCurveTo(tb, cpl);\r\n\t\t\t}\r\n\r\n\t\t\tpath = $path.moveTo(tb) + $path.lineTo(tt) + qp1 + $path.lineTo(bb) + qp2;\r\n\r\n\t\t\tthis.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };\r\n\t\t}\r\n\r\n\t\tthis.slice.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\r\n\tgetPoint(locationX:number, locationY:number):IPoint{\r\n\r\n\t\tlet pt = this.pixelPaddingTop;\r\n\t\tlet pb = this.pixelPaddingBottom;\r\n\t\tlet pr = this.pixelPaddingRight;\r\n\t\tlet pl = this.pixelPaddingLeft;\r\n\r\n\t\tlet w = this.pixelWidth - pr - pl;\r\n\t\tlet h = this.pixelHeight - pt - pb;\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, w);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, w);\r\n\r\n\t\t\tlet tl = { x: (w - tw) / 2 + pl, y: pt };\r\n\t\t\tlet tr = { x: (w + tw) / 2 + pl, y: pt };\r\n\r\n\t\t\tlet br = { x: (w + bw) / 2 + pl, y: pt + h };\r\n\t\t\tlet bl = { x: (w - bw) / 2 + pl, y: pt + h };\r\n\r\n\t\t\tlet mlx = tl.x + (bl.x - tl.x) * locationY;\r\n\t\t\tlet mrx = tr.x + (br.x - tr.x) * locationY;\r\n\r\n\t\t\treturn { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tw = $utils.relativeToValue(this.topWidth, h);\r\n\t\t\tlet bw = $utils.relativeToValue(this.bottomWidth, h);\r\n\r\n\t\t\tlet tt = { x: pl, y: (h - tw) / 2 + pt };\r\n\t\t\tlet tb = { x: pl, y: (h + tw) / 2 + pt };\r\n\r\n\t\t\tlet bt = { x: pl + w, y: (h - bw) / 2 + pt };\r\n\t\t\tlet bb = { x: pl + w, y: (h + bw) / 2 + pt };\r\n\r\n\t\t\tlet mty = tt.y + (bt.y - tt.y) * locationX;\r\n\t\t\tlet mby = tb.y + (bb.y - tb.y) * locationX;\r\n\r\n\t\t\treturn { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Bottom width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param {number}  value  Bottom width\r\n\t */\r\n\tpublic set bottomWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"bottomWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} bottom width\r\n\t */\r\n\tpublic get bottomWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top width in pixels or percent.\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set dimensions if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param {number}  value  Top width\r\n\t */\r\n\tpublic set topWidth(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"topWidth\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Top width\r\n\t */\r\n\tpublic get topWidth(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slice: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * IMPORTANT: this setting might be used to set orintation if you use slice\r\n\t * as a standalone element. If it's a part of [[FunnelSeries]] this setting\r\n\t * becomes read-only as it will be automatically reset by series.\r\n\t *\r\n\t * @param {Orientation}  value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Orientation} Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative distance slice's sides should be bent to. It's relative to the\r\n\t * height of the slice.\r\n\t *\r\n\t * Zero (default) will mean the sides will be perfectly straight.\r\n\t *\r\n\t * Positive value will make them bend outwards, resulting in \"puffed\" slices.\r\n\t *\r\n\t * Negative values will make them bend inwards.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set expandDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"expandDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} expandDistance\r\n\t */\r\n\tpublic get expandDistance(): number {\r\n\t\treturn this.getPropertyValue(\"expandDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param {Sprite} source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source :this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.slice) {\r\n\t\t\tthis.slice.copyFrom(source.slice);\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSlice\"] = FunnelSlice;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/FunnelSlice.ts","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_dom-create.js\n// module id = 180\n// module chunks = 302","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks-define.js\n// module id = 181\n// module chunks = 302","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_shared-key.js\n// module id = 182\n// module chunks = 302","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_enum-bug-keys.js\n// module id = 183\n// module chunks = 302","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_html.js\n// module id = 184\n// module chunks = 302","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_set-proto.js\n// module id = 185\n// module chunks = 302","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-ws.js\n// module id = 186\n// module chunks = 302","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_inherit-if-required.js\n// module id = 187\n// module chunks = 302","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-repeat.js\n// module id = 188\n// module chunks = 302","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-sign.js\n// module id = 189\n// module chunks = 302","// 20.2.2.14 Math.expm1(x)\nvar $expm1 = Math.expm1;\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;\n} : $expm1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-expm1.js\n// module id = 190\n// module chunks = 302","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-at.js\n// module id = 191\n// module chunks = 302","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-define.js\n// module id = 192\n// module chunks = 302","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-create.js\n// module id = 193\n// module chunks = 302","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-context.js\n// module id = 194\n// module chunks = 302","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_fails-is-regexp.js\n// module id = 195\n// module chunks = 302","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-array-iter.js\n// module id = 196\n// module chunks = 302","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_create-property.js\n// module id = 197\n// module chunks = 302","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/core.get-iterator-method.js\n// module id = 198\n// module chunks = 302","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-species-create.js\n// module id = 199\n// module chunks = 302","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-fill.js\n// module id = 200\n// module chunks = 302","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.iterator.js\n// module id = 201\n// module chunks = 302","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_task.js\n// module id = 202\n// module chunks = 302","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_microtask.js\n// module id = 203\n// module chunks = 302","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_new-promise-capability.js\n// module id = 204\n// module chunks = 302","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_typed-buffer.js\n// module id = 205\n// module chunks = 302","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_user-agent.js\n// module id = 206\n// module chunks = 302","/**\r\n * Preloader module.\r\n *\r\n * Preloader is a progress indicator.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Slice } from \"./Slice\";\r\nimport { Label } from \"./Label\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Preloader]].\r\n */\r\nexport interface IPreloaderProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Current preload progress. (0-1)\r\n\t *\r\n\t * * 0 - 0%\r\n\t * * 0.5 - 50%\r\n\t * * 1 - 100%\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprogress?: number;\r\n\r\n\t/**\r\n\t * Delay display of preloader by X milliseconds.\r\n\t *\r\n\t * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n\t * set to 1) before `delay` ms, the loader is never shown.\r\n\t *\r\n\t * This is used to avoid brief flashing of the preload for very quick loads.\r\n\t *\r\n\t * @default 1000\r\n\t * @type {number}\r\n\t */\r\n\tdelay?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Preloader]].\r\n */\r\nexport interface IPreloaderEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Preloader]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPreloaderAdapters extends IContainerAdapters, IPreloaderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IPreloaderEvents} for a list of available events\r\n * @see {@link IPreloaderAdapters} for a list of available Adapters\r\n */\r\nexport class Preloader extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPreloaderProperties}\r\n\t */\r\n\tpublic _properties!: IPreloaderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPreloaderAdapters}\r\n\t */\r\n\tpublic _adapter!: IPreloaderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPreloaderEvents}\r\n\t */\r\n\tpublic _events!: IPreloaderEvents;\r\n\r\n\t/**\r\n\t * A [[Slice]] element that indicates load progress.\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t *\r\n\t * @type {Slice}\r\n\t */\r\n\tpublic progressSlice: Slice;\r\n\r\n\t/**\r\n\t * A [[Slice]] element that shows the full ring. (background for the\r\n\t * `progressSlice`)\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t *\r\n\t * @type {Slice}\r\n\t */\r\n\tpublic backgroundSlice: Slice;\r\n\r\n\t/**\r\n\t * Label that displays progress in percent.\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t *\r\n\t * @type {Label}\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Logs the timestamp of when the loader was initiated. It will be used to\r\n\t * delay showing of the Preloader so for quick operations it does not even\r\n\t * appear on screen.\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _started: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Preloader\";\r\n\r\n\t\t// Set dimensions\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create main container\r\n\t\tlet sliceContainer: Container = this.createChild(Container);\r\n\t\tsliceContainer.shouldClone = false;\r\n\r\n\t\t// Add background (100%) slice\r\n\t\tlet backgroundSlice: Slice = sliceContainer.createChild(Slice);\r\n\t\tbackgroundSlice.shouldClone = false;\r\n\t\tbackgroundSlice.radius = 53;\r\n\t\tbackgroundSlice.arc = 360;\r\n\t\tbackgroundSlice.fill = interfaceColors.getFor(\"fill\");\r\n\t\tbackgroundSlice.fillOpacity = 0.8;\r\n\t\tbackgroundSlice.innerRadius = 42;\r\n\t\tbackgroundSlice.isMeasured = false;\r\n\t\tthis.backgroundSlice = backgroundSlice;\r\n\r\n\t\t// Add progress slice\r\n\t\tlet progressSlice: Slice = sliceContainer.createChild(Slice);\r\n\t\tprogressSlice.shouldClone = false;\r\n\t\tprogressSlice.radius = 50;\r\n\t\tprogressSlice.innerRadius = 45;\r\n\t\tprogressSlice.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tprogressSlice.fillOpacity = 0.2;\r\n\t\tprogressSlice.isMeasured = false;\r\n\t\tthis.progressSlice = progressSlice;\r\n\r\n\t\t// Add text label element\r\n\t\tlet label: Label = sliceContainer.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.isMeasured = false;\r\n\t\tlabel.fill = interfaceColors.getFor(\"text\");\r\n\t\tlabel.align = \"center\";\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.fillOpacity = 0.4;\r\n\t\tthis.label = label;\r\n\r\n\t\t// Set defaults\r\n\t\tthis.background.opacity = 1;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\t\tthis.contentAlign = \"center\";\r\n\t\tthis.contentValign = \"middle\";\r\n\t\tthis.delay = 500;\r\n\r\n\t\t// Create hidden state\r\n\t\tlet hiddenState = this.states.create(\"hidden\");\r\n\t\thiddenState.properties.opacity = 0;\r\n\r\n\t\t// Hide by default\r\n\t\tthis.visible = false;\r\n\t\tthis.hide(0);\r\n\t\tthis.__disabled = true;\r\n\r\n\t\t// Make it disposable\r\n\t\t// @todo Maybe it's enough to just dispose `sliceContainer`?\r\n\t\tthis._disposers.push(this.backgroundSlice);\r\n\t\tthis._disposers.push(this.progressSlice);\r\n\t\tthis._disposers.push(this.label);\r\n\t\tthis._disposers.push(sliceContainer);\r\n\t}\r\n\r\n\t/**\r\n\t * Current preload progress. (0-1)\r\n\t *\r\n\t * * 0 - 0%\r\n\t * * 0.5 - 50%\r\n\t * * 1 - 100%\r\n\t *\r\n\t * Setting this to a value less than 1, will automatically reveal the\r\n\t * preloader, while setting it to 1 (100%) will hide it.\r\n\t *\r\n\t * @param {number} value Progress (0-1)\r\n\t */\r\n\tpublic set progress(value: number) {\r\n\t\tthis.__disabled = false;\r\n\r\n\t\tthis.setPropertyValue(\"progress\", value);\r\n\r\n\t\t/*if (!this.visible && value == 1) {\r\n\t\t\treturn;\r\n\t\t}*/\r\n\r\n\t\tthis.progressSlice.arc = 360 * value;\r\n\r\n\t\tif (this.label) {\r\n\t\t\tthis.label.text = Math.round(value * 100) + \"%\";\r\n\t\t}\r\n\r\n\t\tif (value >= 1) {\r\n\r\n\t\t\t// Cancel the timeout\r\n\t\t\tif (this._started) {\r\n\t\t\t\tthis._started = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// TODO remove closure ?\r\n\t\t\tregistry.events.once(\"enterframe\", () => {\r\n\t\t\t\tlet animation = this.hide();\r\n\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\tanimation.events.once(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.interactionsEnabled = false;\r\n\t\t\tthis.setPropertyValue(\"progress\", 0);\r\n\t\t}\r\n\t\telse if (value > 0) {\r\n\t\t\tif (this.delay) {\r\n\t\t\t\tif (!this._started) {\r\n\t\t\t\t\tthis._started = new Date().getTime();\r\n\t\t\t\t}\r\n\t\t\t\telse if ((this._started + this.delay) >= new Date().getTime()) {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t\tthis.show();\r\n\t\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t\tthis.show();\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Progress (0-1)\r\n\t */\r\n\tpublic get progress(): number {\r\n\t\treturn this.getPropertyValue(\"progress\");\r\n\t}\r\n\r\n\t/**\r\n\t * Delay display of preloader by X milliseconds.\r\n\t *\r\n\t * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n\t * set to 1) before `delay` ms, the loader is never shown.\r\n\t *\r\n\t * This is used to avoid brief flashing of the preload for very quick loads.\r\n\t *\r\n\t * @default 1000\r\n\t * @param {number}  value  Delay (ms)\r\n\t */\r\n\tpublic set delay(value: number) {\r\n\t\tthis.setPropertyValue(\"delay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Delay (ms)\r\n\t */\r\n\tpublic get delay(): number {\r\n\t\treturn this.getPropertyValue(\"delay\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Preloader.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\nimport { List } from \"../utils/List\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates an SVG `<g>` element.\r\n *\r\n * SVG groups are used for elements that need more elements just one.\r\n *\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g} About `<g>` element\r\n */\r\nexport class Group extends AMElement {\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {string} elementName Element type (should be \"g\")\r\n\t */\r\n\tconstructor(elementName: string) {\r\n\t\tsuper(elementName);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to group.\r\n\t *\r\n\t * This will manipulate DOM. `element` will be physically moved into group.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic add(element: AMElement): void {\r\n\t\tif (element) {\t\t\t\r\n\t\t\tthis.node.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to group.\r\n\t *\r\n\t * This will manipulate DOM. `element` will be physically moved into group.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic addToBack(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tlet first = this.node.childNodes[0];\r\n\t\t\tif (first) {\r\n\t\t\t\tthis.node.insertBefore(element.node, first);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.node.appendChild(element.node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the `element` from group.\r\n\t *\r\n\t * Please note that this will not dispose the element itself, it will just\r\n\t * remove it from the group.\r\n\t *\r\n\t * @param {AMElement}  element  Element\r\n\t */\r\n\tpublic removeElement(element: AMElement): void {\r\n\t\t// todo: not sure about the speed, need to investigate, maybe it's faster to check if node is a child\r\n\t\tif (element) {\r\n\t\t\ttry {\r\n\t\t\t\tif (element.node && element.node.parentNode == this.node) {\r\n\t\t\t\t\tthis.node.removeChild(element.node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Content of the group element.\r\n\t *\r\n\t * Can be used to add a lot of proprietary SVG markup into group.\r\n\t *\r\n\t * @param {string}  value  SVG markup\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tthis.node.innerHTML = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} SVG markup\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.node.innerHTML;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all children from the group.\r\n\t */\r\n\tpublic removeChildren(): void {\r\n\t\tif (this.node.childNodes) {\r\n\t\t\twhile (this.node.childNodes.length > 0) {\r\n\t\t\t\tlet childNode = this.node.firstChild;\r\n\t\t\t\tif (childNode && childNode.parentNode) {\r\n\t\t\t\t\tchildNode.parentNode.removeChild(childNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/rendering/Group.ts","/**\r\n * \r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Color, color } from \"../utils/Color\"\r\n\r\n/**\r\n * Defines a class that holds default properties for new SVG elements\r\n */\r\nexport class SVGDefaults {\r\n\tstatic opacity: number = 1;\r\n\tstatic strokeOpacity: number = 1;\r\n\tstatic strokeWidth: number = 1;\r\n\tstatic fillOpacity: number = 1;\r\n\tstatic fill: Color = color(\"#000000\");\r\n\tstatic stroke: Color = color(\"#000000\");\r\n\tstatic focusable: boolean = undefined;\r\n\tstatic tabindex: number = 0;\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/defs/SVGDefaults.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { EventListener, TargetedEventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./interaction/InteractionObject\";\r\nimport { IPointer } from \"./interaction/Pointer\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"./utils/Disposer\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $object from \"./utils/Object\";\r\n\r\n/**\r\n * ============================================================================\r\n * RE-EXPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport { AMEvent };\r\n\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @type {TargetedEventDispatcher}\r\n * @important\r\n */\r\nexport class SpriteEventDispatcher<T extends AMEvent<Sprite, ISpriteEvents>> extends TargetedEventDispatcher<Sprite, T> {\r\n\r\n\t/**\r\n\t * [_interactionEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tprivate _interactionEvents = new Dictionary<keyof IInteractionObjectEvents, CounterDisposer>();\r\n\r\n\t/**\r\n\t * [_dispatchSpriteEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {[type]}\r\n\t */\r\n\tprivate _dispatchSpriteEvent<Key extends keyof IInteractionObjectEvents>(ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]): void {\r\n\t\tif (this.target.disabled || this.target.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// TODO remove this <any> later\r\n\t\tif (this.target.events.isEnabled(ev.type)) {\r\n\t\t\tlet imev: AMEvent<Sprite, ISpriteEvents>[Key] = <any>$object.merge(ev, {\r\n\t\t\t\ttarget: this.target\r\n\t\t\t});\r\n\t\t\tthis.target.events.dispatchImmediately(imev.type, imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_dispatchSpritePointEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {[type]}\r\n\t */\r\n\tprivate _dispatchSpritePointEvent<Key extends \"hit\" | \"track\">(ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]): void {\r\n\t\tif (this.target.disabled || this.target.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// TODO remove this <any> later\r\n\t\tif (this.target.events.isEnabled(ev.type)) {\r\n\r\n\t\t\tlet imev: AMEvent<Sprite, ISpriteEvents>[Key] = <any>$object.merge(ev, {\r\n\t\t\t\ttarget: this.target,\r\n\t\t\t\tspritePoint: $utils.documentPointToSprite(ev.point, this.target),\r\n\t\t\t\tsvgPoint: this.target.getSvgPoint(ev.point)\r\n\t\t\t});\r\n\t\t\tthis.target.events.dispatchImmediately(imev.type, imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_addInteractionObjectEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {[type]}\r\n\t */\r\n\tprivate _addInteractionObjectEvent<C, Key extends keyof IInteractionObjectEvents>(type: Key, callback: (this: C, ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]) => void, context: C): IDisposer {\r\n\t\tconst counter = this._interactionEvents.insertKeyIfEmpty(type, () => {\r\n\t\t\tconst disposer = this.target.interactions.events.on(type, callback, context);\r\n\r\n\t\t\treturn new CounterDisposer(() => {\r\n\t\t\t\tthis._interactionEvents.removeKey(type);\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn counter.increment();\r\n\t}\r\n\r\n\t/**\r\n\t * [_on description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {[type]}\r\n\t */\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n\r\n\t\tconst disposers = [info.disposer];\r\n\r\n\t\t/**\r\n\t\t * Catching Sprite-related events, converting them to [[SpriteEvent]] and\r\n\t\t * triggering them on sprite\r\n\t\t */\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"track\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tdisposers.push(this._addInteractionObjectEvent(<any>type, this._dispatchSpritePointEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\t//case \"hold\":\r\n\t\t\tcase \"up\":\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\tcase \"over\":\r\n\t\t\tcase \"out\":\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\tcase \"resize\":\r\n\t\t\t//case \"rotate\":\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\tcase \"toggled\":\r\n\t\t\t\tdisposers.push(this._addInteractionObjectEvent(<any>type, this._dispatchSpriteEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set functional properties based on events. For example if we add a\r\n\t\t * \"drag\" event handler, we want to make the Sprite draggable, even if we\r\n\t\t * don't explicitly set \"draggable\"\r\n\t\t */\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\tcase \"up\":\r\n\t\t\t\tthis.target.clickable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"toggled\":\r\n\t\t\t\tthis.target.togglable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\t\tthis.target.draggable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"track\":\r\n\t\t\t\tthis.target.trackable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resize\":\r\n\t\t\t\tthis.target.resizable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\t\tthis.target.swipeable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tthis.target.wheelable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"over\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\tcase \"out\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\t\tthis.target.focusable = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tinfo.disposer = new MultiDisposer(disposers);\r\n\r\n\t\treturn info;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains point information.\r\n *\r\n * @type {Object}\r\n */\r\nexport type SpritePointEvent = {\r\n\t/**\r\n\t * Event point in global (document) coordinates.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpoint: IPoint;\r\n\r\n\t/**\r\n\t * Event point in local Sprite coordinates.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tspritePoint: IPoint;\r\n\r\n\t/**\r\n\t * Event point with chart (svg) coodinates.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tsvgPoint: IPoint;\r\n};\r\n\r\n\r\n/**\r\n * Defines a type of event that has a related Pointer.\r\n */\r\nexport type SpritePointerEvent = {\r\n\r\n\t/**\r\n\t * Coordinates of the primary cursor position.\r\n\t *\r\n\t * @type {Pointer}\r\n\t */\r\n\tpointer: IPointer;\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains mouse or touch\r\n * event.\r\n *\r\n * @type {Object}\r\n */\r\nexport type SpriteMouseTouchEvent = {\r\n\r\n\t/**\r\n\t * Original mouse/touch event.\r\n\t *\r\n\t * @type {MouseEvent | TouchEvent}\r\n\t */\r\n\tevent: MouseEvent | TouchEvent;\r\n\r\n};\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains coordinate shift\r\n * information, such as drag events.\r\n *\r\n * @type {Object}\r\n */\r\nexport type SpriteShiftEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tshift: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines available events available for [[Sprite]].\r\n */\r\nexport interface ISpriteEvents extends IInteractionObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when Sprite completes transition to a [[SpriteState]].\r\n\t */\r\n\ttransitionended: {};\r\n\r\n\t/**\r\n\t * Invoked when size of the Sprite changes.\r\n\t */\r\n\tsizechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when maximum available size of the Sprite changes, i.e. when the\r\n\t * size of parent container changes.\r\n\t */\r\n\tmaxsizechanged: {\r\n\t\tpreviousWidth:number,\r\n\t\tpreviousHeight:number\r\n\t};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\ttransformed: {\r\n\r\n\t\t/**\r\n\t\t * [string description]\r\n\t\t * @type {string}\r\n\t\t * @todo Needs description\r\n\t\t */\r\n\t\tdummyData?: string;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when position of the [[Sprite]] changes.\r\n\t */\r\n\tpositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is initialized.\r\n\t */\r\n\tinited: {};\r\n\r\n\r\n\t/**\r\n\t * Invoked before [[Sprite]] is validated.\r\n\t *\r\n\t * @todo Description (check)\r\n\t */\r\n\tbeforevalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is validated. (on init or after update)\r\n\t *\r\n\t * @todo Description (check)\r\n\t */\r\n\tvalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when visibility of the [[Sprite]] changes. (from visible to hidden,\r\n\t * and vice versa)\r\n\t */\r\n\tvisibilitychanged: {\r\n\t\tvisible: boolean;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when hidden [[Sprite]] is shown.\r\n\t */\r\n\tshown: {};\r\n\r\n\t/**\r\n\t * Invoked when visible [[Sprite]] is hidden.\r\n\t */\r\n\thidden: {};\r\n\r\n\t/**\r\n\t * Invoked when zIndex of a sprite is changed\r\n\t */\r\n\tzIndexChanged: {};\r\n\r\n\t/**\r\n\t * Invoked when property of the [[Sprite]] changes.\r\n\t */\r\n\tpropertychanged: {\r\n\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tproperty: string;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the global scale changed, meaning that scale of [[Sprite]]\r\n\t * or any of its ascendants changed.\r\n\t */\r\n\tglobalscalechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is clicked or touched.\r\n\t */\r\n\thit: SpritePointEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is clicked or touched twice in rapid succession.\r\n\t */\r\n\tdoublehit: SpritePointEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when pointer (mouse cursor or touch point) moves over `trackable`\r\n\t * [[Sprite]].\r\n\t */\r\n\ttrack: SpritePointEvent & SpritePointerEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel while over the [[Sprite]].\r\n\t */\r\n\twheel: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel upwards while over the [[Sprite]].\r\n\t */\r\n\twheelup: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel downwards while over the [[Sprite]].\r\n\t */\r\n\twheeldown: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel leftwards while over the [[Sprite]].\r\n\t */\r\n\twheelleft: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel rightwards while over the [[Sprite]].\r\n\t */\r\n\twheelright: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `togglable` Sprite is being toggled on and off. (its\r\n\t * `isActive` property is being changed)\r\n\t */\r\n\ttoggled: {};\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../src/.internal/core/SpriteEvents.ts","/**\r\n * Interaction Object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IInteractionObjectEvents, InteractionObjectEventDispatcher } from \"./InteractionObjectEvents\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../utils/Dictionary\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IPointer } from \"./Pointer\";\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions } from \"./InteractionOptions\";\r\nimport { InteractionKeyboardObject } from \"./InteractionKeyboardObject\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { Inertia, InertiaTypes } from \"./Inertia\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * Re-exports\r\n */\r\nexport { IInteractionObjectEvents, InteractionObjectEventDispatcher };\r\n\r\n/**\r\n * Interaction object represents an object that is subject for any kind of\r\n * interaction with it with any input devices: mouse, touch or keyboard.\r\n *\r\n * Any DOM element can be wrapped into an Internaction object which in turn\r\n * enables attaching various interaction events to it, such as: hit, drag,\r\n * swipe, etc.\r\n *\r\n * To create an [[InteractionObject]] out of a [[Sprite]], use:\r\n * `interaction.getInteractionFromSprite(sprite: Sprite)`\r\n *\r\n * To create an [[InteractionObject]] out of a a regular element:\r\n * `interaction.getInteraction(element: HTMLElement)`\r\n */\r\nexport class InteractionObject extends BaseObjectEvents {\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IInteractionObjectEvents}\r\n\t */\r\n\tpublic _events!: IInteractionObjectEvents;\r\n\r\n\t/**\r\n\t * An [[EventDispatcher]] instance which holds events for this object\r\n\t */\r\n\tpublic events: InteractionObjectEventDispatcher<AMEvent<this, this[\"_events\"]>> = new InteractionObjectEventDispatcher(this);\r\n\r\n\t/**\r\n\t * Collection of Disposers for various events. (so that those get disposed\r\n\t * when the whole InteractionObject is disposed)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, IDisposer>}\r\n\t */\r\n\tpublic eventDisposers: Dictionary<string, IDisposer> = new Dictionary<string, IDisposer>();\r\n\r\n\t/**\r\n\t * A [[Dictionary]] that holds temporarily replaced original style values for\r\n\t * HTML element, so that they can be restored when the functionality that\r\n\t * replaced them is done.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, string>}\r\n\t */\r\n\tpublic replacedStyles: Dictionary<string, string> = new Dictionary<string, string>();\r\n\r\n\tprotected _clickable: boolean = false;\r\n\tprotected _hoverable: boolean = false;\r\n\tprotected _trackable: boolean = false;\r\n\tprotected _draggable: boolean = false;\r\n\tprotected _swipeable: boolean = false;\r\n\tprotected _resizable: boolean = false;\r\n\tprotected _wheelable: boolean = false;\r\n\tprotected _inert: boolean = false;\r\n\tprotected _focusable: $type.Optional<boolean>;\r\n\tprotected _tabindex: Optional<number>;\r\n\r\n\t/**\r\n\t * Element to attach events to.\r\n\t *\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tprivate _element: HTMLElement | SVGSVGElement;\r\n\r\n\t/**\r\n\t * Original coordinates for the [[InteractionObject]]. (before application\r\n\t * of the drag)\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic _originalPosition: Optional<IPoint>;\r\n\r\n\t/**\r\n\t * Original angle for the [[InteractionObject]]. (before rotation started)\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tpublic _originalAngle: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Original scale of the [[InteractionObject]]. (before resizing started)\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tpublic _originalScale: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * List of pointers current over element.\r\n\t *\r\n\t * @type {Optional<List<IPointer>>}\r\n\t */\r\n\tprotected _overPointers: $type.Optional<List<IPointer>>;\r\n\r\n\t/**\r\n\t * List of pointer currently pressing down on element.\r\n\t *\r\n\t * @type {Optional<List<IPointer>>}\r\n\t */\r\n\tprotected _downPointers: $type.Optional<List<IPointer>>;\r\n\r\n\t/**\r\n\t * Is element currently hovered?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isHover: boolean = false;\r\n\r\n\t/**\r\n\t * Is the element hovered by touch pointer?\r\n\t * \r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isHoverByTouch: boolean = false;\r\n\r\n\t/**\r\n\t * Has element got any pointers currently pressing down on it?\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isDown: boolean = false;\r\n\r\n\t/**\r\n\t * Does element have focus?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _isFocused: boolean = false;\r\n\r\n\t/**\r\n\t * A timestamp of the last hit.\r\n\t *\r\n\t * Used to calculate double-hit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tpublic lastHit: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * A pointer element that was used for the last hit.\r\n\t *\r\n\t * We need to keep this since only the same pointer can generate doublehit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo still needed?\r\n\t * @type {Optional<IPointer>}\r\n\t */\r\n\tpublic lastHitPointer: $type.Optional<IPointer>;\r\n\r\n\t/**\r\n\t * Indicates whether object has delayed events initiated by touch.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic hasDelayedOut?: boolean;\r\n\r\n\t/**\r\n\t * Options used for inertia functionality.\r\n\t *\r\n\t * @type {Dictionary<InertiaTypes, IInertiaOptions>}\r\n\t */\r\n\tpublic inertiaOptions: Dictionary<InertiaTypes, IInertiaOptions> = new Dictionary<InertiaTypes, IInertiaOptions>();\r\n\r\n\t/**\r\n\t * A collection of different inertia types, currently playing out.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<InertiaTypes, Inertia>}\r\n\t */\r\n\tpublic inertias: Dictionary<InertiaTypes, Inertia> = new Dictionary<InertiaTypes, Inertia>();\r\n\r\n\t/**\r\n\t * Click/tap options.\r\n\t *\r\n\t * @type {IHitOptions}\r\n\t */\r\n\tpublic hitOptions: IHitOptions = {};\r\n\r\n\t/**\r\n\t * Hover options.\r\n\t *\r\n\t * @type {IHoverOptions}\r\n\t */\r\n\tpublic hoverOptions: IHoverOptions = {};\r\n\r\n\t/**\r\n\t * Swipe gesture options.\r\n\t *\r\n\t * @type {ISwipeOptions}\r\n\t */\r\n\tpublic swipeOptions: ISwipeOptions = {};\r\n\r\n\t/**\r\n\t * Keyboard options.\r\n\t *\r\n\t * @type {IKeyboarOptions}\r\n\t */\r\n\tpublic keyboardOptions: IKeyboardOptions = {};\r\n\r\n\t/**\r\n\t * Cursor options.\r\n\t *\r\n\t * @type {ICursorOptions}\r\n\t */\r\n\tpublic cursorOptions: ICursorOptions = {\r\n\t\t\"defaultStyle\": [{\r\n\t\t\t\"property\": \"cursor\",\r\n\t\t\t\"value\": \"default\"\r\n\t\t}]\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(element: HTMLElement | SVGSVGElement) {\r\n\t\tsuper();\r\n\t\tthis._element = element;\r\n\t\tthis.className = \"InteractionObject\";\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.inertias));\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.eventDisposers));\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if this element is currently hovered.\r\n\t *\r\n\t * @param {boolean} value Hovered?\r\n\t */\r\n\tpublic set isHover(value: boolean) {\r\n\t\tif (this.isHover != value) {\r\n\t\t\tthis._isHover = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().overObjects.moveValue(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetInteraction().overObjects.removeValue(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this element is currently hovered.\r\n\t *\r\n\t * @return {boolean} Hovered?\r\n\t */\r\n\tpublic get isHover(): boolean {\r\n\t\treturn this._isHover;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if this element is currently hovered.\r\n\t *\r\n\t * @param {boolean} value Hovered?\r\n\t */\r\n\tpublic set isHoverByTouch(value: boolean) {\r\n\t\tif (this.isHoverByTouch != value) {\r\n\t\t\tthis._isHoverByTouch = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this element is currently hovered.\r\n\t *\r\n\t * @return {boolean} Hovered?\r\n\t */\r\n\tpublic get isHoverByTouch(): boolean {\r\n\t\treturn this._isHoverByTouch;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of pointers currently over the element.\r\n\t *\r\n\t * @see {@link Pointer}\r\n\t * @return {List<IPointer>} List if pointers currently hovering the element\r\n\t */\r\n\tpublic get overPointers(): List<IPointer> {\r\n\t\tif (!this._overPointers) {\r\n\t\t\tthis._overPointers = new List<IPointer>();\r\n\t\t}\r\n\t\treturn this._overPointers;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if this element has currently any pointers pressing on it.\r\n\t *\r\n\t * @param {boolean} value Has down pointers?\r\n\t */\r\n\tpublic set isDown(value: boolean) {\r\n\t\tif (this.isDown != value) {\r\n\t\t\tthis._isDown = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().downObjects.moveValue(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetInteraction().downObjects.removeValue(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this element has currently any pointers pressing on it.\r\n\t *\r\n\t * @return {boolean} Has down pointers?\r\n\t */\r\n\tpublic get isDown(): boolean {\r\n\t\treturn this._isDown;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of pointers currently pressing down on this element.\r\n\t *\r\n\t * @see {@link Pointer}\r\n\t * @return {List<IPointer>} List of down pointers\r\n\t */\r\n\tpublic get downPointers(): List<IPointer> {\r\n\t\tif (!this._downPointers) {\r\n\t\t\tthis._downPointers = new List<IPointer>();\r\n\t\t}\r\n\t\treturn this._downPointers;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if this element is currently focused.\r\n\t *\r\n\t * @param {boolean} value Focused?\r\n\t */\r\n\tpublic set isFocused(value: boolean) {\r\n\t\tif (this.isFocused != value) {\r\n\t\t\tthis._isFocused = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().focusedObject = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetInteraction().focusedObject = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this element is currently focused.\r\n\t *\r\n\t * @return {boolean} Focused?\r\n\t */\r\n\tpublic get isFocused(): boolean {\r\n\t\treturn this._isFocused;\r\n\t}\r\n\r\n\t/**\r\n\t * Is element clickable? Clickable elements will generate \"hit\" events when\r\n\t * clicked or tapped.\r\n\t *\r\n\t * @param {boolean} value Clickable?\r\n\t */\r\n\tpublic set clickable(value: boolean) {\r\n\t\tif (this._clickable !== value) {\r\n\t\t\tthis._clickable = value;\r\n\t\t\tgetInteraction().processClickable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set as clickable.\r\n\t *\r\n\t * @return {boolean} Clickable?\r\n\t */\r\n\tpublic get clickable(): boolean {\r\n\t\treturn this._clickable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if element should generate hover events.\r\n\t *\r\n\t * @param {boolean} value Hoverable?\r\n\t */\r\n\tpublic set hoverable(value: boolean) {\r\n\t\tif (this._hoverable !== value) {\r\n\t\t\tthis._hoverable = value;\r\n\t\t\tgetInteraction().processHoverable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set to generate hover events.\r\n\t *\r\n\t * @return {boolean} Hoverable?\r\n\t */\r\n\tpublic get hoverable(): boolean {\r\n\t\treturn this._hoverable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if pointer movement over element should be tracked.\r\n\t *\r\n\t * @param {boolean} value Track pointer?\r\n\t */\r\n\tpublic set trackable(value: boolean) {\r\n\t\tif (this._trackable !== value) {\r\n\t\t\tthis._trackable = value;\r\n\t\t\tgetInteraction().processTrackable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is set to track pointer movement over it.\r\n\t *\r\n\t * @return {boolean} Track pointer?\r\n\t */\r\n\tpublic get trackable(): boolean {\r\n\t\treturn this._trackable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if element can be dragged. (moved)\r\n\t *\r\n\t * @param {boolean} value Draggable?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable !== value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tgetInteraction().processDraggable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set as draggable.\r\n\t *\r\n\t * @return {boolean} Draggable?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this._draggable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets whether element should react to swipe gesture.\r\n\t *\r\n\t * @param {boolean} value Track swipe?\r\n\t */\r\n\tpublic set swipeable(value: boolean) {\r\n\t\tif (this._swipeable !== value) {\r\n\t\t\tthis._swipeable = value;\r\n\t\t\tgetInteraction().processSwipeable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set to track swipe gesture.\r\n\t *\r\n\t * @return {boolean} Track swipe?\r\n\t */\r\n\tpublic get swipeable(): boolean {\r\n\t\treturn this._swipeable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if element can be resized.\r\n\t *\r\n\t * @param {boolean} value Resizeable?\r\n\t */\r\n\tpublic set resizable(value: boolean) {\r\n\t\tif (this._resizable !== value) {\r\n\t\t\tthis._resizable = value;\r\n\t\t\tgetInteraction().processResizable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set as resizeable.\r\n\t *\r\n\t * @return {boolean} Resizeble?\r\n\t */\r\n\tpublic get resizable(): boolean {\r\n\t\treturn this._resizable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether track moouse wheel rotation over element.\r\n\t *\r\n\t * @param {boolean} value Track wheel?\r\n\t */\r\n\tpublic set wheelable(value: boolean) {\r\n\t\tif (this._wheelable !== value) {\r\n\t\t\tthis._wheelable = value;\r\n\t\t\tgetInteraction().processWheelable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Track wheel?\r\n\t */\r\n\tpublic get wheelable(): boolean {\r\n\t\treturn this._wheelable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if element is inert, i.e. if it should carry movement momentum after\r\n\t * it is dragged and released.\r\n\t *\r\n\t * @param {boolean} value Inert?\r\n\t */\r\n\tpublic set inert(value: boolean) {\r\n\t\tif (this._inert !== value) {\r\n\t\t\tthis._inert = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set as inert.\r\n\t *\r\n\t * @return {boolean} Inert?\r\n\t */\r\n\tpublic get inert(): boolean {\r\n\t\treturn this._inert;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if element can gain focus.\r\n\t *\r\n\t * @param {Optional<boolean>} value Focusable?\r\n\t */\r\n\tpublic set focusable(value: $type.Optional<boolean>) {\r\n\t\tif (this._focusable !== value) {\r\n\t\t\tthis._focusable = value;\r\n\t\t\tif (this._focusable && this.tabindex == -1) {\r\n\t\t\t\tthis._tabindex = 1;\r\n\t\t\t}\r\n\t\t\tgetInteraction().processFocusable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if element is currently set as focusable.\r\n\t *\r\n\t * @return {Optional<boolean>} Focusable?\r\n\t */\r\n\tpublic get focusable(): $type.Optional<boolean> {\r\n\t\treturn this._focusable;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets element's tab index.\r\n\t *\r\n\t * @param {number} value Tab index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tif (this._tabindex !== value) {\r\n\t\t\tthis._tabindex = value;\r\n\t\t\tif (value > -1) {\r\n\t\t\t\tthis.focusable = true;\r\n\t\t\t}\r\n\t\t\tgetInteraction().processFocusable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current tab index.\r\n\t *\r\n\t * @return {number} Tab index\r\n\t */\r\n\tpublic get tabindex(): number {\r\n\t\treturn $type.getValueDefault(this._tabindex, -1 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets DOM element associated with this element\r\n\t * @param {HTMLElement | SVGSVGElement} element Element\r\n\t */\r\n\tpublic set element(element: HTMLElement | SVGSVGElement) {\r\n\t\tthis._element = element;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns DOM element associated with this element\r\n\t * @return {HTMLElement | SVGSVGElement} Element\r\n\t */\r\n\tpublic get element(): HTMLElement | SVGSVGElement {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets element's original position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Optional<IPoint>} value Position\r\n\t */\r\n\tpublic set originalPosition(value: Optional<IPoint>) {\r\n\t\tthis._originalPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's original position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Optional<IPoint>} Position.\r\n\t */\r\n\tpublic get originalPosition(): Optional<IPoint> {\r\n\t\treturn this._originalPosition || { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Sets element's original scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Scale\r\n\t */\r\n\tpublic set originalScale(value: number) {\r\n\t\tif (this._originalScale !== value) {\r\n\t\t\tthis._originalScale = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's original scale.\r\n\t *\r\n\t * @return {number} Scale\r\n\t */\r\n\tpublic get originalScale(): number {\r\n\t\treturn $type.getValueDefault(this._originalScale, 1 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets element's original angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number} value Angle\r\n\t */\r\n\tpublic set originalAngle(value: number) {\r\n\t\tif (this._originalAngle !== value) {\r\n\t\t\tthis._originalAngle = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's original angle.\r\n\t *\r\n\t * @return {number} Angle\r\n\t */\r\n\tpublic get originalAngle(): number {\r\n\t\treturn $type.getValueDefault(this._originalAngle, 0 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related assets from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param {this} source Source object\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.inertiaOptions = source.inertiaOptions;\r\n\t\tthis.hitOptions = source.hitOptions;\r\n\t\tthis.hoverOptions = source.hoverOptions;\r\n\t\tthis.swipeOptions = source.swipeOptions;\r\n\t\tthis.keyboardOptions = source.keyboardOptions;\r\n\t\tthis.cursorOptions = source.cursorOptions;\r\n\t\tgetInteraction().applyCursorOverStyle(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic setEventDisposer(key: string, value: boolean, f: () => IDisposer): void {\r\n\t\tconst disposer = this.eventDisposers.getKey(key);\r\n\r\n\t\tif (value) {\r\n\t\t\tif (disposer == null) {\r\n\t\t\t\tthis.eventDisposers.setKey(key, f());\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tthis.eventDisposers.removeKey(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\t// Remove from all interaction registries\r\n\t\tconst interaction = getInteraction();\r\n\t\tinteraction.overObjects.removeValue(this);\r\n\t\tinteraction.downObjects.removeValue(this);\r\n\t\tinteraction.trackedObjects.removeValue(this);\r\n\t\tinteraction.transformedObjects.removeValue(this);\r\n\r\n\t\tif (interaction.focusedObject === this) {\r\n\t\t\tinteraction.focusedObject = undefined;\r\n\t\t}\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/InteractionObject.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IBaseObjectEvents } from \"../Base\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IPointer } from \"../interaction/Pointer\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { EventListener, TargetedEventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a type of event that has a single point of reference.\r\n */\r\nexport type PointEvent = {\r\n\r\n\t/**\r\n\t * Event point in global (document) coordinates.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpoint: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that has a related Pointer.\r\n */\r\nexport type PointerEvent = {\r\n\r\n\t/**\r\n\t * Coordinates of the primary cursor position.\r\n\t *\r\n\t * @type {Pointer}\r\n\t */\r\n\tpointer: IPointer;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that represents some kind of shift in coordinates,\r\n * like draging an element.\r\n */\r\nexport type ShiftEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tshift: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that represents change in angle, like rotation.\r\n */\r\nexport type AngleEvent = {\r\n\r\n\t/**\r\n\t * Angle to apply to the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tangle: number;\r\n};\r\n\r\n\r\n/**\r\n * Defines a type of event that represents change in element's scale, like\r\n * resize.\r\n */\r\nexport type ScaleEvent = {\r\n\r\n\t/**\r\n\t * Scale to apply to the element.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tscale: number;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that contains event center coordindates.\r\n */\r\nexport type CenterEvent = {\r\n\r\n\t/**\r\n\t * A center point for specific operation.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tcenter?: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that can be triggered either by touch device or mouse.\r\n */\r\nexport type MouseTouchEvent = {\r\n\r\n\t/**\r\n\t * An original mouse or touch event.\r\n\t *\r\n\t * @type {MouseEvent | TouchEvent}\r\n\t */\r\n\tevent: MouseEvent | TouchEvent;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that was not generated by keyboard directly, but rather\r\n * was simulated to trigger require keyboard-related handlers.\r\n */\r\nexport type SimulatedKeyboardEvent = {\r\n\r\n\t/**\r\n\t * A keyboard event.\r\n\t *\r\n\t * @type {KeyboardEvent}\r\n\t */\r\n\tevent: KeyboardEvent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[InteractionObject]].\r\n */\r\nexport interface IInteractionObjectEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when object is clicked or touched.\r\n\t */\r\n\thit: PointEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when object is clicked or touched twice in rapid succession.\r\n\t *\r\n\t * Check [[IHitOptions]] for settings about double hit.\r\n\t */\r\n\tdoublehit: PointEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when right mouse button is clicked on the object.\r\n\t */\r\n\trightclick: MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when mouse or touch pointer is held down over object for some time.\r\n\t */\r\n\thold: PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when the mouse button is pressed or touch starts.\r\n\t */\r\n\tdown: PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when the mouse button is released or touch ends.\r\n\t */\r\n\tup: PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object is being dragged. (using mouse, touch or\r\n\t * keyboard)\r\n\t */\r\n\tdrag: ShiftEvent & PointEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original coordinates of the pointer's position when the dragging started.\r\n\t\t *\r\n\t\t * @type {IPoint}\r\n\t\t */\r\n\t\tstartPoint: IPoint,\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t *\r\n\t\t * @type {MouseEvent | TouchEvent | KeyboardEvent}\r\n\t\t */\r\n\t\tevent?: MouseEvent | TouchEvent | KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object dragging starts. This event is not\r\n\t * invoked immediatelly after `down`, but only if there's a movement of the\r\n\t * pointer.\r\n\t */\r\n\tdragstart: {\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t *\r\n\t\t * @type {MouseEvent | TouchEvent | KeyboardEvent}\r\n\t\t */\r\n\t\tevent?: MouseEvent | TouchEvent | KeyboardEvent\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object is released. This event will not fire if\r\n\t * position of the object did not change.\r\n\t */\r\n\tdragstop: {\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t *\r\n\t\t * @type {MouseEvent | TouchEvent | KeyboardEvent}\r\n\t\t */\r\n\t\tevent?: MouseTouchEvent | KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when pointer (mouse cursor or touch point) moves over `trackable`\r\n\t * object.\r\n\t */\r\n\ttrack: PointEvent & PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when `resizable` object is being resized either by mouse or touch\r\n\t * pinch gesture.\r\n\t */\r\n\tresize: ScaleEvent & MouseTouchEvent & {\r\n\r\n\t\t/**\r\n\t\t * The starting coordinates of the first reference point.\r\n\t\t *\r\n\t\t * @type {IPoint}\r\n\t\t */\r\n\t\tstartPoint1: IPoint,\r\n\r\n\t\t/**\r\n\t\t * Current coordinates of the first reference point.\r\n\t\t *\r\n\t\t * @type {IPoint}\r\n\t\t */\r\n\t\tpoint1: IPoint,\r\n\r\n\t\t/**\r\n\t\t * The starting coordinates of the second reference point.\r\n\t\t *\r\n\t\t * @type {IPoint}\r\n\t\t */\r\n\t\tstartPoint2: IPoint,\r\n\r\n\t\t/**\r\n\t\t * Current coordinates of the second reference point.\r\n\t\t *\r\n\t\t * @type {IPoint}\r\n\t\t */\r\n\t\tpoint2: IPoint\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture (quick horizontal movement)\r\n\t * on the object, either using mouse or touch.\r\n\t */\r\n\tswipe: MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture towards left.\r\n\t */\r\n\tswipeleft: MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture towards right.\r\n\t */\r\n\tswiperight: MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel while over the object.\r\n\t */\r\n\twheel: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel upwards while over the object.\r\n\t */\r\n\twheelup: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel downwards while over the object.\r\n\t */\r\n\twheeldown: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel leftwards while over the object.\r\n\t */\r\n\twheelleft: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel rightwards while over the object.\r\n\t */\r\n\twheelright: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t *\r\n\t\t * @type {WheelEvent}\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when mouse cursor moves over `hoverable` object or it is touched.\r\n\t */\r\n\tover: MouseTouchEvent & PointerEvent;\r\n\r\n\t/**\r\n\t * Invoked when mouse cursor moves out of `hoverable` object or it is no\r\n\t * longer touched.\r\n\t */\r\n\tout: MouseTouchEvent & PointerEvent;\r\n\r\n\t/**\r\n\t * Invoked when `focusable` object gains focus, e.g. by using TAB button.\r\n\t */\r\n\tfocus: {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript `FocusEvent`.\r\n\t\t *\r\n\t\t * @type {FocusEvent}\r\n\t\t */\r\n\t\tevent: FocusEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `focusable` object loses focus, e.g. by clicking outside\r\n\t * it or pressing TAB button to focus on the next focusable object.\r\n\t */\r\n\tblur: {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript `FocusEvent`.\r\n\t\t *\r\n\t\t * @type {FocusEvent}\r\n\t\t */\r\n\t\tevent: FocusEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key is pressed on the keyboard.\r\n\t */\r\n\tkeydown: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t *\r\n\t\t * @type {KeyboardEvent}\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key is released on the keyboard.\r\n\t */\r\n\tkeyup: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t *\r\n\t\t * @type {KeyboardEvent}\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key generates a \"press\", e.g. pressing and holding a\r\n\t * letter key will generate repeated \"keypress\" events.\r\n\t */\r\n\tkeypress: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t *\r\n\t\t * @type {KeyboardEvent}\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked whenever information changes in the textual input elements, like\r\n\t * `<input>`, `<textarea>`, etc.\r\n\t */\r\n\tinput: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t *\r\n\t\t * @type {KeyboardEvent}\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n}\r\n\r\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\r\nexport class InteractionObjectEventDispatcher<T extends AMEvent<InteractionObject, IInteractionObjectEvents>> extends TargetedEventDispatcher<InteractionObject, T> {\r\n\r\n\t/**\r\n\t * Holds a list of Disposers for DOM events added.\r\n\t */\r\n\tprivate _domEvents: { [key: string]: CounterDisposer } = {};\r\n\r\n\t/**\r\n\t * Adds a DOM event and returns Disposer.\r\n\t *\r\n\t * @return {IDisposer} Disposer\r\n\t */\r\n\tprivate _addDOMEvent<E extends Event, Key extends keyof IInteractionObjectEvents, C>(\r\n\t\ttype: string,\r\n\t\tkey: Key,\r\n\t\tlistener: (this: C, key: Key, evt: E) => void,\r\n\t\tcontext: C\r\n\t): IDisposer {\r\n\t\tif (!this._domEvents[type]) {\r\n\t\t\tconst callback = function(e: E): void {\r\n\t\t\t\tlistener.call(context, key, e);\r\n\t\t\t}\r\n\r\n\t\t\tthis.target.element.addEventListener(type, callback, false);\r\n\r\n\t\t\tthis._domEvents[type] = new CounterDisposer(() => {\r\n\t\t\t\tdelete this._domEvents[type];\r\n\r\n\t\t\t\tthis.target.element.removeEventListener(type, callback, false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this._domEvents[type].increment();\r\n\t}\r\n\r\n\tprivate _dispatchKeyboardEvent(key: \"keydown\" & \"keyup\" & \"keypress\" & \"input\", ev: KeyboardEvent): void {\r\n\t\t// TODO use this.dispatchImmediately ?\r\n\t\tif (this.target.events.isEnabled(key)) {\r\n\t\t\tthis.target.events.dispatchImmediately(key, {\r\n\t\t\t\ttype: key,\r\n\t\t\t\ttarget: this.target,\r\n\t\t\t\tevent: ev\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n\r\n\t\tconst disposers = [info.disposer];\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\tcase \"up\":\r\n\t\t\t\tthis.target.clickable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\t\tthis.target.draggable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"track\":\r\n\t\t\t\tthis.target.trackable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resize\":\r\n\t\t\t\tthis.target.resizable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\t\tthis.target.swipeable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tthis.target.wheelable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"over\":\r\n\t\t\tcase \"out\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\tcase \"focusin\":\r\n\t\t\tcase \"focusout\":\r\n\t\t\t\tthis.target.focusable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keydown\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keyup\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keyup\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keypress\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keypress\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"input\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"input\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tinfo.disposer = new MultiDisposer(disposers);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/InteractionObjectEvents.ts","/**\r\n * Functionality related simulating of dragging of elements using keyboard.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { InteractionObject } from \"./InteractionObject\";\r\nimport { animations, IAnimationObject } from \"../utils/Animation\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n/**\r\n * [[InteractionKeyboardObject]] is used to simulate dragging of the `draggable`\r\n * element using keyboard arrows.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class InteractionKeyboardObject implements IAnimationObject, IDisposer {\r\n\r\n\t/**\r\n\t * A [[InteractionObject]] representation of an element we're performing\r\n\t * animation on.\r\n\t *\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic interaction: InteractionObject;\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * Timestamp on when animation started.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprivate _startedOn: number;\r\n\r\n\t/**\r\n\t * Indicates direction of current horizontal movement.\r\n\t *\r\n\t * 0 - not moving horizontally\r\n\t * 1 - moving right\r\n\t * -1 - moving left\r\n\t * @type {number}\r\n\t */\r\n\tpublic directionX: 0 | 1 | -1 = 0;\r\n\r\n\t/**\r\n\t * Indicates direction of current vertical movement.\r\n\t *\r\n\t * 0 - not moving vertically\r\n\t * 1 - moving down\r\n\t * -1 - moving up\r\n\t * @type {number}\r\n\t */\r\n\tpublic directionY: 0 | 1 | -1 = 0;\r\n\r\n\t/**\r\n\t * Holds reference to original keyboard event.\r\n\t *\r\n\t * @type {KeyboardEvent}\r\n\t */\r\n\tpublic keyboardEvent: KeyboardEvent;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {InteractionObject} io An InteractionObject\r\n\t */\r\n\tconstructor(io: InteractionObject, ev: KeyboardEvent) {\r\n\t\tthis.interaction = io;\r\n\t\tthis.keyboardEvent = ev;\r\n\t\tthis._startedOn = new Date().getTime();\r\n\t\tgetInteraction().processDragStart(io);\r\n\t\tanimations.push(this);\r\n\t\tthis.update();\r\n\t}\r\n\r\n\t/**\r\n\t * It's an update method which is called by the system if\r\n\t * [[InteractionObject]] is used as animation.\r\n\t *\r\n\t * This will update coordinates of the element based on the movement\r\n\t * directions.\r\n\t */\r\n\tpublic update(): void {\r\n\r\n\t\t// Init and get settings\r\n\t\tlet io = this.interaction;\r\n\t\tlet speed = getInteraction().getKeyboardOption(io, \"speed\"),\r\n\t\t\taccelleration = getInteraction().getKeyboardOption(io, \"accelleration\"),\r\n\t\t\taccellerationDelay = getInteraction().getKeyboardOption(io, \"accellerationDelay\"),\r\n\t\t\tshift: IPoint = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t// If SHIFT key is pressed we slash speed by half and disable accelleration\r\n\t\tif (this.keyboardEvent.shiftKey) {\r\n\t\t\tspeed *= 0.5;\r\n\t\t\taccelleration = 1;\r\n\t\t}\r\n\t\t// If CTRL is pressed we increase speed by x2\r\n\t\telse if (this.keyboardEvent.ctrlKey) {\r\n\t\t\tspeed *= 2;\r\n\t\t}\r\n\r\n\t\t// Get elapsed time\r\n\t\tlet ms = new Date().getTime() - this._startedOn;\r\n\t\tlet accelleratedMs = ms - accellerationDelay;\r\n\r\n\t\t// Add accellerated movement\r\n\t\tif ((accelleration > 0) && (accelleratedMs > 0)) {\r\n\t\t\tlet accellerationFactor = ms / accellerationDelay;\r\n\t\t\tms = accellerationDelay;\r\n\t\t\tshift.x += this.directionX * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n\t\t\tshift.y += this.directionY * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n\t\t}\r\n\r\n\t\t// Calculate position\r\n\t\tshift.x += this.directionX * (speed * ms);\r\n\t\tshift.y += this.directionY * (speed * ms);\r\n\r\n\t\t// Simulate move on Interaction\r\n\t\tgetInteraction().handleTransformMove(io, shift, { x: 0, y: 0 }, this.keyboardEvent, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return {boolean} Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object. Removes from system animations.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tgetInteraction().processDragStop(this.interaction);\r\n\t\t\t$array.remove(animations, this);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/InteractionKeyboardObject.ts","/**\r\n * Functionality related to inertia\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./InteractionObject\";\r\nimport { Animation, IAnimatable, AnimationDisposer } from \"../utils/Animation\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Defines a list of available inertia types.\r\n *\r\n * @type {string}\r\n */\r\nexport type InertiaTypes = \"move\" | \"resize\";\r\n\r\n/**\r\n * A point of inertia is to simulate gradually drecreasing motion even after\r\n * actual interaction by user, that caused it, has already ended.\r\n *\r\n * [[Inertia]] object will continue triggering the same [[Sprite]] handlers\r\n * as if the interaction was still happening, gradually reducing\r\n * shift/angle/scale values until full stop.\r\n *\r\n * Basically, from the target element's point of view, while inertia is\r\n * playing, it is still being interacted with by user, albeit with a\r\n * decreasing speed.\r\n */\r\nexport class Inertia extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * Holds what type of inertia it is.\r\n\t *\r\n\t * @type {InertiaTypes}\r\n\t */\r\n\tpublic type: InertiaTypes;\r\n\r\n\t/**\r\n\t * An element we're performing animation on.\r\n\t *\r\n\t * @type {InteractionObject}\r\n\t */\r\n\tpublic interaction: InteractionObject;\r\n\r\n\t/**\r\n\t * Starting pointer position. The position of pointer when we \"released\"\r\n\t * the element.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic startPoint: IPoint;\r\n\r\n\t/**\r\n\t * Current (simulated) pointer position.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * List of animations currently playing.\r\n\t *\r\n\t * @type {List<Animation>}\r\n\t */\r\n\tpublic animations: Array<Animation> = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(interaction: InteractionObject, type: InertiaTypes, point: IPoint, startPoint: IPoint) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Inertia\";\r\n\r\n\t\tthis.interaction = interaction;\r\n\t\tthis.type = type;\r\n\t\tthis.point = point;\r\n\t\tthis.startPoint = startPoint;\r\n\r\n\t\t// Make animations disposable\r\n\t\tthis._disposers.push(new AnimationDisposer(this.animations));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current X coordinate.\r\n\t *\r\n\t * Will trigger \"drag\" event for the target element.\r\n\t *\r\n\t * @param {number} value X\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tthis.point.x = value;\r\n\t\t\tthis.handleMove();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current X coordinate.\r\n\t *\r\n\t * @return {number} X\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this.point.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current Y coordinate.\r\n\t *\r\n\t * Will trigger \"drag\" event for the target element.\r\n\t *\r\n\t * @param {number} value Y\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tthis.point.y = value;\r\n\t\t\tthis.handleMove();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current Y coordinate.\r\n\t *\r\n\t * @return {number} Y\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this.point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates dragging of element.\r\n\t */\r\n\tpublic handleMove() {\r\n\r\n\t\t// Prepare {InteractionEvent} object\r\n\t\tif (this.interaction.events.isEnabled(\"drag\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"drag\"] = {\r\n\t\t\t\ttype: \"drag\",\r\n\t\t\t\ttarget: this.interaction,\r\n\t\t\t\tshift: {\r\n\t\t\t\t\tx: this.x - this.startPoint.x,\r\n\t\t\t\t\ty: this.y - this.startPoint.y\r\n\t\t\t\t},\r\n\t\t\t\tstartPoint: this.startPoint,\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tx: this.x,\r\n\t\t\t\t\ty: this.y\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Call handler\r\n\t\t\tthis.interaction.events.dispatchImmediately(\"drag\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up the inertia animation. (removes reference to this animation\r\n\t * object)\r\n\t */\r\n\tpublic done() {\r\n\r\n\t\t// Remove inertia animation from the object\r\n\t\tthis.interaction.inertias.removeKey(this.type);\r\n\r\n\t\t// Move ended\r\n\t\tif (this.type === \"move\") {\r\n\t\t\tgetInteraction().processDragStop(this.interaction);\r\n\t\t}\r\n\r\n\t\t// Destroy\r\n\t\tthis.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/interaction/Inertia.ts","/**\r\n * Number formatting-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface INumberSuffix {\r\n\tnumber: number;\r\n\tsuffix: string;\r\n}\r\n\r\n/**\r\n * NumberFormatter class. Formats numbers according to specified formats.\r\n *\r\n * @todo Apply translations to suffixes/prefixes\r\n */\r\nexport class NumberFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * A base value for negative numbers. Will treat all numbers below this value\r\n\t * as negative numbers.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _negativeBase: number = 0;\r\n\r\n\t/**\r\n\t * Holds number format.\r\n\t *\r\n\t * @type {string}\r\n\t * @default #,###.#####\r\n\t */\r\n\tprotected _numberFormat = \"#,###.#####\";\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t * @type {string}\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\t/**\r\n\t * Holds big number prefixes to apply to numbers if `a` modifier is used in\r\n\t * format.\r\n\t *\r\n\t * @type {Array}\r\n\t */\r\n\tprotected _bigNumberPrefixes: INumberSuffix[];\r\n\r\n\t/**\r\n\t * Holds small number prefixes to apply to numbers if `a` modifier is used in\r\n\t * format.\r\n\t *\r\n\t * @type {Array}\r\n\t */\r\n\tprotected _smallNumberPrefixes: INumberSuffix[];\r\n\r\n\t/**\r\n\t * Holds prefixes to apply to data size numbers if `b` modifier is used in\r\n\t * format.\r\n\t *\r\n\t * @type {Array}\r\n\t */\r\n\tprotected _bytePrefixes: INumberSuffix[];\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t *\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t *\r\n\t * @type {Optional<Language>}\r\n\t */\r\n\tprivate _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"NumberFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.language) {\r\n\t\t\tthis.language.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Language]] instance.\r\n\t *\r\n\t * Formatter will use language to translate various items, like number\r\n\t * suffixes, etc.\r\n\t * \r\n\t * @param {Language}  value  Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} Language\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis._language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number according to specific format.\r\n\t *\r\n\t * @param  {number | string}  value   Value to format\r\n\t * @param  {string}           format  Format to apply\r\n\t * @return {string}                   Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string): string {\r\n\r\n\t\t// no format passed in or \"Number\"\r\n\t\tif (typeof format === \"undefined\" || format.toLowerCase() === \"number\") {\r\n\t\t\tformat = this._numberFormat;\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// Get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, this.language);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this._negativeBase) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this._negativeBase) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\t\t// Format\r\n\t\tlet formatted = details.template.split($strings.PLACEHOLDER).join(this.applyFormat(source, details));\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param {string} format Format string, i.e. \"#,###.00\"\r\n\t * @param {Language} language Language\r\n\t */\r\n\tprotected parseFormat(format: string, language: Language): any {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// init format parse info holder\r\n\t\tlet info: any = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\tif (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t\tinfo[part] = this.getCache(item.source);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Just \"Number\"?\r\n\t\t\tif (partFormat.toLowerCase() === \"number\") {\r\n\t\t\t\tpartFormat = this._numberFormat;\r\n\t\t\t}\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\t\t\t\t\t// Parse format\r\n\r\n\t\t\t\t\t// Look for codes\r\n\t\t\t\t\tlet matches: string[] | null = [];\r\n\t\t\t\t\tif (matches = chunk.text.match(/[#0.,]+[ ]?[abesABES%]?[abesABES‰]?/)) {\r\n\r\n\t\t\t\t\t\tif (matches === null || matches[0] === \"\") {\r\n\t\t\t\t\t\t\t// no codes here - assume string\r\n\t\t\t\t\t\t\t// nothing to do here\r\n\t\t\t\t\t\t\titem.template += chunk.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t// look for the format modifiers at the end\r\n\t\t\t\t\t\t\tlet mods: string[] | null = [];\r\n\t\t\t\t\t\t\tif (mods = matches[0].match(/[abesABES%‰]{2}|[abesABES%‰]{1}$/)) {\r\n\t\t\t\t\t\t\t\titem.mod = mods[0].toLowerCase();\r\n\t\t\t\t\t\t\t\titem.modSpacing = matches[0].match(/[ ]{1}[abesABES%‰]{1}$/) ? true : false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// break the format up\r\n\t\t\t\t\t\t\tlet a = matches[0].split(\".\");\r\n\r\n\t\t\t\t\t\t\t// Deal with thousands\r\n\t\t\t\t\t\t\tif (a[0] === \"\") {\r\n\t\t\t\t\t\t\t\t// No directives for thousands\r\n\t\t\t\t\t\t\t\t// Leave default settings (no formatting)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Counts\r\n\t\t\t\t\t\t\t\titem.thousands.active = (a[0].match(/0/g) || []).length;\r\n\t\t\t\t\t\t\t\titem.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n\r\n\t\t\t\t\t\t\t\t// Separator interval\r\n\t\t\t\t\t\t\t\tlet b = a[0].split(\",\");\r\n\t\t\t\t\t\t\t\tif (b.length === 1) {\r\n\t\t\t\t\t\t\t\t\t// No thousands separators\r\n\t\t\t\t\t\t\t\t\t// Do nothing\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// Use length fo the last chunk as thousands length\r\n\t\t\t\t\t\t\t\t\titem.thousands.interval = $type.getValue(b.pop()).length;\r\n\t\t\t\t\t\t\t\t\tif (item.thousands.interval === 0)\r\n\t\t\t\t\t\t\t\t\t\titem.thousands.interval = -1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Deal with decimals\r\n\t\t\t\t\t\t\tif (typeof (a[1]) === \"undefined\") {\r\n\t\t\t\t\t\t\t\t// No directives for decimals\r\n\t\t\t\t\t\t\t\t// Leave at defaults (no formatting)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Counts\r\n\t\t\t\t\t\t\t\titem.decimals.active = (a[1].match(/0/g) || []).length;\r\n\t\t\t\t\t\t\t\titem.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add special code to template\r\n\t\t\t\t\t\t\titem.template += chunk.text.split(matches[0]).join($strings.PLACEHOLDER);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Quoted string - take it as it is\r\n\t\t\t\t\titem.template += chunk.text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\tthis.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param  {number}  value    Value\r\n\t * @param  {any}     details  Parsed format as returned by {parseFormat}\r\n\t * @return {string}          Formatted number\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative: boolean = value < 0;\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate according to modifier\r\n\t\tlet prefix: string = \"\", suffix: string = \"\";\r\n\t\tlet mods: string[] = details.mod ? details.mod.split(\"\") : [];\r\n\t\tif (mods.indexOf(\"b\") !== -1) {\r\n\t\t\tlet a = this.applyPrefix(value, this.bytePrefixes);\r\n\t\t\tvalue = a[0];\r\n\t\t\tprefix = a[1];\r\n\t\t\tsuffix = a[2];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"a\") !== -1) {\r\n\t\t\tlet a = this.applyPrefix(value, value < 1.00 ? this.smallNumberPrefixes : this.bigNumberPrefixes);\r\n\t\t\tvalue = a[0];\r\n\t\t\tprefix = a[1];\r\n\t\t\tsuffix = a[2];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"%\") !== -1) {\r\n\t\t\tvalue *= 100;\r\n\t\t\tsuffix = \"%\";\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"‰\") !== -1) {\r\n\t\t\tvalue *= 1000;\r\n\t\t\tsuffix = \"‰\";\r\n\t\t}\r\n\r\n\t\t// Round to passive\r\n\t\tif (mods.indexOf(\"e\") !== -1) {\r\n\t\t\t// convert the value to exponential\r\n\t\t\tlet exp: string[];\r\n\t\t\tif (details.decimals.passive >= 0) {\r\n\t\t\t\texp = value.toExponential(details.decimals.passive).split(\"e\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\texp = value.toExponential().split(\"e\");\r\n\t\t\t}\r\n\t\t\tvalue = Number(exp[0]);\r\n\t\t\tsuffix = \"e\" + exp[1];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (details.decimals.passive === 0) {\r\n\t\t\tvalue = Math.round(value);\r\n\t\t}\r\n\t\telse if (details.decimals.passive > 0) {\r\n\t\t\tlet d: number = Math.pow(10, details.decimals.passive);\r\n\t\t\tvalue = Math.round(value * d) / d;\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet res: string = \"\";\r\n\r\n\t\t// Calc integer and decimal parts\r\n\t\tlet a = $utils.numberToString(value).split(\".\");\r\n\r\n\t\t// Format integers\r\n\t\tlet ints = a[0];\r\n\r\n\t\t// Pad integers to active length\r\n\t\tif (ints.length < details.thousands.active) {\r\n\t\t\tints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n\t\t}\r\n\r\n\t\t// Insert thousands separators\r\n\t\tif (details.thousands.interval > 0) {\r\n\t\t\tlet ip: string[] = [];\r\n\t\t\tlet intsr: string = ints.split(\"\").reverse().join(\"\");\r\n\t\t\tfor (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n\t\t\t\tlet c: string = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n\t\t\t\tif (c !== \"\") {\r\n\t\t\t\t\tip.unshift(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tints = ip.join(details.thousands.separator);\r\n\t\t}\r\n\r\n\t\t// Add integers\r\n\t\tres += ints;\r\n\r\n\t\t// Add decimals\r\n\t\tif (a.length === 1) {\r\n\t\t\ta.push(\"\");\r\n\t\t}\r\n\t\tlet decs: string = a[1];\r\n\r\n\t\t// Fill zeros?\r\n\t\tif (decs.length < details.decimals.active) {\r\n\t\t\tdecs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n\t\t}\r\n\r\n\t\tif (decs !== \"\") {\r\n\t\t\tres += details.decimals.separator + decs;\r\n\t\t}\r\n\r\n\t\t// Can't have empty return value\r\n\t\tif (res === \"\") {\r\n\t\t\tres = \"0\";\r\n\t\t}\r\n\r\n\t\t// Add minus sign back\r\n\t\tif (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\t// Add suffixes/prefixes\r\n\t\tif (prefix) {\r\n\t\t\tres = prefix + res;\r\n\t\t}\r\n\t\tif (suffix) {\r\n\t\t\tres += suffix;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Chooses appropriate prefix and suffix based on the passed in rules.\r\n\t *\r\n\t * @param  {number}  value     Value\r\n\t * @param  {any[]}   prefixes  Prefix array\r\n\t * @return {any}               Result\r\n\t */\r\n\tprotected applyPrefix(value: number, prefixes: any[]): any[] {\r\n\t\tlet newvalue: number = value,\r\n\t\t\tprefix: string = \"\",\r\n\t\t\tsuffix: string = \"\";\r\n\r\n\t\tfor (let i = 0, len = prefixes.length; i < len; i++) {\r\n\t\t\tif (prefixes[i].number <= value) {\r\n\t\t\t\tif (prefixes[i].number === 0) {\r\n\t\t\t\t\tnewvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewvalue = value / prefixes[i].number;\r\n\t\t\t\t}\r\n\t\t\t\tprefix = prefixes[i].prefix;\r\n\t\t\t\tsuffix = prefixes[i].suffix;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [newvalue, prefix, suffix];\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the parent [[Sprite]] object.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Number format.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param {string}  format  A format to use for number formatting\r\n\t */\r\n\tpublic set numberFormat(format: string) {\r\n\t\tthis._numberFormat = format;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} A format to use for number formatting\r\n\t */\r\n\tpublic get numberFormat(): string {\r\n\t\treturn this._numberFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Prefixes for big numbers.\r\n\t *\r\n\t * It's an array of objects of number/prefix pairs.\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { \"number\": 1e+3, \"suffix\": \"K\" },\r\n\t *   { \"number\": 1e+6, \"suffix\": \"M\" },\r\n\t *   { \"number\": 1e+9, \"suffix\": \"G\" },\r\n\t *   { \"number\": 1e+12, \"suffix\": \"T\" },\r\n\t *   { \"number\": 1e+15, \"suffix\": \"P\" },\r\n\t *   { \"number\": 1e+18, \"suffix\": \"E\" },\r\n\t *   { \"number\": 1e+21, \"suffix\": \"Z\" },\r\n\t *   { \"number\": 1e+24, \"suffix\": \"Y\" }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * If the number is bigger than the `number` ir will be converted to the\r\n\t * appropriate bigger number with prefix.\r\n\t *\r\n\t * E.g. as per above `1500` will be converted to `1.5K`.\r\n\t *\r\n\t * Please note that for this transformation to be enabled, you need to\r\n\t * enable it specific modifier in your format setting.\r\n\t *\r\n\t * The modifier for big/small number modification is \"a\":\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatNumber(\"#,###.00a\")}\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param {INumberSuffix[]}  prefixes  Prefixes for big numbers\r\n\t */\r\n\tpublic set bigNumberPrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._bigNumberPrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {INumberSuffix[]} Prefixes for big numbers\r\n\t */\r\n\tpublic get bigNumberPrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._bigNumberPrefixes)) {\r\n\t\t\tthis._bigNumberPrefixes = [\r\n\t\t\t\t{ \"number\": 1e+3, \"suffix\": this.language.translate(\"_big_number_suffix_3\") },\r\n\t\t\t\t{ \"number\": 1e+6, \"suffix\": this.language.translate(\"_big_number_suffix_6\") },\r\n\t\t\t\t{ \"number\": 1e+9, \"suffix\": this.language.translate(\"_big_number_suffix_9\") },\r\n\t\t\t\t{ \"number\": 1e+12, \"suffix\": this.language.translate(\"_big_number_suffix_12\") },\r\n\t\t\t\t{ \"number\": 1e+15, \"suffix\": this.language.translate(\"_big_number_suffix_15\") },\r\n\t\t\t\t{ \"number\": 1e+18, \"suffix\": this.language.translate(\"_big_number_suffix_18\") },\r\n\t\t\t\t{ \"number\": 1e+21, \"suffix\": this.language.translate(\"_big_number_suffix_21\") },\r\n\t\t\t\t{ \"number\": 1e+24, \"suffix\": this.language.translate(\"_big_number_suffix_24\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._bigNumberPrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Prefixes for big numbers.\r\n\t *\r\n\t * It's an array of objects of number/prefix pairs.\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { \"number\": 1e-24, \"suffix\": \"y\" },\r\n\t *   { \"number\": 1e-21, \"suffix\": \"z\" },\r\n\t *   { \"number\": 1e-18, \"suffix\": \"a\" },\r\n\t *   { \"number\": 1e-15, \"suffix\": \"f\" },\r\n\t *   { \"number\": 1e-12, \"suffix\": \"p\" },\r\n\t *   { \"number\": 1e-9, \"suffix\": \"n\" },\r\n\t *   { \"number\": 1e-6, \"suffix\": \"μ\" },\r\n\t *   { \"number\": 1e-3, \"suffix\": \"m\" }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * If the number is smaller than the `number` ir will be converted to the\r\n\t * appropriate smaller number with prefix.\r\n\t *\r\n\t * E.g. as per above `0.0015` will be converted to `1.5m`.\r\n\t *\r\n\t * Please note that for this transformation to be enabled, you need to\r\n\t * enable it specific modifier in your format setting.\r\n\t *\r\n\t * The modifier for big/small number modification is \"a\":\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatNumber(\"#,###.00a\")}\r\n\t * ```\r\n\t *\r\n\t * IMPORTANT: The order of the suffixes is important. The list must start\r\n\t * from the smallest number and work towards bigger ones.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param {INumberSuffix[]}  prefixes  Prefixes for small numbers\r\n\t */\r\n\tpublic set smallNumberPrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._smallNumberPrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {INumberSuffix[]} Prefixes for small numbers\r\n\t */\r\n\tpublic get smallNumberPrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._smallNumberPrefixes)) {\r\n\t\t\tthis._smallNumberPrefixes = [\r\n\t\t\t\t{ \"number\": 1e-24, \"suffix\": this.language.translate(\"_small_number_suffix_24\") },\r\n\t\t\t\t{ \"number\": 1e-21, \"suffix\": this.language.translate(\"_small_number_suffix_21\") },\r\n\t\t\t\t{ \"number\": 1e-18, \"suffix\": this.language.translate(\"_small_number_suffix_18\") },\r\n\t\t\t\t{ \"number\": 1e-15, \"suffix\": this.language.translate(\"_small_number_suffix_15\") },\r\n\t\t\t\t{ \"number\": 1e-12, \"suffix\": this.language.translate(\"_small_number_suffix_12\") },\r\n\t\t\t\t{ \"number\": 1e-9, \"suffix\": this.language.translate(\"_small_number_suffix_9\") },\r\n\t\t\t\t{ \"number\": 1e-6, \"suffix\": this.language.translate(\"_small_number_suffix_6\") },\r\n\t\t\t\t{ \"number\": 1e-3, \"suffix\": this.language.translate(\"_small_number_suffix_3\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._smallNumberPrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Basically the same as `bigNumberPrefixes`, except base for calculation\r\n\t * is not thousand but byte (1024).\r\n\t *\r\n\t * The modifier is \"b\".\r\n\t *\r\n\t *  ```Text\r\n\t * {myfield.formatNumber(\"#,###.00b\")}\r\n\t * ```\r\n\t *\r\n\t * The above `2048` will change to `2K`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param {INumberSuffix[]}  prefixes  Prefixes for byte-size formatting\r\n\t */\r\n\tpublic set bytePrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._bytePrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {INumberSuffix[]} Prefixes for byte-size formatting\r\n\t */\r\n\tpublic get bytePrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._bytePrefixes)) {\r\n\t\t\tthis._bytePrefixes = [\r\n\t\t\t\t{ \"number\": 0, suffix: this.language.translate(\"_byte_suffix_B\") },\r\n\t\t\t\t{ \"number\": 1024, suffix: this.language.translate(\"_byte_suffix_KB\") },\r\n\t\t\t\t{ \"number\": 1048576, suffix: this.language.translate(\"_byte_suffix_MB\") },\r\n\t\t\t\t{ \"number\": 1073741824, suffix: this.language.translate(\"_byte_suffix_GB\") },\r\n\t\t\t\t{ \"number\": 1099511627776, suffix: this.language.translate(\"_byte_suffix_TB\") },\r\n\t\t\t\t{ \"number\": 1125899906842624, suffix: this.language.translate(\"_byte_suffix_PB\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._bytePrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Ooutput format: \"svg\" or \"html\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  value  Output format\r\n\t */\r\n\tpublic set outputFormat(outputFormat: string) {\r\n\t\tthis._outputFormat = outputFormat.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Output format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces brackets with temporary placeholders.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text  Input text\r\n\t * @return {string}        Escaped text\r\n\t */\r\n\tpublic escape(text: string): string {\r\n\t\treturn text.replace(\"||\", $strings.PLACEHOLDER2);\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces placeholders back to brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}  text  Escaped text\r\n\t * @return {string}        Unescaped text\r\n\t */\r\n\tpublic unescape(text: string): string {\r\n\t\treturn text.replace($strings.PLACEHOLDER2, \"|\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NumberFormatter\"] = NumberFormatter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/formatters/NumberFormatter.ts","export { default } from \"../.internal/git/amcharts4-lang/src/en\";\n\n\n// WEBPACK FOOTER //\n// ../../../src/lang/en.ts","/**\r\n * Duration formatting functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport { TimeUnit } from \"../defs/TimeUnit\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * DurationFormatter class. Formats numbers as durations.\r\n *\r\n * `1000` as `16:40`\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n */\r\nexport class DurationFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * If set will force this format to be used, regardless of the scale.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tprotected _durationFormat: string;\r\n\r\n\t/**\r\n\t * Holds duration formats for various possible scenarios.\r\n\t * \r\n\t * @type {Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>}\r\n\t */\r\n\tprotected _durationFormats: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>;\r\n\r\n\t/**\r\n\t * A base value for negative numbers. Will treat all numbers below this value\r\n\t * as negative numbers.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _negativeBase: number = 0;\r\n\r\n\t/**\r\n\t * A base unit to consider values are in.\r\n\t *\r\n\t * @default \"s\"\r\n\t * @type {TimeUnit}\r\n\t */\r\n\tprotected _baseUnit: TimeUnit = \"second\";\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t * @type {string}\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\r\n\t/**\r\n\t * How many milliseconds each unit represents.\r\n\t *\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _unitValues: Record<TimeUnit, number> = {\r\n\t\t\"millisecond\": 1,\r\n\t\t\"second\": 1000,\r\n\t\t\"minute\": 60000,\r\n\t\t\"hour\": 3600000,\r\n\t\t\"day\": 86400000,\r\n\t\t\"week\": 604800000,\r\n\t\t\"month\": 2592000000,\r\n\t\t\"year\": 31536000000,\r\n\t};\r\n\r\n\t/**\r\n\t * Collection of aliases for units.\r\n\t *\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _unitAliases: { [index: string]: string } = {\r\n\t\t\"Y\": \"y\",\r\n\t\t\"D\": \"d\",\r\n\t\t\"H\": \"h\",\r\n\t\t\"K\": \"h\",\r\n\t\t\"k\": \"h\",\r\n\t\t\"n\": \"S\"\r\n\t};\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t *\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t *\r\n\t * @type {Optional<Language>}\r\n\t */\r\n\tpublic language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number according as duration.\r\n\t *\r\n\t * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n\t * 16 minutes and 40 seconds.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n\t * @param  {number | string}  value   Value to format\r\n\t * @param  {string}           format  Format to apply\r\n\t * @param  {TimeUnit}         base    Override base unit\r\n\t * @return {string}                   Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string, base?: TimeUnit): string {\r\n\r\n\t\t// no language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this._baseUnit;\r\n\r\n\t\t// no format passed in or empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tif ($type.hasValue(this.durationFormat)) {\r\n\t\t\t\tformat = this.durationFormat;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformat = this.getFormat($type.toNumber(value), null, baseUnit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, baseUnit);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this._negativeBase) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this._negativeBase) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\r\n\t\t// Format\r\n\t\tlet formatted = this.applyFormat(source, details);\r\n\r\n\t\t// Apply color?\r\n\t\tif (details.color !== \"\") {\r\n\t\t\tif (this._outputFormat === \"svg\") {\r\n\t\t\t\tformatted = \"<tspan fill='\" + details.color + \"'>\" + formatted + \"</tspan>\";\r\n\t\t\t}\r\n\t\t\telse if (this._outputFormat === \"html\") {\r\n\t\t\t\tformatted = \"<span style='color: \" + details.color + \";'>\" + formatted + \"</span>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param  {string}    format  Format string, i.e. \"#,###.00\"\r\n\t * @param  {TimeUnit}  base    Override base unit\r\n\t * @return {any}               Parsed information\r\n\t */\r\n\tprotected parseFormat(format: string, base?: TimeUnit): any {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this._baseUnit;\r\n\r\n\t\t// Initialize duration parsing info\r\n\t\tlet info = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\tif (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t\tinfo[part] = this.getCache(item.source);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Check for [] directives\r\n\t\t\tlet dirs: string[] | null = [];\r\n\t\t\tdirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n\t\t\tif (dirs && dirs.length && dirs[0] !== \"\") {\r\n\t\t\t\tpartFormat = item.source.substr(dirs[0].length);\r\n\t\t\t\titem.color = dirs[1];\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t\t// Just \"Duration\"?\r\n\t\t\t\t\t// if (chunk.text.toLowerCase() === \"duration\") {\r\n\t\t\t\t\t// \tchunk.text = durationFormat;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// Check for \"a\" (absolute) modifier\r\n\t\t\t\t\tif (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n\t\t\t\t\t\titem.absolute = true;\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find all possible parts\r\n\t\t\t\t\tlet matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t// Populate template\r\n\t\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\t\t// Is it an alias?\r\n\t\t\t\t\t\t\tif (!$type.hasValue(matches[x])) {\r\n\t\t\t\t\t\t\t\tmatches[x] = this._unitAliases[matches[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.parts.push(matches[x]);\r\n\t\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply to template\r\n\t\t\t\titem.template += chunk.text;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\tthis.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param  {number}  value    Value\r\n\t * @param  {any}     details  Parsed format as returned by {parseFormat}\r\n\t * @return {string}           Formatted duration\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative: boolean = !details.absolute && (value < this._negativeBase);\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate to milliseconds\r\n\t\tlet tstamp: number = this.toTimeStamp(value, details.baseUnit);\r\n\r\n\t\t// Init return value\r\n\t\tlet res: string = details.template;\r\n\r\n\t\t// Iterate through duration parts\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\r\n\t\t\t// Gather the part\r\n\t\t\tlet part: string = details.parts[i];\r\n\t\t\tlet unit: TimeUnit = this.toTimeUnit(part.substr(0, 1));\r\n\t\t\tlet digits: number = part.length;\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tlet ints: number = Math.floor(tstamp / this._unitValues[unit]);\r\n\t\t\tres = res.replace($strings.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n\r\n\t\t\t// Reduce timestamp\r\n\t\t\ttstamp -= ints * this._unitValues[unit];\r\n\t\t}\r\n\r\n\t\t// Reapply negative sign\r\n\t\tif (negative) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value to timestamp in milliseconds.\r\n\t *\r\n\t * @param  {number}    value     A source value\r\n\t * @param  {TimeUnit}  baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n\t * @return {number}              Value representation as a timestamp in milliseconds\r\n\t */\r\n\tpublic toTimeStamp(value: number, baseUnit: TimeUnit): number {\r\n\t\treturn value * this._unitValues[baseUnit];\r\n\t}\r\n\r\n\tprotected toTimeUnit(code: string): Optional<TimeUnit> {\r\n\t\tswitch (code) {\r\n\t\t\tcase \"S\":\r\n\t\t\t\treturn \"millisecond\";\r\n\t\t\tcase \"s\":\r\n\t\t\t\treturn \"second\";\r\n\t\t\tcase \"m\":\r\n\t\t\t\treturn \"minute\";\r\n\t\t\tcase \"h\":\r\n\t\t\t\treturn \"hour\";\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn \"day\";\r\n\t\t\tcase \"w\":\r\n\t\t\t\treturn \"week\";\r\n\t\t\tcase \"M\":\r\n\t\t\t\treturn \"month\";\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn \"year\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the parent [[Sprite]] object.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Base unit the values are in.\r\n\t *\r\n\t * A base unit will be used to recalculate the numeric value to millisecond\r\n\t * timestamps.\r\n\t *\r\n\t * Available options:\r\n\t *\r\n\t * * \"millisecond\"\r\n\t * * \"second\"\r\n\t * * \"minute\"\r\n\t * * \"hour\"\r\n\t * * \"day\"\r\n\t * * \"week\"\r\n\t * * \"month\"\r\n\t * * \"year\"\r\n\t *\r\n\t * @default \"s\"\r\n\t * @param {TimeUnit}  baseUnit  A base unit\r\n\t */\r\n\tpublic set baseUnit(baseUnit: TimeUnit) {\r\n\t\tthis._baseUnit = baseUnit;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Base unit\r\n\t */\r\n\tpublic get baseUnit(): TimeUnit {\r\n\t\treturn this._baseUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Setter for output format: \"svg\" or \"html.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  value  Output format\r\n\t */\r\n\tpublic set outputFormat(outputFormat: string) {\r\n\t\tthis._outputFormat = outputFormat.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * Getter for output format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Output format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns appropriate default format for the value.\r\n\t *\r\n\t * If `maxValue` is sepcified, it will use that value to determine the time\r\n\t * unit for the format.\r\n\t *\r\n\t * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n\t * will get `\"10\"`.\r\n\t *\r\n\t * However, you might want it to be formatted in the context of bigger scale,\r\n\t * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n\t * values, including small ones will use format with minutes, e.g.:\r\n\t * `00:10`, `00:50`, `12: 30`, etc.\r\n\t *\r\n\t * @param  {number}    value     Value to format\r\n\t * @param  {number}    maxValue  Maximum value to be used to determine format\r\n\t * @param  {TimeUnit}  baseUnit  Base unit of the value\r\n\t * @return {string}              Format\r\n\t */\r\n\tpublic getFormat(value: number, maxValue?: number, baseUnit?: TimeUnit): string {\r\n\r\n\t\t// Is format override set?\r\n\t\tif ($type.hasValue(this.durationFormat)) {\r\n\t\t\treturn this.durationFormat;\r\n\t\t}\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(maxValue) && value != maxValue) {\r\n\t\t\tvalue = Math.abs(value);\r\n\t\t\tmaxValue = Math.abs(maxValue);\r\n\t\t\tlet maxUnit = this.getValueUnit($math.max(value, maxValue), baseUnit);\r\n\t\t\t//let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n\t\t\t//console.log(maxUnit, diffUnit);\r\n\t\t\treturn this.durationFormats[baseUnit][maxUnit];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet unit = this.getValueUnit(value, baseUnit);\r\n\t\t\treturn this.durationFormats[baseUnit][unit];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value's closest denominator time unit, e.g 100 seconds is\r\n\t * `\"minute\"`, while 59 seconds would still be `second`.\r\n\t *\r\n\t * @param  {number}    value     Source duration value\r\n\t * @param  {TimeUnit}  baseUnit  Base unit\r\n\t * @return {TimeUnit}            Denominator\r\n\t */\r\n\tpublic getValueUnit(value: number, baseUnit?: TimeUnit): TimeUnit {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\t// Convert to milliseconds\r\n\t\tlet currentUnit: TimeUnit;\r\n\t\tlet ms = this.getMilliseconds(value, baseUnit);\r\n\t\t$object.eachContinue(this._unitValues, (key, val) => {\r\n\t\t\tif (key == baseUnit || currentUnit) {\r\n\t\t\t\tlet num = ms / val;\r\n\t\t\t\tif (num <= 1) {\r\n\t\t\t\t\tif (!currentUnit) {\r\n\t\t\t\t\t\tcurrentUnit = key;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentUnit = key;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\treturn currentUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts value to milliseconds according to `baseUnit`.\r\n\t * \r\n\t * @param  {number}    value     Source duration value\r\n\t * @param  {TimeUnit}  baseUnit  Base unit\r\n\t * @return {number}              Value in milliseconds\r\n\t */\r\n\tpublic getMilliseconds(value: number, baseUnit?: TimeUnit): number {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\treturn value * this._unitValues[baseUnit];\r\n\t}\r\n\r\n\t/**\r\n\t * If set, this format will be used instead of the one determined dynamically\r\n\t * based on the basedUnit and range of values.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Available fomatting codes\r\n\t * @param {string}  value  Format\r\n\t */\r\n\tpublic set durationFormat(value: string) {\r\n\t\tif (this._durationFormat != value) {\r\n\t\t\tthis._durationFormat = value;\r\n\t\t\tthis.invalidateSprite();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Format\r\n\t */\r\n\tpublic get durationFormat(): Optional<string> {\r\n\t\treturn this._durationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Duration formats for various combination of base units.\r\n\t * \r\n\t * @param {Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>}  value  Formats\r\n\t */\r\n\tpublic set durationFormats(value: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>) {\r\n\t\tthis._durationFormats = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Partial} Formats\r\n\t */\r\n\tpublic get durationFormats(): Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>> {\r\n\t\tif (!this._durationFormats) {\r\n\t\t\tthis._durationFormats = {\r\n\t\t\t\t\"millisecond\": {\r\n\t\t\t\t\t\"millisecond\": this.language.translate(\"_duration_millisecond\"),\r\n\t\t\t\t\t\"second\": this.language.translate(\"_duration_millisecond_second\"),\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_millisecond_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_millisecond_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_millisecond_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_millisecond_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_millisecond_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_millisecond_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"second\": {\r\n\t\t\t\t\t\"second\": this.language.translate(\"_duration_second\"),\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_second_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_second_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_second_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_second_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_second_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_second_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"minute\": {\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_minute_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_minute_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_minute_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_minute_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_minute_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"hour\": {\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_hour_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_hour_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_hour_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_hour_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"day\": {\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_day_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_day_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_day_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"week\": {\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_week_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_week_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"month\": {\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_month_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"year\": {\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_year\")\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this._durationFormats;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationFormatter\"] = DurationFormatter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/formatters/DurationFormatter.ts","/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard, KeyboardKeys } from \"../utils/Keyboard\";\r\nimport { Color, color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { StyleRule } from \"../utils/DOM\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n\r\n// TODO better parsing\r\nconst fontFamilySrcRegexp = /src: ([^;]+);/;\r\n\r\n// TODO better checks\r\nfunction supportsBlobUri(): boolean {\r\n\treturn window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// TODO handle abort ?\r\n\t\tconst f = new FileReader();\r\n\t\tf.onload = (e) => { resolve(<string>f.result); };\r\n\t\tf.onerror = (e) => { reject(e); };\r\n\t\tf.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nasync function loadStylesheet<A>(url: string, f: (sheet: CSSStyleSheet) => Promise<A>): Promise<A> {\r\n\tconst response = await $net.load(url);\r\n\r\n\tconst s = document.createElement(\"style\");\r\n\ts.textContent = response.response;\r\n\tdocument.head.appendChild(s);\r\n\r\n\ttry {\r\n\t\treturn await f(<CSSStyleSheet>s.sheet);\r\n\r\n\t} finally {\r\n\t\tdocument.head.removeChild(s);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheet(topUrl: string, sheet: CSSStyleSheet, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tconst promises: Array<Promise<void>> = [];\r\n\r\n\tfor (let i = 0; i < sheet.cssRules.length; i++) {\r\n\t\tconst rule = sheet.cssRules[i];\r\n\r\n\t\tif (rule.type === CSSRule.IMPORT_RULE) {\r\n\t\t\tlet url = (<CSSImportRule>rule).href;\r\n\r\n\t\t\tif (url) {\r\n\t\t\t\turl = $utils.joinUrl(topUrl, url);\r\n\t\t\t\tpromises.push(loadStylesheet(url, (sheet) => eachStylesheet(url, sheet, f)));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tf(topUrl, rule);\r\n\t\t}\r\n\t}\r\n\r\n\tif (promises.length) {\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheets(f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tawait Promise.all($array.map(document.styleSheets, (sheet) => {\r\n\t\tlet url = sheet.href;\r\n\r\n\t\tif (url == null) {\r\n\t\t\treturn eachStylesheet(location.href, <CSSStyleSheet>sheet, f);\r\n\r\n\t\t} else {\r\n\t\t\turl = $utils.joinUrl(location.href, url);\r\n\t\t\treturn loadStylesheet(url, (sheet) => eachStylesheet(url, sheet, f));\r\n\t\t}\r\n\t}));\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Export]].\r\n */\r\nexport type ExportOperation = {\r\n\tformat?: string;\r\n\toptions?: any;\r\n}\r\n\r\n/**\r\n * Defines image formats available for export.\r\n *\r\n * @type {string}\r\n */\r\nexport type imageFormats = \"png\" | \"gif\" | \"jpg\";\r\n\r\n/**\r\n * Represents options for image export.\r\n */\r\nexport interface IExportImageOptions {\r\n\r\n\t/**\r\n\t * Quality of the exported image. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tquality?: number;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @type {number}\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Normally, Export removes \"tainted\" images (images that are loaded from\r\n\t * other host than the chart itself) before export.\r\n\t *\r\n\t * Set this to `true` to disable it.\r\n\t *\r\n\t * Please note that removal of tainted images might trigger cross-origin\r\n\t * security restrictions in browser and prevent the whole export operation,\r\n\t * so use with caution.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tkeepTainted?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for SVG export.\r\n */\r\nexport interface IExportSVGOptions {\r\n}\r\n\r\n/**\r\n * Available PDF page sizes.\r\n *\r\n * @type {string}\r\n */\r\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\r\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\r\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\r\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\r\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\r\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\r\n\r\n/**\r\n * Represents options for PDF export.\r\n */\r\nexport interface IExportPDFOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * Font size to use for all texts.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * An image format to use for embedded images in PDF.\r\n\t *\r\n\t * See `imageFormats` in [[Export_module]].\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\timageFormat?: imageFormats;\r\n\r\n\t/**\r\n\t * Whether to add a URL of the web page the chart has been exported from.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default true\r\n\t */\r\n\taddURL?: boolean;\r\n\r\n\t/**\r\n\t * Page size of the exported PDF.\r\n\t *\r\n\t * See `pageSizes` in [[Export_module]].\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpageSize?: pageSizes;\r\n\r\n\t/**\r\n\t * Page orientation.\r\n\t */\r\n\tpageOrientation?: \"landscape\" | \"portrait\";\r\n\r\n\t/**\r\n\t * Page margins.\r\n\t *\r\n\t * Can be one of the following:\r\n\t *\r\n\t * A single number, in which case it will act as margin setting\r\n\t * for all four edges of the page.\r\n\t *\r\n\t * An array of two numbers `[ horizontal, vertical ]`.\r\n\t *\r\n\t * An array of four numbers `[ left, top, right, bottom ]`.\r\n\t */\r\n\tpageMargins?: number | number[];\r\n\r\n}\r\n\r\n/**\r\n * Represents options for CSV export.\r\n */\r\nexport interface IExportCSVOptions {\r\n\r\n\t/**\r\n\t * Separator string to separate columns with.\r\n\t *\r\n\t * @default \",\"\r\n\t * @type {string}\r\n\t */\r\n\tseparator?: string;\r\n\r\n\t/**\r\n\t * CSV format does not require enclosing values in quotes, unless it\r\n\t * contains strings.\r\n\t *\r\n\t * This setting can be used to enforce enclosing of all values in CSV with\r\n\t * quotes.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tforceQuotes?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Add rows in reverse order.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n}\r\n\r\n/**\r\n * Represents options for JSON export\r\n */\r\nexport interface IExportJSONOptions {\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Sets indent size for each hierarchical elements.\r\n\t *\r\n\t * @default \"  \"\r\n\t * @type {number}\r\n\t */\r\n\tindent?: number;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for XLSX export.\r\n */\r\nexport interface IExportExcelOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tuseLocale?: boolean;\r\n}\r\n\r\n/**\r\n * Represents options for print.\r\n */\r\nexport interface IExportPrintOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * A delay in milliseconds to wait before initiating print.\r\n\t *\r\n\t * This delay is necessary to ensure DOM is prepared and repainted before\r\n\t * print dialog kicks in.\r\n\t *\r\n\t * @default 500\r\n\t * @type {number}\r\n\t */\r\n\tdelay?: number;\r\n\r\n\t/**\r\n\t * Method to use for printing.\r\n\t *\r\n\t * If one fails for your particular setup, try the other.\r\n\t *\r\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\r\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\r\n\t *\r\n\t * @default \"iframe\"\r\n\t */\r\n\tprintMethod?: \"css\" | \"iframe\";\r\n\r\n}\r\n\r\n/**\r\n * Represents options for custom menu items.\r\n */\r\nexport interface IExportCustomOptions {\r\n\r\n\t/**\r\n\t * A callback function reference that will be called when this custom item\r\n\t * is clicked.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tcallback?: (branch?: any) => any;\r\n\r\n}\r\n\r\n/**\r\n * Represents interface for a temporarily removed image.\r\n */\r\nexport interface IExportRemovedObject {\r\n\r\n\t/**\r\n\t * Element that was removed out of DOM.\r\n\t *\r\n\t * @type {Node}\r\n\t */\r\n\telement: Node;\r\n\r\n\t/**\r\n\t * A placeholder element that was placed instead of removed element so that\r\n\t * we know where to put removed element back in.\r\n\t *\r\n\t * @type {Node}\r\n\t */\r\n\tplaceholder: Node;\r\n\r\n}\r\n\r\n/**\r\n * Represents all available options for all export operations.\r\n */\r\nexport interface IExportOptions {\r\n\tpng: IExportImageOptions;\r\n\tgif: IExportImageOptions;\r\n\tjpg: IExportImageOptions;\r\n\tsvg: IExportSVGOptions;\r\n\tpdf: IExportPDFOptions;\r\n\txlsx: IExportExcelOptions;\r\n\tcsv: IExportCSVOptions;\r\n\tjson: IExportJSONOptions;\r\n\tprint: IExportPrintOptions;\r\n\tcustom: IExportCustomOptions;\r\n}\r\n\r\n/**\r\n * All export options as a type.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport type ExportOptions = IExportImageOptions | IExportSVGOptions | IExportPDFOptions | IExportExcelOptions | IExportCSVOptions | IExportJSONOptions | IExportPrintOptions;\r\n\r\n/**\r\n * Defines events for export operations.\r\n */\r\nexport interface IExportEvents {\r\n\r\n\t/**\r\n\t * Invoked when Export initializes.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when Export menu is created.\r\n\t */\r\n\tmenucreated: {};\r\n\r\n\t/**\r\n\t * Invoked when the Export starts export procedure.\r\n\t *\r\n\t * You can use event handlers here to modify config before actual export\r\n\t * starts.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texportstarted: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation finishes.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texportfinished: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation encounters error.\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\terror: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation times out.\r\n\t *\r\n\t * Use Export's `timeoutDelay` setting to set timeout. (default: 2000ms)\r\n\t *\r\n\t * @type {ExportOperation}\r\n\t */\r\n\texporttimedout: ExportOperation;\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport type Keys = keyof IExportOptions;\r\n\r\n/**\r\n * Represents a list of available adapters for [[Export]].\r\n */\r\nexport interface IExportAdapters {\r\n\r\n\tsupported: {\r\n\t\tsupported: boolean,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\texportFunction: {\r\n\t\tfunc: (type: Keys, options?: IExportOptions[Keys]) => Promise<any>,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\toptions: {\r\n\t\toptions: IExportOptions[Keys],\r\n\t\ttype?: Keys\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttitle: $type.Optional<string>,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcharset: {\r\n\t\tcharset: string,\r\n\t\ttype?: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t}\r\n\r\n\tsvgToDataURI: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tnormalizeSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetCSV: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetJSON: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetExcel: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeDocument: {\r\n\t\tdoc: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tcontainer: HTMLElement\r\n\t},\r\n\r\n\tsprite: {\r\n\t\tsprite: Sprite\r\n\t},\r\n\r\n\tdata: {\r\n\t\tdata: Array<any>\r\n\t},\r\n\r\n\tdataFields: {\r\n\t\tdataFields: any\r\n\t},\r\n\r\n\tdateFormatter: {\r\n\t\tdateFormatter: DateFormatter\r\n\t},\r\n\r\n\tdateFormat: {\r\n\t\tdateFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tdateFields: {\r\n\t\tdateFields: any\r\n\t},\r\n\r\n\tdataFieldName: {\r\n\t\tname: string,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDateField: {\r\n\t\tisDateField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tcontentType: {\r\n\t\tcontentType: string,\r\n\t\ttype: Keys\r\n\t},\r\n\r\n\tfilePrefix: {\r\n\t\tfilePrefix: string\r\n\t},\r\n\r\n\tbackgroundColor: {\r\n\t\tbackgroundColor: $type.Optional<Color>\r\n\t},\r\n\r\n\ttimeoutMessage: {\r\n\t\tmessage: string\r\n\t},\r\n\r\n\txlsxWorkbookOptions: {\r\n\t\toptions: any\r\n\t},\r\n\r\n\txlsxSheetName: {\r\n\t\tname: string\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nexport class Export extends Validatable {\r\n\r\n\t/**\r\n\t * XLINK namespace definition.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tstatic XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IExportEvents}\r\n\t */\r\n\tpublic _events!: IExportEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IExportAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Export, IExportAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<Export, IExportAdapters>(this);\r\n\r\n\t/**\r\n\t * Holds options for each format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, ExportOptions>}\r\n\t */\r\n\tprivate _formatOptions: Dictionary<string, ExportOptions> = new Dictionary<string, ExportOptions>();\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Language}\r\n\t */\r\n\tprotected _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<ExportMenu>}\r\n\t */\r\n\tprotected _menu: $type.Optional<ExportMenu>;\r\n\r\n\t/**\r\n\t * Reference to main container to place menu in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * [[Sprite]] instance to be used when converting to image.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Sprite>}\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Data storage to be used when exporting to data formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {any}\r\n\t */\r\n\tprotected _data: any;\r\n\r\n\t/**\r\n\t * Holds an object of field key / field name used to name columns when\r\n\t * exporting to data formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {any}\r\n\t */\r\n\tprotected _dataFields: any;\r\n\r\n\t/**\r\n\t * A reference to [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<DateFormatter>}\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * A Date format to be used when formatting dates in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<string>}\r\n\t */\r\n\tprotected _dateFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold date values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<List<string>>}\r\n\t */\r\n\tprotected _dateFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * Holds a list of objects that were temporarily removed from the DOM while\r\n\t * exporting. Those most probably are tainted images, or foreign objects that\r\n\t * would otherwise prevent SVG to be converted to canvas.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<IExportRemovedObject>}\r\n\t */\r\n\tprotected _removedObjects: List<IExportRemovedObject> = new List<IExportRemovedObject>();\r\n\r\n\t/**\r\n\t * Exported files will be prefixed with whatever it is set here.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _filePrefix: string = \"amCharts\";\r\n\r\n\t/**\r\n\t * Export will try to determine proper background color itself. If you want to\r\n\t * override it and use some other color, set this property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Color>}\r\n\t */\r\n\tprotected _backgroundColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * A title to use for some document exports, mainly for print.\r\n\t * A document.title will be used if not set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<string>}\r\n\t */\r\n\tprotected _title: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If you are using web fonts (such as Google Fonts), your chart might be\r\n\t * using them as well.\r\n\t *\r\n\t * Normally, exporting to image will require to download these fonts so the\r\n\t * are carried over to exported image.\r\n\t *\r\n\t * This setting can be used to disable or enable this functionality.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic useWebFonts: boolean = true;\r\n\r\n\t/**\r\n\t * Many modern displays have use more actual pixels per displayed pixel. This\r\n\t * results in sharper images on screen. Unfortunately, when exported to a\r\n\t * bitmap image of the sam width/height size it will lose those extra pixels,\r\n\t * resulting in somewhat blurry image.\r\n\t *\r\n\t * This is why we are going to export images larger than they are, so that we\r\n\t * don't lose any details.\r\n\t *\r\n\t * If you'd rather export images without change in size, set this to `false`.\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic useRetina: boolean = true;\r\n\r\n\t/**\r\n\t * If export operation takes longer than milliseconds in this second, we will\r\n\t * show a modal saying export operation took longer than expected.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic timeoutDelay: number = 2000;\r\n\r\n\t/**\r\n\t * A reference to export timeout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _timeoutTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Modal]] instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<Modal>}\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t *\r\n\t * @type {Optional<boolean>}\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(container: HTMLElement) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.className = \"Export\";\r\n\r\n\t\t// Set default options\r\n\t\tthis._formatOptions.setKey(\"png\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"jpg\", {\r\n\t\t\tquality: 0.8\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"gif\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"svg\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdf\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\taddURL: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"json\", {\r\n\t\t\tindent: 2,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"csv\", {\r\n\t\t\taddColumnNames: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"xlsx\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"print\", {\r\n\t\t\tdelay: 500,\r\n\t\t\tprintMethod: \"iframe\"\r\n\t\t});\r\n\r\n\t\t// Add options adapter\r\n\t\tthis.adapter.add(\"options\", (arg) => {\r\n\t\t\tlet formatOptions = this._formatOptions.getKey(arg.type);\r\n\t\t\tif (arg.options) {\r\n\t\t\t\targ.options = $object.merge(arg.options, formatOptions);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\targ.options = formatOptions;\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.dispatchImmediately(\"inited\");\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * To add an export menu to a chart, set this to a new instance of\r\n\t * [[ExportMenu]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     \"menu\": {}\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param {Optional<ExportMenu>}  menu  ExportMenu instance\r\n\t */\r\n\tpublic set menu(menu: $type.Optional<ExportMenu>) {\r\n\t\tif (this._menu) {\r\n\t\t\tthis.removeDispose(this._menu);\r\n\t\t}\r\n\t\tthis._menu = menu;\r\n\r\n\t\t// Set container and language\r\n\t\tthis._menu.container = this.container;\r\n\t\tthis._menu.language = this._language;\r\n\r\n\t\t// Add adapter to check for browser support\r\n\t\tthis._menu.adapter.add(\"branch\", (arg) => {\r\n\t\t\targ.branch.unsupported = !this.typeSupported(arg.branch.type);\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add click events\r\n\t\tthis._menu.events.on(\"hit\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"enter\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"over\", (ev) => {\r\n\t\t\tthis._disablePointers();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"out\", (ev) => {\r\n\t\t\tthis._releasePointers();\r\n\t\t});\r\n\r\n\t\t// Dispatch event\r\n\t\tthis.dispatchImmediately(\"menucreated\");\r\n\r\n\t\t// Prefix with Sprite's class name\r\n\t\tthis._menu.adapter.add(\"classPrefix\", (obj) => {\r\n\t\t\tobj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\t// Add menu to disposers so that it's destroyed when Export is disposed\r\n\t\tthis._disposers.push(this._menu);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<ExportMenu>} ExportMenu instance\r\n\t */\r\n\tpublic get menu(): $type.Optional<ExportMenu> {\r\n\t\treturn this._menu;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this specific menu item type is supported by current system.\r\n\t *\r\n\t * @param  {string}   type  Menu item type\r\n\t * @return {boolean}        `false` if not supported\r\n\t */\r\n\tpublic typeSupported<Key extends keyof IExportOptions>(type: Key): boolean {\r\n\t\tlet supported = true;\r\n\t\tif (type === \"pdf\") {\r\n\t\t\tsupported = this.downloadSupport();\r\n\t\t}\r\n\t\telse if (type === \"xlsx\") {\r\n\t\t\tsupported = (this.downloadSupport() && this.data) ? true : false;\r\n\t\t}\r\n\t\telse if (type == \"print\" && !(<any>window).print) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if ([\"json\", \"csv\"].indexOf(type) !== -1 && !this.data) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"supported\", {\r\n\t\t\tsupported: supported,\r\n\t\t\ttype: type\r\n\t\t}).supported;\r\n\t}\r\n\r\n\t/**\r\n\t * Get function to handle export for particular format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {this}\r\n\t */\r\n\tprivate _getFunction<Key extends keyof IExportOptions>(type: Key): (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\treturn <any>this.getImage;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\treturn <any>this.getSVG;\r\n\t\t\tcase \"pdf\":\r\n\t\t\t\treturn <any>this.getPDF;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\treturn <any>this.getExcel;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\treturn <any>this.getCSV;\r\n\t\t\tcase \"json\":\r\n\t\t\t\treturn <any>this.getJSON;\r\n\t\t\tcase \"print\":\r\n\t\t\t\treturn this.getPrint;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.unsupported;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates export procedure.\r\n\t *\r\n\t * @param  {string}   type     Export type\r\n\t * @param  {Object}   options  Options\r\n\t * @return {boolean}           `true` if export was successful\r\n\t * @async\r\n\t */\r\n\tpublic async export<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<boolean> {\r\n\r\n\t\t// Dispatch event\r\n\t\tif (this.events.isEnabled(\"exportstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportstarted\"] = {\r\n\t\t\t\t\"type\": \"exportstarted\",\r\n\t\t\t\t\"target\": this,\r\n\t\t\t\t\"format\": type,\r\n\t\t\t\t\"options\": options\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"exportstarted\", event);\r\n\t\t}\r\n\r\n\t\t// Check if it's a custom item, and do nothing or execute custom callback\r\n\t\tif (type == \"custom\") {\r\n\t\t\tthis.handleCustom(<IExportCustomOptions>options);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Schedule a preloader\r\n\t\tthis.showPreloader()\r\n\r\n\t\t// Schedule a timeout\r\n\t\tif (this.timeoutDelay) {\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tthis._timeoutTimeout = this.setTimeout((): void => {\r\n\r\n\t\t\t\t// Dispatch event\r\n\t\t\t\tif (this.events.isEnabled(\"exporttimedout\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exporttimedout\"] = {\r\n\t\t\t\t\t\t\"type\": \"exporttimedout\",\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\t\"options\": options\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"exporttimedout\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show modal\r\n\t\t\t\tthis.showTimeout()\r\n\r\n\t\t\t}, this.timeoutDelay);\r\n\t\t}\r\n\r\n\t\tlet func: (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> = this._getFunction(type);\r\n\r\n\t\t// Give chance for plugins to override both function and options\r\n\t\toptions = this.adapter.apply(\"options\", {\r\n\t\t\toptions: options,\r\n\t\t\ttype: type\r\n\t\t}).options;\r\n\r\n\r\n\t\tfunc = this.adapter.apply(\"exportFunction\", {\r\n\t\t\tfunc: func,\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).func;\r\n\r\n\t\t// Get exported stuff\r\n\t\tlet data = await func.call(this, type, options);\r\n\r\n\t\tif (data) {\r\n\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"exportfinished\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportfinished\"] = {\r\n\t\t\t\t\t\"type\": \"exportfinished\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"exportfinished\", event);\r\n\t\t\t}\r\n\r\n\t\t\t// Hide preloader and timeout modals\r\n\t\t\tthis.hidePreloader();\r\n\t\t\tthis.hideTimeout();\r\n\r\n\t\t\t// Download or print\r\n\t\t\tif (type === \"print\") {\r\n\t\t\t\treturn this.print(data, <IExportOptions[\"print\"]>options, this.adapter.apply(\"title\", {\r\n\t\t\t\t\ttitle: this.title,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t}).title);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.download(data, this.filePrefix + \".\" + type);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Throw exception?\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"error\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"error\"] = {\r\n\t\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"error\", event);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A function that should handle unsupported export types.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}              type     Export type\r\n\t * @param  {IExportImageOptions} options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t * @async\r\n\t */\r\n\tpublic async unsupported<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<string> {\r\n\t\t// TODO should this return `undefined`?\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on a \"custom\" menu item.\r\n\t *\r\n\t * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportCustomOptions}  options  Options\r\n\t */\r\n\tpublic handleCustom(options: IExportCustomOptions): void {\r\n\t\tif ($type.hasValue(options.callback)) {\r\n\t\t\toptions.callback.call(this, options);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests a Print of the chart.\r\n\t *\r\n\t * @param  {string}               type     Export type\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPrint(type: string, options?: IExportPrintOptions): Promise<string> {\r\n\t\treturn this.getImage(\"png\", options);\r\n\t}\r\n\r\n\t/**\r\n\t * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<string>} String which can be embedded directly into a <style> element.\r\n\t * @async\r\n\t */\r\n\tpublic async getFontFamilies(): Promise<{ blobs: Array<string>, cssText: string }> {\r\n\t\tconst DOMURL = this.getDOMURL();\r\n\r\n\t\tconst blobs: Array<string> = [];\r\n\t\tconst promises: Array<Promise<string>> = [];\r\n\r\n\t\tawait eachStylesheets((topUrl, rule) => {\r\n\t\t\tif (rule.type === CSSRule.FONT_FACE_RULE) {\r\n\t\t\t\tconst cssText = rule.cssText;\r\n\r\n\t\t\t\t// TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n\t\t\t\tconst src = fontFamilySrcRegexp.exec(cssText);\r\n\r\n\t\t\t\tif (src !== null) {\r\n\t\t\t\t\t// TODO make this faster (don't create Promises for non-url stuff)\r\n\t\t\t\t\tconst urls: Array<Promise<string | null>> = src[1].split(/ *, */).map(async (url) => {\r\n\t\t\t\t\t\t// TODO better parsing for this\r\n\t\t\t\t\t\t// TODO is it necessary to handle ' ?\r\n\t\t\t\t\t\tconst a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n\r\n\t\t\t\t\t\tif (a === null) {\r\n\t\t\t\t\t\t\treturn url;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst after = a[2];\r\n\r\n\t\t\t\t\t\t\tconst fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// Fetch the actual font-file (.woff)\r\n\t\t\t\t\t\t\t\tconst response = await $net.load(fullUrl, undefined, { responseType: \"blob\" });\r\n\r\n\t\t\t\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\t\t\t\t// We need blob for IE and Edge\r\n\t\t\t\t\t\t\t\tif (supportsBlobUri()) {\r\n\t\t\t\t\t\t\t\t\turl = DOMURL.createObjectURL(response.blob);\r\n\t\t\t\t\t\t\t\t\tblobs.push(url);\r\n\r\n\t\t\t\t\t\t\t\t\t// We need a data URI for Firefox and Chrome\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\turl = await blobToDataUri(response.blob);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// TODO should it should escape the URI ?\r\n\t\t\t\t\t\t\t\treturn \"url(\\\"\" + url + \"\\\")\" + after;\r\n\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Failed to load font\", fullUrl, e);\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(Promise.all(urls).then((a) => {\r\n\t\t\t\t\t\ta = a.filter((x) => x != null);\r\n\r\n\t\t\t\t\t\tif (a.length === 0) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn cssText.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst a = await Promise.all(promises);\r\n\r\n\t\treturn {\r\n\t\t\tblobs: blobs,\r\n\t\t\tcssText: a.filter((x) => !!x).join(\"\\n\")\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Produces image output from the element.\r\n\t *\r\n\t * Converts to a `Canvas` first, then produces an image to download.\r\n\t *\r\n\t * This is an asynchronous function. Rather than returning a result, it\r\n\t * returns a Promise.\r\n\t *\r\n\t * You can use `await` notion from other async functions, or `then()`\r\n\t * anywhere else.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Async\r\n\t * let img = await chart.exporting.getImage( \"PNG\" );\r\n\t *\r\n\t * // Sync\r\n\t * let img;\r\n\t * chart.exporting.getImage( \"PNG\" ).then( ( data ) => {\r\n\t *   img = exporing;\r\n\t * } );\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var img;\r\n\t * chart.exporting.getImage( \"PNG\" ).then( ( data ) => {\r\n\t *   var = data;\r\n\t * } );\r\n\t * ```\r\n\t *\r\n\t * @param  {string}               type     Image format\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}               Promise\r\n\t */\r\n\tpublic async getImage<Key extends imageFormats>(type: Key, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Are we using simplified export option?\r\n\t\tif (await this.simplifiedImageExport()) {\r\n\r\n\t\t\t// Get background\r\n\t\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t\t// Get DOM URL\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet url: string | null = null;\r\n\t\t\tlet blobs: Array<string> | null = null;\r\n\r\n\t\t\t// Create temporary image element\r\n\t\t\ttry {\r\n\t\t\t\t/**\r\n\t\t\t\t * Simplified version using `createObjectURL`\r\n\t\t\t\t * Not supported in older browsers\r\n\t\t\t\t */\r\n\r\n\t\t\t\t// Get dimensions\r\n\t\t\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t\t\t// Create canvas and its 2D context\r\n\t\t\t\tvar canvas = this.getDisposableCanvas();\r\n\r\n\t\t\t\t// Set canvas width/height\r\n\t\t\t\tlet pixelRatio = this.getPixelRatio();\r\n\t\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\t\tcanvas.style.height = height + 'px';\r\n\t\t\t\tcanvas.width = width * pixelRatio;\r\n\t\t\t\tcanvas.height = height * pixelRatio;\r\n\r\n\t\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\r\n\t\t\t\tif (pixelRatio != 1) {\r\n\t\t\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add background if necessary\r\n\t\t\t\tif (background) {\r\n\t\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\t\tctx.fillRect(0, 0, width, height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\t\t\tif (this.useWebFonts) {\r\n\t\t\t\t\t// TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n\t\t\t\t\tpromises.push(this.getFontFamilies().then((fonts) => {\r\n\t\t\t\t\t\tblobs = fonts.blobs;\r\n\t\t\t\t\t\treturn fonts.cssText;\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpromises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n\t\t\t\tpromises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n\r\n\t\t\t\t// Do prepareations on a document\r\n\t\t\t\tlet a = await Promise.all(promises);\r\n\r\n\t\t\t\t// Get SVG representation of the Sprite\r\n\t\t\t\tlet data = this.normalizeSVG(\r\n\t\t\t\t\t\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tfont,\r\n\t\t\t\t\tfontSize\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Get Blob representation of SVG and create object URL\r\n\t\t\t\tlet svg = new Blob([data], { type: \"image/svg+xml\" });\r\n\t\t\t\turl = DOMURL.createObjectURL(svg);\r\n\r\n\t\t\t\tlet img = await this.loadNewImage(url, width, height, \"anonymous\");\r\n\r\n\t\t\t\t// Draw image on canvas\r\n\t\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t\t\t// Options are set?\r\n\t\t\t\tif (!$type.hasValue(options)) {\r\n\t\t\t\t\toptions = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert to data uri\r\n\t\t\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t\t\t// Get rid of the canvas\r\n\t\t\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\t\t\treturn uri;\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// An error occurred, let's try advanced method\r\n\t\t\t\treturn await this.getImageAdvanced(type, options);\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tif (url !== null) {\r\n\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (blobs !== null) {\r\n\t\t\t\t\t$array.each(blobs, (url) => {\r\n\t\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Restore replaced tainted images in DOM\r\n\t\t\t\tthis.restoreRemovedObjects();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Going the hard way. Converting to canvas from each node\r\n\t\t\t */\r\n\t\t\treturn await this.getImageAdvanced(type, options);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n\t * export an image using its functions.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               type     Image format\r\n\t * @param {IExportImageOptions}  options  Options\r\n\t * @return {Promise<string>}              Data uri\r\n\t */\r\n\tpublic async getImageAdvanced(type: imageFormats, options?: IExportImageOptions): Promise<string> {\r\n\t\t//console.warn(\"Falling back to canvg for exporting\");\r\n\r\n\t\t// Convert external images to data uris\r\n\t\tawait this.imagesToDataURI(this.sprite.dom, options);\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get canvg\r\n\t\tlet canvg = await this.canvg;\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t// Get SVG representation of the Sprite\r\n\t\tlet data = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tfont,\r\n\t\t\tfontSize,\r\n\t\t\tbackground\r\n\t\t);\r\n\r\n\t\t// Create canvas and its 2D context\r\n\t\tvar canvas = this.getDisposableCanvas();\r\n\r\n\t\t// Set canvas width/height\r\n\t\tlet pixelRatio = this.getPixelRatio();\r\n\t\tcanvas.style.width = (width * pixelRatio) + 'px';\r\n\t\tcanvas.style.height = (height * pixelRatio) + 'px';\r\n\t\tcanvas.width = width * pixelRatio;\r\n\t\tcanvas.height = height * pixelRatio;\r\n\r\n\t\tlet config: any = {\r\n\t\t\t//ignoreDimensions: true,\r\n\t\t\tuseCORS: true\r\n\t\t};\r\n\r\n\t\tif (pixelRatio != 1) {\r\n\t\t\tconfig.ignoreDimensions = true;\r\n\t\t\tconfig.scaleWidth = width * pixelRatio;\r\n\t\t\tconfig.scaleHeight = height * pixelRatio;\r\n\t\t}\r\n\r\n\t\tvar res = canvg(canvas, data, config);\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t// Convert canvas to data url\r\n\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t// Get rid of the canvas\r\n\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `<canvas>` element and returns it.\r\n\t *\r\n\t * @return {HTMLCanvasElement} Canvas element\r\n\t */\r\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\r\n\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"fixed\";\r\n\t\tcanvas.style.top = \"-10000px\";\r\n\t\tdocument.body.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes canvas.\r\n\t *\r\n\t * @param {HTMLCanvasElement}  canvas  Canvas element\r\n\t */\r\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\r\n\t\tdocument.body.removeChild(canvas);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel ratio for retina displays.\r\n\t *\r\n\t * @return {number} Pixel ratio\r\n\t */\r\n\tprotected getPixelRatio(): number {\r\n\t\treturn this.useRetina ? $utils.getPixelRatio() : 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all `<image>` tags in SVG to use data uris instead of external\r\n\t * URLs\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {SVGSVGElement}        el       SVG node\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<void>}                 Promise\r\n\t */\r\n\tpublic async imagesToDataURI(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all images\r\n\t\tlet images = el.querySelectorAll(\"image\");\r\n\t\tif (images.length) {\r\n\r\n\t\t\t// Init promises\r\n\t\t\tlet promises = [];\r\n\r\n\t\t\t// There are images, process each of them\r\n\t\t\tfor (let count = images.length, i = 0; i < count; i++) {\r\n\r\n\t\t\t\t// Get image and its href\r\n\t\t\t\tlet image = images[i];\r\n\t\t\t\tlet href = image.getAttributeNS(Export.XLINK, \"href\");\r\n\t\t\t\t//let href = image.getAttribute(\"href\");\r\n\r\n\t\t\t\tif (href.indexOf(\"data:image\") !== -1) {\r\n\t\t\t\t\t// Ignore image if it's already in Data URI format\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// SVG or bitmap image?\r\n\t\t\t\t\tif (href.indexOf(\".svg\") !== -1) {\r\n\t\t\t\t\t\tpromises.push(this.svgToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpromises.push(this.imageToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * `foreignObject` elements cannot be exported. This function hides them\r\n\t * temprarily. In the future it might try to convert them to SVG to make them\r\n\t * exportable.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {SVGSVGElement}        el       SVG node\r\n\t * @param  {IExportImageOptions}  options  Options\r\n\t * @return {Promise<void>}                 Promise\r\n\t */\r\n\tpublic async prepForeignObjects(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all foreign objects\r\n\t\tlet objects = el.querySelectorAll(\"foreignObject\");\r\n\t\tif (objects.length) {\r\n\r\n\t\t\t// There are foreign objects, process each of them\r\n\t\t\tfor (let count = objects.length, i = 0; i < count; i++) {\r\n\t\t\t\tthis.temporarilyRemoveObject(objects[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n\t * external file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SVGImageElement}     el       SVG element\r\n\t * @param {IExportImageOptions} options  Options\r\n\t */\r\n\tpublic async imageToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Create a new image and set its `crossOrigin`. This might not work on some\r\n\t\t// browsers. We'll deal with it if error occurs\r\n\t\tlet img: HTMLImageElement;\r\n\t\ttry {\r\n\r\n\t\t\t// Create image\r\n\t\t\timg = await this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\");\r\n\r\n\t\t\t// Create new canvas\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\t// Draw new image on it via `toDataURL`\r\n\t\t\tcanvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n\r\n\t\t\t// Replace image `href` with data uri\r\n\t\t\t// If we got to this point it means image has loaded, however we might\r\n\t\t\t// still get an error with `toDataURL()`\r\n\t\t\ttry {\r\n\t\t\t\tlet uri = canvas.toDataURL();\r\n\t\t\t\tel.setAttribute(\"href\", uri);\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// Give up and temporarily remove the element href temporarily\r\n\t\t\t\tif (options.keepTainted !== false) {\r\n\t\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (e) {\r\n\r\n\t\t\t// Give up and temporarily remove the element's href\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n\t * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SVGImageElement}     el        An SVG element\r\n\t * @param {IExportImageOptions} options   Options\r\n\t */\r\n\tpublic async svgToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\t\tlet href = el.getAttributeNS(Export.XLINK, \"href\");\r\n\t\ttry {\r\n\t\t\tlet data = await $net.load(href);\r\n\t\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\t\tcharset: \"base64\",\r\n\t\t\t\ttype: \"svg\",\r\n\t\t\t\toptions: options\r\n\t\t\t}).charset;\r\n\r\n\t\t\tlet uri = this.adapter.apply(\"svgToDataURI\", {\r\n\t\t\t\tdata: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n\t\t\t\toptions: options\r\n\t\t\t}).data;\r\n\r\n\t\t\tel.setAttributeNS(Export.XLINK, \"href\", uri);\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// Disable temporarily\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": href\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily removes element from DOM, and replaces it with a dummy\r\n\t * placeholder, as well as stores it for later restoration.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Node} el Node\r\n\t */\r\n\tpublic temporarilyRemoveObject(el: Node, placeholder?: SVGSVGElement): void {\r\n\r\n\t\t// Get parent\r\n\t\tlet parent = el.parentElement || el.parentNode;\r\n\r\n\t\t// Create a placeholder group element if it has not been passed in\r\n\t\tif (!placeholder) {\r\n\t\t\tplaceholder = this.sprite.paper.add(\"g\").node;\r\n\t\t}\r\n\t\tparent.insertBefore(placeholder, el);\r\n\r\n\t\t// Check if we have a textContents we can replace with\r\n\t\t// @todo Perhaps we should explore alternatives to creating text nodes\r\n\t\t// i.e. creating a text version of the HTML-based Text, just for export\r\n\t\t// purposes. Converting HTML into SVG is very complicated\r\n\t\tif (el.textContent) {\r\n\t\t\t/*let text = this.sprite.paper.add(\"text\").node;\r\n\t\t\ttext.textContent = el.textContent;\r\n\t\t\tplaceholder.appendChild(text);\r\n\r\n\t\t\t// Copy properties from the removing element to the placeholder\r\n\t\t\t$dom.copyAttributes(el, placeholder);*/\r\n\t\t}\r\n\r\n\t\t// Remove the old element\r\n\t\tparent.removeChild(el);\r\n\r\n\t\t// Log removed item\r\n\t\tthis._removedObjects.push({\r\n\t\t\t\"element\": el,\r\n\t\t\t\"placeholder\": placeholder\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores all (possibly tainted or unsupported) objects that were\r\n\t * temporarily removed when exporting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic restoreRemovedObjects(): void {\r\n\t\tlet obj: IExportRemovedObject;\r\n\t\twhile (obj = this._removedObjects.pop()) {\r\n\t\t\t//obj.element.setAttribute(\"href\", obj.originalHref);\r\n\t\t\tlet parent = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n\t\t\tparent.insertBefore(obj.element, obj.placeholder);\r\n\t\t\t//parent.removeChild(obj.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n\t * document does not contain any external images.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} `true` if simplified export can be used\r\n\t */\r\n\tpublic async simplifiedImageExport(): Promise<boolean> {\r\n\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"simplifiedImageExport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\r\n\t\t// Try generating a small SVG-embedded canvas\r\n\t\t// If exception occurs, simplified method is not supported\r\n\t\ttry {\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = 1;\r\n\t\t\tcanvas.height = 1;\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n\t\t\tlet url = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img = await this.loadNewImage(url, 1, 1);\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\ttry {\r\n\t\t\t\t//let uri = canvas.toDataURL(\"image/png\");\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", true);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}                     url          URL of the image\r\n\t * @param  {number}                     width        Width (px)\r\n\t * @param  {number}                     height       Height (px)\r\n\t * @param  {string}                     crossOrigin  Cross-Origin setting\r\n\t * @return {Promise<HTMLImageElement>}               Promise\r\n\t */\r\n\tpublic loadNewImage(url: string, width?: number, height?: number, crossOrigin?: string): Promise<HTMLImageElement> {\r\n\t\treturn new Promise((success, error) => {\r\n\r\n\t\t\t// New image\r\n\t\t\tlet image: HTMLImageElement;\r\n\t\t\tif (width && height) {\r\n\t\t\t\timage = new Image(width, height);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\timage = new Image();\r\n\t\t\t}\r\n\r\n\t\t\t// Set crossorigin\r\n\t\t\tif (crossOrigin) {\r\n\t\t\t\timage.setAttribute(\"crossOrigin\", crossOrigin);\r\n\t\t\t}\r\n\r\n\t\t\t// Report success on load\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tsuccess(image);\r\n\t\t\t};\r\n\r\n\t\t\tfunction onerror() {\r\n\r\n\t\t\t\t// Error occurred. Just in case it's the crossOrigin issue, let's try\r\n\t\t\t\t// stripping off this attribute and trying again\r\n\t\t\t\tif (crossOrigin) {\r\n\r\n\t\t\t\t\t// Retain old uri\r\n\t\t\t\t\tlet currentHref = image.src;\r\n\r\n\t\t\t\t\t// Set up another `onerror` to handle situations where image is not\r\n\t\t\t\t\t// loadable at all (i.e. protected by CORS)\r\n\t\t\t\t\timage.onerror = () => {\r\n\t\t\t\t\t\t// Nope, no luck\r\n\t\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// remove the `crossOrigin` attribute\r\n\t\t\t\t\timage.removeAttribute(\"crossorigin\");\r\n\r\n\t\t\t\t\t// retry\r\n\t\t\t\t\timage.src = \"\";\r\n\t\t\t\t\timage.src = currentHref;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set image error handlers\r\n\t\t\timage.onabort = onerror;\r\n\t\t\timage.onerror = onerror;\r\n\r\n\t\t\t// Trigger load\r\n\t\t\timage.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current DOM URL.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {any} URL\r\n\t */\r\n\tpublic getDOMURL(): any {\r\n\t\treturn self.URL || (<any>self).webkitURL || self;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG representation of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportSVGOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t */\r\n\tpublic async getSVG(type: \"svg\", options?: IExportSVGOptions): Promise<string> {\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\tfont = this.findFont(this.sprite.dom),\r\n\t\t\tfontSize = this.findFontSize(this.sprite.dom);\r\n\r\n\t\t// Get SVG\r\n\t\tlet svg = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tfont,\r\n\t\t\tfontSize\r\n\t\t);\r\n\t\t// Prep data URI\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: \"svg\",\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getSVG\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n\t * necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}             svg       Input SVG\r\n\t * @param  {IExportSVGOptions}  options   Options\r\n\t * @param  {number}             width     Width of the SVG viewport\r\n\t * @param  {number}             height    Height of the SVG viewport\r\n\t * @param  {string}             font      Font family to use as a base\r\n\t * @param  {string}             fontSize  Font size to use as a base\r\n\t * @return {string}                       Output SVG\r\n\t * @todo Add style params to existing <svg>\r\n\t */\r\n\tpublic normalizeSVG(svg: string, options?: IExportSVGOptions, width?: number, height?: number, font?: string, fontSize?: string, background?: Color): string {\r\n\r\n\t\t// Construct width/height params\r\n\t\tlet dimParams = \"\";\r\n\t\tif (width) {\r\n\t\t\tdimParams += \"width=\\\"\" + width + \"px\\\" \";\r\n\t\t}\r\n\t\tif (height) {\r\n\t\t\tdimParams += \"height=\\\"\" + height + \"px\\\" \";\r\n\t\t}\r\n\r\n\t\t// Apply font settings\r\n\t\tlet styleParams = \"\";\r\n\t\tif (font) {\r\n\t\t\tstyleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n\t\t}\r\n\t\tif (fontSize) {\r\n\t\t\tstyleParams += \"font-size: \" + fontSize + \";\";\r\n\t\t}\r\n\t\t// Add missing <svg> enclosure\r\n\t\tif (!svg.match(/<svg/)) {\r\n\t\t\tsvg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (dimParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}\r\n\r\n\t\t\t/*if (styleParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\r\n\t\tif (background) {\r\n\t\t\tsvg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n\t\t\t//svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n\t\t}\r\n\r\n\t\tsvg = this.adapter.apply(\"normalizeSVG\", {\r\n\t\t\tdata: svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes an element and returns its contents.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {HTMLElement | SVGSVGElement}  element  An element to serialize\r\n\t * @return {string}                                A serialized XML\r\n\t */\r\n\tpublic serializeElement(element: HTMLElement | SVGSVGElement | SVGDefsElement): string {\r\n\t\treturn new XMLSerializer().serializeToString(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a PDF containing chart image.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportPDFOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t * @async\r\n\t * @todo Account for header when calculating vertical fit\r\n\t */\r\n\tpublic async getPDF(type: \"pdf\", options?: IExportPDFOptions): Promise<string> {\r\n\r\n\t\t// Get image\r\n\t\tlet image = await this.getImage(options.imageFormat || \"png\", options);\r\n\r\n\t\t// Load pdfmake\r\n\t\tlet pdfmake = await this.pdfmake;\r\n\r\n\t\t// Defaults\r\n\t\tlet defaultMargins = [30, 30, 30, 30];\r\n\r\n\t\t// Init content for PDF\r\n\t\tlet doc = {\r\n\t\t\tpageSize: options.pageSize || \"A4\",\r\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\r\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\r\n\t\t\t//header: <any>[],\r\n\t\t\tcontent: <any>[]\r\n\t\t};\r\n\r\n\t\t// Should we add title?\r\n\t\tlet title = this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this.title,\r\n\t\t\toptions: options\r\n\t\t}).title;\r\n\r\n\t\tif (title) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: title,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add page URL?\r\n\t\tif (options.addURL) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add image\r\n\t\tdoc.content.push({\r\n\t\t\timage: image,\r\n\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins)\r\n\t\t});\r\n\r\n\t\t// Apply adapters\r\n\t\tdoc = this.adapter.apply(\"pdfmakeDocument\", {\r\n\t\t\tdoc: doc,\r\n\t\t\toptions: options\r\n\t\t}).doc;\r\n\r\n\t\t// Create PDF\r\n\t\treturn await new Promise<string>((success, error) => {\r\n\t\t\tpdfmake.createPdf(doc).getDataUrl((uri: string) => {\r\n\t\t\t\tsuccess(uri);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fit dimensions for available page sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {pageSizes} pageSize Page size\r\n\t * @return {number[]}           `[width, height]` in pixels\r\n\t */\r\n\tpublic getPageSizeFit(pageSize: pageSizes, margins?: number | number[]): number[] {\r\n\r\n\t\t// Check margins\r\n\t\tlet newMargins = [0, 0, 0, 0];\r\n\t\tif (typeof margins == \"number\") {\r\n\t\t\tnewMargins = [margins, margins, margins, margins];\r\n\t\t}\r\n\t\telse if (margins.length == 2) {\r\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n\t\t}\r\n\t\telse if (margins.length == 4) {\r\n\t\t\tnewMargins = margins;\r\n\t\t}\r\n\r\n\t\t// Define available page sizes\r\n\t\tlet sizes = {\r\n\t\t\t\"4A0\": [4767.87, 6740.79],\r\n\t\t\t\"2A0\": [3370.39, 4767.87],\r\n\t\t\tA0: [2383.94, 3370.39],\r\n\t\t\tA1: [1683.78, 2383.94],\r\n\t\t\tA2: [1190.55, 1683.78],\r\n\t\t\tA3: [841.89, 1190.55],\r\n\t\t\tA4: [595.28, 841.89],\r\n\t\t\tA5: [419.53, 595.28],\r\n\t\t\tA6: [297.64, 419.53],\r\n\t\t\tA7: [209.76, 297.64],\r\n\t\t\tA8: [147.40, 209.76],\r\n\t\t\tA9: [104.88, 147.40],\r\n\t\t\tA10: [73.70, 104.88],\r\n\t\t\tB0: [2834.65, 4008.19],\r\n\t\t\tB1: [2004.09, 2834.65],\r\n\t\t\tB2: [1417.32, 2004.09],\r\n\t\t\tB3: [1000.63, 1417.32],\r\n\t\t\tB4: [708.66, 1000.63],\r\n\t\t\tB5: [498.90, 708.66],\r\n\t\t\tB6: [354.33, 498.90],\r\n\t\t\tB7: [249.45, 354.33],\r\n\t\t\tB8: [175.75, 249.45],\r\n\t\t\tB9: [124.72, 175.75],\r\n\t\t\tB10: [87.87, 124.72],\r\n\t\t\tC0: [2599.37, 3676.54],\r\n\t\t\tC1: [1836.85, 2599.37],\r\n\t\t\tC2: [1298.27, 1836.85],\r\n\t\t\tC3: [918.43, 1298.27],\r\n\t\t\tC4: [649.13, 918.43],\r\n\t\t\tC5: [459.21, 649.13],\r\n\t\t\tC6: [323.15, 459.21],\r\n\t\t\tC7: [229.61, 323.15],\r\n\t\t\tC8: [161.57, 229.61],\r\n\t\t\tC9: [113.39, 161.57],\r\n\t\t\tC10: [79.37, 113.39],\r\n\t\t\tRA0: [2437.80, 3458.27],\r\n\t\t\tRA1: [1729.13, 2437.80],\r\n\t\t\tRA2: [1218.90, 1729.13],\r\n\t\t\tRA3: [864.57, 1218.90],\r\n\t\t\tRA4: [609.45, 864.57],\r\n\t\t\tSRA0: [2551.18, 3628.35],\r\n\t\t\tSRA1: [1814.17, 2551.18],\r\n\t\t\tSRA2: [1275.59, 1814.17],\r\n\t\t\tSRA3: [907.09, 1275.59],\r\n\t\t\tSRA4: [637.80, 907.09],\r\n\t\t\tEXECUTIVE: [521.86, 756.00],\r\n\t\t\tFOLIO: [612.00, 936.00],\r\n\t\t\tLEGAL: [612.00, 1008.00],\r\n\t\t\tLETTER: [612.00, 792.00],\r\n\t\t\tTABLOID: [792.00, 1224.00]\r\n\t\t};\r\n\r\n\t\t// Calculate size\r\n\t\tlet fitSize = sizes[pageSize]\r\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\r\n\t\tfitSize[1] -= newMargins[1] + newMargins[3];\r\n\t\treturn fitSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Excel file of chart's data.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               type     Type of the export\r\n\t * @param {IExportExcelOptions}  options  Options\r\n\t * @return {Promise<string>}              Promise\r\n\t * @async\r\n\t * @todo Handle dates\r\n\t * @todo Support for multi-sheet\r\n\t */\r\n\tpublic async getExcel(type: \"xlsx\", options?: IExportExcelOptions): Promise<string> {\r\n\r\n\t\t// Load xlsx\r\n\t\tlet XLSX = await this.xlsx;\r\n\r\n\t\t// Create workbook options\r\n\t\tlet wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n\t\t\toptions: {\r\n\t\t\t\tbookType: \"xlsx\",\r\n\t\t\t\tbookSST: false,\r\n\t\t\t\ttype: \"base64\"\r\n\t\t\t}\r\n\t\t}).options;\r\n\r\n\t\t// Get sheet name\r\n\t\tlet sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n\t\t\tname: this.title || this.language.translate(\"Data\")\r\n\t\t}).name);\r\n\r\n\t\t// Create a workbook\r\n\t\tlet wb = {\r\n\t\t\tSheetNames: <any>[sheetName],\r\n\t\t\tSheets: <any>{}\r\n\t\t};\r\n\r\n\t\t// Init worksheet data\r\n\t\tlet data = [];\r\n\r\n\t\t// Add column names?\r\n\t\tif (options.addColumnNames) {\r\n\t\t\tdata.push(this.getExcelRow(this.dataFields, options));\r\n\t\t}\r\n\r\n\t\t// Add lines\r\n\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\tdata.push(this.getExcelRow(this.data[i], options));\r\n\t\t}\r\n\r\n\t\t// Create sheet and add data\r\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n\r\n\t\t// Generate data uri\r\n\t\tlet uri = this.adapter.apply(\"getExcel\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * This is needed to work around Excel limitations.\r\n\t *\r\n\t * @param  {string}  name  Source name\r\n\t * @return {string}        Normalized name\r\n\t */\r\n\tprivate normalizeExcelSheetName(name: string): string {\r\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n\t\treturn $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * Rertuns an array of values to be used as Excel row.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}                  row      Row data\r\n\t * @param  {IExportExcelOptions}  options  Options\r\n\t * @return {any[]}                         Array of values\r\n\t */\r\n\tpublic getExcelRow(row: any, options?: IExportExcelOptions): any[] {\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Process each row item\r\n\t\t$object.each(row, (key, value) => {\r\n\t\t\titems.push(this.convertDateValue<\"xlsx\">(key, value, options));\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as CSV.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}             type     Type of the export\r\n\t * @param {IExportCSVOptions}  options  Options\r\n\t * @return {Promise<string>}            Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getCSV(type: \"csv\", options?: IExportCSVOptions): Promise<string> {\r\n\r\n\t\t// Init output\r\n\t\tlet csv = \"\";\r\n\r\n\t\t// Add rows\r\n\t\tlet br = \"\";\r\n\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\tlet row = this.getCSVRow(this.data[i], options);\r\n\t\t\tif (options.reverse) {\r\n\t\t\t\tcsv = row + br + csv;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcsv += br + row;\r\n\t\t\t}\r\n\t\t\tbr = \"\\n\";\r\n\t\t}\r\n\r\n\t\t// Add column names?\r\n\t\tif (options.addColumnNames) {\r\n\t\t\tcsv = this.getCSVRow(this.dataFields, options) + br + csv;\r\n\t\t}\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getCSV\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of CSV data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}               row     An object holding data for the row\r\n\t * @param  {IExportCSVOptions} options Options\r\n\t * @return {string}                    Formated CSV line\r\n\t */\r\n\tpublic getCSVRow(row: any, options?: IExportCSVOptions): string {\r\n\r\n\t\t// Init\r\n\t\tlet separator = options.separator || \",\";\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Process each row item\r\n\t\t$object.each(row, (key, value) => {\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = this.convertDateValue<\"csv\">(key, value, options);\r\n\r\n\t\t\t// Cast and escape doublequotes\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/\"/g, '\"\"');\r\n\r\n\t\t\t// Enclose into double quotes\r\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t});\r\n\r\n\t\treturn items.join(separator);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data in JSON format.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}              type     Type of the export\r\n\t * @param {IExportJSONOptions}  options  Options\r\n\t * @return {Promise<string>}             Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getJSON(type: \"json\", options?: IExportJSONOptions): Promise<string> {\r\n\r\n\t\t// Stringify JSON\r\n\t\tlet json = JSON.stringify(this.data, (key, value) => {\r\n\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\tvalue[field] = this.convertDateValue<\"json\">(field, item, options);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, options.indent);\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getJSON\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the value to proper date format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}                                  field    Field name\r\n\t * @param  {any}                                     value    Value\r\n\t * @param  {IExportCSVOptions | IExportJSONOptions}  options  Options\r\n\t * @return {any}                                              Formatted date value or unmodified value\r\n\t */\r\n\tpublic convertDateValue<Key extends \"json\" | \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\r\n\t\t// Is this a timestamp?\r\n\t\tif (typeof value == \"number\" && this.isDateField(field)) {\r\n\t\t\tvalue = new Date(value);\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tif (options.useTimestamps) {\r\n\t\t\t\tvalue = value.getTime();\r\n\t\t\t}\r\n\t\t\telse if (options.useLocale) {\r\n\t\t\t\tvalue = value.toLocaleString();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.dateFormatter.format(value, this.dateFormat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers download of the file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param  {string}            uri       Data URI with file content\r\n\t * @param  {string}            fileName  File name\r\n\t * @return {Promise<boolean>}            Promise\r\n\t * @async\r\n\t */\r\n\tpublic async download(uri: string, fileName: string): Promise<boolean> {\r\n\r\n\t\t//if (window.navigator.msSaveOrOpenBlob === undefined) {\r\n\t\tif (this.linkDownloadSupport() && !this.blobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For regular browsers, we create a link then simulare click on it\r\n\t\t\t */\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\t//uri = uri.replace(/#/g, \"%23\");\r\n\t\t\tlink.href = uri;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\r\n\t\t}\r\n\t\telse if ($type.hasValue(window.navigator.msSaveBlob)) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\r\n\t\t\t */\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\t\t\t// Check if we need to Base64-decode\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\t// Prep Blob and force the download\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\r\n\t\t}\r\n\t\telse if (this.legacyIE()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Old IEs (9 and down) we will use an <iframe> trick\r\n\t\t\t */\r\n\r\n\t\t\tlet parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n\r\n\t\t\tif (parts.length === 4) {\r\n\t\t\t\t// Base64-encoded or text-based stuff?\r\n\t\t\t\tif (parts[2] == \"base64\") {\r\n\r\n\t\t\t\t\t// Base64-encoded - probably an image\r\n\t\t\t\t\tif (parts[1].match(/^image\\//)) {\r\n\r\n\t\t\t\t\t\t// Yep, an image. Let's create a temporary image placeholder,\r\n\t\t\t\t\t\t// so that user can use do Save As.\r\n\t\t\t\t\t\tthis.showModal(\r\n\t\t\t\t\t\t\t\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n\t\t\t\t\t\t\t\"<p>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\"\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\"</p>\" +\r\n\t\t\t\t\t\t\t\"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"(Press ESC to close this message)\"\r\n\t\t\t\t\t\t\t) + \"</small></p>\",\r\n\t\t\t\t\t\t\tthis.language.translate(\"Image Export Complete\")\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Text-based\r\n\r\n\t\t\t\t\t// IE9 is trippy about saving files with filenames of the extensions it\r\n\t\t\t\t\t// does not know. Let's use .txt extension for all text-based export\r\n\t\t\t\t\t// formats, except SVG.\r\n\t\t\t\t\tlet contentType;\r\n\t\t\t\t\tif (fileName.match(/\\.svg$/)) {\r\n\t\t\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcontentType = \"text/plain\";\r\n\t\t\t\t\t\tfileName += \".txt\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create temporary iframe\r\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.width = \"1px\";\r\n\t\t\t\t\tiframe.height = \"1px\"\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add our stuff to the document of the iframe and trigger save as\r\n\t\t\t\t\tlet idoc = iframe.contentDocument;\r\n\t\t\t\t\tidoc.open(contentType, \"replace\");\r\n\t\t\t\t\t// TODO test this with various encodings (e.g. UTF)\r\n\t\t\t\t\t//idoc.charset = parts[2].replace(/charset=/, \"\");\r\n\t\t\t\t\tidoc.write(decodeURIComponent(parts[3]));\r\n\t\t\t\t\tidoc.close();\r\n\t\t\t\t\tidoc.execCommand(\"SaveAs\", true, fileName);\r\n\r\n\t\t\t\t\t// Destroy the iframe\r\n\t\t\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if browser has any supported methods to trigger download\r\n\t * of a binary file.\r\n\t *\r\n\t * @return {boolean} Supports downloads?\r\n\t */\r\n\tpublic downloadSupport(): boolean {\r\n\t\treturn this.linkDownloadSupport() || this.blobDownloadSupport();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports \"download\" attribute on links.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Browser supports triggering downloads?\r\n\t */\r\n\tpublic linkDownloadSupport(): boolean {\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"linkDownloadSupport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet res = typeof a.download !== \"undefined\";\r\n\t\tregistry.setCache(\"linkDownloadSupport\", res);\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Browser supports triggering downloads?\r\n\t */\r\n\tpublic blobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this is a legacy version of IE.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} IE9 or less?\r\n\t */\r\n\tpublic legacyIE(): boolean {\r\n\t\t// Create a temporary <div> with conditional tags in it an an <i> tag.\r\n\t\t// Count <i>s. If there are some, we have IE9 or late on our hands.\r\n\t\tlet div = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n\t\treturn div.getElementsByTagName(\"i\").length == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates print of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param {string}               data     Data URI for the image\r\n\t * @param {IExportPrintOptions}  options  Options\r\n\t * @param {string}               title    Optional title to use (uses window's title by default)\r\n\t * @return {Promise<boolean>}             Promise\r\n\t * @async\r\n\t */\r\n\tpublic async print(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\tif (options.printMethod == \"css\") {\r\n\t\t\treturn this.printViaCSS(data, options, title);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.printViaIframe(data, options, title);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected async printViaCSS(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\t\t// Save current scroll position\r\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n\t\t// Hide all current nodes of the document and save their current states\r\n\t\t// of `display` style\r\n\t\t/*let states: Array<string> = [];\r\n\t\tlet items = document.body.childNodes;\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\tstates[i] = item.style.display;\r\n\t\t\t\titem.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Hide all document nodes by applyin custom CSS\r\n\t\tlet rule = new StyleRule(\"body > *\", {\r\n\t\t\t\"display\": \"none\",\r\n\t\t\t\"position\": \"fixed\",\r\n\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\"opacity\": \"0\",\r\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n\t\t});\r\n\r\n\t\t// Replace title?\r\n\t\tlet originalTitle: string;\r\n\t\tif (title && document && document.title) {\r\n\t\t\toriginalTitle = document.title;\r\n\t\t\tdocument.title = title;\r\n\t\t}\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.display = \"block\";\r\n\t\timg.style.position = \"relative\";\r\n\t\timg.style.visibility = \"visible\";\r\n\t\timg.style.opacity = \"1\";\r\n\t\timg.style.clipPath = \"none\";\r\n\t\tdocument.body.appendChild(img);\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\t(<any>window).print();\r\n\t\t}, 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(img);\r\n\r\n\t\t\t// Reset back all elements\r\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\t\titem.style.display = states[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\trule.dispose();\r\n\r\n\t\t\t// Restore title\r\n\t\t\tif (originalTitle) {\r\n\t\t\t\tdocument.title = document.title;\r\n\t\t\t}\r\n\r\n\t\t\t// Scroll back the document the way it was before\r\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n\r\n\t\t}, options.delay || 500);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected async printViaIframe(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\t// Create an iframe\r\n\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\tiframe.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t// This is needed for FireFox\r\n\t\tiframe.contentWindow.document.open();\r\n\t\tiframe.contentWindow.document.close();\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\tif (title) {\r\n\t\t\tiframe.contentWindow.document.title = title;\r\n\t\t}\r\n\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\r\n\t\t(<any>iframe).load = function() {\r\n\t\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\t\t};\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\r\n\t\t\t\t\t(<any>iframe).contentWindow.print()​​​​​​;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t(<any>iframe).contentWindow.print()​​​​​​;\r\n\t\t\t}\r\n\t\t}, options.delay || 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t}, options.delay + 50 || 100);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a background color for the element. If element is transparent it goes\r\n\t * up the DOM hierarchy to find a parent element that does.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element Element\r\n\t * @return {Color}            Color code\r\n\t */\r\n\tpublic findBackgroundColor(element: Element): Color {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet opacity = 1, currentColor = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tcurrentColor = (<any>element).currentStyle[\"background-color\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tcurrentColor = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"background-color\");\r\n\t\t}\r\n\r\n\t\t// Check opacity\r\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n\t\t\topacity = 0;\r\n\t\t}\r\n\r\n\t\tif (opacity == 0) {\r\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\r\n\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findBackgroundColor(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn color(\"#fff\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn color(currentColor, opacity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a font fmaily name for the element (directly set or\r\n\t * computed/inherited).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element  Element\r\n\t * @return {string}            Font family\r\n\t */\r\n\tpublic findFont(element: Element): string {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet font = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tfont = (<any>element).currentStyle[\"font-family\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tfont = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"font-family\");\r\n\t\t}\r\n\r\n\t\tif (!font) {\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findFont(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn font;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a font fmaily name for the element (directly set or\r\n\t * computed/inherited).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Element}  element  Element\r\n\t * @return {string}            Font family\r\n\t */\r\n\tpublic findFontSize(element: Element): string {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet font = \"\";\r\n\t\tif ((<any>element).currentStyle) {\r\n\t\t\tfont = (<any>element).currentStyle[\"font-size\"];\r\n\t\t}\r\n\t\telse if (window.getComputedStyle) {\r\n\t\t\tfont = document.defaultView.getComputedStyle(element, null).getPropertyValue(\"font-size\");\r\n\t\t}\r\n\r\n\t\tif (!font) {\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findFont(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn font;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a container to be used to place [[ExportMenu]] in.\r\n\t *\r\n\t * @param {HTMLElement} value Reference\r\n\t */\r\n\tpublic set container(value: HTMLElement) {\r\n\t\tthis._container = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HTMLElement} Reference\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this.adapter.apply(\"container\", {\r\n\t\t\tcontainer: this._container\r\n\t\t}).container;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n\t * internal elements.\r\n\t *\r\n\t * @param {Sprite} value Sprite\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis._sprite = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Sprite} Sprite\r\n\t */\r\n\tpublic get sprite(): Sprite {\r\n\t\treturn this.adapter.apply(\"sprite\", {\r\n\t\t\tsprite: this._sprite\r\n\t\t}).sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Data to export.\r\n\t *\r\n\t * @param {any} value Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\treturn this.adapter.apply(\"data\", {\r\n\t\t\tdata: this._data\r\n\t\t}).data;\r\n\t}\r\n\r\n\t/**\r\n\t * Data fields in `{ field: fieldName }` format. Those are used for\r\n\t * exporting in data formats to name the columns.\r\n\t *\r\n\t * @param {any} value Field names\r\n\t */\r\n\tpublic set dataFields(value: any) {\r\n\t\tthis._dataFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} Field names `{ field: fieldName }`\r\n\t */\r\n\tpublic get dataFields(): any {\r\n\t\tif (!this._dataFields) {\r\n\t\t\tthis.generateDataFields();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dataFields\", {\r\n\t\t\tdataFields: this._dataFields\r\n\t\t}).dataFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @param {any} value DateFormatter instance\r\n\t */\r\n\tpublic set dateFormatter(value: any) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {any} A DateFormatter instance\r\n\t */\r\n\tpublic get dateFormatter(): any {\r\n\t\tif (!this._dateFormatter) {\r\n\t\t\tthis._dateFormatter = new DateFormatter();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFormatter\", {\r\n\t\t\tdateFormatter: this._dateFormatter\r\n\t\t}).dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @param {Optional<string>} value Date format\r\n\t */\r\n\tpublic set dateFormat(value: $type.Optional<string>) {\r\n\t\tthis._dateFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Date format\r\n\t */\r\n\tpublic get dateFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"dateFormat\", {\r\n\t\t\tdateFormat: this._dateFormat\r\n\t\t}).dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold date values.\r\n\t *\r\n\t * @param {List<string>} value Date field list\r\n\t */\r\n\tpublic set dateFields(value: List<string>) {\r\n\t\tthis._dateFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {List<string>} Date field list\r\n\t */\r\n\tpublic get dateFields(): List<string> {\r\n\t\tif (!this._dateFields) {\r\n\t\t\tthis._dateFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFields\", {\r\n\t\t\tdateFields: this._dateFields\r\n\t\t}).dateFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates data fields out of the first row of data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic generateDataFields(): void {\r\n\t\tthis._dataFields = {};\r\n\t\tif (this.data.length) {\r\n\t\t\tlet row = this.data[0];\r\n\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\tthis._dataFields[key] = this.adapter.apply(\"dataFieldName\", {\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tfield: key\r\n\t\t\t\t}).name;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `dateFields` property to determine if this field holds\r\n\t * dates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}        field   Field name\r\n\t * @param  {IExportOptions} options Options\r\n\t * @return {boolean}               `true` if it's a date field\r\n\t */\r\n\tpublic isDateField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDateField\", {\r\n\t\t\tisDateField: this.dateFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDateField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns proper content type for the export type.\r\n\t *\r\n\t * @param  {string}  type  Export format/type\r\n\t * @return {string}        Proper content type, i.e. \"image/jpeg\"\r\n\t */\r\n\tpublic getContentType<Key extends keyof IExportOptions>(type: Key): string {\r\n\r\n\t\tlet contentType = \"\";\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\t\tcontentType = \"image/\" + type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\tcontentType = \"image/jpeg\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\tcontentType = \"text/csv\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tcontentType = \"application/json\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pdf\":\r\n\t\t\t\tcontentType = \"application/pdf\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"contentType\", {\r\n\t\t\tcontentType: contentType,\r\n\t\t\ttype: type\r\n\t\t}).contentType;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A file prefix to be used for all exported formats.\r\n\t *\r\n\t * Export will apply format-related extension to it. E.g. if this is set to\r\n\t * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n\t *\r\n\t * @param {string} value File prefix\r\n\t */\r\n\tpublic set filePrefix(value: string) {\r\n\t\tthis._filePrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} File prefix\r\n\t */\r\n\tpublic get filePrefix(): string {\r\n\t\treturn this.adapter.apply(\"filePrefix\", {\r\n\t\t\tfilePrefix: this._filePrefix\r\n\t\t}).filePrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * A background color to be used for exported images. If set, this will\r\n\t * override the automatically acquired background color.\r\n\t *\r\n\t * @param {Optional<Color>} value Color\r\n\t */\r\n\tpublic set backgroundColor(value: $type.Optional<Color>) {\r\n\t\tthis._backgroundColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Color>} Background color\r\n\t */\r\n\tpublic get backgroundColor(): $type.Optional<Color> {\r\n\t\treturn this.adapter.apply(\"backgroundColor\", {\r\n\t\t\tbackgroundColor: this._backgroundColor\r\n\t\t}).backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * A title to be used when printing.\r\n\t *\r\n\t * @param {Optional<string>} value Title\r\n\t */\r\n\tpublic set title(value: $type.Optional<string>) {\r\n\t\tthis._title = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<string>} Title\r\n\t */\r\n\tpublic get title(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this._title\r\n\t\t}).title;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Add ability to change text\r\n\t */\r\n\tpublic showPreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 0.5;\r\n\t\t\tpreloader.label.text = \"...\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hidePreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n\t * exported.\r\n\t *\r\n\t * @return {Preloader} Preloader\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\treturn this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n\t\t\tthis._sprite.parent.preloader :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal saying export is taking longer than expected.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic showTimeout(): void {\r\n\t\tthis.showModal(\r\n\t\t\tthis.adapter.apply(\"timeoutMessage\", {\r\n\t\t\t\tmessage: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n\t\t\t}).message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideTimeout(): void {\r\n\t\tif (this._timeoutTimeout) {\r\n\t\t\tthis.removeDispose(this._timeoutTimeout);\r\n\t\t\tthis._timeoutTimeout = null;\r\n\t\t}\r\n\t\tthis.hideModal();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to be used for translations.\r\n\t *\r\n\t * @param {Language} value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tthis._language = new Language();\r\n\t\t}\r\n\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (and creates) [[Modal]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Modal} Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tif (!this._modal) {\r\n\t\t\tthis._modal = new Modal();\r\n\r\n\t\t\t// Prefix with Sprite's class name\r\n\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows [[Modal]] with specific text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string} text Modal contents\r\n\t */\r\n\tpublic showModal(text: string, title?: string): void {\r\n\r\n\t\t// Hide previous modal and preloader\r\n\t\tthis.hideModal();\r\n\t\tthis.hidePreloader();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.container = this.sprite.svgContainer.SVGContainer;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if one's currently open.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads canvg dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of canvg\r\n\t * @async\r\n\t */\r\n\tprivate async _canvg(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"canvg\" */ \"canvg\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvg instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of canvg\r\n\t */\r\n\tpublic get canvg(): Promise<any> {\r\n\t\treturn this._canvg();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads pdfmake dynamic module\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _pdfmake(): Promise<any> {\r\n\t\tlet a = await Promise.all([\r\n\t\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n\t\t\timport(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n\t\t]);\r\n\t\tlet pdfmake = a[0];\r\n\t\tlet vfs_fonts = a[1];\r\n\t\tconst global = <any>window;\r\n\t\tglobal.pdfMake = global.pdfMake || {};\r\n\t\tglobal.pdfMake.vfs = vfs_fonts.default;\r\n\t\tpdfmake.vfs = vfs_fonts.default;\r\n\t\treturn pdfmake;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pdfmake instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t */\r\n\tpublic get pdfmake(): Promise<any> {\r\n\t\treturn this._pdfmake();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads xlsx dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _xlsx(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"xlsx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns xlsx instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Instance of pdfmake\r\n\t */\r\n\tpublic get xlsx(): Promise<any> {\r\n\t\treturn this._xlsx();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets options for a format.\r\n\t *\r\n\t * @type {Key}\r\n\t */\r\n\tpublic setFormatOptions<Key extends keyof IExportOptions>(type: Key, options: IExportOptions[Key]): void {\r\n\t\tthis._formatOptions.setKey(type, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current options for a format.\r\n\t */\r\n\tpublic getFormatOptions<Key extends keyof IExportOptions>(type: Key): IExportOptions[Key] {\r\n\t\treturn this._formatOptions.getKey(type);\r\n\t}\r\n\r\n\t/**\r\n * Disables interactivity on parent chart.\r\n */\r\n\tprotected _disablePointers(): void {\r\n\t\tif (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t}\r\n\t\tthis.sprite.interactionsEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected _releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up menu\r\n\t\t\tif ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n\t\t\t\tconfig.menu.type = \"ExportMenu\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/export/Export.ts","/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport exportCSS from \"./ExportCSS\";\r\nimport { IExportOptions } from \"./Export\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IDisposer, MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language, ILocaleProperties } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard, KeyboardKeys } from \"../utils/Keyboard\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Export menu item interface.\r\n */\r\nexport interface IExportMenuItem {\r\n\r\n\t/**\r\n\t * Item type, usually an export format.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttype?: keyof IExportOptions;\r\n\r\n\t/**\r\n\t * Label to display in the menu.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tlabel?: string;\r\n\r\n\t/**\r\n\t * Export format. (optional)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tformat?: string;\r\n\r\n\t/**\r\n\t * Menu item options.\r\n\t *\r\n\t * @see {@link IExportOptions}\r\n\t * @type {Object}\r\n\t */\r\n\toptions?: IExportOptions[keyof IExportOptions];\r\n\r\n\t/**\r\n\t * Priority.\r\n\t *\r\n\t * The items in Export menu will be sorted by their priority in ascending\r\n\t * order.\r\n\t *\r\n\t * @ignore Exclude from docs (this feature is not yet implemented)\r\n\t * @type {number}\r\n\t */\r\n\tpriority?: number;\r\n\r\n\t/**\r\n\t * An array of [[IExportMenuItem]] items, to construct a sub-menu out of.\r\n\t *\r\n\t * An Export menu can have any number of nesting levels.\r\n\t *\r\n\t * @type {Array<IExportMenuItem>}\r\n\t */\r\n\tmenu?: Array<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * If this is set to true, it means that this specific menu item is not\r\n\t * supported by the current client system.\r\n\t *\r\n\t * This is usually populated by [[Export]]'s `supported` Adapter.\r\n\t *\r\n\t * @see {@link IExportAdapters}\r\n\t * @type {boolean}\r\n\t */\r\n\tunsupported?: boolean\r\n\r\n\t/**\r\n\t * An [[InteractionObject]] representation of the menu item.\r\n\t *\r\n\t * @type {InteractionObject}\r\n\t */\r\n\tinteractions?: InteractionObject;\r\n\r\n\t/**\r\n\t * Holds list of parent menu items to this item.\r\n\t */\r\n\tascendants?: List<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * Holds timeout reference.\r\n\t *\r\n\t * Used to delay auto-closing of the menu when it is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IDisposer}\r\n\t */\r\n\tcloseTimeout?: IDisposer;\r\n\r\n}\r\n\r\n/**\r\n * Defines [[ExportMenu]] events.\r\n */\r\nexport interface IExportMenuEvents {\r\n\r\n\t/**\r\n\t * Invoked when menu item is clicked/tapped.\r\n\t */\r\n\thit: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when menu item is hovered.\r\n\t */\r\n\tover: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when menu item is no longer hovered.\r\n\t */\r\n\tout: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when ENTER key is pressed when certain menu item is in focus.\r\n\t *\r\n\t * @type {KeyboardEvent}\r\n\t */\r\n\tenter: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: KeyboardEvent;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu branch is selected. (either by hover or keyboard)\r\n\t */\r\n\tbranchselected: {\r\n\t\tbranch: IExportMenuItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu branch is unselected.\r\n\t */\r\n\tbranchunselected: {\r\n\t\tbranch: IExportMenuItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Represents a list of available adapters for Export\r\n */\r\nexport interface IExportMenuAdapters {\r\n\r\n\titems: {\r\n\t\titems: Array<IExportMenuItem>\r\n\t},\r\n\r\n\tmenuElement: {\r\n\t\tmenuElement: HTMLElement\r\n\t},\r\n\r\n\tbranch: {\r\n\t\tbranch: IExportMenuItem,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\trederLabel: {\r\n\t\tlabel: string,\r\n\t\tbranch: IExportMenuItem\r\n\t},\r\n\r\n\tmenuClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\titemClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype?: keyof IExportOptions\r\n\t},\r\n\r\n\tlabelClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype?: keyof IExportOptions\r\n\t},\r\n\r\n\tmenuTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\titemTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\tlabelTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\talign: {\r\n\t\talign: Align\r\n\t},\r\n\r\n\tverticalAlign: {\r\n\t\tverticalAlign: VerticalAlign\r\n\t},\r\n\r\n\tclassPrefix: {\r\n\t\tclassPrefix: string\r\n\t},\r\n\r\n\tdefaultStyles: {\r\n\t\tdefaultStyles: boolean\r\n\t},\r\n\r\n\ttabindex: {\r\n\t\ttabindex: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nexport class ExportMenu extends Validatable {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IExportMenuEvents}\r\n\t */\r\n\tpublic _events!: IExportMenuEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IExportMenuAdapters;\r\n\r\n\t/**\r\n\t * An [[Adapter]].\r\n\t *\r\n\t * @type {Adapter<ExportMenu, IExportMenuAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<ExportMenu, IExportMenuAdapters> = new Adapter<ExportMenu, IExportMenuAdapters>(this);\r\n\r\n\t/**\r\n\t * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n\t * hover, before auto-closing it.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic closeDelay: number = 1000;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {MutableValueDisposer<Language>}\r\n\t */\r\n\tprotected _language = new MutableValueDisposer<Language>();\r\n\r\n\t/**\r\n\t * Reference to DOM element that holds Export menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<HTMLElement>}\r\n\t */\r\n\tprotected _container: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * Menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<HTMLElement>}\r\n\t */\r\n\tprotected _element: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * Currently selected menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Optional<IExportMenuItem>}\r\n\t */\r\n\tprotected _currentSelection: $type.Optional<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * What HTML tags to use to build menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _menuTag: \"ul\" | \"div\" = \"ul\";\r\n\r\n\t/**\r\n\t * Which tag to use to enclose individual menu items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _itemTag: \"li\" | \"div\" = \"li\";\r\n\r\n\t/**\r\n\t * Tag to wrap menu item labels in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _labelTag: \"a\" = \"a\";\r\n\r\n\t/**\r\n\t * Prefix for class names applied to menu elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _classPrefix: string = \"amexport\";\r\n\r\n\t/**\r\n\t * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n\t * instantiated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal positioning.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Align}\r\n\t */\r\n\tprotected _align: Align = \"right\";\r\n\r\n\t/**\r\n\t * Vertical positioning.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {VerticalAlign}\r\n\t */\r\n\tprotected _verticalAlign: VerticalAlign = \"top\";\r\n\r\n\t/**\r\n\t * A tabindex to apply to Export Menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _tabindex: number = 0;\r\n\r\n\t/**\r\n\t * Whether next menu close event should be ignored.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreNextClose: boolean = false;\r\n\r\n\t/**\r\n\t * Default menu items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<IExportMenuItem>}\r\n\t */\r\n\tprotected _items: Array<IExportMenuItem> = [\r\n\t\t{\r\n\t\t\t\"label\": \"...\",\r\n\t\t\t\"menu\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"label\": \"Image\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"png\", \"label\": \"PNG\" },\r\n\t\t\t\t\t\t{ \"type\": \"jpg\", \"label\": \"JPG\" },\r\n\t\t\t\t\t\t{ \"type\": \"gif\", \"label\": \"GIF\" },\r\n\t\t\t\t\t\t{ \"type\": \"svg\", \"label\": \"SVG\" },\r\n\t\t\t\t\t\t{ \"type\": \"pdf\", \"label\": \"PDF\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Data\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"json\", \"label\": \"JSON\" },\r\n\t\t\t\t\t\t{ \"type\": \"csv\", \"label\": \"CSV\" },\r\n\t\t\t\t\t\t{ \"type\": \"xlsx\", \"label\": \"XLSX\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Print\", \"type\": \"print\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ExportMenu\";\r\n\t\tthis._disposers.push(this._language);\r\n\t\tthis.invalidate();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the Export menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.draw();\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the menu based on current items.\r\n\t *\r\n\t * Normally, there's no need to call this explicitly. The chart, if it has\r\n\t * export menu enabled, will automatically draw the menu.\r\n\t */\r\n\tpublic draw(): void {\r\n\r\n\t\t// Create top-level menu item, or clear it\r\n\t\tif (!this._element) {\r\n\t\t\tthis._element = this.createMenuElement(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._element.innerHTML = \"\";\r\n\t\t\tthis._element.className = this.getMenuItemClass(0);\r\n\t\t}\r\n\r\n\t\t// See if we're loading external CSS\r\n\t\t// Hide it until CSS is loaded\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis._element.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\t$type.getValue(this._container).appendChild(this._element);\r\n\r\n\t\t// Apply adapter to menu items before processing\r\n\t\tthis._items = this.adapter.apply(\"items\", {\r\n\t\t\titems: this._items\r\n\t\t}).items;\r\n\r\n\t\tfor (let len = this._items.length, i = 0; i < len; i++) {\r\n\t\t\tthis.drawBranch(this._element, this._items[i], 0);\r\n\t\t}\r\n\r\n\t\t// Apply adapter to finalized menu element\r\n\t\tthis._element = this.adapter.apply(\"menuElement\", {\r\n\t\t\tmenuElement: this._element\r\n\t\t}).menuElement;\r\n\r\n\t\t// Set up global \"down\" event\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"down\", (ev) => {\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis._ignoreNextClose = false;\r\n\t\t\t}\r\n\t\t\tthis.close();\r\n\t\t}));\r\n\r\n\t\t// Set up global event on ESC press to close the menu\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tlet key = keyboard.getEventKey(ev.event);\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"esc\":\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"up\":\r\n\t\t\t\tcase \"down\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.moveSelection(key);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new branch in export menu. This function is recursive for\r\n\t * building multi-level menus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {HTMLElement}     container Container to put branch elements in\r\n\t * @param {IExportMenuItem} branch    Menu item\r\n\t * @param {number}          level     Current nesting level\r\n\t */\r\n\tprotected drawBranch(container: HTMLElement, branch: IExportMenuItem, level: number): void {\r\n\r\n\t\t// Apply adapter\r\n\t\tbranch = this.adapter.apply(\"branch\", {\r\n\t\t\tbranch: branch,\r\n\t\t\tlevel: level\r\n\t\t}).branch;\r\n\r\n\t\t// Unsupported?\r\n\t\t// ExportMenu does not check or know for specific browser/system\r\n\t\t// capabilities. It must happen in some other code and applied via Adapter.\r\n\t\t// Export itself will check compatibility, but there might be other plugins\r\n\t\t// that influence it or even add any specific export functionality.\r\n\t\tif (branch.unsupported === true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init ascendants\r\n\t\tif (!branch.ascendants) {\r\n\t\t\tbranch.ascendants = new List<IExportMenuItem>();\r\n\t\t}\r\n\r\n\t\t// Get type\r\n\t\tlet type: keyof IExportOptions | undefined | null = branch.type;\r\n\r\n\t\t// Create an item\r\n\t\tlet element = this.createItemElement(level, type);\r\n\r\n\t\t// Create label\r\n\t\tlet label = this.createLabelElement(level, type);\r\n\t\tlabel.innerHTML = (branch.label ? this.language.translate(<keyof ILocaleProperties>branch.label) : \"\");\r\n\r\n\t\t// Apply reader text to label\r\n\t\tlet readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n\t\tlabel.setAttribute(\"aria-label\", readerLabel);\r\n\r\n\t\t// Add Label\r\n\t\telement.appendChild(label);\r\n\r\n\t\t// Create interaction object\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions = getInteraction().getInteraction(label);\r\n\r\n\t\t// Create interaction manager we can set event listeners to\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\t//branch.interactions.clickable = true;\r\n\t\t\t// TODO clean this up when it's disposed\r\n\t\t\tbranch.interactions.events.on(\"hit\", (ev) => {\r\n\t\t\t\tif (this.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"hit\"] = {\r\n\t\t\t\t\t\t\"type\": \"hit\",\r\n\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"hit\", event);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// TODO clean this up when it's disposed\r\n\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\tif (this.events.isEnabled(\"enter\")) {\r\n\t\t\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"enter\"] = {\r\n\t\t\t\t\t\t\t\"type\": \"enter\",\r\n\t\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.events.dispatchImmediately(\"enter\", event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst submenu = this.getSubMenu(branch);\r\n\r\n\t\t\t// Add ENTER event to open sub-menus\r\n\t\t\tif (submenu != null) {\r\n\t\t\t\t// TODO clean this up when it's disposed\r\n\t\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\t\t// This is item has sub-menu, activate the first child on ENTER\r\n\t\t\t\t\t\tthis.selectBranch(submenu[0]);\r\n\r\n\t\t\t\t\t\t// Attempt to set focus\r\n\t\t\t\t\t\tthis.setFocus(submenu[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add events\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"over\", (ev) => {\r\n\t\t\tif (ev.pointer.touch) {\r\n\t\t\t\t// Cancel pending menu closure\r\n\t\t\t\tthis._ignoreNextClose = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.selectBranch(branch);\r\n\r\n\t\t\tif (this.events.isEnabled(\"over\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"over\"] = {\r\n\t\t\t\t\t\"type\": \"over\",\r\n\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"over\", event);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"out\", (ev) => {\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t\t}\r\n\t\t\tif (this.events.isEnabled(\"out\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"out\"] = {\r\n\t\t\t\t\t\"type\": \"out\",\r\n\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"out\", event);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"focus\", (ev) => {\r\n\t\t\tthis.selectBranch(branch);\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"blur\", (ev) => {\r\n\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t});\r\n\r\n\t\t// Increment level\r\n\t\tlet local_level = level + 1;\r\n\r\n\t\t// Has sub-menu?\r\n\t\tif (branch.menu) {\r\n\t\t\tlet submenu = this.createMenuElement(local_level);\r\n\t\t\tfor (let len = branch.menu.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet ascendants = new List<IExportMenuItem>();\r\n\t\t\t\tbranch.menu[i].ascendants = ascendants;\r\n\t\t\t\tif (branch.ascendants.length) {\r\n\t\t\t\t\tascendants.copyFrom(branch.ascendants);\r\n\t\t\t\t}\r\n\t\t\t\tascendants.push(branch);\r\n\t\t\t\tthis.drawBranch(submenu, branch.menu[i], local_level);\r\n\t\t\t}\r\n\r\n\t\t\t// Sub-menu is empty (all items are not supported)\r\n\t\t\t// Do not draw this menu item at all\r\n\t\t\tif (submenu.innerHTML == \"\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.appendChild(submenu);\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\tcontainer.appendChild(element);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n\t * tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @return {HTMLElement}         HTML element reference\r\n\t */\r\n\tpublic createMenuElement(level: number): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.menuTag);\r\n\t\telement.className = this.getMenuItemClass(level);\r\n\r\n\t\t// Accessibility\r\n\t\tif (level === 0) {\r\n\t\t\telement.setAttribute(\"role\", \"menu\");\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a class name for the menu element based on its nesting level.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  level  Current nesting level\r\n\t * @return {string}         Class name(s)\r\n\t */\r\n\tpublic getMenuItemClass(level: number): string {\r\n\t\tlet className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n\t\tif (level === 0) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-menu-root \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.align + \" \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.verticalAlign;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"menuClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level\r\n\t\t}).className;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n\t * into this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @param  {string}       type   Type of the menu item\r\n\t * @return {HTMLElement}         HTML element reference\r\n\t */\r\n\tpublic createItemElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.itemTag);\r\n\t\tlet className = this.classPrefix + \"-item \" + this.classPrefix\r\n\t\t\t+ \"-item-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\telement.className = this.adapter.apply(\"itemClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n\t * content.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @param  {string}       type   Type of the menu item\r\n\t * @return {HTMLElement}         An HTML Element\r\n\t */\r\n\tpublic createLabelElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.labelTag);\r\n\t\tlet className = this.classPrefix + \"-label \" + this.classPrefix\r\n\t\t\t+ \"-label-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-clickable\";\r\n\t\t}\r\n\t\telement.className = this.adapter.apply(\"labelClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\r\n\t\t// Accessible navigation\r\n\t\telement.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\telement.setAttribute(\"role\", \"menuitem\");\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the menu and all its elements.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis._element\r\n\t\t\t\t&& this._element.parentNode\r\n\t\t\t\t&& this._element.parentNode.removeChild(this._element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item type is supposed to be clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}   type  Menu item type\r\n\t * @return {boolean}        Is clickable?\r\n\t */\r\n\tpublic typeClickable(type: keyof IExportOptions | undefined | null): type is keyof IExportOptions {\r\n\t\treturn $type.hasValue(type);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item has any sub-items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  A menu item\r\n\t * @return {boolean}                  Has sub-items?\r\n\t */\r\n\tpublic hasSubMenu(branch: IExportMenuItem): boolean {\r\n\t\treturn (branch.menu && branch.menu.length) ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns sub-items (if they exist).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}                   branch  A menu item\r\n\t * @return {Optional<Array<IExportMenuItem>>}          Submenus\r\n\t */\r\n\tpublic getSubMenu(branch: IExportMenuItem): $type.Optional<Array<IExportMenuItem>> {\r\n\t\tif (branch.menu && branch.menu.length) {\r\n\t\t\treturn branch.menu;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates and returns an applicable label to be used for screen readers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  item   A menu item instance\r\n\t * @param  {string}           label  Current label\r\n\t * @return {string}                  Reader text\r\n\t */\r\n\tpublic getReaderLabel(branch: IExportMenuItem, label: string): string {\r\n\r\n\t\t// Strip any HTML from the label\r\n\t\tlabel = $utils.stripTags(label);\r\n\r\n\t\t// Add textual note if the branch is clickable\r\n\t\tif (this.hasSubMenu(branch)) {\r\n\t\t\tlabel += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n\t\t}\r\n\t\telse if (branch.type == \"print\") {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n\t\t}\r\n\t\telse if (this.typeClickable(branch.type)) {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"rederLabel\", {\r\n\t\t\tlabel: label,\r\n\t\t\tbranch: branch\r\n\t\t}).label;\r\n\t}\r\n\r\n\t/**\r\n\t * Getters and setters\r\n\t */\r\n\r\n\t/**\r\n\t * An HTML container to place the Menu in.\r\n\t *\r\n\t * A container must be an HTML element, because menu itself is HTML, and\r\n\t * cannot be placed into SVG.\r\n\t *\r\n\t * @param {Optional<HTMLElement>} container Reference to container element\r\n\t * @todo Check if menu is already build. If it is, just move it to a new container\r\n\t */\r\n\tpublic set container(container: $type.Optional<HTMLElement>) {\r\n\t\tthis._container = container;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {HTMLElement} Container\r\n\t */\r\n\tpublic get container(): $type.Optional<HTMLElement> {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of menu items. Can be nested.\r\n\t *\r\n\t * @param {Array<IExportMenuItem>}  items  Menu items\r\n\t */\r\n\tpublic set items(items: Array<IExportMenuItem>) {\r\n\t\tthis._items = items;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Array<IExportMenuItem>} Menu items\r\n\t */\r\n\tpublic get items(): Array<IExportMenuItem> {\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets main menu tag to place menu in.\r\n\t *\r\n\t * This also sets up how menu items are built.\r\n\t *\r\n\t * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n\t *\r\n\t * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n\t *\r\n\t * @default \"ul\"\r\n\t * @param {\"ul\" | \"div\"} tag Tag to use for menu\r\n\t */\r\n\tpublic set tag(tag: \"ul\" | \"div\") {\r\n\t\tthis._menuTag = tag;\r\n\t\tthis._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current menu tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Menu tag (item that contains sub-items)\r\n\t */\r\n\tpublic get menuTag(): string {\r\n\t\treturn this.adapter.apply(\"menuTag\", {\r\n\t\t\ttag: this._menuTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns tag to wrap items into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Item tag\r\n\t */\r\n\tpublic get itemTag(): string {\r\n\t\treturn this.adapter.apply(\"itemTag\", {\r\n\t\t\ttag: this._itemTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu label tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Label tag\r\n\t */\r\n\tpublic get labelTag(): string {\r\n\t\treturn this.adapter.apply(\"labelTag\", {\r\n\t\t\ttag: this._labelTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal alignment for the menu placement.\r\n\t *\r\n\t * @param {Align} value Horizontal alignment\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tthis._align = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Align} Horizontal alignment\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", {\r\n\t\t\talign: this._align\r\n\t\t}).align;\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical alignment for the menu placement.\r\n\t *\r\n\t * @param {VerticalAlign} value Vertical alignment\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tthis._verticalAlign = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {VerticalAlign} Vertical alignment\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", {\r\n\t\t\tverticalAlign: this._verticalAlign\r\n\t\t}).verticalAlign;\r\n\t}\r\n\r\n\t/**\r\n\t * Class name prefix.\r\n\t *\r\n\t * @default \"amexport\"\r\n\t * @param {string} value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", {\r\n\t\t\tclassPrefix: this._classPrefix\r\n\t\t}).classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n\t *\r\n\t * If set to `false`, the menu will not be styled, and will rely on some\r\n\t * external CSS.\r\n\t *\r\n\t * @default true\r\n\t * @param {string} Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.loadDefaultCSS();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", {\r\n\t\t\tdefaultStyles: this._defaultStyles\r\n\t\t}).defaultStyles;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tthis._disposers.push(exportCSS(this.classPrefix));\r\n\r\n\t\tif (this._element) {\r\n\t\t\tthis._element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A tab index for the menu.\r\n\t *\r\n\t * Tab index will influence the order in which elements on the chart and\r\n\t * the whole page are selected when pressing TAB key.\r\n\t *\r\n\t * @param {number} value Tab index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tthis._tabindex = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tab index\r\n\t */\r\n\tpublic get tabindex(): number {\r\n\t\treturn this.adapter.apply(\"tabindex\", {\r\n\t\t\ttabindex: this._tabindex\r\n\t\t}).tabindex;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance.\r\n\t *\r\n\t * @param {Language} value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language.set(value, value.events.on(\"localechanged\", (ev) => {\r\n\t\t\tthis.invalidate();\r\n\t\t}));\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tlet language = this._language.get();\r\n\r\n\t\tif (language == null) {\r\n\t\t\tlanguage = new Language();\r\n\r\n\t\t\t// TODO code duplication with `set language()`\r\n\t\t\tthis._language.set(language, language.events.on(\"localechanged\", (ev) => {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn language;\r\n\t}\r\n\r\n\t/**\r\n\t * Controlling the menu\r\n\t */\r\n\r\n\t/**\r\n\t * Removes all active classes from menu items. Useful on touch devices and\r\n\t * keyboard navigation where open menu can be closed instantly by clicking or\r\n\t * tapping outside it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._ignoreNextClose) {\r\n\t\t\tthis._ignoreNextClose = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._currentSelection) {\r\n\t\t\tthis.setBlur(this._currentSelection);\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\r\n\t\tif (this._element) {\r\n\t\t\tlet items = this._element.getElementsByClassName(\"active\");\r\n\t\t\tfor (let len = items.length, i = len - 1; i >= 0; i--) {\r\n\t\t\t\tif (items[i]) {\r\n\t\t\t\t\t$dom.removeClass(<HTMLElement>items[i], \"active\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.events.dispatchImmediately(\"closed\", {\r\n\t\t\ttype: \"closed\",\r\n\t\t\ttarget: this\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Selects a branch in the menu.\r\n\t *\r\n\t * Handles closing of currently open branch.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to select\r\n\t */\r\n\tpublic selectBranch(branch: IExportMenuItem): void {\r\n\r\n\t\t// Cancel previous closure\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = undefined;\r\n\t\t}\r\n\r\n\t\t// Add active class\r\n\t\t$dom.addClass(branch.interactions.element.parentElement, \"active\");\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\r\n\t\t\t$iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), (ascendant) => {\r\n\t\t\t\tif (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n\t\t\t\t\tthis.unselectBranch(ascendant, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Select and/or cancel timeout for current ascendants\r\n\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\tif (ascendant.closeTimeout) {\r\n\t\t\t\tthis.removeDispose(ascendant.closeTimeout);\r\n\t\t\t\tascendant.closeTimeout = undefined;\r\n\t\t\t}\r\n\t\t\t$dom.addClass(ascendant.interactions.element.parentElement, \"active\");\r\n\t\t});\r\n\r\n\t\t// Log current selection\r\n\t\tthis._currentSelection = branch;\r\n\r\n\t\t// Invoke event\r\n\t\tif (this.events.isEnabled(\"branchselected\")) {\r\n\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"branchselected\"] = {\r\n\t\t\t\ttype: \"branchselected\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tbranch: branch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"branchselected\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects a branch. Also selects a branch one level up if necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to unselect\r\n\t * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic unselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\t// Remove active class\r\n\t\t$dom.removeClass(branch.interactions.element.parentElement, \"active\");\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection == branch) {\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\r\n\t\t// Invoke event\r\n\t\tif (this.events.isEnabled(\"branchunselected\")) {\r\n\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"branchunselected\"] = {\r\n\t\t\t\ttype: \"branchunselected\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tbranch: branch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"branchunselected\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Delay unselection of a branch. This can still be cancelled in some other\r\n\t * place if the branch or its children regain focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to unselect\r\n\t * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic delayUnselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\t// Schedule branch unselection\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = undefined;\r\n\t\t}\r\n\t\tbranch.closeTimeout = this.setTimeout(() => {\r\n\t\t\tthis.unselectBranch(branch, simple);\r\n\t\t}, this.closeDelay);\r\n\r\n\t\t// Schedule unselection of all ascendants\r\n\t\t// In case focus went away from the export menu altogether, this will ensure\r\n\t\t// that all items will be closed.\r\n\t\t// In case we're jumping to other menu item, those delayed unselections will\r\n\t\t// be cancelled by `selectBranch`\r\n\t\tif (simple !== true && branch.ascendants) {\r\n\t\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\t\tthis.delayUnselectBranch(ascendant, true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates the menu based on which direction kayboard key was pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardKeys} key A key that was pressed\r\n\t */\r\n\tpublic moveSelection(key: KeyboardKeys): void {\r\n\r\n\t\t// Check if there's a current selection\r\n\t\tif (!this._currentSelection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet newSelection: $type.Optional<IExportMenuItem>;\r\n\r\n\t\tif (key == \"up\") {\r\n\t\t\t// Try moving up in current menu list, or to the last item if already\r\n\t\t\t// at the top\r\n\t\t\tnewSelection = this.getPrevSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if (key == \"down\") {\r\n\t\t\t// Try moving down in current menu list, or to the top item if already\r\n\t\t\t// at the bottom\r\n\t\t\tnewSelection = this.getNextSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n\t\t\tlet menu = this.getSubMenu(this._currentSelection);\r\n\r\n\t\t\t// Go one level-deeper\r\n\t\t\tif (menu != null) {\r\n\t\t\t\tnewSelection = menu[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n\t\t\t// Go one level-deeper\r\n\t\t\tnewSelection = this.getParentItem(this._currentSelection);\r\n\t\t}\r\n\r\n\t\tif (newSelection && newSelection !== this._currentSelection) {\r\n\t\t\tthis.selectBranch(newSelection);\r\n\t\t\tthis.setFocus(newSelection);\r\n\t\t\tthis._currentSelection = newSelection;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all siblings of a menu item, including this same menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}         branch  Menu item\r\n\t * @return {Array<IExportMenuItem>}          List of sibling menu items\r\n\t */\r\n\tpublic getSiblings(branch: IExportMenuItem): Array<IExportMenuItem> {\r\n\t\tlet parent = this.getParentItem(branch);\r\n\r\n\t\tif (parent && parent.menu) {\r\n\t\t\treturn parent.menu;\r\n\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu items parent item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}            branch  Menu item\r\n\t * @return {Optional<IExportMenuItem>}          Parent menu item\r\n\t */\r\n\tpublic getParentItem(branch: IExportMenuItem): $type.Optional<IExportMenuItem> {\r\n\t\tif (branch.ascendants && branch.ascendants.length) {\r\n\t\t\treturn branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns next sibling in the same menu branch. If there is no next sibling,\r\n\t * the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  Menu item to search siblings for\r\n\t * @return {IExportMenuItem}          Menu item\r\n\t */\r\n\tpublic getNextSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet next = siblings.indexOf(branch) + 1;\r\n\t\t\tnext = siblings.length == next ? 0 : next;\r\n\t\t\treturn siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns previous sibling in the same menu branch. If there is no next\r\n\t * sibling, the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  Menu item to search siblings for\r\n\t * @return {IExportMenuItem}          Menu item\r\n\t */\r\n\tpublic getPrevSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet prev = siblings.indexOf(branch) - 1;\r\n\t\t\tprev = prev == -1 ? siblings.length - 1 : prev;\r\n\t\t\treturn siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to set focus on particular menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Menu item\r\n\t */\r\n\tpublic setFocus(branch: IExportMenuItem): void {\r\n\t\tif (branch.interactions) {\r\n\t\t\t(<HTMLElement>branch.interactions.element).focus();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to remove focus from the menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Menu item\r\n\t */\r\n\tpublic setBlur(branch: IExportMenuItem): void {\r\n\t\tif (branch.interactions) {\r\n\t\t\t(<HTMLElement>branch.interactions.element).blur();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/export/ExportMenu.ts","/**\r\n * A collection of network-related functions\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines an interface for objects that hold a net request result.\r\n */\r\nexport interface INetLoadResult<A> {\r\n\r\n\t/**\r\n\t * A reference to original [[XMLHttpRequest]].\r\n\t *\r\n\t * @type {XMLHttpRequest}\r\n\t */\r\n\txhr: XMLHttpRequest;\r\n\r\n\t/**\r\n\t * Request response body.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tresponse?: string;\r\n\r\n\t/**\r\n\t * Request response as Blob. (if set `responseType = \"blob\"`)\r\n\t *\r\n\t * @type {Blob}\r\n\t */\r\n\tblob?: Blob;\r\n\r\n\t/**\r\n\t * Response `Content-Type`.\r\n\t *\r\n\t * @type {string | null}\r\n\t */\r\n\ttype: string | null;\r\n\r\n\t/**\r\n\t * Was there an error?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\terror: boolean;\r\n\r\n\t/**\r\n\t * A target object that made the net load request.\r\n\t *\r\n\t * @type {A}\r\n\t */\r\n\ttarget?: A;\r\n\r\n}\r\n\r\nexport interface INetRequestOptions {\r\n\r\n\t/**\r\n\t * Custom request headers to be added to HTTP(S) request.\r\n\t */\r\n\trequestHeaders?: { key: string, value: string}[];\r\n\r\n\t/**\r\n\t * Specify expected response type.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType} for more info\r\n\t * @type {XMLHttpRequestResponseType}\r\n\t */\r\n\tresponseType?: XMLHttpRequestResponseType;\r\n\r\n\t/**\r\n\t * Specify whether to send CORS credentials (defaults to `false`).\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials} for more info\r\n\t */\r\n\twithCredentials?: boolean;\r\n}\r\n\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @param  {string}                      url      URL for the file to load\r\n * @param  {A}                           target   A target element that is requesting the net load\r\n * @param  {INetRequestOptions}          options  Request options\r\n * @return {Promise<INetLoadResult<A>>}           Result (Promise)\r\n */\r\nexport function load<A>(url: string, target?: A, options?: INetRequestOptions): Promise<INetLoadResult<A>> {\r\n\treturn new Promise<INetLoadResult<A>>((success, error) => {\r\n\r\n\t\t// Is return type Blob?\r\n\t\tlet isBlob = $type.hasValue(options) && options.responseType == \"blob\";\r\n\r\n\t\t// Create request and set up handlers\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = () => {\r\n\t\t\tif (xhr.status === 200) {\r\n\r\n\t\t\t\tlet response: $type.Optional<string>;\r\n\t\t\t\tlet blob: $type.Optional<Blob>;\r\n\r\n\t\t\t\tif (isBlob) {\r\n\t\t\t\t\tblob = xhr.response;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tresponse = xhr.responseText || xhr.response\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet output: INetLoadResult<A> = {\r\n\t\t\t\t\txhr: xhr,\r\n\t\t\t\t\terror: false,\r\n\t\t\t\t\tresponse: response,\r\n\t\t\t\t\tblob: blob,\r\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t};\r\n\t\t\t\tsuccess(output);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terror({\r\n\t\t\t\t\txhr: xhr,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onerror = () => {\r\n\t\t\terror({\r\n\t\t\t\txhr: xhr,\r\n\t\t\t\terror: true,\r\n\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\ttarget: target\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// Open request\r\n\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\tif (options && options.withCredentials) {\r\n\t\t\txhr.withCredentials = true;\r\n\t\t}\r\n\r\n\t\t// Process options\r\n\t\tif ($type.hasValue(options)) {\r\n\r\n\t\t\tif ($type.hasValue(options.requestHeaders)) {\r\n\t\t\t\tfor(let i = 0; i < options.requestHeaders.length; i++) {\r\n\t\t\t\t\tlet header = options.requestHeaders[i];\r\n\t\t\t\t\txhr.setRequestHeader(header.key, header.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(options.responseType)) {\r\n\t\t\t\txhr.responseType = options.responseType;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Send request\r\n\t\txhr.send();\r\n\r\n\t});\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Net.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { dataLoader } from \"./DataLoader\";\r\nimport { DataParser } from \"./DataParser\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Component } from \"../Component\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { INetRequestOptions } from \"../utils/Net\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[DataSource]].\r\n */\r\nexport interface IDataSourceEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when loading of the data starts.\r\n\t */\r\n\tstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when loading of the data starts.\r\n\t */\r\n\tloadstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when the loading of the data finishes.\r\n\t */\r\n\tloadended: {};\r\n\r\n\t/**\r\n\t * Invoked when parsing of the loaded data starts.\r\n\t */\r\n\tparsestarted: {};\r\n\r\n\t/**\r\n\t * Invoked when parsing of the loaded data finishes.\r\n\t */\r\n\tparseended: {};\r\n\r\n\t/**\r\n\t * Invoked when loading and parsing finishes.\r\n\t */\r\n\tended: {};\r\n\r\n\t/**\r\n\t * Invoked when data source was successfully loaded and parsed.\r\n\t */\r\n\tdone: {\r\n\t\tdata: any\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when data source encounters a loading error.\r\n\t */\r\n\terror: {\r\n\t\tcode: number,\r\n\t\tmessage: string\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when data source encounters a parsing error.\r\n\t */\r\n\tparseerror: {\r\n\t\tmessage: string\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * Defines adapters for [[DataSource]].\r\n */\r\nexport interface IDataSourceAdapters {\r\n\r\n\t/**\r\n\t * Applied to a data source URL before it is loaded.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\turl: string;\r\n\r\n\t/**\r\n\t * Applied to a parser type, before parsing starts.\r\n\t *\r\n\t * Can be used to supply different parser than the one set/determined by\r\n\t * Data Loader.\r\n\t *\r\n\t * @type {DataParser}\r\n\t */\r\n\tparser: DataParser;\r\n\r\n\t/**\r\n\t * Applied to the timeout setting.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\treloadTimeout: number;\r\n\r\n\t/**\r\n\t * Applied to the loaded data **before** it is passed to parser.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tunparsedData: string;\r\n\r\n\t/**\r\n\t * Applied to the loaded data **after** it was parsed by a parser.\r\n\t * @type {any}\r\n\t */\r\n\tparsedData: any;\r\n\r\n\t/**\r\n\t * Applied to `incremental` setting.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tincremental: boolean;\r\n\r\n\t/**\r\n\t * Applied to `incrementalParams` setting.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tincrementalParams: { [index: string]: string };\r\n\r\n\t/**\r\n\t * Applied to `keepCount` setting.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tkeepCount: boolean;\r\n\r\n\t/**\r\n\t * Applied to parser options.\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\tparserOptions: any;\r\n\r\n\t/**\r\n\t * Applied to the array that lists fields in data that hold date-based values.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tdateFields: string[];\r\n\r\n\t/**\r\n\t * Applied to the array that lists fields in data that hold numeric values.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tnumberFields: string[];\r\n\r\n\t/**\r\n\t * Applied to the custom request options object.\r\n\t *\r\n\t * @type {INetRequestOptions}\r\n\t */\r\n\trequestOptions: INetRequestOptions;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a single data source - external file with all of its settings,\r\n * such as format, data parsing, etc.\r\n *\r\n * ```TypeScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JavaScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"dataSource\": {\r\n *     \"url\": \"http://www.myweb.com/data.json\",\r\n *     \"parser\": \"JSONParser\"\r\n *   },\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @see {@link IDataSourceEvents} for a list of available events\r\n * @see {@link IDataSourceAdapters} for a list of available Adapters\r\n */\r\nexport class DataSource extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IDataSourceEvents}\r\n\t */\r\n\tpublic _events!: IDataSourceEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IDataSourceAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<DataSource, IDataSourceAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<DataSource, IDataSourceAdapters> = new Adapter<DataSource, IDataSourceAdapters>(this);\r\n\r\n\t/**\r\n\t * A [[Component]] recipient of the data.\r\n\t *\r\n\t * @type {Component}\r\n\t */\r\n\tpublic component: Component;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @type {Language}\r\n\t */\r\n\tprotected _language: Language;\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]].\r\n\t *\r\n\t * @type {DateFormatter}\r\n\t */\r\n\tprotected _dateFormatter: DateFormatter;\r\n\r\n\t/**\r\n\t * An instance of parser class that can understand and parse data from the\r\n\t * source URL.\r\n\t *\r\n\t * @type {DataParser}\r\n\t */\r\n\tprotected _parser: DataParser;\r\n\r\n\t/**\r\n\t * An URL of the data source.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tprotected _url: string;\r\n\r\n\t/**\r\n\t * Custom options for HTTP(S) request.\r\n\t *\r\n\t * @type {INetRequestOptions}\r\n\t */\r\n\tprotected _requestOptions: INetRequestOptions = {};\r\n\r\n\t/**\r\n\t * Reload full data source every X ms.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _reloadFrequency: number;\r\n\r\n\t/**\r\n\t * Holds timeout reference for next reload.\r\n\t *\r\n\t * @type {any}\r\n\t */\r\n\tprotected _reloadTimeout: any;\r\n\r\n\t/**\r\n\t * Holds disposer for the reload event handler.\r\n\t * \r\n\t * @type {IDisposer}\r\n\t */\r\n\tprivate _reloadDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * If set to `true`, any subsequent data loads will be considered incremental\r\n\t * (containing only new data points that are supposed to be added to existing\r\n\t * data).\r\n\t *\r\n\t * NOTE: this setting works only with element's `data` property. It won't\r\n\t * work with any other externally-loadable data property.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _incremental: boolean = false;\r\n\r\n\t/**\r\n\t * A collection of key/value pairs to attach to a data source URL when making\r\n\t * an incremental request.\r\n\t */\r\n\tprotected _incrementalParams: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * This setting is used only when `incremental = true`. If set to `true`,\r\n\t * it will try to retain the same number of data items across each load.\r\n\t *\r\n\t * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n\t * beginning of data will be removed so that we end up with the same number\r\n\t * of data items.\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _keepCount: boolean = false;\r\n\r\n\t/**\r\n\t * Holds the date of the last load.\r\n\t *\r\n\t * @type {Date}\r\n\t */\r\n\tpublic lastLoad: Date;\r\n\r\n\t/**\r\n\t * If set to `true` it will timestamp all requested URLs to work around\r\n\t * browser cache.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic disableCache: boolean;\r\n\r\n\t/**\r\n\t * Will show loading indicator when loading files.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic showPreloader: boolean = true;\r\n\r\n\t/**\r\n\t * Loaded and parsed data.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tpublic data: any;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(url?: string, parser?: string | DataParser) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DataSource\";\r\n\r\n\t\t// Set defaults\r\n\t\tif (url) {\r\n\t\t\tthis.url = url;\r\n\t\t}\r\n\r\n\t\t// Set parser\r\n\t\tif (parser) {\r\n\t\t\tif (typeof parser == \"string\") {\r\n\t\t\t\tthis.parser = dataLoader.getParserByType(parser);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.parser = parser;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the loaded data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {string}  data         Raw (unparsed) data\r\n\t * @param {string}  contentType  Content type of the loaded data (optional)\r\n\t */\r\n\tpublic processData(data: string, contentType?: string): void {\r\n\t\t// Parsing started\r\n\t\tthis.dispatchImmediately(\"parsestarted\");\r\n\r\n\t\t// Check if parser is set\r\n\t\tif (!this.parser) {\r\n\r\n\t\t\t// Try to resolve from data\r\n\t\t\tthis.parser = dataLoader.getParserByData(data, contentType);\r\n\r\n\t\t\tif (!this.parser) {\r\n\t\t\t\t// We have a problem - nobody knows what to do with the data\r\n\t\t\t\t// Raise error\r\n\t\t\t\tif (this.events.isEnabled(\"parseerror\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataSourceEvents>[\"parseerror\"] = {\r\n\t\t\t\t\t\ttype: \"parseerror\",\r\n\t\t\t\t\t\tmessage: this.language.translate(\"No parser available for file: %1\", null, this.url),\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"parseerror\", event);\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatchImmediately(\"parseended\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Apply options adapters\r\n\t\tthis.parser.options = this.adapter.apply(\"parserOptions\", this.parser.options);\r\n\t\tthis.parser.options.dateFields = this.adapter.apply(\"dateFields\", this.parser.options.dateFields || []);\r\n\t\tthis.parser.options.numberFields = this.adapter.apply(\"numberFields\", this.parser.options.numberFields || []);\r\n\r\n\t\t// Check if we need to pass in date formatter\r\n\t\tif (this.parser.options.dateFields && !this.parser.options.dateFormatter) {\r\n\t\t\tthis.parser.options.dateFormatter = this.dateFormatter;\r\n\t\t}\r\n\r\n\t\t// Parse\r\n\t\tthis.data = this.adapter.apply(\r\n\t\t\t\"parsedData\",\r\n\t\t\tthis.parser.parse(\r\n\t\t\t\tthis.adapter.apply(\"unparsedData\", data)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// Check for parsing errors\r\n\t\tif (!$type.hasValue(this.data) && this.events.isEnabled(\"parseerror\")) {\r\n\t\t\tconst event: AMEvent<this, IDataSourceEvents>[\"parseerror\"] = {\r\n\t\t\t\ttype: \"parseerror\",\r\n\t\t\t\tmessage: this.language.translate(\"Error parsing file: %1\", null, this.url),\r\n\t\t\t\ttarget: this\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"parseerror\", event);\r\n\t\t}\r\n\r\n\t\t// Wrap up\r\n\t\tthis.dispatchImmediately(\"parseended\");\r\n\r\n\t\tif ($type.hasValue(this.data)) {\r\n\t\t\tthis.dispatchImmediately(\"done\", {\r\n\t\t\t\t\"data\": this.data\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// The component is responsible for updating its own data vtriggered via\r\n\t\t// events.\r\n\r\n\t\t// Update last data load\r\n\t\tthis.lastLoad = new Date();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * URL of the data source.\r\n\t *\r\n\t * @param {string}  value  URL\r\n\t */\r\n\tpublic set url(value: string) {\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} URL\r\n\t */\r\n\tpublic get url(): string {\r\n\r\n\t\t// Get URL\r\n\t\tlet url = this.disableCache\r\n\t\t\t? this.timestampUrl(this._url)\r\n\t\t\t: this._url;\r\n\r\n\t\t// Add incremental params\r\n\t\tif (this.incremental && this.component.data.length) {\r\n\t\t\turl = this.addUrlParams(url, this.incrementalParams);\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"url\", url);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Custom options for HTTP(S) request.\r\n\t *\r\n\t * At this moment the only option supported is: `requestHeaders`, which holds\r\n\t * an array of objects for custom request headers, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dataSource.requestOptions.requestHeaders = [{\r\n\t *   \"key\": \"x-access-token\",\r\n\t *   \"value\": \"123456789\"\r\n\t * }];\r\n\t * ``````JavaScript\r\n\t * chart.dataSource.requestOptions.requestHeaders = [{\r\n\t *   \"key\": \"x-access-token\",\r\n\t *   \"value\": \"123456789\"\r\n\t * }];\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dataSource\": {\r\n\t *     // ...\r\n\t *     \"requestOptions\": {\r\n\t *       \"requestHeaders\": [{\r\n\t *         \"key\": \"x-access-token\",\r\n\t *         \"value\": \"123456789\"\r\n\t *       }]\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * NOTE: setting this options on an-already loaded DataSource will not\r\n\t * trigger a reload.\r\n\t *\r\n\t * @param {INetRequestOptions}  value  Options\r\n\t */\r\n\tpublic set requestOptions(value: INetRequestOptions) {\r\n\t\tthis._requestOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {INetRequestOptions} Options\r\n\t */\r\n\tpublic get requestOptions(): INetRequestOptions {\r\n\t\treturn this.adapter.apply(\"requestOptions\", this._requestOptions);\r\n\t}\r\n\r\n\t/**\r\n\t * A parser to be used to parse data.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n\t * chart.dataSource.parser = am4core.JSONParser;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n\t * chart.dataSource.parser = am4core.JSONParser;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dataSource\": {\r\n\t *     \"url\": \"http://www.myweb.com/data.json\",\r\n\t *     \"parser\": \"JSONParser\"\r\n\t *   },\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default JSONParser\r\n\t * @param {DataParser}  value  Data parser\r\n\t */\r\n\tpublic set parser(value: DataParser) {\r\n\t\tthis._parser = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DataParser} Data parser\r\n\t */\r\n\tpublic get parser(): DataParser {\r\n\t\tif (!this._parser) {\r\n\t\t\tthis._parser = new JSONParser();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"parser\", this._parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Data source reload frequency.\r\n\t *\r\n\t * If set, it will reload the same URL every X milliseconds.\r\n\t *\r\n\t * @param {number} value Reload frequency (ms)\r\n\t */\r\n\tpublic set reloadFrequency(value: number) {\r\n\t\tif (this._reloadFrequency != value) {\r\n\t\t\tthis._reloadFrequency = value;\r\n\r\n\t\t\t// Should we schedule a reload?\r\n\t\t\tif (value) {\r\n\t\t\t\tif (!$type.hasValue(this._reloadDisposer)) {\r\n\t\t\t\t\tthis._reloadDisposer = this.events.on(\"ended\", (ev) => {\r\n\t\t\t\t\t\tthis._reloadTimeout = setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.load();\r\n\t\t\t\t\t\t}, this.reloadFrequency);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ($type.hasValue(this._reloadDisposer)) {\r\n\t\t\t\tthis._reloadDisposer.dispose();\r\n\t\t\t\tthis._reloadDisposer = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Reload frequency (ms)\r\n\t */\r\n\tpublic get reloadFrequency(): number {\r\n\t\treturn this.adapter.apply(\"reloadTimeout\", this._reloadFrequency);\r\n\t}\r\n\r\n\t/**\r\n\t * Should subsequent reloads be treated as incremental?\r\n\t *\r\n\t * Incremental loads will assume that they contain only new data items\r\n\t * since the last load.\r\n\t *\r\n\t * If `incremental = false` the loader will replace all of the target's\r\n\t * data with each load.\r\n\t *\r\n\t * This setting does not have any effect trhe first time data is loaded.\r\n\t *\r\n\t * NOTE: this setting works only with element's `data` property. It won't\r\n\t * work with any other externally-loadable data property.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} Incremental load?\r\n\t */\r\n\tpublic set incremental(value: boolean) {\r\n\t\tthis._incremental = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Incremental load?\r\n\t */\r\n\tpublic get incremental(): boolean {\r\n\t\treturn this.adapter.apply(\"incremental\", this._incremental);\r\n\t}\r\n\r\n\t/**\r\n\t * An object consisting of key/value pairs to apply to an URL when data\r\n\t * source is making an incremental request.\r\n\t *\r\n\t * @param {object}  value  Incremental request parameters\r\n\t */\r\n\tpublic set incrementalParams(value: { [index: string]: string }) {\r\n\t\tthis._incrementalParams = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {object} Incremental request parameters\r\n\t */\r\n\tpublic get incrementalParams(): { [index: string]: string } {\r\n\t\treturn this.adapter.apply(\"incrementalParams\", this._incrementalParams);\r\n\t}\r\n\r\n\t/**\r\n\t * This setting is used only when `incremental = true`. If set to `true`,\r\n\t * it will try to retain the same number of data items across each load.\r\n\t *\r\n\t * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n\t * beginning of data will be removed so that we end up with the same number\r\n\t * of data items.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean} Keep record count?\r\n\t */\r\n\tpublic set keepCount(value: boolean) {\r\n\t\tthis._keepCount = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} keepCount load?\r\n\t */\r\n\tpublic get keepCount(): boolean {\r\n\t\treturn this.adapter.apply(\"keepCount\", this._keepCount);\r\n\t}\r\n\r\n\t/**\r\n\t * Language instance to use.\r\n\t *\r\n\t * Will inherit and use chart's language, if not set.\r\n\t *\r\n\t * @param {Language} value An instance of Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Language} A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (this._language) {\r\n\t\t\treturn this._language;\r\n\t\t}\r\n\t\telse if (this.component) {\r\n\t\t\tthis._language = this.component.language;\r\n\t\t\treturn this._language;\r\n\t\t}\r\n\t\tthis.language = new Language();\r\n\t\treturn this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when parsing dates from string formats.\r\n\t *\r\n\t * Will inherit and use chart's DateFormatter if not ser.\r\n\t *\r\n\t * @param {DateFormatter} value An instance of [[DateFormatter]]\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {DateFormatter} A [[DateFormatter]] instance to be used\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (this._dateFormatter) {\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\telse if (this.component) {\r\n\t\t\tthis._dateFormatter = this.component.dateFormatter;\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\tthis.dateFormatter = new DateFormatter();\r\n\t\treturn this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds current timestamp to the URL.\r\n\t *\r\n\t * @param  {string}  url  Source URL\r\n\t * @return {string}       Timestamped URL\r\n\t */\r\n\tpublic timestampUrl(url: string): string {\r\n\t\tlet tstamp = new Date().getTime().toString();\r\n\t\tlet params: { [index: string]: string } = {};\r\n\t\tparams[tstamp] = \"\";\r\n\t\treturn this.addUrlParams(url, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes of this object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tif (this._reloadTimeout) {\r\n\t\t\tclearTimeout(this._reloadTimeout);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiate the load.\r\n\t *\r\n\t * All loading in JavaScript is asynchronous. This function will trigger the\r\n\t * load and will exit immediately.\r\n\t *\r\n\t * Use DataSource's events to watch for loaded data and errors.\r\n\t */\r\n\tpublic load(): void {\r\n\t\tif (this._reloadTimeout) {\r\n\t\t\tclearTimeout(this._reloadTimeout);\r\n\t\t}\r\n\t\tdataLoader.load(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds parameters to `url` as query strings. Will take care of proper\r\n\t * separators.\r\n\t * \r\n\t * @param  {string}  url     Source URL\r\n\t * @param  {object}  params  Parameters\r\n\t * @return {string}          New URL\r\n\t */\r\n\tpublic addUrlParams(url: string, params: { [index: string]: string }): string {\r\n\t\tlet join = url.match(/\\?/) ? \"&\" : \"?\";\r\n\t\tlet add: string[] = [];\r\n\t\t$object.each(params, (key, value) => {\r\n\t\t\tif (value != \"\") {\r\n\t\t\t\tadd.push(key + \"=\" + encodeURIComponent(value));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tadd.push(key);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (add.length) {\r\n\t\t\treturn url + join + add.join(\"&\");\r\n\t\t}\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"json\"] = JSONParser;\r\n\t\tregistry.registeredClasses[\"JSONParser\"] = JSONParser;\r\n\t\tregistry.registeredClasses[\"csv\"] = CSVParser;\r\n\t\tregistry.registeredClasses[\"CSVParser\"] = CSVParser;\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/data/DataSource.ts","/**\r\n * Data Loader is responsible for loading and parsing external data\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataSource } from \"./DataSource\";\r\nimport { DataParser } from \"./DataParser\";\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport * as $net from \"../utils/Net\";\r\n\r\n/**\r\n * Represents a list of available adapters for Sprite\r\n */\r\nexport interface IDataLoaderAdapters {\r\n\r\n\t/**\r\n\t * Applied after the Data Loader determines suitable parser type by data\r\n\t * source's URL extension.\r\n\t */\r\n\tgetParserByType: {\r\n\t\tparser: DataParser,\r\n\t\ttype?: string\r\n\t},\r\n\r\n\t/**\r\n\t * Applied after the Data Loader determines suitable parser type based on\r\n\t * its data examination.\r\n\t */\r\n\tgetParserByData: {\r\n\t\tparser: DataParser,\r\n\t\tdata?: string,\r\n\t\ttype?: string\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Data Loader is responsible for loading and parsing external data.\r\n *\r\n * There is just one instance of DataLoader per system. Unless you have a\r\n * speicific reason, do not instantiate additional instances.\r\n *\r\n * The global instance of Data Loader is accessible via:\r\n *\r\n * ```TypeScript\r\n * am4core.dataLoader;\r\n * ```\r\n * ```JavaScript\r\n * am4core.dataLoader;\r\n * ```\r\n *\r\n * A loading of specific data source is done via [[DataSource]].\r\n *\r\n \t Please refer to [[DataSource]] for information how to use it.\r\n *\r\n * @see {@link IDataLoaderAdapters} for a list of available Adapters\r\n */\r\nexport class DataLoader {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IDataLoaderAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<DataLoader, IDataLoaderAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<DataLoader, IDataLoaderAdapters> = new Adapter<DataLoader, IDataLoaderAdapters>(this);\r\n\r\n\t/**\r\n\t * Loads a supplied [[DataSource]] or an array of data sources, then calls\r\n\t * their respective `parse` methods.\r\n\t *\r\n\t * @param  {DataSource | DataSource[]}  source  A single data source or an array of multiple of data sources\r\n\t */\r\n\tpublic load(source: DataSource | DataSource[]): void {\r\n\t\tlet sources = Array.isArray(source) ? source : [source];\r\n\t\tlet promises = [];\r\n\r\n\t\t// Add each Source to the list to be loaded simultaneously\r\n\t\tfor (let x in sources) {\r\n\r\n\t\t\t// Dispatch events\r\n\t\t\tsources[x].dispatchImmediately(\"started\");\r\n\t\t\tsources[x].dispatchImmediately(\"loadstarted\");\r\n\r\n\t\t\tpromises.push($net.load(sources[x].url, sources[x], sources[x].requestOptions));\r\n\t\t}\r\n\r\n\t\t// Run all promises in parallel\r\n\t\tPromise.all(promises).then((res) => {\r\n\r\n\t\t\t// Process each loaded source\r\n\t\t\tfor (let x in res) {\r\n\r\n\t\t\t\t// Get Source\r\n\t\t\t\tlet result = res[x];\r\n\t\t\t\tlet source = result.target;\r\n\r\n\t\t\t\t// Dispatch events\r\n\t\t\t\tsource.dispatchImmediately(\"loadended\");\r\n\r\n\t\t\t\tif (result.error) {\r\n\t\t\t\t\tif (source.events.isEnabled(\"error\")) {\r\n\t\t\t\t\t\tsource.events.dispatchImmediately(\"error\", {\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tcode: result.xhr.status,\r\n\t\t\t\t\t\t\tmessage: source.language.translate(\"Unable to load file: %1\", null, source.url),\r\n\t\t\t\t\t\t\ttarget: source\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Initiate parsing of the loaded data\r\n\t\t\t\t\tsource.processData(result.response, result.type);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsource.dispatchImmediately(\"ended\");\r\n\r\n\t\t\t}\r\n\t\t}).catch((res) => {\r\n\r\n\t\t\tres.target.dispatchImmediately(\"loadended\");\r\n\r\n\t\t\tif (res.target.events.isEnabled(\"error\")) {\r\n\t\t\t\tres.target.events.dispatchImmediately(\"error\", {\r\n\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\tcode: res.xhr.status,\r\n\t\t\t\t\tmessage: res.target.language.translate(\"Unable to load file: %1\", null, res.target.url),\r\n\t\t\t\t\ttarget: res.target\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tres.target.dispatchImmediately(\"ended\");\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a [[DataParser]] object based on the data type.\r\n\t * Built-in parser types are as follows:\r\n\t *\r\n\t * * \"csv\" or \"text/csv\"\r\n\t * * \"json\" or \"application/json\"\r\n\t *\r\n\t * @param  {string}      contentType  A format type\r\n\t * @return {DataParser}               A parser object\r\n\t */\r\n\tpublic getParserByType(contentType: string): DataParser {\r\n\r\n\t\t// Let some plugin decide\r\n\t\tlet parser;\r\n\t\tif (parser = this.adapter.apply(\"getParserByType\", {\r\n\t\t\tparser: null,\r\n\t\t\ttype: contentType\r\n\t\t}).parser) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (contentType == \"csv\" || contentType == \"text/csv\" || contentType == \"application/vnd.ms-excel\") {\r\n\t\t\treturn new CSVParser();\r\n\t\t}\r\n\t\tif (contentType == \"json\" || contentType == \"application/json\") {\r\n\t\t\treturn new JSONParser();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to determine a parser out of content type and/or actual data.\r\n\t *\r\n\t * @param  {string}      data         Data\r\n\t * @param  {string}      contentType  Content-type\r\n\t * @return {DataParser}               Parser instance\r\n\t */\r\n\tpublic getParserByData(data: string, contentType?: string): DataParser {\r\n\r\n\t\t// Let some plugin decide\r\n\t\tlet parser = this.adapter.apply(\"getParserByData\", {\r\n\t\t\tparser: null,\r\n\t\t\tdata: data,\r\n\t\t\ttype: contentType\r\n\t\t}).parser;\r\n\r\n\t\t// Check if we have parser from outside code\r\n\t\tif (!parser) {\r\n\r\n\t\t\t// No, let's try to figure it out\r\n\t\t\tif (parser = this.getParserByType(contentType)) {\r\n\t\t\t\t// We're able to figure out parser by conten-type\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t\telse if (JSONParser.isJSON(data)) {\r\n\t\t\t\treturn this.getParserByType(\"json\");\r\n\t\t\t}\r\n\t\t\telse if (CSVParser.isCSV(data)) {\r\n\t\t\t\treturn this.getParserByType(\"csv\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn parser;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Create instance of Data Loader\r\n */\r\nexport let dataLoader: DataLoader = new DataLoader();\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/data/DataLoader.ts","/**\r\n * Responsive functionality module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters } from \"../Sprite\";\r\nimport { SpriteState } from \"../SpriteState\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { List } from \"../utils/List\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for the responsive rule, i.e. what overrides need to\r\n * be applied when certain conditions are matched.\r\n *\r\n * @important\r\n */\r\nexport interface IResponsiveRule {\r\n\r\n\t/**\r\n\t * A function which determines if this rule is relevant to current\r\n\t * conditions.\r\n\t *\r\n\t * Whenever the chrt size changes, this function will be run to determine\r\n\t * whether this rule needs to be applied.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\trelevant: (target: Container) => boolean;\r\n\r\n\t/**\r\n\t * A function which creates and returns a [[SpriteState]] that needs to be\r\n\t * set whenever rule should be applied.\r\n\t *\r\n\t * This is run only once.\r\n\t *\r\n\t * Once state is created, it is added to the Sprite's available states and\r\n\t * applied as necessary.\r\n\t *\r\n\t * @type {function}\r\n\t */\r\n\tstate: (target: Sprite, stateId: string) => Optional<SpriteState<ISpriteProperties, ISpriteAdapters>>;\r\n\r\n\t/**\r\n\t * ID of the rule.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tid?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Responsive]].\r\n */\r\nexport interface IResponsiveEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when a list of applicable rules for the current resolution\r\n\t * changes.\r\n\t */\r\n\truleschanged: {},\r\n\r\n\t/**\r\n\t * Invoked after each rule is applied to the actual element.\r\n\t */\r\n\truleapplied: {\r\n\r\n\t\t/**\r\n\t\t * A rule that was just applied.\r\n\t\t *\r\n\t\t * @type {IResponsiveRule}\r\n\t\t */\r\n\t\t\"rule\": IResponsiveRule\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Responsive]] class.\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResponsiveAdapters {\r\n\r\n\t/**\r\n\t * Are responsive features enabled?\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tenabled: boolean;\r\n\r\n\t/**\r\n\t * Use default rules?\r\n\t *\r\n\t * If this is set `false`, only user-defined rules will be applied.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tuseDefault: boolean;\r\n\r\n\t/**\r\n\t * A list of user-defined rules.\r\n\t *\r\n\t * @type {List<IResponsiveRule>}\r\n\t */\r\n\trules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of default rules.\r\n\t *\r\n\t * @type {List<IResponsiveRule>}\r\n\t */\r\n\tdefaultRules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of **all** rules - user-defined and default combined.\r\n\t *\r\n\t * @type {List<IResponsiveRule>}\r\n\t */\r\n\tallRules: List<IResponsiveRule>;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nexport class Responsive extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Holds a list of responsive rules organized by object type.\r\n\t *\r\n\t * @type {List<IResponsiveRule>}\r\n\t */\r\n\tprotected _rules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of the default responsive rules.\r\n\t *\r\n\t * @type {List<IResponsiveRule>}\r\n\t */\r\n\tprotected _defaultRules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of currently applied rules.\r\n\t *\r\n\t * @type {object}\r\n\t */\r\n\tprotected _appliedRules: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Use default rules in addition to the user-defined ones?\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tprotected _useDefault = true;\r\n\r\n\t/**\r\n\t * A target object responsive rules apply to.\r\n\t *\r\n\t * @type {Component}\r\n\t */\r\n\tprotected _component: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IResponsiveEvents}\r\n\t */\r\n\tpublic _events!: IResponsiveEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IExportAdapters}\r\n\t */\r\n\tpublic _adapter!: IResponsiveAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Responsive, IResponsiveAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<this, IResponsiveAdapters>(this);\r\n\r\n\t/**\r\n\t * Indicates of responsive rules application is enabled.\r\n\t *\r\n\t * @type {Boolean}\r\n\t */\r\n\tprotected _enabled = false;\r\n\r\n\t/**\r\n\t * Holds a disposer for size events.\r\n\t *\r\n\t * @type {IDisposer}\r\n\t */\r\n\tprivate _sizeEventDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Collection of objects and state ids that do not have any properties set.\r\n\t *\r\n\t * @type {string[]}\r\n\t */\r\n\tprivate _noStates: string[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Responsive\";\r\n\r\n\t\t// Set up rules list events\r\n\t\tthis.rules.events.on(\"inserted\", this.checkRules, true);\r\n\t\tthis.rules.events.on(\"removed\", this.checkRules, true);\r\n\t\tthis._disposers.push(this.rules.events);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A target object that responsive rules will need to be applied to.\r\n\t *\r\n\t * @param {Optional<Component>}  value  Target object\r\n\t */\r\n\tpublic set component(value: $type.Optional<Component>) {\r\n\r\n\t\t// Check if it's the same\r\n\t\tif (value == this._component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if we already have a set up component and remove its events\r\n\t\tif (this._sizeEventDisposer) {\r\n\t\t\tthis.removeDispose(this._sizeEventDisposer);\r\n\t\t}\r\n\r\n\t\t// Set\r\n\t\tthis._component = value;\r\n\r\n\t\t// Set up resize monitoring events\r\n\t\tthis._sizeEventDisposer = $type.getValue(this.component).events.on(\"sizechanged\", this.checkRules, this);\r\n\t\tthis._disposers.push(this._sizeEventDisposer);\r\n\r\n\t\t// Enable resoponsive\r\n\t\tthis.enabled = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Component>} Target object\r\n\t */\r\n\tpublic get component(): $type.Optional<Component> {\r\n\t\treturn this._component;\r\n\t}\r\n\r\n\t/**\r\n\t * Should responsive rules be checked against and applied?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Apply responsive rules?\r\n\t */\r\n\tpublic set enabled(value: boolean) {\r\n\t\tif (this._enabled != value) {\r\n\t\t\tthis._enabled = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Apply responsive rules?\r\n\t */\r\n\tpublic get enabled(): boolean {\r\n\t\treturn this.adapter.apply(\"enabled\", this._enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Should default responsive rules be applied in addition to user-defined\r\n\t * ones.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * @default true\r\n\t * @param {boolean}  value  Use default rules?\r\n\t */\r\n\tpublic set useDefault(value: boolean) {\r\n\t\tif (this._useDefault != value) {\r\n\t\t\tthis._useDefault = true;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Use default rules?\r\n\t */\r\n\tpublic get useDefault(): boolean {\r\n\t\treturn this.adapter.apply(\"useDefault\", this._useDefault);\r\n\t}\r\n\r\n\t/**\r\n\t * User-defined responsive rules.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * Use `allRules` to get all applicable rules including default and\r\n\t * user-defined ones.\r\n\t *\r\n\t * @param {List<IResponsiveRule>}  value  User-defined rules\r\n\t */\r\n\tpublic set rules(value: List<IResponsiveRule>) {\r\n\t\tthis._rules = value;\r\n\t\tthis._enabled = true;\r\n\t\tthis.applyRules();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {List<IResponsiveRule>} User-defined rules\r\n\t */\r\n\tpublic get rules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"rules\", this._rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Default responsive rules.\r\n\t *\r\n\t * @readonly\r\n\t * @return {List<IResponsiveRule>} List of responsive rules\r\n\t */\r\n\tpublic get defaultRules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"defaultRules\", this._defaultRules);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all rules: default rules (if not disabled) combined with\r\n\t * user-defined ones.\r\n\t *\r\n\t * @readonly\r\n\t * @return {List<IResponsiveRule>} List of all applicable rules\r\n\t */\r\n\tpublic get allRules(): List<IResponsiveRule> {\r\n\r\n\t\t// Create empty list\r\n\t\tlet rules = new List<IResponsiveRule>();\r\n\r\n\t\t// Add default rules if not disabled\r\n\t\t// A code, requesting `allRules` must ensure loading of default rules\r\n\t\t// by calling `loadDefaultRules()`\r\n\t\tif (this.useDefault) {\r\n\t\t\trules.copyFrom(this.defaultRules);\r\n\t\t}\r\n\r\n\t\t// Add user-defined ones\r\n\t\trules.copyFrom(this.rules);\r\n\r\n\t\treturn this.adapter.apply(\"allRules\", rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if rule by the particular id currently applied.\r\n\t *\r\n\t * @param  {string}   ruleId  Rule ID\r\n\t * @return {boolean}          Is currently applied?\r\n\t */\r\n\tprotected isApplied(ruleId: string): boolean {\r\n\t\tconst rule = this._appliedRules[ruleId];\r\n\t\treturn $type.hasValue(rule) ? rule : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks which responsive rules currently satisfy their conditions and\r\n\t * should be applied, or unapplied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic checkRules(): void {\r\n\r\n\t\t// Check if default rules need to be loaded\r\n\t\t// If needed, we wait until it's loaded and then call `checkRules` again\r\n\t\tif (this.useDefault && this.defaultRules.length == 0) {\r\n\t\t\tthis.loadDefaultRules().then((res) => {\r\n\t\t\t\tthis._defaultRules.setAll(res.default);\r\n\t\t\t\tthis.checkRules();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if there are any rules\r\n\t\tlet rules = this.allRules;\r\n\t\tif (!rules || rules.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init a list of rules to be applied\r\n\t\tlet rulesChanged: boolean = false;\r\n\r\n\t\tconst component = $type.getValue(this.component);\r\n\r\n\t\t// Check which rules match\r\n\t\t$iter.each(rules.iterator(), (rule) => {\r\n\r\n\t\t\t// Check if rule has an id\r\n\t\t\tif (!rule.id) {\r\n\t\t\t\trule.id = registry.getUniqueId();\r\n\t\t\t}\r\n\r\n\t\t\t// Init indicator if this rule should be applied\r\n\t\t\tlet apply = rule.relevant(component);\r\n\r\n\t\t\t// Let's check if this rule needs to be applied\r\n\t\t\tif ((apply && !this.isApplied(rule.id)) || (!apply && this.isApplied(rule.id))) {\r\n\t\t\t\trulesChanged = true;\r\n\t\t\t}\r\n\t\t\tthis._appliedRules[rule.id] = apply;\r\n\r\n\t\t});\r\n\r\n\t\t// Check if we need to re-apply the rules\r\n\t\tif (rulesChanged) {\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies current rules to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {any} target Target object\r\n\t * @todo Better type check\r\n\t */\r\n\tpublic applyRules(target?: Container): void {\r\n\t\t// If no target supplied, we assume the top-level element\r\n\t\tconst newTarget = ($type.hasValue(target)\r\n\t\t\t? target\r\n\t\t\t: $type.getValue(this.component));\r\n\r\n\t\t// Check each rule\r\n\t\tlet defaultStateApplied = false;\r\n\t\tif (this.enabled) {\r\n\t\t\t$iter.each(this.allRules.iterator(), (rule) => {\r\n\r\n\t\t\t\t// Get relevant state\r\n\t\t\t\tlet state = this.getState(rule, newTarget);\r\n\r\n\t\t\t\t// If there's a state, it means it needs to be applied\r\n\t\t\t\tif (state) {\r\n\r\n\t\t\t\t\t// Check if default state was already applied to this element.\r\n\t\t\t\t\t// We don't want to go resetting default states to ALL element,\r\n\t\t\t\t\t// if they don't have responsive states.\r\n\t\t\t\t\tif (!defaultStateApplied) {\r\n\r\n\t\t\t\t\t\t// Nope, reset states (instantly).\r\n\t\t\t\t\t\t//console.log(\"Applying default state to \" + newTarget.className + \" (\" + newTarget.uid + \"): \" + JSON.stringify(newTarget.defaultState.properties));\r\n\t\t\t\t\t\tnewTarget.applyCurrentState(0);\r\n\t\t\t\t\t\tdefaultStateApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Is this rule currently applied?\r\n\t\t\t\t\tif (this.isApplied($type.getValue(rule.id))) {\r\n\t\t\t\t\t\t// Yes. Apply the responsive state\r\n\t\t\t\t\t\t//console.log(\"Applying state to \" + newTarget.className + \" (\" + newTarget.uid + \"): \" + JSON.stringify(state.properties));\r\n\t\t\t\t\t\tnewTarget.setState(state);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Apply rules to the children\r\n\t\tif (newTarget.children) {\r\n\t\t\t$iter.each(newTarget.children.iterator(), (child) => {\r\n\t\t\t\tthis.applyRules(<Container>child);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies specific oresponsive overrides to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IResponsiveRule}  rule    Responsive rule\r\n\t * @param {any}              target  Target element\r\n\t * @deprecated\r\n\t * @hidden\r\n\t */\r\n\t/*\tpublic applyRule(rule: IResponsiveRule, target: any): void {\r\n\r\n\t\t\t// Construct state id\r\n\t\t\t//let stateId = \"responsive-\" + rule.id;\r\n\r\n\t\t\t// Check if we need to create a state for the element\r\n\t\t\tlet state = this.getState(rule, target);\r\n\r\n\t\t\t// Apply the state\r\n\t\t\tif (state) {\r\n\t\t\t\t//if (target.className == \"Container\" && target.parent.className == \"ZoomControl\") {\r\n\t\t\t\tconsole.log(\"Applying state to \" + target.className + \" (\" + target.uid + \"): \" + JSON.stringify(state.properties));\r\n\t\t\t\t//}\r\n\t\t\t\ttarget.setState(state);\r\n\t\t\t}\r\n\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * Returns a relative state for the rule/target, or `undefined` if no state is\r\n\t * needed.\r\n\t *\r\n\t * @param  {IResponsiveRule}  rule    [description]\r\n\t * @param  {any}              target  [description]\r\n\t * @return {Optional}                 [description]\r\n\t */\r\n\tprotected getState(rule: IResponsiveRule, target: any): Optional<SpriteState<any, any>> {\r\n\t\tlet stateId = \"responsive-\" + rule.id;\r\n\t\tlet tmpId = target.uid + \"_\" + stateId;\r\n\t\tif ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (!target.states.hasKey(stateId)) {\r\n\t\t\tlet state = rule.state(target, stateId);\r\n\t\t\tif (!state) {\r\n\t\t\t\tthis._noStates.push(tmpId);\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn target.states.getKey(stateId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a value from an element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {any}     target    Target object\r\n\t * @param  {string}  property  Property\r\n\t * @return {any}               Property value\r\n\t */\r\n\tpublic getValue(target: any, property: string): any {\r\n\t\t// This is a bit hacky, first we check if the property exist.\r\n\t\t// If it doesn't we try accessing target's property directly\r\n\t\tlet value: any = target.getPropertyValue(property);\r\n\t\tif (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n\t\t\tvalue = target[property];\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads default responsive rules.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Responsive rules\r\n\t */\r\n\tpublic loadDefaultRules(): Promise<any> {\r\n\t\treturn import(/* webpackChunkName: \"responsivedefaults\" */ \"./ResponsiveDefaults\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/responsive/Responsive.ts","/**\r\n *\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAxisLineProperties}\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAxisLineAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisLineEvents}\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisLine.ts","/**\r\n * Axis Tick module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisTick]].\r\n */\r\nexport interface IAxisTickProperties extends ITickProperties {\r\n\tlocation?: number;\r\n\tinside?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisTick]].\r\n */\r\nexport interface IAxisTickEvents extends ITickEvents {\r\n\r\n}\r\n\r\n/**\r\n * Defines adapter for [[AxisTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisTickAdapters extends ITickAdapters, IAxisTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an axis tick\r\n * @see {@link IAxisTickEvents} for a list of available events\r\n * @see {@link IAxisTickAdapters} for a list of available Adapters\r\n */\r\nexport class AxisTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties\r\n\t * @type {AxisTicPkroperties}\r\n\t */\r\n\tpublic _properties!: IAxisTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters\r\n\t * @type {IAxisTickAdapters}\r\n\t */\r\n\tpublic _adapter!: IAxisTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAxisTickEvents}\r\n\t */\r\n\tpublic _events!: IAxisTickEvents;\r\n\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t *\r\n\t * @type {Axis}\r\n\t */\r\n\tpublic axis: Axis;\t\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"AxisTick\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.location = 0.5;\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.pixelPerfect = true;\r\n\r\n\t\tthis.length = 5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tset location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\tget location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\tset inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\tget inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean) {\r\n\t\tsuper.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t}\t\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisTick\"] = AxisTick;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/axes/AxisTick.ts","/**\r\n * Pointed rectangle module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PointedShape, IPointedShapeProperties, IPointedShapeAdapters, IPointedShapeEvents } from \"./PointedShape\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleProperties extends IPointedShapeProperties {\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @type {number}\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleEvents extends IPointedShapeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PointedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPointedRectangleAdapters extends IPointedShapeAdapters, IPointedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link IPointedRectangleEvents} for a list of available events\r\n * @see {@link IPointedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class PointedRectangle extends PointedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPointedRectangleProperties}\r\n\t */\r\n\tpublic _properties!: IPointedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPointedRectangleAdapters}\r\n\t */\r\n\tpublic _adapter!: IPointedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPointedRectangleEvents}\r\n\t */\r\n\tpublic _events!: IPointedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PointedRectangle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.cornerRadius = 0;\r\n\t\tthis.cornerRadius = 6;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet cr = this.cornerRadius;\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\t\tif (w > 0 && h > 0) {\r\n\t\t\tlet x = this.pointerX;\r\n\t\t\tlet y = this.pointerY;\r\n\t\t\tlet bwh = this.pointerBaseWidth / 2;\r\n\r\n\t\t\tlet maxcr: number = $math.min(w / 2, h / 2);\r\n\t\t\tlet crtl: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crtr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbl: number = $math.fitToRange(cr, 0, maxcr);\r\n\r\n\t\t\t// corner coordinates\r\n\t\t\t// top left\r\n\t\t\tlet xtl = 0;\r\n\t\t\tlet ytl = 0;\r\n\t\t\t// top right\r\n\t\t\tlet xtr = w;\r\n\t\t\tlet ytr = 0;\r\n\t\t\t// bottom right\r\n\t\t\tlet xbr = w;\r\n\t\t\tlet ybr = h;\r\n\t\t\t// bottom left\r\n\t\t\tlet xbl = 0;\r\n\t\t\tlet ybl = h;\r\n\r\n\t\t\tlet lineT;\r\n\t\t\tlet lineR;\r\n\t\t\tlet lineB;\r\n\t\t\tlet lineL;\r\n\r\n\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n\r\n\t\t\t// top\r\n\t\t\tif (d1 > 0 && d2 > 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crtl + bwh, w - bwh - crtr);\r\n\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (stemX - bwh) + \",0 L\" + x + \",\" + y + \" L\" + (stemX + bwh) + \",0 L\" + (w - crtr) + \",0\";\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\tif (d1 < 0 && d2 < 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crbl + bwh, w - bwh - crbr);\r\n\t\t\t\ty = $math.fitToRange(y, h, Infinity);\r\n\t\t\t\tlineB = \" L\" + (w - crbr) + \",\" + h + \" L\" + (stemX + bwh) + \",\" + h + \" L\" + x + \",\" + y + \" L\" + (stemX - bwh) + \",\" + h + \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineB = \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\tif (d1 < 0 && d2 > 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtl + bwh, h - crbl - bwh);\r\n\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\r\n\t\t\t\tlineL = \" L0,\" + (h - crbl) + \" L0,\" + (stemY + bwh) + \" L\" + x + \",\" + y + \" L0,\" + (stemY - bwh) + \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineL = \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\t// right\r\n\t\t\tif (d1 > 0 && d2 < 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtr + bwh, h - bwh - crbr);\r\n\t\t\t\tx = $math.fitToRange(x, w, Infinity);\r\n\t\t\t\tlineR = \" L\" + w + \",\" + crtr + \" L\" + w + \",\" + (stemY - bwh) + \" L\" + x + \",\" + y + \" L\" + w + \",\" + (stemY + bwh) + \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineR = \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\r\n\t\t\tlet arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n\t\t\tlet arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n\t\t\tlet arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n\t\t\tlet arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n\r\n\t\t\tthis.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}  value  Corner radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Corner radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/PointedRectangle.ts","/**\r\n * Pointed shape module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PointedShape]].\r\n */\r\nexport interface IPointedShapeProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\r\n\t *\r\n\t * @default 15\r\n\t * @type {number}\r\n\t */\r\n\tpointerBaseWidth?: number;\r\n\r\n\t/**\r\n\t * A length of the pinter (stem) in pixels.\r\n\t *\r\n\t * @default 10\r\n\t * @type {number}\r\n\t */\r\n\tpointerLength?: number;\r\n\r\n\t/**\r\n\t * X coordinate the shape is pointing to.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpointerX?: number;\r\n\r\n\t/**\r\n\t * Y coordinate the shape is pointing to.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpointerY?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PointedShape]].\r\n */\r\nexport interface IPointedShapeEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PointedShape]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPointedShapeAdapters extends ISpriteAdapters, IPointedShapeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a shape with a pointer.\r\n *\r\n * @see {@link IPointedShapeEvents} for a list of available events\r\n * @see {@link IPointedShapeAdapters} for a list of available Adapters\r\n */\r\nexport class PointedShape extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPointedShapeProperties}\r\n\t */\r\n\tpublic _properties!: IPointedShapeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPointedShapeAdapters}\r\n\t */\r\n\tpublic _adapter!: IPointedShapeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPointedShapeEvents}\r\n\t */\r\n\tpublic _events!: IPointedShapeEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PointedShape\";\r\n\t\tthis.pointerBaseWidth = 15;\r\n\t\tthis.pointerLength = 10;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (!$type.isNumber(this.pointerX)) {\r\n\t\t\tthis.pointerX = this.pixelWidth / 2;\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.pointerY)) {\r\n\t\t\tthis.pointerY = this.pixelHeight + 10;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\r\n\t *\r\n\t * @default 15\r\n\t * @param {number}  value  Width (px)\r\n\t */\r\n\tpublic set pointerBaseWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerBaseWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A length of the pinter (stem) in pixels.\r\n\t *\r\n\t * @default 10\r\n\t * @param {number}  value  Length (px)\r\n\t */\r\n\tpublic set pointerLength(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerLength\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Length (px)\r\n\t */\r\n\tpublic get pointerLength(): number {\r\n\t\treturn this.getPropertyValue(\"pointerLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get pointerBaseWidth(): number {\r\n\t\treturn this.getPropertyValue(\"pointerBaseWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate the shape is pointing to.\r\n\t *\r\n\t * @param {number}  value  X\r\n\t */\r\n\tpublic set pointerX(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} X\r\n\t */\r\n\tpublic get pointerX(): number {\r\n\t\treturn this.getPropertyValue(\"pointerX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate the shape is pointing to.\r\n\t *\r\n\t * @param {number}  value  Y\r\n\t */\r\n\tpublic set pointerY(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Y\r\n\t */\r\n\tpublic get pointerY(): number {\r\n\t\treturn this.getPropertyValue(\"pointerY\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/PointedShape.ts","/**\r\n * Module for \"Drop Shadow\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Group } from \"../Group\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Drop Shadow\" filter\r\n */\r\nexport interface DropShadowFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tdx: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tdy: number;\r\n\r\n\t/**\r\n\t * Blur.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Shadow opacity. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\topacity: number;\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tcolor: Color;\r\n\r\n};\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creats a \"Drop Shadow\" filter.\r\n */\r\nexport class DropShadowFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {DropShadowFilterProperties}\r\n\t */\r\n\tpublic _properties!: DropShadowFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @see [@link DropShadowFilterProperties]\r\n\t * @type {Dictionary<DropShadowFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<DropShadowFilterProperties, any>;\r\n\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feOffset>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feOffset: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMerge>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Group}\r\n\t */\r\n\tpublic feMerge: Group;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"DropShadowFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\tthis.feOffset = this.paper.add(\"feOffset\");\r\n\t\tthis.feOffset.attr({ \"result\": \"offsetBlur\" });\r\n\t\tthis.filterPrimitives.push(this.feOffset);\r\n\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"in2\": \"offsetBlur\", operator: \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feMerge = this.paper.addGroup(\"feMerge\");\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\"));\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\").attr({ \"in\": \"SourceGraphic\" }));\r\n\t\tthis.filterPrimitives.push(this.feMerge);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.color = new InterfaceColorSet().getFor(\"alternativeBackground\");\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\t\tthis.dx = 3;\r\n\t\tthis.dy = 3;\r\n\t\tthis.opacity = 0.5;\r\n\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.properties.color = value;\r\n\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the shadow. (0-1)\r\n\t *\r\n\t * @param {number}  value  Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\tthis.properties.opacity = value;\r\n\t\tthis.feFlood.attr({ \"flood-opacity\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): number {\r\n\t\treturn this.properties.opacity;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @param {number}  value  Horizontal offset (px)\r\n\t */\r\n\tpublic set dx(value: number) {\r\n\t\tthis.properties.dx = value;\r\n\t\tthis.feOffset.attr({ \"dx\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Horizontal offset (px)\r\n\t */\r\n\tpublic get dx(): number {\r\n\t\treturn this.properties.dx;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @param {number} value Vertical offset (px)\r\n\t */\r\n\tpublic set dy(value: number) {\r\n\t\tthis.properties.dy = value;\r\n\t\tthis.feOffset.attr({ \"dy\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Vertical offset (px)\r\n\t */\r\n\tpublic get dy(): number {\r\n\t\treturn this.properties.dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Blur.\r\n\t *\r\n\t * @param {number}  value  Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n\t/**\r\n\t * [updateScale description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected updateScale() {\r\n\t\tthis.dx = this.dx;\r\n\t\tthis.dy = this.dy;\r\n\t\tthis.blur = this.blur;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DropShadowFilter\"] = DropShadowFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/DropShadowFilter.ts","/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomOutButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomOutButtonAdapters extends IButtonAdapters, IZoomOutButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ZoomOutButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IZoomOutButtonProperties}\r\n\t */\r\n\tpublic _properties!: IZoomOutButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IZoomOutButtonAdapters}\r\n\t */\r\n\tpublic _adapter!: IZoomOutButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IZoomOutButtonEvents}\r\n\t */\r\n\tpublic _events!: IZoomOutButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ZoomOutButton\";\r\n\r\n\t\tthis.padding(9, 9, 9, 9);\r\n\t\t//this.dx = - 5;\r\n\t\t//this.dy = 5;\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 11, y: 0 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(8, 3, 8, 3);\r\n\t\ticon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Zoom Out\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/ZoomOutButton.ts","/**\r\n * Functionality for drawing waved circles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Circle, ICircleProperties, ICircleAdapters, ICircleEvents } from \"./Circle\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[WavedCircle]].\r\n */\r\nexport interface IWavedCircleProperties extends ICircleProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @type {number}\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @type {number}\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t * @type {number}\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * Inner radius of the circle in pixels.\r\n\t *\r\n\t * @type {number | Percent}\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedCircle]].\r\n */\r\nexport interface IWavedCircleEvents extends ICircleEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedCircle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedCircleAdapters extends ICircleAdapters, IWavedCircleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved circle.\r\n *\r\n * @see {@link IWavedCircleEvents} for a list of available events\r\n * @see {@link IWavedCircleAdapters} for a list of available Adapters\r\n */\r\nexport class WavedCircle extends Circle implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IWavedCircleProperties}\r\n\t */\r\n\tpublic _properties!: IWavedCircleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IWavedCircleAdapters}\r\n\t */\r\n\tpublic _adapter!: IWavedCircleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IWavedCircleEvents}\r\n\t */\r\n\tpublic _events!: IWavedCircleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedCircle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\r\n\t\tthis.fill = undefined;\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.tension = 0.8;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tlet path: string = \"\";\r\n\r\n\t\tlet radius: number = this.pixelRadius;\r\n\r\n\t\tif (radius > 0) {\r\n\t\t\tlet points: IPoint[] = this.getPoints(radius);\r\n\t\t\tpath = $path.moveTo(points[0]) + new $smoothing.Tension(this.tension, this.tension).smooth(points);\r\n\t\t}\r\n\r\n\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\t\tif (innerRadius > 0) {\r\n\t\t\tlet points: IPoint[] = this.getPoints(innerRadius);\r\n\t\t\tpoints.reverse();\r\n\t\t\tpath += $path.moveTo(points[0]) + new $smoothing.Tension(this.tension, this.tension).smooth(points);\r\n\t\t}\r\n\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns points that circle consists of.\r\n\t *\r\n\t * @param  {number}    radius  Radius (px)\r\n\t * @return {IPoint[]}          Points\r\n\t */\r\n\tprotected getPoints(radius: number): IPoint[] {\r\n\t\tlet circleLength: number = radius * Math.PI * 2;\r\n\t\tlet halfWaveHeight: number = this.waveHeight / 2;\r\n\r\n\t\tlet waveLength = circleLength / Math.round(circleLength / this.waveLength);\r\n\t\tlet halfWaveLength: number = waveLength / 2;\r\n\t\tlet points: IPoint[] = [];\r\n\r\n\t\tlet count = circleLength / waveLength;\r\n\t\tfor (let i = 0; i <= count; i++) {\r\n\t\t\tlet angle1: number = (i * waveLength) / circleLength * 360;\r\n\t\t\tlet angle2: number = (i * waveLength + halfWaveLength) / circleLength * 360;\r\n\r\n\t\t\tpoints.push({ x: (radius - halfWaveHeight) * $math.cos(angle1), y: (radius - halfWaveHeight) * $math.sin(angle1) });\r\n\t\t\tpoints.push({ x: (radius + halfWaveHeight) * $math.cos(angle2), y: (radius + halfWaveHeight) * $math.sin(angle2) });\r\n\t\t}\r\n\t\tpoints.pop();\r\n\t\treturn points;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circle in pixels (absolute) or [[Percent]] (relative).\r\n\t *\r\n\t * @param {number | Percent}  value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Calculated inner radius of the circle in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return {number} Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.innerRadius, $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param {number}  value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param {number}  value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param {number}  value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"WavedCircle\"] = WavedCircle;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/WavedCircle.ts","/**\r\n * Functionality for drawing a trapezoid.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Trapezoid]].\r\n */\r\nexport interface ITrapezoidProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Wdith of the top side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @type {number | Percent}\r\n\t */\r\n\ttopSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Wdith of the bottom side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @type {number | Percent}\r\n\t */\r\n\tbottomSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of the left side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @type {number | Percent}\r\n\t */\r\n\tleftSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of the right side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @type {number | Percent}\r\n\t */\r\n\trightSide?: number | Percent;\r\n\r\n\t/**\r\n\t * A relative vertical position of the \"neck\". If the top and bottom sides\r\n\t * are of different width, and `horizontalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @type {Percent}\r\n\t */\r\n\thorizontalNeck?: Percent;\r\n\r\n\t/**\r\n\t * A relative horizontal position of the \"neck\". If the left and right sides\r\n\t * are of different height, and `verticalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @type {Percent}\r\n\t */\r\n\tverticalNeck?: Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Trapezoid]].\r\n */\r\nexport interface ITrapezoidEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Trapezoid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITrapezoidAdapters extends ISpriteAdapters, ITrapezoidProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a Trapezoid.\r\n *\r\n * @see {@link ITrapezoidEvents} for a list of available events\r\n * @see {@link ITrapezoidAdapters} for a list of available Adapters\r\n */\r\nexport class Trapezoid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ITrapezoidProperties}\r\n\t */\r\n\tpublic _properties!: ITrapezoidProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ITrapezoidAdapters}\r\n\t */\r\n\tpublic _adapter!: ITrapezoidAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ITrapezoidEvents}\r\n\t */\r\n\tpublic _events!: ITrapezoidEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Trapezoid\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.topSide = percent(100);\r\n\t\tthis.bottomSide = percent(100);\r\n\t\tthis.leftSide = percent(100);\r\n\t\tthis.rightSide = percent(100);\r\n\r\n\t\tthis.isMeasured = false; // todo: add measureElement\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this.pixelHeight;\r\n\r\n\t\tlet ts: number = $utils.relativeToValue(this.topSide, w);\r\n\t\tlet bs: number = $utils.relativeToValue(this.bottomSide, w);\r\n\t\tlet ls: number = $utils.relativeToValue(this.leftSide, h);\r\n\t\tlet rs: number = $utils.relativeToValue(this.rightSide, h);\r\n\r\n\t\t// 1----2\r\n\t\t// |    |\r\n\t\t// 4----3\r\n\r\n\t\tlet x0: number = (w - ts) / 2;\r\n\t\tlet y0: number = (h - ls) / 2;\r\n\r\n\t\tlet x1: number = w - (w - ts) / 2;\r\n\t\tlet y1: number = (h - rs) / 2;\r\n\r\n\t\tlet x2: number = w - (w - bs) / 2;\r\n\t\tlet y2: number = h - (h - rs) / 2;\r\n\r\n\t\tlet x3: number = (w - bs) / 2;\r\n\t\tlet y3: number = h - (h - ls) / 2;\r\n\r\n\t\tlet mt: string = \"\";\r\n\t\tlet mr: string = \"\";\r\n\t\tlet mb: string = \"\";\r\n\t\tlet ml: string = \"\";\r\n\r\n\t\tif ($type.hasValue(this.horizontalNeck)) {\r\n\t\t\tlet hn: number = this.horizontalNeck.value;\r\n\t\t\tmt = $path.lineTo({ x: w * hn, y: Math.max(y0, y1) });\r\n\t\t\tmb = $path.lineTo({ x: w * hn, y: Math.min(y2, y3) });\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(this.verticalNeck)) {\r\n\t\t\tlet vn: number = this.verticalNeck.value;\r\n\t\t\tmr = $path.lineTo({ x: Math.min(x1, x2), y: h * vn });\r\n\t\t\tml = $path.lineTo({ x: Math.max(x0, x3), y: h * vn });\r\n\t\t}\r\n\r\n\r\n\t\tlet path: string = $path.moveTo({ x: x0, y: y0 })\r\n\t\t\t+ mt\r\n\t\t\t+ $path.lineTo({ x: x1, y: y1 })\r\n\t\t\t+ mr\r\n\t\t\t+ $path.lineTo({ x: x2, y: y2 })\r\n\t\t\t+ mb\r\n\t\t\t+ $path.lineTo({ x: x3, y: y3 })\r\n\t\t\t+ ml\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Wdith of the top side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param {number | Percent}  value  Width\r\n\t */\r\n\tpublic set topSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"topSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width\r\n\t */\r\n\tpublic get topSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wdith of the bottom side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param {number | Percent}  value  Width\r\n\t */\r\n\tpublic set bottomSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"bottomSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width\r\n\t */\r\n\tpublic get bottomSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the left side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param {number | Percent}  value  Height\r\n\t */\r\n\tpublic set leftSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"leftSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Height\r\n\t */\r\n\tpublic get leftSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"leftSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the right side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param {number | Percent}  value  Height\r\n\t */\r\n\tpublic set rightSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"rightSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Height\r\n\t */\r\n\tpublic get rightSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"rightSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position of the \"neck\". If the top and bottom sides\r\n\t * are of different width, and `horizontalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @param {Percent}  value  Horizontal neck position\r\n\t */\r\n\tpublic set horizontalNeck(value: Percent) {\r\n\t\tthis.setPropertyValue(\"horizontalNeck\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Percent} Horizontal neck position\r\n\t */\r\n\tpublic get horizontalNeck(): Percent {\r\n\t\treturn this.getPropertyValue(\"horizontalNeck\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position of the \"neck\". If the left and right sides\r\n\t * are of different height, and `verticalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @param {Percent}  value  Vertical neck position\r\n\t */\r\n\tpublic set verticalNeck(value: Percent) {\r\n\t\tthis.setPropertyValue(\"verticalNeck\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Percent} Vertical neck position\r\n\t */\r\n\tpublic get verticalNeck(): Percent {\r\n\t\treturn this.getPropertyValue(\"verticalNeck\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Trapezoid\"] = Trapezoid;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Trapezoid.ts","/**\r\n * 3D slice module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Slice, ISliceProperties, ISliceAdapters, ISliceEvents } from \"../Slice\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../Sprite\";\r\nimport { Container } from \"../../Container\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * Defines properties for [[Slice3D]].\r\n */\r\nexport interface ISlice3DProperties extends ISliceProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t * @type {number}\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @type {number}\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Slice3D]].\r\n */\r\nexport interface ISlice3DEvents extends ISliceEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slice3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISlice3DAdapters extends ISliceAdapters, ISlice3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a 3D slice of a Pie chart.\r\n *\r\n * @see {@link ISlice3DEvents} for a list of available events\r\n * @see {@link ISlice3DAdapters} for a list of available Adapters\r\n */\r\nexport class Slice3D extends Slice {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISlice3DProperties}\r\n\t */\r\n\tpublic _properties!: ISlice3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISlice3DAdapters}\r\n\t */\r\n\tpublic _adapter!: ISlice3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISlice3DEvents}\r\n\t */\r\n\tpublic _events!: ISlice3DEvents;\r\n\r\n\t/**\r\n\t * Container element for elements of the 3D sides.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic edge: Container;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideA: Sprite;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideB: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Slice3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\t// Create edge container\r\n\t\tlet edge = this.createChild(Container);\r\n\t\tthis.edge = edge;\r\n\t\tedge.shouldClone = false;\r\n\t\tedge.isMeasured = false;\r\n\r\n\t\tlet lightenFilter: LightenFilter = new LightenFilter();\r\n\t\tlightenFilter.lightness = -0.25;\r\n\t\tedge.filters.push(lightenFilter);\r\n\t\tedge.toBack();\r\n\t\t//edge.strokeOpacity = 0;\r\n\t\tthis._disposers.push(edge);\r\n\r\n\t\t// Set defaults\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 20;\r\n\r\n\t\t// Create side A element\r\n\t\tlet sideA = this.createChild(Sprite);\r\n\t\tthis.sideA = sideA;\r\n\t\tsideA.shouldClone = false;\r\n\t\tsideA.isMeasured = false;\r\n\t\tsideA.setElement(this.paper.add(\"path\"));\r\n\t\tlet lightenFilterA: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterA.lightness = -0.25;\r\n\t\tsideA.filters.push(lightenFilterA);\r\n\t\t//sideA.strokeOpacity = 0;\r\n\t\tthis._disposers.push(sideA);\r\n\r\n\t\t// Crate side B element\r\n\t\tlet sideB = this.createChild(Sprite);\r\n\t\tthis.sideB = sideB;\r\n\t\tsideB.shouldClone = false;\r\n\t\tsideB.isMeasured = false;\r\n\t\tsideB.setElement(this.paper.add(\"path\"));\r\n\t\tlet lightenFilterB: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterB.lightness = -0.25;\r\n\t\tsideB.filters.push(lightenFilterB);\r\n\t\tthis._disposers.push(sideB);\r\n\t\t//sideB.strokeOpacity = 0;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\t// this should go here to hide 3d slices if arc = 0\r\n\t\tfor (let i = 0, len = this.edge.children.length; i < len; i++) {\r\n\t\t\tlet slice = this.edge.children.getIndex(i);\r\n\t\t\tif (slice instanceof Slice) {\r\n\t\t\t\tslice.radiusY = this.radiusY;\r\n\t\t\t\tslice.radius = this.radius;\r\n\t\t\t\tslice.fill = this.fill;\r\n\t\t\t\tslice.startAngle = this.startAngle;\r\n\t\t\t\tslice.arc = this.arc;\r\n\t\t\t\tslice.cornerRadius = this.cornerRadius;\r\n\t\t\t\tslice.innerRadius = this.innerRadius;\r\n\t\t\t\tslice.strokeOpacity = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.arc !== 0 && this.radius > 0 && this.depth > 0) {\r\n\t\t\tthis.sideB.show(0);\r\n\t\t\tthis.sideA.show(0);\r\n\t\t\tthis.edge.show(0);\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet arc = this.arc;\r\n\t\t\tlet innerRadius = this.pixelInnerRadius || 0;\r\n\t\t\tlet radiusY = this.radiusY || 0;\r\n\t\t\tlet cornerRadius = this.cornerRadius || 0;\r\n\t\t\tlet innerCornerRadius = this.innerCornerRadius;\r\n\t\t\tlet radius = this.radius;\r\n\r\n\t\t\t// this is code duplicate with $path.arc. @todo to think how to avoid it\r\n\r\n\t\t\tlet endAngle = startAngle + arc;\r\n\t\t\tlet crSin = $math.sin($math.min(arc, 45) / 2);\r\n\r\n\t\t\tinnerCornerRadius = innerCornerRadius || cornerRadius;\r\n\r\n\t\t\tlet innerRadiusY = (radiusY / radius) * innerRadius;\r\n\t\t\tlet cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n\t\t\tlet innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n\r\n\t\t\tcornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\tcornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\tinnerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\tinnerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\tcornerRadius = $math.fitToRange(cornerRadius, 0, radius * crSin);\r\n\t\t\tcornerRadiusY = $math.fitToRange(cornerRadiusY, 0, radiusY * crSin);\r\n\r\n\t\t\tinnerCornerRadius = $math.fitToRange(innerCornerRadius, 0, innerRadius * crSin);\r\n\t\t\tinnerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin);\r\n\r\n\t\t\t//let crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n\t\t\t//let crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\tif (innerRadius < innerCornerRadius) {\r\n\t\t\t\tinnerRadius = innerCornerRadius;\r\n\t\t\t}\r\n\r\n\t\t\tif (innerRadiusY < innerCornerRadiusY) {\r\n\t\t\t\tinnerRadiusY = innerCornerRadiusY;\r\n\t\t\t}\r\n\r\n\t\t\tlet crInnerAngle: number = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n\t\t\tlet crInnerAngleY: number = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\tif (!$type.isNumber(crInnerAngle)) {\r\n\t\t\t\tcrInnerAngle = 0;\r\n\t\t\t}\r\n\t\t\tif (!$type.isNumber(crInnerAngleY)) {\r\n\t\t\t\tcrInnerAngleY = 0;\r\n\t\t\t}\r\n\r\n\t\t\t//let middleAngle = startAngle + arc / 2;\r\n\t\t\t//let mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.round($math.sin(middleAngle) * innerRadiusY, 4) };\r\n\r\n\t\t\tlet a0 = { x: $math.round($math.cos(startAngle) * (innerRadius + innerCornerRadius), 4), y: $math.round($math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY), 4) };\r\n\t\t\tlet b0 = { x: $math.round($math.cos(startAngle) * (radius - cornerRadius), 4), y: $math.round($math.sin(startAngle) * (radiusY - cornerRadiusY), 4) };\r\n\t\t\tlet c0 = { x: $math.round($math.cos(endAngle) * (radius - cornerRadius), 4), y: $math.round($math.sin(endAngle) * (radiusY - cornerRadiusY), 4) };\r\n\t\t\tlet d0 = { x: $math.round($math.cos(endAngle) * (innerRadius + innerCornerRadius), 4), y: $math.round($math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY), 4) };\r\n\t\t\t// end of duplicate\r\n\r\n\t\t\tlet h: number = this.depth;\r\n\t\t\tlet ah: IPoint = { x: a0.x, y: a0.y - h };\r\n\t\t\tlet bh: IPoint = { x: b0.x, y: b0.y - h };\r\n\t\t\tlet ch: IPoint = { x: c0.x, y: c0.y - h };\r\n\t\t\tlet dh: IPoint = { x: d0.x, y: d0.y - h };\r\n\r\n\t\t\tthis.sideA.path = $path.moveTo(a0) + $path.lineTo(b0) + $path.lineTo(bh) + $path.lineTo(ah) + $path.closePath();\r\n\t\t\tthis.sideB.path = $path.moveTo(c0) + $path.lineTo(d0) + $path.lineTo(dh) + $path.lineTo(ch) + $path.closePath();\r\n\r\n\t\t\tif (this.startAngle < 90) {\r\n\t\t\t\tthis.sideA.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideA.toFront();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.startAngle + this.arc > 90) {\r\n\t\t\t\tthis.sideB.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideB.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sideA.hide(0);\r\n\t\t\tthis.sideB.hide(0);\r\n\t\t\tthis.edge.hide(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t * @param {number}  depth  Depth (px)\r\n\t */\r\n\tpublic set depth(depth: number) {\r\n\t\tif (this.setPropertyValue(\"depth\", depth, true)) {\r\n\t\t\tthis.edge.removeChildren();\r\n\r\n\t\t\tlet d = 3;\r\n\r\n\t\t\tif (depth > 0) {\r\n\t\t\t\tlet count: number = Math.ceil(this.depth / d);\r\n\t\t\t\tlet step: number = depth / count;\r\n\t\t\t\tfor (let i = 0; i <= count; i++) {\r\n\t\t\t\t\tlet slice: Slice = this.edge.createChild(Slice);\r\n\t\t\t\t\tslice.isMeasured = false;\r\n\t\t\t\t\tslice.y = -step * i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.slice.dy = -this.depth;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param {number}  value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\tlet angle: number = this.getPropertyValue(\"angle\");\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = 0;\r\n\t\t}\r\n\t\treturn angle;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Vertical radius (0-1)\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\tlet radiusY: number = this.getPropertyValue(\"radiusY\");\r\n\t\tif (!$type.isNumber(radiusY)) {\r\n\t\t\tradiusY = this.radius - this.radius * this.angle / 90;\r\n\t\t}\r\n\t\treturn radiusY;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @param {number} value Vertical radius (0-1)\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.setPropertyValue(\"radiusY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param {this} source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.edge.copyFrom(source.edge);\r\n\t\tthis.sideA.copyFrom(source.sideA);\r\n\t\tthis.sideB.copyFrom(source.sideB);\r\n\t}\t\t\t\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/elements/3d/Slice3D.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColorModifier } from \"./ColorModifier\";\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify linear gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.GradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.GradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"GradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class GradientModifier extends ColorModifier {\r\n\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t *\r\n\t * @type {LinearGradient | RadialGradient}\r\n\t */\r\n\tpublic gradient: LinearGradient | RadialGradient;\r\n\r\n\t/**\r\n\t * An array of lightness values for each step.\r\n\t *\r\n\t * @type {number[]}\r\n\t */\r\n\tprotected _lightnesses!: number[];\r\n\r\n\t/**\r\n\t * An array of brightness values for each step.\r\n\t *\r\n\t * @type {number[]}\r\n\t */\r\n\tprotected _brightnesses!: number[];\r\n\r\n\t/**\r\n\t * An array of opacity values for each step.\r\n\t *\r\n\t * @type {number[]}\r\n\t */\r\n\tprotected _opacities!: number[];\r\n\r\n\t/**\r\n\t * An array of relative position (0-1) for each step.\r\n\t *\r\n\t * If not set, all steps will be of equal relative length.\r\n\t *\r\n\t * @type {number[]}\r\n\t */\r\n\tprotected _offsets!: number[];\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.lightnesses = [];\r\n\t\tthis.brightnesses = [];\r\n\t\tthis.opacities = [];\r\n\t\tthis.offsets = [];\r\n\t\tthis.className = \"GradientModifier\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * An array of lightness values for each step.\r\n\t *\r\n\t * @param {number[]}  value  Lightness values\r\n\t */\r\n\tpublic set lightnesses(value: number[]) {\r\n\t\tthis._lightnesses = value;\r\n\t\tthis._brightnesses = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number[]} Lightness values\r\n\t */\r\n\tpublic get lightnesses(): number[] {\r\n\t\treturn this._lightnesses;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of brightness values for each step.\r\n\t *\r\n\t * @param {number[]}  value  Brightness values\r\n\t */\r\n\tpublic set brightnesses(value: number[]) {\r\n\t\tthis._brightnesses = value;\r\n\t\tthis._lightnesses = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number[]} Brightness values\r\n\t */\r\n\tpublic get brightnesses(): number[] {\r\n\t\treturn this._brightnesses;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of opacity values for each step.\r\n\t *\r\n\t * @param {number[]}  value  Opacity values\r\n\t */\r\n\tpublic set opacities(value: number[]) {\r\n\t\tthis._opacities = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number[]} Opacity values\r\n\t */\r\n\tpublic get opacities(): number[] {\r\n\t\treturn this._opacities;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of relative position (0-1) for each step.\r\n\t *\r\n\t * If not set, all steps will be of equal relative length.\r\n\t *\r\n\t * @param {number[]}  value  Offsets\r\n\t */\r\n\tpublic set offsets(value: number[]) {\r\n\t\tthis._offsets = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number[]} Offsets\r\n\t */\r\n\tpublic get offsets(): number[] {\r\n\t\treturn this._offsets;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the color based on step setting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Color}  value  Source color\r\n\t * @return {Color}         A gradient that matches set modification rules\r\n\t */\r\n\tpublic modify(value: Color): Color | LinearGradient | RadialGradient {\r\n\r\n\t\t// Clear current gradient\r\n\t\tthis.gradient.clear();\r\n\r\n\t\t// Get step count\r\n\t\tlet count: number = 0;\r\n\t\tif (this.opacities) {\r\n\t\t\tcount = $math.max(count, this.opacities.length);\r\n\t\t}\r\n\t\tif (this.lightnesses) {\r\n\t\t\tcount = $math.max(count, this.lightnesses.length);\r\n\t\t}\r\n\t\tif (this.brightnesses) {\r\n\t\t\tcount = $math.max(count, this.brightnesses.length);\r\n\t\t}\r\n\r\n\t\t// Init step values\r\n\t\tlet opacity: number = 1,\r\n\t\t\tlightness: $type.Optional<number>,\r\n\t\t\tbrightness: $type.Optional<number>;\r\n\r\n\t\t// Apply steps\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\r\n\t\t\t// Take base color\r\n\t\t\tlet color = value;\r\n\r\n\t\t\t// Check if there are any parameters for this step\r\n\t\t\tif (this.opacities && $type.isNumber(this.opacities[i])) {\r\n\t\t\t\topacity = this.opacities[i];\r\n\t\t\t}\r\n\t\t\tif (this.lightnesses && $type.isNumber(this.lightnesses[i])) {\r\n\t\t\t\tlightness = this.lightnesses[i];\r\n\t\t\t\tbrightness = undefined;\r\n\t\t\t}\r\n\t\t\tif (this.brightnesses && $type.isNumber(this.brightnesses[i])) {\r\n\t\t\t\tbrightness = this.brightnesses[i];\r\n\t\t\t\tlightness = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if we need to brighten/lighten color\r\n\t\t\tif ($type.isNumber(brightness)) {\r\n\t\t\t\tcolor = value.brighten(this.brightnesses[i]);\r\n\t\t\t}\r\n\t\t\telse if ($type.isNumber(lightness)) {\r\n\t\t\t\tcolor = value.lighten(this.lightnesses[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Get offset (it's OK if it's undefined)\r\n\t\t\tlet offset: number = this.offsets[i];\r\n\r\n\t\t\t// Apply step\r\n\t\t\tthis.gradient.addColor(color, opacity, offset);\r\n\t\t}\r\n\t\treturn this.gradient;\r\n\t}\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis._offsets = source.offsets;\r\n\t\tthis._brightnesses = source.brightnesses;\r\n\t\tthis._lightnesses = source.lightnesses;\r\n\t\tthis._opacities = source.opacities;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GradientModifier\"] = GradientModifier;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/GradientModifier.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for color modifiers.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ColorModifier extends BaseObject {\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorModifier\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies color value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {Color}  value  Original color\r\n\t * @return {Color}         Modified\r\n\t */\r\n\tpublic modify(value: Color): Color | LinearGradient | RadialGradient {\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorModifier\"] = ColorModifier;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/ColorModifier.ts","/**\r\n * Sankey diagram module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { FlowDiagram, FlowDiagramDataItem, IFlowDiagramAdapters, IFlowDiagramDataFields, IFlowDiagramEvents, IFlowDiagramProperties } from \"./FlowDiagram\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { DictionaryTemplate, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Legend, ILegendDataFields, LegendDataItem } from \"../Legend\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SankeyNode } from \"../elements/SankeyNode\";\r\nimport { SankeyLink } from \"../elements/SankeyLink\";\r\nimport { LinearGradientModifier } from \"../../core/rendering/fills/LinearGradientModifier\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $order from \"../../core/utils/Order\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo rearange notes after dragged\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SankeyDiagram]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SankeyDiagramDataItem extends FlowDiagramDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {SankeyDiagram}\r\n\t */\r\n\tpublic _component!: SankeyDiagram;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t * @type {SankeyLink}\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * An origin node.\r\n\t *\r\n\t * @type {SankeyNode}\r\n\t */\r\n\tpublic fromNode: SankeyNode;\r\n\r\n\t/**\r\n\t * A destination node.\r\n\t *\r\n\t * @type {SankeyNode}\r\n\t */\r\n\tpublic toNode: SankeyNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagramDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramDataFields extends IFlowDiagramDataFields {\r\n\r\n\t/**\r\n\t * Name of the source node.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tfromName?: string;\r\n\r\n\t/**\r\n\t * Name of the target node.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttoName?: string;\r\n\r\n\t/**\r\n\t * Value of the link between two nodes.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Color of a from node\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tcolor?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[SankeyDiagram]]\r\n */\r\nexport interface ISankeyDiagramProperties extends IFlowDiagramProperties {\r\n\r\n\t/**\r\n\t * Sort nodes by name or value or do not sort at all\r\n\t *\r\n\t * @type {\"top\" | \"bottom\" | \"middle\"}\r\n\t */\r\n\tnodeAlign?: \"top\" | \"bottom\" | \"middle\";\r\n\r\n\r\n\t/**\r\n\t * Orientation of the chart.\r\n\t *\r\n\t * @type {Orientation}\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyDiagram]].\r\n */\r\nexport interface ISankeyDiagramEvents extends IFlowDiagramEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyDiagram]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyDiagramAdapters extends IFlowDiagramAdapters, ISankeyDiagramProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Sankey Diagram chart.\r\n *\r\n * @see {@link ISankeyDiagramEvents} for a list of available Events\r\n * @see {@link ISankeyDiagramAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation\r\n * @important\r\n */\r\nexport class SankeyDiagram extends FlowDiagram {\r\n\r\n\r\n\t/**\r\n\t * Defines a type for the DataItem.\r\n\t *\r\n\t * @type {SankeyDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t *\r\n\t * @type {ISankeyDiagramDataFields}\r\n\t */\r\n\tpublic _dataFields: ISankeyDiagramDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISankeyDiagramProperties}\r\n\t */\r\n\tpublic _properties!: ISankeyDiagramProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {SeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: ISankeyDiagramAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISankeyDiagramEvents}\r\n\t */\r\n\tpublic _events!: ISankeyDiagramEvents;\r\n\r\n\t/**\r\n\t * An a link element, connecting two nodes.\r\n\t * @type {SankeyLink}\r\n\t */\r\n\tpublic _link: SankeyLink;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelSum: { [index: number]: number };\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tprotected _levelNodesCount: { [index: number]: number };\r\n\r\n\t/**\r\n\t */\r\n\tpublic _node: SankeyNode;\r\n\r\n\t/**\r\n\t * [maxSum description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic maxSum: number;\r\n\r\n\t/**\r\n\t * level with max sum\r\n\t */\r\n\tprotected _maxSumLevel: number;\r\n\r\n\t/**\r\n\t * [valueHeight description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprotected _valueHeight: number;\r\n\r\n\t/**\r\n\t * A total number of levels, present on this chart.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tprotected _levelCount: number;\r\n\r\n\t/**\r\n\t * Sorted nodes iterator.\r\n\t *\r\n\t * @ignore\r\n\t * @type {Iterator}\r\n\t */\r\n\tprotected _sorted: $iter.Iterator<[string, SankeyNode]>;\r\n\r\n\tprotected _heightAnimation: Animation;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyDiagram\";\r\n\t\tthis.orientation = \"horizontal\";\r\n\t\tthis.nodeAlign = \"middle\";\r\n\r\n\t\tthis.nodesContainer.width = percent(100);\r\n\t\tthis.nodesContainer.height = percent(100);\r\n\r\n\t\tthis.linksContainer.width = percent(100);\r\n\t\tthis.linksContainer.height = percent(100);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates chart's data, effectively causing the chart to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis._levelCount = 0;\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tnode.level = this.getNodeLevel(node, 0);\r\n\t\t\tthis._levelCount = $math.max(this._levelCount, node.level);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns node's highest level.\r\n\t *\r\n\t * @param  {SankeyNode}  node   Node\r\n\t * @param  {number}      level  Current level\r\n\t * @return {number}             New level\r\n\t */\r\n\tprotected getNodeLevel(node: SankeyNode, level: number): number {\r\n\t\t//@todo solve circular so\r\n\t\tlet levels: number[] = [level];\r\n\t\t$iter.each(node.incomingDataItems.iterator(), (link: SankeyDiagramDataItem) => {\r\n\t\t\tif (link.fromNode) {\r\n\t\t\t\tlevels.push(this.getNodeLevel(link.fromNode, level + 1));\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Math.max(...levels);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates relation between pixel height and total value.\r\n\t *\r\n\t * In Sankey the actual thickness of links and height of nodes will depend\r\n\t * on their values.\r\n\t */\r\n\tprotected calculateValueHeight() {\r\n\t\t// calculate sums of each level\r\n\t\tthis._levelSum = {};\r\n\t\tthis._levelNodesCount = {};\r\n\t\tthis.maxSum = 0;\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tthis.getNodeValue(node);\r\n\t\t});\r\n\r\n\t\tthis.nodes.each((key, node) => {\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelSum[level])) {\r\n\t\t\t\tthis._levelSum[level] += value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelSum[level] = value;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this._levelNodesCount[level])) {\r\n\t\t\t\tthis._levelNodesCount[level]++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._levelNodesCount[level] = 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet maxSumLevel: number;\r\n\t\tfor (let key in this._levelSum) {\r\n\t\t\tif (this.maxSum < this._levelSum[key]) {\r\n\t\t\t\tthis.maxSum = this._levelSum[key];\r\n\t\t\t\tmaxSumLevel = Number(key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._maxSumLevel = maxSumLevel;\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet availableHeight: number;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tavailableHeight = this.chartContainer.maxHeight - 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tavailableHeight = this.chartContainer.maxWidth - 1;\r\n\t\t}\r\n\r\n\t\tlet valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;\r\n\r\n\t\tif (!$type.isNumber(this.valueHeight)) {\r\n\t\t\tthis.valueHeight = valueHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet finalHeight;\r\n\t\t\ttry {\r\n\t\t\t\tfinalHeight = this._heightAnimation.animationOptions[0].to;\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\r\n\t\t\t}\r\n\t\t\t// without animations it will be non-smooth as maxValue jumps from one column to another\r\n\t\t\tif (finalHeight != valueHeight) {\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tduration = this.nodes.template.states.getKey(\"active\").transitionDuration;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._heightAnimation = new Animation(this, { property: \"valueHeight\", from: this.valueHeight, to: valueHeight }, duration).start();\r\n\t\t\t\tthis._disposers.push(this._heightAnimation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Redraws the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.calculateValueHeight();\r\n\r\n\t\tlet container = this.nodesContainer;\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\tlet maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];\r\n\r\n\t\tlet total = this.dataItem.values.value.sum;\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\t\t\tlet levelCoordinate: number = 0;\r\n\r\n\t\t\tlet nodeCount = this._levelNodesCount[level];\r\n\r\n\t\t\tswitch (this.nodeAlign) {\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight - (nodeCount - maxSumLevelNodeCount) * this.nodePadding;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tlevelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * this.nodePadding / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tnode.parent = container;\r\n\r\n\t\t\tlet delta: number;\r\n\t\t\tlet x: number;\r\n\t\t\tlet y: number;\r\n\r\n\t\t\tlet value = Math.max(node.totalIncoming, node.totalOutgoing);\r\n\r\n\t\t\tif (value / total < this.minNodeSize) {\r\n\t\t\t\tvalue = total * this.minNodeSize;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tdelta = (this.innerWidth - node.pixelWidth) / this._levelCount;\r\n\r\n\t\t\t\tx = delta * node.level;\r\n\t\t\t\ty = nextCoordinate[level] || levelCoordinate;\r\n\r\n\t\t\t\tlet h = value * this.valueHeight;\r\n\r\n\t\t\t\tnode.height = h;\r\n\t\t\t\tnode.minX = x;\r\n\t\t\t\tnode.maxX = x;\r\n\t\t\t\tnextCoordinate[level] = y + h + this.nodePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdelta = (this.innerHeight - node.pixelHeight) / this._levelCount;\r\n\r\n\t\t\t\tx = nextCoordinate[level] || levelCoordinate;\r\n\t\t\t\ty = delta * node.level;\r\n\r\n\t\t\t\tlet w = value * this.valueHeight;\r\n\r\n\t\t\t\tnode.width = w;\r\n\t\t\t\tnode.minY = y;\r\n\t\t\t\tnode.maxY = y;\r\n\t\t\t\tnextCoordinate[level] = x + w + this.nodePadding;\r\n\t\t\t}\r\n\t\t\tnode.x = x;\r\n\t\t\tnode.y = y;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Performs actual operations to reveal this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number} duration Fade in duration (ms)\r\n\t * @return {number}          Fade in duration (ms)\r\n\t */\r\n\tprotected showReal(duration?: number): $type.Optional<Animation> {\r\n\r\n\t\tif (this.interpolationDuration > 0) {\r\n\t\t\tlet container = this.nodesContainer;\r\n\r\n\t\t\tlet i: number = 0;\r\n\r\n\t\t\t$iter.each(this.links.iterator(), (link) => {\r\n\t\t\t\tlink.hide(0);\r\n\t\t\t})\r\n\r\n\t\t\t$iter.each(this._sorted, (strNode) => {\r\n\r\n\t\t\t\tlet node = strNode[1];\r\n\r\n\t\t\t\tlet property: \"dx\" | \"dy\";\r\n\r\n\t\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\t\tnode.dx = -(container.pixelWidth - node.pixelWidth) / this._levelCount;\r\n\t\t\t\t\tproperty = \"dx\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.dy = -(container.pixelHeight - node.pixelHeight) / this._levelCount;\r\n\t\t\t\t\tproperty = \"dy\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet delay = 0;\r\n\t\t\t\tlet duration = this.interpolationDuration;\r\n\t\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\t\tdelay = this.sequencedInterpolationDelay * i + duration * i / $iter.length(this.nodes.iterator());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.opacity = 0;\r\n\t\t\t\tnode.invalidateLinks();\r\n\r\n\t\t\t\tnode.animate([{ property: \"opacity\", from: 0, to: 1 }, { property: property, to: 0 }], this.interpolationDuration, this.interpolationEasing).delay(delay);\r\n\r\n\t\t\t\t$iter.each(node.outgoingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\t$iter.each(node.incomingDataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\tif (!dataItem.fromNode) {\r\n\t\t\t\t\t\tlet animation = dataItem.link.show(this.interpolationDuration);\r\n\t\t\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn super.showReal();\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the sort type of the nodes.\r\n\t *\r\n\t * This will actually reshuffle nodes using nice animation.\r\n\t */\r\n\tprotected changeSorting() {\r\n\t\tthis.sortNodes();\r\n\r\n\t\tlet nextCoordinate: { [index: number]: number } = {};\r\n\r\n\t\t$iter.each(this._sorted, (strNode) => {\r\n\t\t\tlet node = strNode[1];\r\n\t\t\tlet level = node.level;\r\n\r\n\t\t\tlet levelCoordinate = (this.maxSum - this._levelSum[level]) * this.valueHeight / 2;\r\n\r\n\t\t\tlet property: \"x\" | \"y\";\r\n\t\t\tlet nodeHeight: number;\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\tproperty = \"y\";\r\n\t\t\t\tnodeHeight = node.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tproperty = \"x\";\r\n\t\t\t\tnodeHeight = node.pixelWidth;\r\n\t\t\t}\r\n\r\n\t\t\tnode.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, this.interpolationDuration, this.interpolationEasing);\r\n\t\t\tnextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + this.nodePadding;\r\n\r\n\t\t\tnode.invalidateLinks();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sankey diagram\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new data item.\r\n\t *\r\n\t * @return {this} Data item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SankeyDiagramDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * How to align nodes. In case layout is vertical, top means left and bottom means right\r\n\t *\r\n\t * @param {\"top\" | \"middle\" | \"bottom\"}  value  Node sorting\r\n\t */\r\n\tpublic set nodeAlign(value: \"top\" | \"middle\" | \"bottom\") {\r\n\t\tthis.setPropertyValue(\"nodeAlign\", value);\r\n\t\tthis.changeSorting();\r\n\t}\r\n\r\n\t/**\r\n\t * @returns {\"top\" | \"middle\" | \"bottom\"} Returns nodeAlign value\r\n\t */\r\n\tpublic get nodeAlign(): \"top\" | \"middle\" | \"bottom\" {\r\n\t\treturn this.getPropertyValue(\"nodeAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the chart: \"horizontal\" or \"vertical\";\r\n\t *\r\n\t * @param {Orientation} value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet nameLabel = this.nodes.template.nameLabel;\r\n\r\n\t\tif (value == \"vertical\") {\r\n\t\t\tthis.nodes.template.width = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"middle\";\r\n\t\t\tnameLabel.locationX = 0.5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.nodes.template.height = undefined;\r\n\t\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\t\tnameLabel.locationX = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Orientation} Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createNode(): this[\"_node\"] {\r\n\t\tlet node = new SankeyNode();\r\n\t\tthis._disposers.push(node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic createLink(): this[\"_link\"] {\r\n\t\tlet link = new SankeyLink();\r\n\t\tthis._disposers.push(link);\r\n\t\treturn link;\r\n\t}\r\n\r\n\tpublic get valueHeight(): number {\r\n\t\treturn this._valueHeight;\r\n\t}\r\n\r\n\tpublic set valueHeight(value: number) {\r\n\t\tif (value != this._valueHeight) {\r\n\t\t\tthis._valueHeight = value;\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tdisposeData() {\r\n\t\tsuper.disposeData();\r\n\t\tthis._sorted = this.nodes.iterator();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyDiagram\"] = SankeyDiagram;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/types/SankeyDiagram.ts","/**\r\n * SankeyNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { SankeyDiagram, SankeyDiagramDataItem } from \"../types/SankeyDiagram\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color, Color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $string from \"../../core/utils/String\";\r\nimport * as $order from \"../../core/utils/Order\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeProperties extends IFlowDiagramNodeProperties {\r\n\r\n\t/**\r\n\t * A level node is at. (0 - ...)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tlevel?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyNodeAdapters extends IFlowDiagramNodeAdapters, ISankeyNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISankeyNodeProperties}\r\n\t */\r\n\tpublic _properties!: ISankeyNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISankeyNodeAdapters}\r\n\t */\r\n\tpublic _adapter!: ISankeyNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISankeyNodeEvents}\r\n\t */\r\n\tpublic _events!: ISankeyNodeEvents;\r\n\r\n\r\n\t/**\r\n\t * [nextInCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic nextInCoord: number = 0;\r\n\r\n\t/**\r\n\t * [nextOutCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tpublic nextOutCoord: number = 0;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t *\r\n\t * @type {SankeyDiagram}\r\n\t */\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[SankeyDiagramDataItem]] used in the class.\r\n\t *\r\n\t * @type {SankeyDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * A label element which shows node's value.\r\n\t *\r\n\t * @type {LabelBullet}\r\n\t */\r\n\tpublic valueLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t *\r\n\t * @type {LabelBullet}\r\n\t */\r\n\tpublic nameLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyNode\";\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tlet nameLabel = this.createChild(LabelBullet);\r\n\t\tnameLabel.shouldClone = false;\r\n\t\t//@should we auto update these locations if position is changed?\r\n\t\tnameLabel.locationX = 1;\r\n\t\tnameLabel.locationY = 0.5;\r\n\t\tnameLabel.label.text = \"{name}\";\r\n\r\n\t\t//nameLabel.label.textElement.hideOversized = false;\r\n\t\tnameLabel.width = 150;\r\n\t\tnameLabel.height = 150;\r\n\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\tnameLabel.label.padding(0, 5, 0, 5);\r\n\t\tthis.nameLabel = nameLabel;\r\n\r\n\t\tlet valueLabel = this.createChild(LabelBullet);\r\n\t\tvalueLabel.shouldClone = false;\r\n\t\tvalueLabel.label.hideOversized = false;\r\n\t\tvalueLabel.locationX = 0.5;\r\n\t\tvalueLabel.locationY = 0.5;\r\n\t\tvalueLabel.width = 150;\r\n\t\tvalueLabel.height = 150;\r\n\t\t//valueLabel.label.text = \"{value}\";\r\n\t\tvalueLabel.label.horizontalCenter = \"middle\";\r\n\t\tthis.valueLabel = valueLabel;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.background.hiddenState.copyFrom(hiddenState);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\t\tthis.nextInCoord = 0;\r\n\t\tthis.nextOutCoord = 0;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tlet orientation = chart.orientation;\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tx = this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.nextInCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tx = this.nextInCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.endX = x;\r\n\t\t\t\t\t\tlink.endY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.fromNode) {\r\n\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = this.pixelX + this.dx - link.maxWidth;\r\n\t\t\t\t\t\t\t\tlink.startY = link.endY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = link.endX;\r\n\t\t\t\t\t\t\t\tlink.startY = this.pixelY + this.dy - link.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlink.gradient;\r\n\t\t\t\t\t\t\tlink.fill = dataItem.toNode.color;\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextInCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t\tx = this.pixelX + this.pixelWidth + this.dx - 1;\r\n\t\t\t\t\t\t\ty = this.nextOutCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t\tx = this.nextOutCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.pixelY + this.pixelHeight + this.dy - 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.startX = x;\r\n\t\t\t\t\t\tlink.startY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * this.chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = this.pixelX + link.maxWidth + this.dx;\r\n\t\t\t\t\t\t\t\tlink.endY = link.startY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = link.startX;\r\n\t\t\t\t\t\t\t\tlink.endY = this.pixelY + link.maxHeight + this.dy;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlink.opacity = this.opacity;\r\n\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextOutCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.positionBullet(this.nameLabel);\r\n\t\tthis.positionBullet(this.valueLabel);\r\n\t}\r\n\r\n\t/**\r\n\t * Positions the bullet so it is centered within the node element.\r\n\t *\r\n\t * @param {LabelBullet}  bullet  Target bullet\r\n\t */\r\n\tprotected positionBullet(bullet: LabelBullet) {\r\n\t\tif (bullet) {\r\n\t\t\tbullet.x = this.measuredWidth * bullet.locationX;\r\n\t\t\tbullet.y = this.measuredHeight * bullet.locationY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A level node is displayed at. (0 - ...)\r\n\t *\r\n\t * Levels are measured from left to right.\r\n\t *\r\n\t * The nodes in the left-most column will have `level = 0`.\r\n\t *\r\n\t * Nodes in second column - `level = 1`, etc.\r\n\t *\r\n\t * @param {number}  value  Level\r\n\t */\r\n\tpublic set level(value: number) {\r\n\t\tthis.setPropertyValue(\"level\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\treturn this.getPropertyValue(\"level\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[SankeyNode]].\r\n\t *\r\n\t * @param {SankeyNode}  source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.nameLabel.copyFrom(source.nameLabel);\r\n\t\tthis.valueLabel.copyFrom(source.valueLabel);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/SankeyNode.ts","/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ILabelBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ILabelBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelBulletAdapters extends IBulletAdapters, ILabelBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class LabelBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ILabelBulletProperties}\r\n\t */\r\n\tpublic _properties!: ILabelBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ILabelBulletAdapters}\r\n\t */\r\n\tpublic _adapter!: ILabelBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ILabelBulletEvents}\r\n\t */\r\n\tpublic _events!: ILabelBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t *\r\n\t * @type {Label}\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"LabelBullet\";\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.hideOversized = true;\r\n\r\n\t\tlabel.stroke = color();\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.fill = new InterfaceColorSet().getFor(\"text\");\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", this.handleMaxSize, this, false);\r\n\r\n\t\tthis.label = label;\r\n\r\n\t\t// not good, as lineSeries will have labels somewhere in the middle.\r\n\t\t//this.locationX = 0.5;\r\n\t\t//this.locationY = 0.5;\r\n\t}\r\n\r\n\tprotected handleMaxSize(){\r\n\t\tthis.label.maxWidth = this.maxWidth;\r\n\t\tthis.label.maxHeight = this.maxHeight;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[LabelBullet]].\r\n\t *\r\n\t * @param {this}  source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/LabelBullet.ts","/**\r\n * SankeyLink module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { SankeyDiagramDataItem } from \"../types/SankeyDiagram\";\r\nimport { FlowDiagramLink, IFlowDiagramLinkAdapters, IFlowDiagramLinkEvents, IFlowDiagramLinkProperties } from \"./FlowDiagramLink\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate } from \"../../core/utils/List\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkProperties extends IFlowDiagramLinkProperties {\r\n\r\n\t/**\r\n\t * [tension description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tstartX?: number;\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tstartY?: number;\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tendX?: number;\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tendY?: number;\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tlinkWidth?: number;\r\n\r\n\t/**\r\n\t * [controlPointDistance description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tcontrolPointDistance?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyLink]].\r\n */\r\nexport interface ISankeyLinkEvents extends IFlowDiagramLinkEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyLinkAdapters extends IFlowDiagramLinkAdapters, ISankeyLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link ISankeyLinkEvents} for a list of available events\r\n * @see {@link ISankeyLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyLink extends FlowDiagramLink {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISankeyLinkProperties}\r\n\t */\r\n\tpublic _properties!: ISankeyLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISankeyLinkAdapters}\r\n\t */\r\n\tpublic _adapter!: ISankeyLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISankeyLinkEvents}\r\n\t */\r\n\tpublic _events!: ISankeyLinkEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used by this class.\r\n\t *\r\n\t * @type {SankeyDiagramDataItem}\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * Spline which goes through the middle of a link, used to calculate bullet and tooltip positions, invisible by default\r\n\t * @type Polyspline\r\n     */\r\n\tpublic middleLine: Polyspline;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.tension = 0.8;\r\n\t\tthis.controlPointDistance = 0.2;\r\n\r\n\t\tthis.startAngle = 0;\r\n\t\tthis.endAngle = 0;\r\n\r\n\t\tthis.linkWidth = 0;\r\n\r\n\t\tthis.startX = 0;\r\n\t\tthis.endX = 0;\r\n\r\n\t\tthis.startY = 0;\r\n\t\tthis.endY = 0;\r\n\r\n\t\tthis.middleLine = this.createChild(Polyspline);\r\n\t\tthis.middleLine.shouldClone = false;\r\n\t\tthis.middleLine.strokeOpacity = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates (redraws) the link.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tif (!this.isTemplate) {\r\n\r\n\t\t\tlet x0 = this.startX\r\n\t\t\tlet y0 = this.startY;\r\n\t\t\tlet x1 = this.endX;\r\n\t\t\tlet y1 = this.endY;\r\n\r\n\t\t\tif (!$type.isNumber(x1)) {\r\n\t\t\t\tx1 = x0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(y1)) {\r\n\t\t\t\ty1 = y0;\r\n\t\t\t}\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet endAngle = this.endAngle;\r\n\t\t\tlet w = this.linkWidth;\r\n\r\n\t\t\tlet path = \"\";\r\n\r\n\t\t\tlet xt0 = x0;\r\n\t\t\tlet yt0 = y0;\r\n\r\n\t\t\tlet xt1 = x1;\r\n\t\t\tlet yt1 = y1;\r\n\r\n\t\t\tlet xb0 = x0 + w * $math.sin(startAngle);\r\n\t\t\tlet xb1 = x1 + w * $math.sin(endAngle);\r\n\r\n\t\t\tlet yb0 = y0 + w * $math.cos(startAngle);\r\n\t\t\tlet yb1 = y1 + w * $math.cos(endAngle);\r\n\r\n\t\t\tlet xm0 = x0 + w / 2 * $math.sin(startAngle);\r\n\t\t\tlet xm1 = x1 + w / 2 * $math.sin(endAngle);\r\n\r\n\t\t\tlet ym0 = y0 + w / 2 * $math.cos(startAngle);\r\n\t\t\tlet ym1 = y1 + w / 2 * $math.cos(endAngle);\r\n\r\n\t\t\tthis.zIndex = this.zIndex || this.dataItem.index;\r\n\r\n\t\t\tlet tensionX = this.tension + (1 - this.tension) * $math.sin(startAngle);\r\n\t\t\tlet tensionY = this.tension + (1 - this.tension) * $math.cos(startAngle);\r\n\r\n\t\t\tthis.middleLine.tensionX = tensionX;\r\n\t\t\tthis.middleLine.tensionY = tensionY;\r\n\r\n\t\t\tif ($type.isNumber(w) && ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1))) {\r\n\r\n\t\t\t\t// solves issues with gradient fill of straight lines\r\n\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\r\n\t\t\t\t\txt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\r\n\t\t\t\t\tyt1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\r\n\t\t\t\t\txb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\r\n\t\t\t\t\tyb1 += 0.01;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet minX = Math.min(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet minY = Math.min(yb0, yb1, yt0, yt1);\r\n\t\t\t\tlet maxX = Math.max(xb0, xb1, xt0, xt1);\r\n\t\t\t\tlet maxY = Math.max(yb0, yb1, yt0, yt1);\r\n\r\n\t\t\t\tthis._bbox = {\r\n\t\t\t\t\tx: minX,\r\n\t\t\t\t\ty: minY,\r\n\t\t\t\t\twidth: maxX - minX,\r\n\t\t\t\t\theight: maxY - minY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet cpd = this.controlPointDistance;\r\n\r\n\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(endAngle);\r\n\r\n\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\r\n\r\n\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(startAngle);\r\n\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(startAngle);\r\n\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(startAngle);\r\n\r\n\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(endAngle);\r\n\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(endAngle);\r\n\r\n\r\n\t\t\t\tthis.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];\r\n\r\n\t\t\t\tkxt0 += dx / 2;\r\n\t\t\t\tkyt0 += dy / 2;\r\n\r\n\t\t\t\tkxt1 += dx / 2;\r\n\t\t\t\tkyt1 += dy / 2;\r\n\r\n\t\t\t\tpath += $path.moveTo({ x: xt0, y: yt0 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);\r\n\t\t\t\tpath += $path.lineTo({ x: xb1, y: yb1 });\r\n\t\t\t\tpath += new $smoothing.Tension(tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);\r\n\t\t\t\tpath += $path.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tthis.link.path = path;\r\n\r\n\t\t\tif (this.maskBullets) {\r\n\t\t\t\tthis.bulletsMask.path = path;\r\n\t\t\t\tthis.bulletsContainer.mask = this.bulletsMask;\r\n\t\t\t}\r\n\t\t\tthis.positionBullets();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [startX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number}  value  Start X\r\n\t */\r\n\tpublic set startX(value: number) {\r\n\t\tthis.setPropertyValue(\"startX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Start X\r\n\t */\r\n\tpublic get startX(): number {\r\n\t\treturn this.getPropertyValue(\"startX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} value  End X\r\n\t */\r\n\tpublic set endX(value: number) {\r\n\t\tthis.setPropertyValue(\"endX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} End X\r\n\t */\r\n\tpublic get endX(): number {\r\n\t\treturn this.getPropertyValue(\"endX\");\r\n\t}\r\n\r\n\t/**\r\n\t * [startY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number}  value  Start Y\r\n\t */\r\n\tpublic set startY(value: number) {\r\n\t\tthis.setPropertyValue(\"startY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Start Y\r\n\t */\r\n\tpublic get startY(): number {\r\n\t\treturn this.getPropertyValue(\"startY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [endY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} value End Y\r\n\t */\r\n\tpublic set endY(value: number) {\r\n\t\tthis.setPropertyValue(\"endY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} End Y\r\n\t */\r\n\tpublic get endY(): number {\r\n\t\treturn this.getPropertyValue(\"endY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [linkWidth description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param {number} value [description]\r\n\t */\r\n\tpublic set linkWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"linkWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get linkWidth(): number {\r\n\t\treturn this.getPropertyValue(\"linkWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Distance of control point of a link, defines relative distance from a node at which linke should bend\r\n\t * @default 0.2\r\n\t * @param {number}  value\r\n\t */\r\n\tpublic set controlPointDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} relative control point distance\r\n\t */\r\n\tpublic get controlPointDistance(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of a spline, 1 would make the link to have sharp edges\r\n\t * @default 0.8\r\n\t * @param {number} value\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} tension value\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyLink\"] = SankeyLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/SankeyLink.ts","/**\r\n * Creates a 3D rectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle3D]].\r\n */\r\nexport interface Rectangle3DProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t * @type {number}\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @type {number}\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Rectangle3D]]\r\n */\r\nexport interface Rectangle3DEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface Rectangle3DAdapters extends IContainerAdapters, Rectangle3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a 3D rectangle\r\n * @see {@link IRectangle3DEvents} for a list of available events\r\n * @see {@link IRectangle3DAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle3D extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {Rectangle3DProperties}\r\n\t */\r\n\tpublic _properties!: Rectangle3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {Rectangle3DAdapters}\r\n\t */\r\n\tpublic _adapter!: Rectangle3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {Rectangle3DEvents}\r\n\t */\r\n\tpublic _events!: Rectangle3DEvents;\r\n\r\n\t/**\r\n\t * Left side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideLeft: Sprite;\r\n\r\n\t/**\r\n\t * Right side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideRight: Sprite;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideTop: Sprite;\r\n\r\n\t/**\r\n\t * Bottom element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideBottom: Sprite;\r\n\r\n\t/**\r\n\t * Back element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideBack: Sprite;\r\n\r\n\t/**\r\n\t * Front element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic sideFront: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 30;\r\n\t\tthis.className = \"Rectangle3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tlet sideBack: Sprite = this.createChild(Sprite);\r\n\t\tsideBack.shouldClone = false;\r\n\t\tsideBack.setElement(this.paper.add(\"path\"));\r\n\t\tsideBack.isMeasured = false;\r\n\t\tlet lightenFilterBack: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterBack.lightness = -0.2;\r\n\t\tsideBack.filters.push(lightenFilterBack);\r\n\t\tthis.sideBack = sideBack;\r\n\t\tthis._disposers.push(this.sideBack);\r\n\r\n\t\tlet sideBottom: Sprite = this.createChild(Sprite);\r\n\t\tsideBottom.shouldClone = false;\r\n\t\tsideBottom.setElement(this.paper.add(\"path\"));\r\n\t\tsideBottom.isMeasured = false;\r\n\t\tlet lightenFilterBottom: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterBottom.lightness = -0.5;\r\n\t\tsideBottom.filters.push(lightenFilterBottom);\r\n\t\tthis.sideBottom = sideBottom;\r\n\t\tthis._disposers.push(this.sideBottom);\r\n\r\n\t\tlet sideLeft: Sprite = this.createChild(Sprite);\r\n\t\tsideLeft.shouldClone = false;\r\n\t\tsideLeft.setElement(this.paper.add(\"path\"));\r\n\t\tsideLeft.isMeasured = false;\r\n\t\tlet lightenFilterLeft: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterLeft.lightness = -0.4;\r\n\t\tsideLeft.filters.push(lightenFilterLeft);\r\n\t\tthis.sideLeft = sideLeft;\r\n\t\tthis._disposers.push(this.sideLeft);\r\n\r\n\t\tlet sideRight: Sprite = this.createChild(Sprite);\r\n\t\tsideRight.shouldClone = false;\r\n\t\tsideRight.setElement(this.paper.add(\"path\"));\r\n\t\tsideRight.isMeasured = false;\r\n\t\tlet lightenFilterRight: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterRight.lightness = -0.2;\r\n\t\tsideRight.filters.push(lightenFilterRight);\r\n\t\tthis.sideRight = sideRight;\r\n\t\tthis._disposers.push(this.sideRight);\r\n\r\n\t\tlet sideTop: Sprite = this.createChild(Sprite);\r\n\t\tsideTop.shouldClone = false;\r\n\t\tsideTop.setElement(this.paper.add(\"path\"));\r\n\t\tsideTop.isMeasured = false;\r\n\t\tlet lightenFilterTop: LightenFilter = new LightenFilter();\r\n\t\tlightenFilterTop.lightness = -0.1;\r\n\t\tsideTop.filters.push(lightenFilterTop);\r\n\t\tthis.sideTop = sideTop;\r\n\t\tthis._disposers.push(this.sideTop);\r\n\r\n\t\tlet sideFront: Sprite = this.createChild(Sprite);\r\n\t\tsideFront.shouldClone = false;\r\n\t\tsideFront.setElement(this.paper.add(\"path\"));\r\n\t\tsideFront.isMeasured = false;\r\n\t\tthis.sideFront = sideFront;\r\n\t\tthis._disposers.push(this.sideFront);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet sin: number = $math.sin(angle);\r\n\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\tlet a: IPoint = { x: 0, y: 0 };\r\n\t\tlet b: IPoint = { x: w, y: 0 };\r\n\t\tlet c: IPoint = { x: w, y: h };\r\n\t\tlet d: IPoint = { x: 0, y: h };\r\n\r\n\t\tlet ah: IPoint = { x: depth * cos, y: -depth * sin };\r\n\t\tlet bh: IPoint = { x: depth * cos + w, y: -depth * sin };\r\n\t\tlet ch: IPoint = { x: depth * cos + w, y: -depth * sin + h };\r\n\t\tlet dh: IPoint = { x: depth * cos, y: -depth * sin + h };\r\n\r\n\t\tthis.sideFront.path = $path.moveTo(a) + $path.lineTo(b) + $path.lineTo(c) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideBack.path = $path.moveTo(ah) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(dh) + $path.closePath();\r\n\t\tthis.sideLeft.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(dh) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideRight.path = $path.moveTo(b) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideBottom.path = $path.moveTo(d) + $path.lineTo(dh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideTop.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(bh) + $path.lineTo(b) + $path.closePath();\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t * @param {number}  value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param {number}  value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/elements/3d/Rectangle3D.ts","/**\r\n * HeatLegend module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Container, IContainerProperties, IContainerEvents, IContainerAdapters } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { toColor, Color } from \"../../core/utils/Color\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ValueAxis } from \"../../charts/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../charts/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Minimum color\r\n\t *\r\n\t * @todo Description\r\n\t * @type {color}\r\n\t */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * Minimum value\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum value\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tmaxValue?: number;\r\n\r\n\r\n\t/**\r\n\t * Maximum color\r\n\t *\r\n\t * @todo Description\r\n\t * @type {color}\r\n\t */\r\n\tmaxColor?: Color;\r\n\r\n\t/**\r\n\t * Number of markers (steps)\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tmarkerCount?: number;\r\n\r\n\r\n\t/**\r\n\t * Orientation\r\n\t *\r\n\t * @todo Description\r\n\t * @type {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatLegend]].\r\n */\r\nexport interface IHeatLegendEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatLegend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatLegendAdapters extends IContainerAdapters, IHeatLegendProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Sankey Diagram.\r\n *\r\n * @see {@link IHeatLegendEvents} for a list of available events\r\n * @see {@link IHeatLegendAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class HeatLegend extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IHeatLegendProperties}\r\n\t */\r\n\tpublic _properties!: IHeatLegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IHeatLegendAdapters}\r\n\t */\r\n\tpublic _adapter!: IHeatLegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IHeatLegendEvents}\r\n\t */\r\n\tpublic _events!: IHeatLegendEvents;\r\n\r\n\t/**\r\n\t * List of heat legend markers (color step rectangles).\r\n\t *\r\n\t * @type {ListTemplate<RoundedRectangle>}\r\n\t */\r\n\tpublic markers: ListTemplate<RoundedRectangle>;\r\n\r\n\t/**\r\n\t * Container which holds markers\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tpublic markerContainer: Container;\r\n\r\n\t/**\r\n\t * Value axis of a heat legend\r\n\t * @ignore\r\n\t * @type {ValueAxis}\r\n\t */\r\n\tprotected _valueAxis: ValueAxis;\r\n\r\n\t/**\r\n\t * Series of a heat legend\r\n\t * @ignore\r\n\t * @type {Series}\r\n\t */\r\n\tprotected _series: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatLegend\";\r\n\r\n\t\tthis.markerContainer = this.createChild(Container);\r\n\t\tthis.markerContainer.shouldClone = false;\r\n\r\n\t\tthis.markerCount = 1;\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: RoundedRectangle = new RoundedRectangle();\r\n\t\tmarker.minHeight = 20;\r\n\t\tmarker.minWidth = 20;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.fillOpacity = 1;\r\n\t\tmarker.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tthis.markerContainer.minHeight = 20;\r\n\t\tthis.markerContainer.minWidth = 20;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\tthis.markers = new ListTemplate<RoundedRectangle>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tprotected getMinFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet minValue;\r\n\t\t\t$iter.eachContinue(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tminValue = heatRule.min;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getMaxFromRules(property: string, ) {\r\n\t\tlet series = this.series;\r\n\t\tif (series) {\r\n\t\t\tlet maxValue;\r\n\t\t\t$iter.each(series.heatRules.iterator(), (heatRule) => {\r\n\t\t\t\tif (heatRule.property == property) {\r\n\t\t\t\t\tmaxValue = heatRule.max;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tlet series = this.series;\r\n\r\n\t\tlet minColor = this.minColor;\r\n\t\tlet maxColor = this.maxColor;\r\n\r\n\t\tif (!$type.hasValue(minColor)) {\r\n\t\t\tminColor = toColor(this.getMinFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tif (series) {\r\n\t\t\tlet seriesFill = series.fill;\r\n\t\t\tif (!$type.hasValue(minColor) && seriesFill instanceof Color) {\r\n\t\t\t\tminColor = seriesFill;\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(maxColor) && seriesFill instanceof Color) {\r\n\t\t\t\tmaxColor = seriesFill;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(maxColor)) {\r\n\t\t\tmaxColor = toColor(this.getMaxFromRules(\"fill\"));\r\n\t\t}\r\n\r\n\t\tlet minOpacity = $type.toNumber(this.getMinFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(minOpacity)) {\r\n\t\t\tminOpacity = 1;\r\n\t\t}\r\n\t\tlet maxOpacity = $type.toNumber(this.getMaxFromRules(\"fillOpacity\"));\r\n\t\tif (!$type.isNumber(maxOpacity)) {\r\n\t\t\tmaxOpacity = 1;\r\n\t\t}\r\n\r\n\r\n\t\tlet minStrokeOpacity = $type.toNumber(this.getMinFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(minStrokeOpacity)) {\r\n\t\t\tminStrokeOpacity = 1;\r\n\t\t}\r\n\t\tlet maxStrokeOpacity = $type.toNumber(this.getMaxFromRules(\"strokeOpacity\"));\r\n\t\tif (!$type.isNumber(maxStrokeOpacity)) {\r\n\t\t\tmaxStrokeOpacity = 1;\r\n\t\t}\r\n\r\n\t\tlet minStroke = toColor(this.getMinFromRules(\"stroke\"));\r\n\t\tlet maxStroke = toColor(this.getMaxFromRules(\"stroke\"));\r\n\r\n\r\n\t\t//if (series) {\r\n\t\tfor (let i = 0; i < this.markerCount; i++) {\r\n\t\t\tlet marker = this.markers.getIndex(i);\r\n\r\n\t\t\tif (!marker) {\r\n\t\t\t\tmarker = this.markers.create();\r\n\t\t\t\tmarker.parent = this.markerContainer;\r\n\t\t\t\tmarker.height = percent(100);\r\n\t\t\t\tmarker.width = percent(100);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this.markerCount == 1) {\r\n\t\t\t\tlet gradient = new LinearGradient();\r\n\t\t\t\tgradient.addColor(minColor, minOpacity);\r\n\t\t\t\tgradient.addColor(maxColor, maxOpacity);\r\n\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tgradient.rotation = -90;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmarker.fill = gradient;\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet strokeGradient = new LinearGradient();\r\n\t\t\t\t\tstrokeGradient.addColor(minStroke, minStrokeOpacity);\r\n\t\t\t\t\tstrokeGradient.addColor(maxStroke, maxStrokeOpacity);\r\n\r\n\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\tstrokeGradient.rotation = -90;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmarker.stroke = strokeGradient;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet color = new Color($colors.interpolate(minColor.rgb, maxColor.rgb, i / this.markerCount));\r\n\t\t\t\tmarker.fill = color;\r\n\r\n\t\t\t\tlet opacity = minOpacity + (maxOpacity - minOpacity) * i / this.markerCount;\r\n\t\t\t\tmarker.fillOpacity = opacity;\r\n\r\n\t\t\t\tif ($type.hasValue(minStroke) && $type.hasValue(maxStroke)) {\r\n\t\t\t\t\tlet color = new Color($colors.interpolate(minStroke.rgb, maxStroke.rgb, i / this.markerCount));\r\n\t\t\t\t\tmarker.stroke = color;\r\n\r\n\t\t\t\t\tlet opacity = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * i / this.markerCount;\r\n\t\t\t\t\tmarker.strokeOpacity = opacity;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet renderer = this.valueAxis.renderer;\r\n\t\tif (this.markerCount > 1) {\r\n\t\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\t\trenderer.minGridDistance = this.measuredWidth / this.markerCount;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderer.minGridDistance = this.measuredHeight / this.markerCount;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.valueAxis.invalidateDataRange();\r\n\r\n\t\tfor (let i = this.markerCount, len = this.markers.length; i < len; i++) {\r\n\t\t\tthis.markers.getIndex(i).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!(value instanceof Color)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.\r\n\t *\r\n\t * @param {Color}\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!$type.isObject(value)) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setColorProperty(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maxColor value\r\n\t * @return {Color}\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\treturn this.getPropertyValue(\"maxColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set markerCount(value: number) {\r\n\t\tthis.setPropertyValue(\"markerCount\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns number of color squares (markers).\r\n\t * @return {number}\r\n\t */\r\n\tpublic get markerCount(): number {\r\n\t\treturn this.getPropertyValue(\"markerCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis.setPropertyValue(\"minValue\", value);\r\n\t\tthis.valueAxis.min = value;\r\n\t\tthis.valueAxis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns minimum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.\r\n\t *\r\n\t * @param {number}\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis.setPropertyValue(\"maxValue\", value);\r\n\t\tthis.valueAxis.max = value;\r\n\t\tthis.valueAxis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value of heat legend.\r\n\t * @return {number}\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\treturn this.getPropertyValue(\"maxValue\");\r\n\t}\r\n\r\n\t/**\r\n\t* Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.\r\n\t*\r\n\t* @param {\"horizontal\" | \"vertical\"}\r\n\t*/\r\n\tpublic set orientation(value: \"horizontal\" | \"vertical\") {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t\tlet markerContainer = this.markerContainer;\r\n\t\tlet valueAxis = this.valueAxis;\r\n\r\n\t\t// HORIZONTAL\r\n\t\tif (value == \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.width)) {\r\n\t\t\t\tthis.width = 200;\r\n\t\t\t}\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tvalueAxis.width = percent(100);\r\n\t\t\tvalueAxis.height = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"vertical\";\r\n\r\n\t\t\tthis.layout = \"vertical\";\r\n\t\t\tmarkerContainer.width = percent(100);\r\n\t\t\tmarkerContainer.height = undefined;\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererX)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererX();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// VERTICAL\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.height)) {\r\n\t\t\t\tthis.height = 200;\r\n\t\t\t}\r\n\t\t\tthis.width = undefined;\r\n\t\t\tthis.layout = \"horizontal\";\r\n\t\t\tmarkerContainer.width = undefined;\r\n\t\t\tmarkerContainer.height = percent(100);\r\n\t\t\tvalueAxis.height = percent(100);\r\n\t\t\tvalueAxis.width = undefined;\r\n\t\t\tvalueAxis.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n\t\t\tif (!(valueAxis.renderer instanceof AxisRendererY)) {\r\n\t\t\t\tvalueAxis.renderer = new AxisRendererY();\r\n\t\t\t}\r\n\t\t\tvalueAxis.renderer.inside = true;\r\n\t\t\tvalueAxis.renderer.labels.template.inside = true;\r\n\t\t}\r\n\r\n\t\tlet renderer = valueAxis.renderer;\r\n\t\trenderer.grid.template.disabled = true;\r\n\t\trenderer.axisFills.template.disabled = true;\r\n\t\trenderer.baseGrid.disabled = true;\r\n\t\trenderer.labels.template.padding(2, 3, 2, 3);\r\n\r\n\t\trenderer.minHeight = undefined;\r\n\t\trenderer.minWidth = undefined;\r\n\r\n\t\tthis.markerContainer.layout = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns orientation value.\r\n\t *\r\n\t * @return {\"horizontal\" | \"vertical\"}\r\n\t */\r\n\tpublic get orientation(): \"horizontal\" | \"vertical\" {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value axis of heat legend. Value axis for heat legend is created automatically.\r\n\t * @param {ValueAxis}\r\n\t */\r\n\tpublic set valueAxis(valueAxis: ValueAxis) {\r\n\r\n\t\tthis._valueAxis = valueAxis;\r\n\r\n\t\tvalueAxis.parent = this;\r\n\t\tvalueAxis.strictMinMax = true;\r\n\t\tthis.orientation = this.orientation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns valueAxis value.\r\n\t * @return {ValueAxis}\r\n\t */\r\n\tpublic get valueAxis(): ValueAxis {\r\n\t\tif (!this._valueAxis) {\r\n\t\t\tthis.valueAxis = this.createChild(ValueAxis);\r\n\t\t\tthis.valueAxis.shouldClone = false;\r\n\t\t}\r\n\t\treturn this._valueAxis;\r\n\t}\r\n\r\n\t/**\r\n\t * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.\r\n\t * @param {Series} series\r\n\t */\r\n\tset series(series: Series) {\r\n\t\tthis._series = series;\r\n\r\n\t\tlet dataField = \"value\";\r\n\r\n\t\ttry {\r\n\t\t\tlet dataFieldDefined = series.heatRules.getIndex(0).dataField;\r\n\t\t\tif (dataFieldDefined) {\r\n\t\t\t\tdataField = dataFieldDefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (err) {\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\r\n\t\tseries.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\tthis.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);\r\n\t\t}, undefined, false);\r\n\r\n\t\tseries.heatRules.events.on(\"inserted\", this.invalidate, this, false);\r\n\t\tseries.heatRules.events.on(\"removed\", this.invalidate, this, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns series value.\r\n\t * @return {Series}\r\n\t */\r\n\tget series(): Series {\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates min/max of value axis.\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMinMax(min: number, max: number) {\r\n\t\tlet valueAxis = this.valueAxis;\r\n\t\tif (!$type.isNumber(this.minValue)) {\r\n\t\t\tvalueAxis.min = min;\r\n\t\t\tvalueAxis.invalidateDataRange();\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.maxValue)) {\r\n\t\t\tvalueAxis.max = max;\r\n\t\t\tvalueAxis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {object}  config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isString(config.series)) {\r\n\t\t\t\tif ($type.isString(config.series)) {\r\n\t\t\t\t\tif (this.map.hasKey(config.series)) {\r\n\t\t\t\t\t\tconfig.series = this.map.getKey(config.series);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet seriesId = config.series;\r\n\t\t\t\t\t\tconst disposer = this.map.events.on(\"insertKey\", function(ev) {\r\n\t\t\t\t\t\t\tif (ev.key == seriesId) {\r\n\t\t\t\t\t\t\t\tthis.series = ev.newValue;\r\n\t\t\t\t\t\t\t\tdisposer.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t\tdelete config.series;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"HeatLegend\"] = HeatLegend;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/HeatLegend.ts","/**\r\n * Cone module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent, visualProperties } from \"../../Sprite\";\r\nimport { Ellipse } from \"../../elements/Ellipse\";\r\nimport { LinearGradientModifier } from \"../../rendering/fills/LinearGradientModifier\";\r\nimport { percent, Percent } from \"../../utils/Percent\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport { Orientation } from \"../../defs/Orientation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Cone]].\r\n */\r\nexport interface IConeProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @type {number}\r\n\t */\r\n\tangle?: number;\r\n\r\n\t/**\r\n\t * A relative radius of the cone's bottom (base).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @type {Percent}\r\n\t */\r\n\tradius?: Percent;\r\n\r\n\t/**\r\n\t * A relative radius of the cone's top (tip).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @type {Percent}\r\n\t */\r\n\ttopRadius?: Percent;\r\n\r\n\t/**\r\n\t * Orientation of the cone\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @type {Orientation}\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Cone]].\r\n */\r\nexport interface IConeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Cone]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeAdapters extends IContainerAdapters, IConeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a round cone/cylinder.\r\n *\r\n * @see {@link IConeEvents} for a list of available events\r\n * @see {@link IConeAdapters} for a list of available Adapters\r\n */\r\nexport class Cone extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IConeProperties}\r\n\t */\r\n\tpublic _properties!: IConeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IConeAdapters}\r\n\t */\r\n\tpublic _adapter!: IConeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IConeEvents}\r\n\t */\r\n\tpublic _events!: IConeEvents;\r\n\r\n\t/**\r\n\t * Bottom ellement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Ellipse}\r\n\t */\r\n\tpublic bottom: Ellipse;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Ellipse}\r\n\t */\r\n\tpublic top: Ellipse;\r\n\r\n\t/**\r\n\t * Body element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic body: Sprite;\r\n\r\n\t/**\r\n\t * Gradient for the fill of the body.\r\n\t *\r\n\t * @type {LinearGradientModifier}\r\n\t */\r\n\tpublic bodyFillModifier: LinearGradientModifier;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Cone\";\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.topRadius = percent(100);\r\n\r\n\t\tthis.top = this.createChild(Ellipse);\r\n\t\tthis.top.shouldClone = false;\r\n\r\n\t\tthis.bottom = this.createChild(Ellipse);\r\n\t\tthis.bottom.shouldClone = false;\r\n\r\n\t\tthis.body = this.createChild(Sprite);\r\n\t\tthis.body.shouldClone = false;\r\n\r\n\t\tthis.body.setElement(this.paper.add(\"path\"));\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.bodyFillModifier = new LinearGradientModifier();\r\n\t\tthis.bodyFillModifier.lightnesses = [0, -0.25, 0];\r\n\t\tthis.body.fillModifier = this.bodyFillModifier;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\t$object.copyProperties(this, this.top, visualProperties);\r\n\t\t$object.copyProperties(this, this.bottom, visualProperties);\r\n\t\t$object.copyProperties(this, this.body, visualProperties);\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet bottom: Ellipse = this.bottom;\r\n\t\tlet top: Ellipse = this.top;\r\n\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet radiusBase: number;\r\n\t\tlet dx: number;\r\n\t\tlet dy: number;\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tradiusBase = h / 2;\r\n\t\t\tbottom.y = h / 2;\r\n\t\t\ttop.y = h / 2;\r\n\t\t\ttop.x = w;\r\n\t\t\tdx = (90 - angle) / 90;\r\n\t\t\tdy = 0;\r\n\t\t\tthis.bodyFillModifier.gradient.rotation = 90;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdx = 0;\r\n\t\t\tdy = (90 - angle) / 90;\r\n\r\n\t\t\tradiusBase = w / 2;\r\n\t\t\tbottom.y = h;\r\n\t\t\tbottom.x = w / 2;\r\n\t\t\ttop.x = w / 2;\r\n\t\t\tthis.bodyFillModifier.gradient.rotation = 0;\r\n\t\t}\r\n\r\n\t\tlet radius: number = this.radius.value * radiusBase;\r\n\t\tlet topRadius: number = this.topRadius.value * radiusBase;\r\n\r\n\t\tbottom.radius = radius - radius * dx;\r\n\t\tbottom.radiusY = radius - radius * dy;\r\n\r\n\t\ttop.radius = topRadius - topRadius * dx;\r\n\t\ttop.radiusY = topRadius - topRadius * dy;\r\n\r\n\t\tlet path: string;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tpath = $path.moveTo({ x: 0, y: h / 2 - bottom.radiusY }) + $path.arcTo(-90, -180, bottom.radius, bottom.radiusY) + $path.lineTo({ x: w, y: h / 2 + top.radiusY }) + $path.arcTo(90, 180, top.radius, top.radiusY) + $path.closePath();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpath = $path.moveTo({ x: w / 2 - top.radius, y: 0 }) + $path.arcTo(180, -180, top.radius, top.radiusY) + $path.lineTo({ x: w / 2 + bottom.radius, y: h }) + $path.arcTo(0, 180, bottom.radius, bottom.radiusY) + $path.closePath();\r\n\t\t}\r\n\r\n\t\tthis.body.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param {number}  value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative radius of the cone's bottom (base).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param {Percent}  value  Bottom radius\r\n\t */\r\n\tpublic set radius(value: Percent) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Percent} Bottom radius\r\n\t */\r\n\tpublic get radius(): Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative radius of the cone's top (tip).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param {Percent}  value  Top radius\r\n\t */\r\n\tpublic set topRadius(value: Percent) {\r\n\t\tthis.setPropertyValue(\"topRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Percent} Top radius\r\n\t */\r\n\tpublic get topRadius(): Percent {\r\n\t\treturn this.getPropertyValue(\"topRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the cone\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param {Orientation}  value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @type {Orientation} Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/elements/3d/Cone.ts","/**\r\n * Ellipse module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Circle, ICircleProperties, ICircleAdapters, ICircleEvents } from \"./Circle\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Ellipse]].\r\n */\r\nexport interface IEllipseProperties extends ICircleProperties {\r\n\r\n\t/**\r\n\t * Vertical radius.\r\n\t *\r\n\t * It's a relative size to the `radius`.\r\n\t *\r\n\t * E.g. 0.8 will mean the height of the ellipsis will be 80% of it's\r\n\t * horizontal radius.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tradiusY?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Ellipse]].\r\n */\r\nexport interface IEllipseEvents extends ICircleEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IEllipseAdapters extends ICircleAdapters, IEllipseProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an ellipse\r\n * @see {@link IEllipseEvents} for a list of available events\r\n * @see {@link IEllipseAdapters} for a list of available Adapters\r\n */\r\nexport class Ellipse extends Circle {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IEllipseProperties}\r\n\t */\r\n\tpublic _properties!: IEllipseProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IEllipseAdapters}\r\n\t */\r\n\tpublic _adapter!: IEllipseAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IEllipseEvents}\r\n\t */\r\n\tpublic _events!: IEllipseEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Ellipse\";\r\n\r\n\t\tthis.element = this.paper.add(\"ellipse\");\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the ellipsis.\r\n\t */\r\n\tprotected draw() {\r\n\t\tsuper.draw();\r\n\t\tthis.element.attr({ \"rx\": this.radius });\r\n\t\tthis.element.attr({ \"ry\": this.radiusY });\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius.\r\n\t *\r\n\t * It's a relative size to the `radius`.\r\n\t *\r\n\t * E.g. 0.8 will mean the height of the ellipsis will be 80% of it's\r\n\t * horizontal radius.\r\n\t *\r\n\t * @param {number}  value  Vertical radius\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.height = value * 2;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Vertical radius\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\treturn this.innerHeight / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal radius.\r\n\t *\r\n\t * @param {number}  value  Horizontal radius\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.width = value * 2;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Horizontal radius\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.innerWidth / 2;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Ellipse\"] = Ellipse;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Ellipse.ts","/**\r\n * A module that defines Text element used to indicate links.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[TextLink]].\r\n */\r\nexport interface ITextLinkProperties extends ILabelProperties { }\r\n\r\n/**\r\n * Defines events for [[TextLink]].\r\n */\r\nexport interface ITextLinkEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TextLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITextLinkAdapters extends ILabelAdapters, ITextLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\r\nexport class TextLink extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ITextLinkProperties}\r\n\t */\r\n\tpublic _properties!: ITextLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ITextLinkAdapters}\r\n\t */\r\n\tpublic _adapter!: ITextLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ITextLinkEvents}\r\n\t */\r\n\tpublic _events!: ITextLinkEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"TextLink\";\r\n\t\tthis.selectable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\r\n\r\n\t\tlet hoverState = this.states.create(\"hover\");\r\n\t\thoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\r\n\r\n\t\tlet downState = this.states.create(\"down\");\r\n\t\tdownState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextLink\"] = TextLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/TextLink.ts","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_ie8-dom-define.js\n// module id = 276\n// module chunks = 302","exports.f = require('./_wks');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_wks-ext.js\n// module id = 277\n// module chunks = 302","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-keys-internal.js\n// module id = 278\n// module chunks = 302","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-dps.js\n// module id = 279\n// module chunks = 302","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-gopn-ext.js\n// module id = 280\n// module chunks = 302","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-assign.js\n// module id = 281\n// module chunks = 302","'use strict';\nvar aFunction = require('./_a-function');\nvar isObject = require('./_is-object');\nvar invoke = require('./_invoke');\nvar arraySlice = [].slice;\nvar factories = {};\n\nvar construct = function (F, len, args) {\n  if (!(len in factories)) {\n    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func\n    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');\n  } return factories[len](F, args);\n};\n\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = arraySlice.call(arguments, 1);\n  var bound = function (/* args... */) {\n    var args = partArgs.concat(arraySlice.call(arguments));\n    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);\n  };\n  if (isObject(fn.prototype)) bound.prototype = fn.prototype;\n  return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_bind.js\n// module id = 282\n// module chunks = 302","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_invoke.js\n// module id = 283\n// module chunks = 302","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_parse-int.js\n// module id = 284\n// module chunks = 302","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_parse-float.js\n// module id = 285\n// module chunks = 302","var cof = require('./_cof');\nmodule.exports = function (it, msg) {\n  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);\n  return +it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_a-number-value.js\n// module id = 286\n// module chunks = 302","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_is-integer.js\n// module id = 287\n// module chunks = 302","// 20.2.2.20 Math.log1p(x)\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-log1p.js\n// module id = 288\n// module chunks = 302","// 20.2.2.16 Math.fround(x)\nvar sign = require('./_math-sign');\nvar pow = Math.pow;\nvar EPSILON = pow(2, -52);\nvar EPSILON32 = pow(2, -23);\nvar MAX32 = pow(2, 127) * (2 - EPSILON32);\nvar MIN32 = pow(2, -126);\n\nvar roundTiesToEven = function (n) {\n  return n + 1 / EPSILON - 1 / EPSILON;\n};\n\nmodule.exports = Math.fround || function fround(x) {\n  var $abs = Math.abs(x);\n  var $sign = sign(x);\n  var a, result;\n  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;\n  a = (1 + EPSILON32 / EPSILON) * $abs;\n  result = a - (a - $abs);\n  // eslint-disable-next-line no-self-compare\n  if (result > MAX32 || result != result) return $sign * Infinity;\n  return $sign * result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-fround.js\n// module id = 289\n// module chunks = 302","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-call.js\n// module id = 290\n// module chunks = 302","var aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar toLength = require('./_to-length');\n\nmodule.exports = function (that, callbackfn, aLen, memo, isRight) {\n  aFunction(callbackfn);\n  var O = toObject(that);\n  var self = IObject(O);\n  var length = toLength(O.length);\n  var index = isRight ? length - 1 : 0;\n  var i = isRight ? -1 : 1;\n  if (aLen < 2) for (;;) {\n    if (index in self) {\n      memo = self[index];\n      index += i;\n      break;\n    }\n    index += i;\n    if (isRight ? index < 0 : length <= index) {\n      throw TypeError('Reduce of empty array with no initial value');\n    }\n  }\n  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n  }\n  return memo;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-reduce.js\n// module id = 291\n// module chunks = 302","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-copy-within.js\n// module id = 292\n// module chunks = 302","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_iter-step.js\n// module id = 293\n// module chunks = 302","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.flags.js\n// module id = 294\n// module chunks = 302","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_perform.js\n// module id = 295\n// module chunks = 302","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_promise-resolve.js\n// module id = 296\n// module chunks = 302","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.map.js\n// module id = 297\n// module chunks = 302","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-strong.js\n// module id = 298\n// module chunks = 302","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.set.js\n// module id = 299\n// module chunks = 302","'use strict';\nvar each = require('./_array-methods')(0);\nvar redefine = require('./_redefine');\nvar meta = require('./_meta');\nvar assign = require('./_object-assign');\nvar weak = require('./_collection-weak');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar validate = require('./_validate-collection');\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = require('./_collection')(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (fails(function () { return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7; })) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.weak-map.js\n// module id = 300\n// module chunks = 302","'use strict';\nvar redefineAll = require('./_redefine-all');\nvar getWeak = require('./_meta').getWeak;\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar createArrayMethod = require('./_array-methods');\nvar $has = require('./_has');\nvar validate = require('./_validate-collection');\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-weak.js\n// module id = 301\n// module chunks = 302","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_to-index.js\n// module id = 302\n// module chunks = 302","// all object keys, includes non-enumerable and symbols\nvar gOPN = require('./_object-gopn');\nvar gOPS = require('./_object-gops');\nvar anObject = require('./_an-object');\nvar Reflect = require('./_global').Reflect;\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = gOPN.f(anObject(it));\n  var getSymbols = gOPS.f;\n  return getSymbols ? keys.concat(getSymbols(it)) : keys;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_own-keys.js\n// module id = 303\n// module chunks = 302","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar isArray = require('./_is-array');\nvar isObject = require('./_is-object');\nvar toLength = require('./_to-length');\nvar ctx = require('./_ctx');\nvar IS_CONCAT_SPREADABLE = require('./_wks')('isConcatSpreadable');\n\nfunction flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;\n  var element, spreadable;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      spreadable = false;\n      if (isObject(element)) {\n        spreadable = element[IS_CONCAT_SPREADABLE];\n        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);\n      }\n\n      if (spreadable && depth > 0) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1fffffffffffff) throw TypeError();\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n}\n\nmodule.exports = flattenIntoArray;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_flatten-into-array.js\n// module id = 304\n// module chunks = 302","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_string-pad.js\n// module id = 305\n// module chunks = 302","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_object-to-array.js\n// module id = 306\n// module chunks = 302","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_collection-to-json.js\n// module id = 307\n// module chunks = 302","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-from-iterable.js\n// module id = 308\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\n  if (\n    arguments.length === 0\n      // eslint-disable-next-line no-self-compare\n      || x != x\n      // eslint-disable-next-line no-self-compare\n      || inLow != inLow\n      // eslint-disable-next-line no-self-compare\n      || inHigh != inHigh\n      // eslint-disable-next-line no-self-compare\n      || outLow != outLow\n      // eslint-disable-next-line no-self-compare\n      || outHigh != outHigh\n  ) return NaN;\n  if (x === Infinity || x === -Infinity) return x;\n  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_math-scale.js\n// module id = 309\n// module chunks = 302","/**\r\n * Module for a multi-part arched line.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline, IPolylineProperties, IPolylineAdapters, IPolylineEvents } from \"./Polyline\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyarc]].\r\n */\r\nexport interface IPolyarcProperties extends IPolylineProperties {\r\n\r\n\t/**\r\n\t * Relative position along the line the control point is. (0-1)\r\n\t *\r\n\t * @default 0.5\r\n\t * @type {number}\r\n\t */\r\n\tcontrolPointPosition: number;\r\n\r\n\t/**\r\n\t * Relative distance of the control point. (0-1)\r\n\t *\r\n\t * Default is half the length of the line. (0.5)\r\n\t *\r\n\t * @default 0.5\r\n\t * @type {number}\r\n\t */\r\n\tcontrolPointDistance: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyarc]].\r\n */\r\nexport interface IPolyarcEvents extends IPolylineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polyarc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolyarcAdapters extends IPolylineAdapters, IPolyarcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a multi-part arched line.\r\n *\r\n * @see {@link IPolyarcEvents} for a list of available events\r\n * @see {@link IPolyarcAdapters} for a list of available Adapters\r\n */\r\nexport class Polyarc extends Polyline {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPolyarcProperties}\r\n\t */\r\n\tpublic _properties!: IPolyarcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPolyarcAdapters}\r\n\t */\r\n\tpublic _adapter!: IPolyarcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPolyarcEvents}\r\n\t */\r\n\tpublic _events!: IPolyarcEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyarc\";\r\n\r\n\t\tthis.controlPointDistance = 0.5;\r\n\t\tthis.controlPointPosition = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\t\t\tthis._realSegments = [];\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tlet realPoints: IPoint[] = [];\r\n\t\t\t\tthis._realSegments.push(realPoints);\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tlet pointA: IPoint = points[p - 1];\r\n\t\t\t\t\t\tlet pointB: IPoint = points[p];\r\n\r\n\t\t\t\t\t\tlet distanceAB: number = $math.getDistance(pointB, pointA);\r\n\t\t\t\t\t\tlet cpDistance: number = distanceAB * this.controlPointDistance;\r\n\t\t\t\t\t\tlet controlPointPosition: number = this.controlPointPosition;\r\n\t\t\t\t\t\tlet angle: number = -$math.getAngle(pointA, pointB);\r\n\r\n\t\t\t\t\t\tlet cpx: number = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 0.5 - cpDistance * $math.sin(angle);\r\n\t\t\t\t\t\tlet cpy: number = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 0.5 - cpDistance * $math.cos(angle);\r\n\t\t\t\t\t\tlet controlPoint1: IPoint = { x: cpx, y: cpy };\r\n\r\n\t\t\t\t\t\tlet cpx2: number = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 1.5 - cpDistance * $math.sin(angle);\r\n\t\t\t\t\t\tlet cpy2: number = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 1.5 - cpDistance * $math.cos(angle);\r\n\t\t\t\t\t\tlet controlPoint2: IPoint = { x: cpx2, y: cpy2 };\r\n\r\n\t\t\t\t\t\tpath += $path.cubicCurveTo(pointB, controlPoint1, controlPoint2);\r\n\r\n\t\t\t\t\t\t// we add a lot of points in order to get the position/angle later\r\n\t\t\t\t\t\tlet stepCount: number = Math.ceil(distanceAB);\r\n\t\t\t\t\t\tlet prevPoint: IPoint = pointA;\r\n\t\t\t\t\t\tif (stepCount > 0) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i <= stepCount; i++) {\r\n\t\t\t\t\t\t\t\tlet point: IPoint = $math.getPointOnCubicCurve(pointA, pointB, controlPoint1, controlPoint2, i / stepCount);\r\n\t\t\t\t\t\t\t\trealPoints.push(point);\r\n\t\t\t\t\t\t\t\tthis._distance += $math.getDistance(prevPoint, point);\r\n\t\t\t\t\t\t\t\tprevPoint = point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trealPoints.push(pointA);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position along the line the control point is. (0-1)\r\n\t *\r\n\t * @default 0.5\r\n\t * @param {number}  value  Position (0-1)\r\n\t */\r\n\tpublic set controlPointPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointPosition\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Position (0-1)\r\n\t */\r\n\tpublic get controlPointPosition(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative distance of the control point. (0-1)\r\n\t *\r\n\t * Default is half the length of the line. (0.5)\r\n\t *\r\n\t * @default 0.5\r\n\t * @param {number}  value  Distance (0-1)\r\n\t */\r\n\tpublic set controlPointDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointDistance\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Distance (0-1)\r\n\t */\r\n\tpublic get controlPointDistance(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointDistance\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyarc\"] = Polyarc;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Polyarc.ts","/**\r\n * Polygon module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Morpher } from \"../utils/Morpher\";\r\nimport { IMorphable } from \"../defs/IMorphable\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polygon]].\r\n */\r\nexport interface IPolygonProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * An array of X/Y coordinates for each elbow of the polygon.\r\n\t */\r\n\tpoints?: IPoint[][][];\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polygon]].\r\n */\r\nexport interface IPolygonEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolygonAdapters extends ISpriteAdapters, IPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link IPolygonEvents} for a list of available events\r\n * @see {@link IPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class Polygon extends Sprite implements IMorphable {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPolygonProperties}\r\n\t */\r\n\tpublic _properties!: IPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPolygonAdapters}\r\n\t */\r\n\tpublic _adapter!: IPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPolygonEvents}\r\n\t */\r\n\tpublic _events!: IPolygonEvents;\r\n\r\n\t/**\r\n\t * A morpher instance that is used to morph polygon into some other shape.\r\n\t *\r\n\t * @type {Optional<Morpher>}\r\n\t */\r\n\tprotected _morpher: $type.Optional<Morpher>;\r\n\r\n\t/**\r\n\t * Current points that morpher uses. This is needed so that we don't\r\n\t * overwrite polygons original points.\r\n\t *\r\n\t * @type {IPoint[][][]}\r\n\t */\r\n\tprotected _currentPoints: IPoint[][][];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polygon\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t\tthis._currentPoints = [];\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * An array of X/Y coordinates for each elbow of the polygon.\r\n\t *\r\n\t * @todo Example\r\n\t * @param {IPoint[][][]}  points  Polygon points\r\n\t */\r\n\tpublic set points(points: IPoint[][][]) {\r\n\t\tthis.setPropertyValue(\"points\", points, true);\r\n\t\tthis._currentPoints = this.points;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {IPoint[]} Polygon points\r\n\t */\r\n\tpublic get points(): IPoint[][][] {\r\n\t\treturn this.getPropertyValue(\"points\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current points. Used when morphing the element, so that original `points`\r\n\t * are not overwritten.\r\n\t *\r\n\t * @param {IPoint[][][]}  points  Polygon points\r\n\t */\r\n\tpublic set currentPoints(points: IPoint[][][]) {\r\n\t\tif (this._currentPoints != points) {\r\n\t\t\tthis._currentPoints = points;\r\n\t\t\tthis.draw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {IPoint[]} Polygon points\r\n\t */\r\n\tpublic get currentPoints(): IPoint[][][] {\r\n\t\treturn this._currentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tlet path: string = \"\";\r\n\t\tlet points: IPoint[][][] = this._currentPoints;\r\n\r\n\t\tlet left: $type.Optional<number>;\r\n\t\tlet right: $type.Optional<number>;\r\n\t\tlet top: $type.Optional<number>;\r\n\t\tlet bottom: $type.Optional<number>;\r\n\r\n\t\tif (points.length > 0) {\r\n\t\t\t// separate areas\r\n\t\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\t\t// surface\r\n\t\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\t\tif (surface && surface.length > 0) {\r\n\t\t\t\t\tlet point: IPoint = surface[0];\r\n\r\n\t\t\t\t\tpath += $path.moveTo(point);\r\n\r\n\t\t\t\t\tfor (let s: number = 0; s < surface.length; s++) {\r\n\t\t\t\t\t\tpoint = surface[s];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(right) || (right < point.x)) {\r\n\t\t\t\t\t\t\tright = point.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!$type.isNumber(left) || (left > point.x)) {\r\n\t\t\t\t\t\t\tleft = point.x;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(top) || (top > point.y)) {\r\n\t\t\t\t\t\t\ttop = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!$type.isNumber(bottom) || (bottom < point.y)) {\r\n\t\t\t\t\t\t\tbottom = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// hole\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tlet point: IPoint = hole[0];\r\n\t\t\t\t\tpath += $path.moveTo(point);\r\n\r\n\t\t\t\t\tfor (let h = 0, hlen = hole.length; h < hlen; h++) {\r\n\t\t\t\t\t\tpoint = hole[h];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (path) {\r\n\t\t\t\tpath += $path.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tthis.bbox.x = left;\r\n\t\t\tthis.bbox.y = top;\r\n\t\t\tthis.bbox.width = right - left;\r\n\t\t\tthis.bbox.height = bottom - top;\r\n\t\t}\r\n\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Measures element\r\n\t */\r\n\tprotected measureElement(): void {\r\n\r\n\t\t// Overriding to avoid extra measurement.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated center point for the shape.\r\n\t *\r\n\t * @readonly\r\n\t * @return {IPoint} Center\r\n\t */\r\n\tpublic get centerPoint(): IPoint {\r\n\t\treturn { x: this.bbox.x + this.bbox.width / 2, y: this.bbox.y + this.bbox.height / 2 };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Morpher]] instance that is used to morph polygon into some other\r\n\t * shape.\r\n\t *\r\n\t * @readonly\r\n\t * @return {Morpher} Morpher instance\r\n\t */\r\n\tpublic get morpher(): Morpher {\r\n\t\tif (!this._morpher) {\r\n\t\t\tthis._morpher = new Morpher(this);\r\n\t\t\tthis._disposers.push(this._morpher);\r\n\t\t}\r\n\t\treturn this._morpher;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polygon\"] = Polygon;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Polygon.ts","/**\r\n * Morpher module contains functionality that allows transforming (morphing)\r\n * SVG shapes like paths, rectangles, circles between one another.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IMorphable } from \"../defs/IMorphable\";\r\nimport { IAnimatable, Animation, AnimationDisposer } from \"../utils/Animation\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Morpher class can be used in conjunction with [[Animation]] to transform one\r\n * SVG shape into another.\r\n */\r\nexport class Morpher extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * An element that will be a subject for morphing.\r\n\t *\r\n\t * @type {IMorphable}\r\n\t */\r\n\tpublic morphable: IMorphable;\r\n\r\n\t/**\r\n\t * [_morphFromPointsReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {Optional<IPoint[][][]>}\r\n\t */\r\n\tprotected _morphFromPointsReal: $type.Optional<IPoint[][][]>;\r\n\r\n\t/**\r\n\t * [_morphToPointsReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {Optional<IPoint[][][]>}\r\n\t */\r\n\tprotected _morphToPointsReal: $type.Optional<IPoint[][][]>;\r\n\r\n\t/**\r\n\t * [_morphToPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {Optional<IPoint[][][]>}\r\n\t */\r\n\tprotected _morphToPoints: $type.Optional<IPoint[][][]>;\r\n\r\n\t/**\r\n\t * Morph progress (0-1)\r\n\t *\r\n\t * @type {Optional<number>}\r\n\t */\r\n\tprotected _morphProgress: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * List of animations currently running.\r\n\t *\r\n\t * @type {Optional<Array<Animation>>}\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * A storage for measurements.\r\n\t *\r\n\t * @type {IRectangle[]}\r\n\t */\r\n\tprotected _bboxes: IRectangle[] = [];\r\n\r\n\t/**\r\n\t * Duration of the morphing animation in milliseconds.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic morphDuration: number = 800;\r\n\r\n\t/**\r\n\t * An easing function to use for morphing animation.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t * @type {Function}\r\n\t */\r\n\tpublic morphEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * If set to `true` then all separate parts of the multi-part shape will\r\n\t * morph into a single target shape. Otherwise each separate part will render\r\n\t * into separate target shapes.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic morphToSingle: boolean = true;\r\n\r\n\t/**\r\n\t * A ratio to scale morphed object in relation to the source object.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param {IMorphable} morphable An object to morph\r\n\t */\r\n\tconstructor(morphable: IMorphable) {\r\n\t\tsuper();\r\n\t\tthis.className = \"Morpher\";\r\n\t\tthis.morphable = morphable;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs shape to polygon.\r\n\t *\r\n\t * @param {IPoint[][][]}        toPoints  Corner points of the target shape\r\n\t * @param {number}              duration  Duration in milliseconds\r\n\t * @param {(number) => number}  easing    Easing function\r\n\t * @return {Animation}                    Animation\r\n\t */\r\n\tpublic morphToPolygon(toPoints: IPoint[][][], duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: IPoint[][][] = this.morphable.currentPoints;\r\n\r\n\t\tthis.sortPoints(points);\r\n\t\tthis.sortPoints(toPoints);\r\n\r\n\t\tthis._morphFromPointsReal = [];\r\n\t\tthis._morphToPointsReal = [];\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\tthis._morphFromPointsReal = this.normalizePoints(toPoints, points);\r\n\t\tthis._morphToPointsReal = this.normalizePoints(points, toPoints);\r\n\r\n\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [normalizePoints description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {IPoint[][][]}  pointsA  Point A\r\n\t * @param  {IPoint[][][]}  pointsB  Point B\r\n\t * @return {IPoint[]}               Normalized points\r\n\t */\r\n\tpublic normalizePoints(pointsA: IPoint[][][], pointsB: IPoint[][][]): IPoint[][][] {\r\n\t\tfor (let i = 0, len = pointsA.length; i < len; i++) {\r\n\t\t\tlet surfaceA: IPoint[] = pointsA[i][0];\r\n\r\n\t\t\tlet holeA: IPoint[] = pointsA[i][1];\r\n\t\t\tlet bboxA: IRectangle = $type.getValue($math.getBBox(surfaceA));\r\n\r\n\t\t\tlet middleX = bboxA.x + bboxA.width;\r\n\t\t\tlet middleY = bboxA.y + bboxA.height;\r\n\r\n\t\t\t// check if we have the same in PointsB\r\n\t\t\tif (!pointsB[i]) {\r\n\t\t\t\tpointsB[i] = [];\r\n\t\t\t}\r\n\r\n\t\t\t// check if we have surface in pointsB\r\n\t\t\tif (surfaceA && !pointsB[i][0]) {\r\n\t\t\t\tpointsB[i][0] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n\t\t\t}\r\n\r\n\t\t\tif (pointsB[i][0]) {\r\n\t\t\t\tpointsB[i][0] = this.addPoints(pointsB[i][0], surfaceA.length);\r\n\r\n\t\t\t\tlet distance = Infinity;\r\n\t\t\t\tlet splitAt = 0;\r\n\r\n\t\t\t\tfor (let a = 0; a < pointsB[i][0].length; a++) {\r\n\t\t\t\t\tlet newDistance = $math.getDistance(pointsB[i][0][a], surfaceA[0]);\r\n\t\t\t\t\tif (newDistance < distance) {\r\n\t\t\t\t\t\tsplitAt = a;\r\n\t\t\t\t\t\tdistance = newDistance;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet partA = pointsB[i][0].slice(0, splitAt);\r\n\t\t\t\tlet partB = pointsB[i][0].slice(splitAt);\r\n\t\t\t\tpointsB[i][0] = partB.concat(partA);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (holeA) {\r\n\t\t\t\tif (!pointsB[i][1]) {\r\n\t\t\t\t\tpointsB[i][1] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n\t\t\t\t}\r\n\t\t\t\tpointsB[i][1] = this.addPoints(pointsB[i][1], holeA.length);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pointsB;\r\n\t}\r\n\r\n\t/**\r\n\t * [sortPoints description]\r\n\t *\r\n\t * @ignore Exclude from doc\r\n\t * @todo Description\r\n\t * @param {IPoint[][][]}  points  [description]\r\n\t * @return                        common bbox of points\r\n\t */\r\n\tpublic sortPoints(points: IPoint[][][]): $type.Optional<IRectangle> {\r\n\t\tpoints.sort(function(a, b) {\r\n\t\t\tlet bbox1: IRectangle = $type.getValue($math.getBBox(a[0]));\r\n\t\t\tlet bbox2: IRectangle = $type.getValue($math.getBBox(b[0]));\r\n\r\n\t\t\tif (bbox1.width * bbox1.height > bbox2.width * bbox2.height) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet bboxes: IRectangle[] = [];\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tif (surface) {\r\n\t\t\t\tbboxes.push($type.getValue($math.getBBox(surface)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $math.getCommonRectangle(bboxes);\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs shape to a circle.\r\n\t *\r\n\t * @param  {number}              radius    Target circle radius (px)\r\n\t * @param  {number}              duration  Duration (ms)\r\n\t * @param  {(number) => number}  easing    Easing function\r\n\t * @return {Animation}                     Animation\r\n\t */\r\n\tpublic morphToCircle(radius?: number, duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: IPoint[][][] = this.morphable.points;\r\n\r\n\t\tlet commonBBox = this.sortPoints(points);\r\n\r\n\t\tthis._morphFromPointsReal = [];\r\n\t\tthis._morphToPointsReal = [];\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\t// surface\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\tthis._morphFromPointsReal[i] = [];\r\n\t\t\tthis._morphToPointsReal[i] = [];\r\n\r\n\t\t\tif (surface) {\r\n\r\n\t\t\t\tlet toPoints: IPoint[] = surface;\r\n\t\t\t\tlet fromPoints: IPoint[] = surface;\r\n\t\t\t\tlet bbox: IRectangle = $type.getValue($math.getBBox(fromPoints)) // this._bboxes[i];\r\n\r\n\t\t\t\tif (this.morphToSingle) {\r\n\t\t\t\t\tbbox = $type.getValue(commonBBox);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet middleX: number = bbox.x + bbox.width / 2;\r\n\t\t\t\tlet middleY: number = bbox.y + bbox.height / 2;\r\n\t\t\t\tlet realRadius: $type.Optional<number> = radius;\r\n\t\t\t\tif (!$type.isNumber(realRadius)) {\r\n\t\t\t\t\trealRadius = Math.min(bbox.width / 2, bbox.height / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttoPoints = [];\r\n\r\n\t\t\t\t// find angle for the first point\r\n\t\t\t\tlet startAngle: number = $math.getAngle({ x: middleX, y: middleY }, surface[0]);\r\n\t\t\t\tlet count: number = 100;\r\n\r\n\t\t\t\tif (surface.length > count) {\r\n\t\t\t\t\tcount = surface.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfromPoints = this.addPoints(surface, count);\r\n\t\t\t\tcount = fromPoints.length; // add Points might increase number a bit\r\n\r\n\t\t\t\tlet angle: number = 360 / (count - 1);\r\n\r\n\t\t\t\tfor (let a: number = 0; a < count; a++) {\r\n\t\t\t\t\tlet realAngle: number = angle * a + startAngle;\r\n\t\t\t\t\tlet pointOnCircle: IPoint = { x: middleX + realRadius * $math.cos(realAngle), y: middleY + realRadius * $math.sin(realAngle) };\r\n\t\t\t\t\ttoPoints[a] = pointOnCircle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tfor (let i = 0, hlen = hole.length; i < hlen; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: middleX, y: middleY });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._morphFromPointsReal[i][0] = fromPoints;\r\n\t\t\t\tthis._morphToPointsReal[i][0] = toPoints;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @ignore Exclude from doc\r\n\t * @todo Description\r\n\t * @param  {IPoint[]}  points         [description]\r\n\t * @param  {number}    mustHaveCount  [description]\r\n\t * @return {IPoint[]}                 [description]\r\n\t */\r\n\tpublic addPoints(points: IPoint[], mustHaveCount: number): IPoint[] {\r\n\t\tlet addToSegmentCount: number = Math.round(mustHaveCount / points.length);\r\n\t\tlet newPoints: IPoint[] = [];\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet point0: IPoint = points[i];\r\n\t\t\tlet point1: IPoint;\r\n\t\t\tif (i == points.length - 1) {\r\n\t\t\t\tpoint1 = points[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpoint1 = points[i + 1];\r\n\t\t\t}\r\n\r\n\t\t\tnewPoints.push(point0);\r\n\r\n\t\t\tfor (let p: number = 1; p < addToSegmentCount; p++) {\r\n\t\t\t\tlet percent: number = p / addToSegmentCount;\r\n\t\t\t\tlet extraPoint: IPoint = { x: point0.x + (point1.x - point0.x) * percent, y: point0.y + (point1.y - point0.y) * percent }\r\n\t\t\t\tnewPoints.push(extraPoint);\r\n\t\t\t}\r\n\r\n\t\t\t// stop adding in case we already added more than left in original\r\n\t\t\tif (newPoints.length + points.length - i == mustHaveCount) {\r\n\t\t\t\taddToSegmentCount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newPoints.length < mustHaveCount && points.length > 0) {\r\n\t\t\tlet lastPoint: IPoint = points[points.length - 1];\r\n\t\t\tfor (let p: number = newPoints.length; p < mustHaveCount; p++) {\r\n\t\t\t\t// add same as last\r\n\t\t\t\tnewPoints.push({ x: lastPoint.x, y: lastPoint.y });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs shape into a rectangle.\r\n\t *\r\n\t * @param  {number}              width     Width of the target rectangle (px)\r\n\t * @param  {number}              height    Height of the target rectangle (px)\r\n\t * @param  {number}              duration  Duration (ms)\r\n\t * @param  {(number) => number}  easing    Easing function\r\n\t * @return {Animation}                     Animation\r\n\t */\r\n\tpublic morphToRectangle(width?: number, height?: number, duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: IPoint[][][] = this.morphable.points;\r\n\r\n\t\tthis.sortPoints(points);\r\n\r\n\t\tthis._morphFromPointsReal = [];\r\n\t\tthis._morphToPointsReal = [];\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\t//\t\tlet biggestBBox: IRectangle = this._bboxes[this._biggestIndex];\r\n\r\n\t\t// surface\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\tthis._morphFromPointsReal[i] = [];\r\n\t\t\tthis._morphToPointsReal[i] = [];\r\n\r\n\t\t\tif (surface) {\r\n\r\n\t\t\t\tlet toPoints: IPoint[] = surface;\r\n\t\t\t\tlet fromPoints: IPoint[] = surface;\r\n\t\t\t\tlet bbox: IRectangle = this._bboxes[i];\r\n\r\n\r\n\t\t\t\t// we only work with first area. TODO: maybe we should find the biggest one?\r\n\t\t\t\tif (this.morphToSingle) {\r\n\t\t\t\t\t//if (i != this._biggestIndex) {\r\n\t\t\t\t\t//\tbbox = { x: biggestBBox.x + biggestBBox.width / 2, y: biggestBBox.y + biggestBBox.height / 2, width: 0, height: 0 };\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet x: number = bbox.x;\r\n\t\t\t\tlet y: number = bbox.y;\r\n\r\n\t\t\t\tlet realWidth: $type.Optional<number> = width;\r\n\t\t\t\tlet realHeight: $type.Optional<number> = height;\r\n\r\n\t\t\t\tif (!$type.isNumber(realWidth)) {\r\n\t\t\t\t\trealWidth = bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(realHeight)) {\r\n\t\t\t\t\trealHeight = bbox.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttoPoints = [{ x: x, y: y }, { x: x + realWidth, y: y }, { x: x + realWidth, y: y + realHeight }, { x: x, y: y + realHeight }];\r\n\t\t\t\ttoPoints = this.addPoints(toPoints, surface.length);\r\n\r\n\t\t\t\t// if polygon has less points then count, add\r\n\t\t\t\tif (surface.length < 4) {\r\n\t\t\t\t\tfor (let i = surface.length; i < 4; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: surface[i].x, y: surface[i].y });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tlet middleX: number = bbox.x + bbox.width / 2;\r\n\t\t\t\t\tlet middleY: number = bbox.y + bbox.height / 2;\r\n\r\n\t\t\t\t\tfor (let i = 0, hlen = hole.length; i < hlen; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: middleX, y: middleY });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._morphFromPointsReal[i][0] = fromPoints;\r\n\t\t\t\tthis._morphToPointsReal[i][0] = toPoints;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Progress of the morph transition.\r\n\t *\r\n\t * Setting this will also trigger actual transformation.\r\n\t *\r\n\t * @param {number}  value  Progress (0-1)\r\n\t */\r\n\tpublic set morphProgress(value: $type.Optional<number>) {\r\n\t\tthis._morphProgress = value;\r\n\r\n\t\tlet currentPoints: IPoint[][][] = [];\r\n\r\n\t\tif (value != null) {\r\n\t\t\tlet fromPoints: $type.Optional<IPoint[][][]> = this._morphFromPointsReal;\r\n\t\t\tlet toPoints: $type.Optional<IPoint[][][]> = this._morphToPointsReal;\r\n\r\n\t\t\tif (fromPoints != null && toPoints != null) {\r\n\r\n\t\t\t\tfor (let i = 0, len = fromPoints.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet currentArea: IPoint[][] = [];\r\n\t\t\t\t\tcurrentPoints.push(currentArea);\r\n\r\n\t\t\t\t\tlet surfaceFrom: IPoint[] = fromPoints[i][0];\r\n\t\t\t\t\tlet holeFrom: IPoint[] = fromPoints[i][1];\r\n\r\n\t\t\t\t\tlet surfaceTo: IPoint[] = toPoints[i][0];\r\n\t\t\t\t\tlet holeTo: IPoint[] = toPoints[i][1];\r\n\r\n\t\t\t\t\tif (surfaceFrom && surfaceFrom.length > 0 && surfaceTo && surfaceTo.length > 0) {\r\n\r\n\t\t\t\t\t\tlet currentSurface: IPoint[] = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, slen = surfaceFrom.length; i < slen; i++) {\r\n\t\t\t\t\t\t\tlet point0: IPoint = surfaceFrom[i];\r\n\t\t\t\t\t\t\tlet point1: IPoint = surfaceTo[i];\r\n\r\n\t\t\t\t\t\t\tlet currentPoint: IPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value }\r\n\r\n\t\t\t\t\t\t\tcurrentSurface.push(currentPoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentArea[0] = currentSurface;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (holeFrom && holeFrom.length > 0 && holeTo && holeTo.length > 0) {\r\n\t\t\t\t\t\tlet currentHole: IPoint[] = [];\r\n\t\t\t\t\t\tfor (let i = 0, hlen = holeFrom.length; i < hlen; i++) {\r\n\t\t\t\t\t\t\tlet point0: IPoint = holeFrom[i];\r\n\t\t\t\t\t\t\tlet point1: IPoint = holeTo[i];\r\n\r\n\t\t\t\t\t\t\tlet currentPoint: IPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value }\r\n\r\n\t\t\t\t\t\t\tcurrentHole.push(currentPoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentArea[1] = currentHole;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = currentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the progress of morph transition.\r\n\t *\r\n\t * @return {Optional<number>} Progress (0-1)\r\n\t */\r\n\tpublic get morphProgress(): $type.Optional<number> {\r\n\t\treturn this._morphProgress;\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the shape to its original appearance.\r\n\t *\r\n\t * @param {number}              duration  Duration (ms)\r\n\t * @param {(number) => number}  easing    Easing function\r\n\t * @return {Animation}                    Animation\r\n\t */\r\n\tpublic morphBack(duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tthis._morphToPointsReal = this._morphFromPointsReal;\r\n\t\tthis._morphFromPointsReal = this.morphable.currentPoints;\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of morph animations currently being played.\r\n\t *\r\n\t * @return {Array<Animation>} List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Morpher.ts","/**\r\n * Module for \"Focus\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport { StyleRule, StyleClass } from \"../../utils/DOM\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Focus\" filter.\r\n */\r\nexport interface FocusFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tstroke?: Color;\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Focus\" filter.\r\n */\r\nexport class FocusFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {FocusFilterProperties}\r\n\t */\r\n\tpublic _properties!: FocusFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link FocusFilterProperties]\r\n\t * @type {Dictionary<FocusFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<FocusFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMorphology>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feMorphology: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feComposite>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feBlend: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FocusFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feMorphology = this.paper.add(\"feMorphology\");\r\n\t\tthis.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n\t\tthis.filterPrimitives.push(this.feMorphology);\r\n\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feBlend = this.paper.add(\"feBlend\");\r\n\t\tthis.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n\t\tthis.filterPrimitives.push(this.feBlend);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 130;\r\n\t\tthis.height = 130;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set stroke(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Optional<Color>} Color\r\n\t */\r\n\tpublic get stroke(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param {number}  value  Outline thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.feMorphology.attr({ \"radius\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Outline thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): $type.Optional<number> {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t *\r\n\t * @param {number}  value  Outline opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"opacity\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Outline opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): $type.Optional<number> {\r\n\t\treturn this.properties[\"opacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * In addition it also disables built-in focus outline on element this\r\n\t * filter is applied to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite}  value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.group.removeStyle(\"outline\");\r\n\t\t}\r\n\t\tvalue.group.addStyle({\r\n\t\t\t\"outline\": \"none\"\r\n\t\t});\r\n\t\tsuper.setSprite(value);\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/FocusFilter.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Container } from \"../Container\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { ITheme } from \"../../themes/ITheme\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param  {Optional<HTMLElement | string>}  htmlElement  A container to creat elements in\r\n * @param  {T}                               classType    A class definition of the new element to create\r\n * @return {T}                                            Newly-created Sprite object\r\n */\r\nfunction createChild<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\tlet htmlContainer = $dom.getElement(htmlElement);\r\n\r\n\tif (htmlContainer) {\r\n\r\n\t\thtmlContainer.innerHTML = \"\";\r\n\t\t//htmlContainer.style.overflow = \"hidden\";\r\n\r\n\t\tlet svgDiv = new SVGContainer(htmlContainer);\r\n\t\tlet paper = new Paper(svgDiv.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n\r\n\t\t// the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n\t\t// svg area - this is often needed when working with small charts.\r\n\r\n\t\t// main container which holds content container and tooltips container\r\n\t\tlet container = new Container();\r\n\t\tcontainer.htmlContainer = htmlContainer;\r\n\t\tcontainer.svgContainer = svgDiv;\r\n\t\tcontainer.width = percent(100);\r\n\t\tcontainer.height = percent(100);\r\n\t\tcontainer.background.fillOpacity = 0;\r\n\t\tcontainer.paper = paper;\r\n\t\tpaper.append(container.group);\r\n\r\n\t\t// this is set from parent container, but this one doesn't have, so do it manually.\r\n\t\tcontainer.relativeWidth = 1;\r\n\t\tcontainer.relativeHeight = 1;\r\n\r\n\t\tsvgDiv.container = container;\r\n\r\n\t\t// creating classType instance\r\n\t\tlet sprite = container.createChild(classType);\r\n\t\tsprite.topParent = container;\r\n\t\tlet uid = sprite.uid;\r\n\r\n\t\tregistry.invalidSprites[uid] = [];\r\n\t\tregistry.invalidDatas[uid] = [];\r\n\t\tregistry.invalidPositions[uid] = [];\r\n\t\tregistry.invalidLayouts[uid] = [];\r\n\r\n\t\tcontainer.baseId = uid;\r\n\r\n\t\tsprite.isBaseSprite = true;\r\n\t\tsprite.focusFilter = new FocusFilter();\r\n\t\tregistry.baseSprites.push(sprite);\r\n\t\tregistry.baseSpritesByUid[uid] = sprite;\r\n\t\tsprite.maskRectangle = { x: 0, y: 0, width: svgDiv.width, height: svgDiv.height };\r\n\r\n\t\t// this solves issues with display:none, as all children are measured as 0x0\r\n\t\tcontainer.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tcontainer.deepInvalidate();\r\n\t\t\t}\r\n\t\t\tif(sprite.maskRectangle){\r\n\t\t\t\tsprite.maskRectangle = { x: 0, y: 0, width: svgDiv.width, height: svgDiv.height };\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t$array.remove(registry.baseSprites, sprite);\r\n\t\t\tregistry.baseSpritesByUid[sprite.uid] = undefined;\r\n\t\t}));\r\n\r\n\t\t// TODO figure out a better way of doing this\r\n\t\tsprite.addDisposer(container);\r\n\r\n\t\t// tooltip container\r\n\t\tlet tooltipContainer: Container = container.createChild(Container);\r\n\t\ttooltipContainer.topParent = container;\r\n\t\ttooltipContainer.width = percent(100);\r\n\t\ttooltipContainer.height = percent(100);\r\n\t\ttooltipContainer.isMeasured = false;\r\n\t\tcontainer.tooltipContainer = tooltipContainer;\r\n\r\n\t\tsprite.tooltip = new Tooltip();\r\n\t\tsprite.tooltip.hide(0);\r\n\t\tsprite.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\r\n\t\ttooltipContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\t$type.getValue(sprite.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\t\t}, undefined, false)\r\n\r\n\t\t//@todo: maybe we don't need to create one by default but only on request?\r\n\r\n\t\tlet preloader = new Preloader();\r\n\t\tpreloader.events.on(\"inited\", () => {\r\n\t\t\tpreloader.__disabled = true;\r\n\t\t}, undefined, false);\r\n\t\tcontainer.preloader = preloader;\r\n\r\n\t\tif (!options.commercialLicense) {\r\n\t\t\tlet logo = tooltipContainer.createChild(AmChartsLogo);\r\n\t\t\ttooltipContainer.events.on(\"maxsizechanged\", (ev) => {\r\n\t\t\t\tif ((tooltipContainer.maxWidth <= 100) || (tooltipContainer.maxHeight <= 50)) {\r\n\t\t\t\t\tlogo.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse if (logo.isHidden || logo.isHiding) {\r\n\t\t\t\t\tlogo.show();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tsprite.logo = logo;\r\n\t\t\tlogo.align = \"left\";\r\n\t\t\tlogo.valign = \"bottom\";\r\n\t\t}\r\n\r\n\t\tsprite.numberFormatter; // need to create one.\r\n\r\n\t\t// Set this as an autonomouse instance\r\n\t\t// Controls like Preloader, Export will use this.\r\n\t\tcontainer.isStandaloneInstance = true;\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\telse {\r\n\t\tsystem.log(\"html container not found\");\r\n\t\tthrow new Error(\"html container not found\");\r\n\t}\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param  {HTMLElement | string}  htmlElement  Reference or id of the target container element\r\n * @param  {T}                     classType    Class type of the target chart type\r\n * @return {T}                                  Chart instance\r\n */\r\nexport function create<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\r\n\t// This is a nasty hack for the benefit of vanilla JS users, who do not\r\n\t// enjoy benefits of type-check anyway.\r\n\t// We're allowing passing in a name of the class rather than type reference\r\n\t// itself.\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType)) {\r\n\t\tif ($type.hasValue(registry.registeredClasses[classType])) {\r\n\t\t\tclassType = registry.registeredClasses[classType];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassType = registry.registeredClasses[\"Container\"];\r\n\t\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, classType);\r\n\r\n\t// Error?\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param  {any}                   config       Config object in property/value pairs\r\n * @param  {string | HTMLElement}  htmlElement  Container reference or ID\r\n * @param  {typeof Chart}          objectType   Chart type\r\n * @return {Chart}                              A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config: { [index: string]: any }, htmlElement?: string | HTMLElement, classType?: { new(): Sprite; } | string): Sprite {\r\n\r\n\t// Extract chart type from config if necessary\r\n\tif (!$type.hasValue(classType)) {\r\n\t\tclassType = config.type;\r\n\t\tdelete config.type;\r\n\t}\r\n\r\n\t// Extract element from config if necessary\r\n\tif (!$type.hasValue(htmlElement)) {\r\n\t\thtmlElement = config.container;\r\n\t\tdelete config.container;\r\n\t}\r\n\r\n\t// Check if we need to extract actual type reference\r\n\tlet finalType;\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n\t\tfinalType = registry.registeredClasses[classType];\r\n\t}\r\n\telse if (typeof classType !== \"function\") {\r\n\t\tfinalType = Container;\r\n\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t}\r\n\telse {\r\n\t\tfinalType = classType;\r\n\t}\r\n\r\n\t// Check if maybe we have `geodata` set as string, which would mean that\r\n\t// we need to try to refer to a loaded map with a global variable, like\r\n\t// `am4geodata_xxx`\r\n\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t// Check if there's a map loaded by such name\r\n\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t}\r\n\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\telse {\r\n\t\t\ttry {\r\n\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// No go again. Error out.\r\n\t\t\t\tclassError = new Error(\"<code>geodata</code> is incorrect or the map file is not loaded.\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, finalType);\r\n\r\n\t// Set config\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\telse {\r\n\t\tchart.config = config;\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param {ITheme}  value  A reference to a theme\r\n */\r\nexport function useTheme(value: ITheme): void {\r\n\tregistry.themes.push(value);\r\n}\r\n\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param {ITheme}  value  A reference to a theme\r\n */\r\nexport function unuseTheme(value: ITheme): void {\r\n\t$array.remove(registry.themes, value);\r\n}\r\n\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes(): void {\r\n\tregistry.themes = [];\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/utils/Instance.ts","'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(typeof window !== 'undefined' ? window : this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n    * Get element size\n    * @param {HTMLElement} element\n    * @returns {Object} {width, height}\n    */\n    function getElementSize(element) {\n        if (!element.getBoundingClientRect) {\n            return {\n                width: element.offsetWidth,\n                height: element.offsetHeight\n            }\n        }\n\n        var rect = element.getBoundingClientRect();\n        return {\n            width: Math.round(rect.width),\n            height: Math.round(rect.height)\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function(sizeInfo) {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call(this, sizeInfo);\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            };\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element) return;\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.dir = 'ltr';\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'pointer-events: none; position: absolute; left: 0px; top: 0px; right: 0; bottom: 0; ' +\n                'overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            var computedStyle = window.getComputedStyle(element);\n            var position = computedStyle ? computedStyle.getPropertyValue('position') : null;\n            if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId;\n            var size = getElementSize(element);\n            var lastWidth = size.width;\n            var lastHeight = size.height;\n            var initialHiddenCheck = true;\n            var lastAnimationFrame = 0;\n\n            var resetExpandShrink = function () {\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                expandChild.style.width = (width + 10) + 'px';\n                expandChild.style.height = (height + 10) + 'px';\n\n                expand.scrollLeft = width + 10;\n                expand.scrollTop = height + 10;\n\n                shrink.scrollLeft = width + 10;\n                shrink.scrollTop = height + 10;\n            };\n\n            var reset = function() {\n                // Check if element is hidden\n                if (initialHiddenCheck) {\n                    var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n                    if (invisible) {\n                        // Check in next frame\n                        if (!lastAnimationFrame){\n                            lastAnimationFrame = requestAnimationFrame(function(){\n                                lastAnimationFrame = 0;\n\n                                reset();\n                            });\n                        }\n\n                        return;\n                    } else {\n                        // Stop checking\n                        initialHiddenCheck = false;\n                    }\n                }\n\n                resetExpandShrink();\n            };\n            element.resizeSensor.resetSensor = reset;\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = size.width;\n                lastHeight = size.height;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call(size);\n                }\n            };\n\n            var onScroll = function() {\n                size = getElementSize(element);\n                dirty = size.width !== lastWidth || size.height !== lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n\n            // Fix for custom Elements\n            requestAnimationFrame(reset);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n\n        this.reset = function() {\n            element.resizeSensor.resetSensor();\n        };\n    };\n\n    ResizeSensor.reset = function(element) {\n        forEachElement(element, function(elem){\n            elem.resizeSensor.resetSensor();\n        });\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if (!elem) return;\n            if(elem.resizedAttached && typeof ev === \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    if (typeof MutationObserver !== \"undefined\") {\n        var observer = new MutationObserver(function (mutations) {\n            for (var i in mutations) {\n                var items = mutations[i].addedNodes;\n                for (var j = 0; j < items.length; j++) {\n                    if (items[j].resizeSensor) {\n                        ResizeSensor.reset(items[j]);\n                    }\n                }\n\n            }\n        });\n\n        document.addEventListener(\"DOMContentLoaded\", function (event) {\n            observer.observe(document.body, {\n                childList: true,\n                subtree: true,\n            });\n        });\n    }\n\n    return ResizeSensor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/css-element-queries/src/ResizeSensor.js\n// module id = 322\n// module chunks = 302","import { StyleRule } from \"../utils/DOM\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n\r\n\r\nconst rules = new Dictionary<string, CounterDisposer>();\r\n\r\n/**\r\n * Default CSS for Popup.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}     prefix  Prefix for CSS classes\r\n * @return {IDisposer}          Disposer for the CSS definition\r\n */\r\nexport default function(prefix?: string): IDisposer {\r\n\tif (!prefix) {\r\n\t\tprefix = \"ampopup\";\r\n\t}\r\n\r\n\tconst counter = rules.insertKeyIfEmpty(prefix, () => {\r\n\t\tconst disposer = new MultiDisposer([\r\n\t\t\tnew StyleRule(`.${prefix}`, {\r\n\t\t\t\t//\"width\": \"100%\",\r\n\t\t\t\t//\"height\": \"100%\",\r\n\t\t\t\t\"overflow\": \"visible\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"z-index\": \"2000\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${prefix}-curtain`, {\r\n\t\t\t\t\"width\": \"100%\",\r\n\t\t\t\t\"height\": \"100%\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"z-index\": \"2001\",\r\n\t\t\t\t\"background\": \"#fff\",\r\n\t\t\t\t\"opacity\": \"0.5\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${prefix}-title`, {\r\n\t\t\t\t\"font-weight\": \"bold\",\r\n\t\t\t\t\"font-size\": \"120%\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${prefix}-content`, {\r\n\t\t\t\t/*\"width\": \"100%\",\r\n\t\t\t\t\"height\": \"100%\",*/\r\n\t\t\t\t\"padding\": \"1em 2em\",\r\n\t\t\t\t\"background\": \"rgb(255, 255, 255);\",\r\n\t\t\t\t\"background-color\": \"rgba(255, 255, 255, 0.8)\",\r\n\t\t\t\t\"display\": \"inline-block\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"max-width\": \"90%\",\r\n\t\t\t\t\"max-height\": \"90%\",\r\n\t\t\t\t\"overflow\": \"auto\",\r\n\t\t\t\t\"z-index\": \"2002\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${prefix}-close`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0.3em\",\r\n\t\t\t\t\"right\": \"0.3em\",\r\n\t\t\t\t\"background-color\": \"rgb(100, 100, 100)\",\r\n\t\t\t\t\"background\": \"rgba(100, 100, 100, 0.1) url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=) no-repeat center\",\r\n\t\t\t\t\"background-size\": \"80%\",\r\n\t\t\t\t\"width\": \"1.2em\",\r\n\t\t\t\t\"height\": \"1.2em\",\r\n\t\t\t\t\"cursor\": \"pointer\"\r\n\t\t\t}),\r\n\r\n\t\t]);\r\n\r\n\t\treturn new CounterDisposer(() => {\r\n\t\t\trules.removeKey(prefix);\r\n\t\t\tdisposer.dispose();\r\n\t\t});\r\n\t});\r\n\r\n\treturn counter.increment();\r\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/PopupCSS.ts","/**\n * amCharts 4 locale\n * \n * Locale: en\n * Language: International English\n * Author: Martynas Majeris\n *\n * Follow instructions in [`amcharts4-lang` repo](https://github.com/amcharts/amcharts4-lang) to make corrections or add new translations.\n *\n * ---\n * Edit but leave the header section above this line. You can remove any\n * subsequent comment sections.\n * ---\n *\n * Use this file as a template to create translations. Leave the key part in\n * English intact. Fill the value with a translation.\n *\n * Empty string means no translation, so default \"International English\"\n * will be used.\n *\n * If you need the translation to literally be an empty string, use `null`\n * instead.\n *\n * IMPORTANT:\n * When translating make good effort to keep the translation length\n * at least the same chartcount as the English, especially for short prompts.\n *\n * Having significantly longer prompts may distort the actual charts.\n *\n * NOTE:\n * Some prompts - like months or weekdays - come in two versions: full and\n * shortened.\n *\n * If there's no official shortened version of these in your language, and it\n * would not be possible to invent such short versions that don't seem weird\n * to native speakers of that language, fill those with the same as full\n * version.\n *\n * PLACEHODERS:\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\n * values during translation and should be retained in the translated prompts.\n *\n * Placeholder positions may be changed to better suit structure of the\n * sentence.\n *\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\n * actual value representing range start, and \"%2\" will be replaced by end\n * value.\n *\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\n * places where they will make sense.\n *\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\n */\nexport default {\n\t// Number formatting options.\n\t// \n\t// Please check with the local standards which separator is accepted to be\n\t// used for separating decimals, and which for thousands.\n\t\"_decimalSeparator\": \".\",\n\t\"_thousandSeparator\": \",\",\n\n\t// Suffixes for numbers\n\t// When formatting numbers, big or small numers might be reformatted to\n\t// shorter version, by applying a suffix.\n\t// \n\t// For example, 1000000 might become \"1m\".\n\t// Or 1024 might become \"1KB\" if we're formatting byte numbers.\n\t// \n\t// This section defines such suffixes for all such cases.\n\t\"_big_number_suffix_3\": \"k\",\n\t\"_big_number_suffix_6\": \"M\",\n\t\"_big_number_suffix_9\": \"G\",\n\t\"_big_number_suffix_12\": \"T\",\n\t\"_big_number_suffix_15\": \"P\",\n\t\"_big_number_suffix_18\": \"E\",\n\t\"_big_number_suffix_21\": \"Z\",\n\t\"_big_number_suffix_24\": \"Y\",\n\n\t\"_small_number_suffix_3\": \"m\",\n\t\"_small_number_suffix_6\": \"μ\",\n\t\"_small_number_suffix_9\": \"n\",\n\t\"_small_number_suffix_12\": \"p\",\n\t\"_small_number_suffix_15\": \"f\",\n\t\"_small_number_suffix_18\": \"a\",\n\t\"_small_number_suffix_21\": \"z\",\n\t\"_small_number_suffix_24\": \"y\",\n\n\t\"_byte_suffix_B\": \"B\",\n\t\"_byte_suffix_KB\": \"KB\",\n\t\"_byte_suffix_MB\": \"MB\",\n\t\"_byte_suffix_GB\": \"GB\",\n\t\"_byte_suffix_TB\": \"TB\",\n\t\"_byte_suffix_PB\": \"PB\",\n\n\t// Default date formats for various periods.\n\t// \n\t// This should reflect official or de facto formatting universally accepted\n\t// in the country translation is being made for\n\t// Available format codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes\n\t// \n\t// This will be used when formatting date/time for particular granularity,\n\t// e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n\t\"_date_millisecond\": \"mm:ss SSS\",\n\t\"_date_second\": \"HH:mm:ss\",\n\t\"_date_minute\": \"HH:mm\",\n\t\"_date_hour\": \"HH:mm\",\n\t\"_date_day\": \"MMM dd\",\n\t\"_date_week\": \"ww\",\n\t\"_date_month\": \"MMM\",\n\t\"_date_year\": \"yyyy\",\n\n\t// Default duration formats for various base units.\n\t// \n\t// This will be used by DurationFormatter to format numeric values into\n\t// duration.\n\t// \n\t// Notice how each duration unit comes in several versions. This is to ensure\n\t// that each base unit is shown correctly.\n\t// \n\t// For example, if we have baseUnit set to \"second\", meaning our duration is\n\t// in seconds.\n\t// \n\t// If we pass in `50` to formatter, it will know that we have just 50 seconds\n\t// (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n\t// and the formatted result will be in like `\"50\"`.\n\t// \n\t// If we pass in `70`, which is more than a minute, the formatter will switch\n\t// to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n\t// text.\n\t// \n\t// Available codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n\t\"_duration_millisecond\": \"SSS\",\n\t\"_duration_millisecond_second\": \"ss.SSS\",\n\t\"_duration_millisecond_minute\": \"mm:ss SSS\",\n\t\"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n\t\"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n\t\"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n\n\t\"_duration_second\": \"ss\",\n\t\"_duration_second_minute\": \"mm:ss\",\n\t\"_duration_second_hour\": \"hh:mm:ss\",\n\t\"_duration_second_day\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_week\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n\t\"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n\n\t\"_duration_minute\": \"mm\",\n\t\"_duration_minute_hour\": \"hh:mm\",\n\t\"_duration_minute_day\": \"d'd' hh:mm\",\n\t\"_duration_minute_week\": \"d'd' hh:mm\",\n\t\"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n\t\"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n\n\t\"_duration_hour\": \"hh'h'\",\n\t\"_duration_hour_day\": \"d'd' hh'h'\",\n\t\"_duration_hour_week\": \"d'd' hh'h'\",\n\t\"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n\t\"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n\n\t\"_duration_day\": \"d'd'\",\n\t\"_duration_day_week\": \"d'd'\",\n\t\"_duration_day_month\": \"M'm' dd'd'\",\n\t\"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n\n\t\"_duration_week\": \"w'w'\",\n\t\"_duration_week_month\": \"w'w'\",\n\t\"_duration_week_year\": \"w'w'\",\n\n\t\"_duration_month\": \"M'm'\",\n\t\"_duration_month_year\": \"y'y' MM'm'\",\n\n\t\"_duration_year\": \"y'y'\",\n\n\t// Era translations\n\t\"_era_ad\": \"AD\",\n\t\"_era_bc\": \"BC\",\n\n\t// Day part, used in 12-hour formats, e.g. 5 P.M.\n\t// Please note that these come in 3 variants:\n\t// * one letter (e.g. \"A\")\n\t// * two letters (e.g. \"AM\")\n\t// * two letters with dots (e.g. \"A.M.\")\n\t// \n\t// All three need to to be translated even if they are all the same. Some\n\t// users might use one, some the other.\n\t\"A\": \"\",\n\t\"P\": \"\",\n\t\"AM\": \"\",\n\t\"PM\": \"\",\n\t\"A.M.\": \"\",\n\t\"P.M.\": \"\",\n\n\t// Date-related stuff.\n\t// \n\t// When translating months, if there's a difference, use the form which is\n\t// best for a full date, e.g. as you would use it in \"2018 January 1\".\n\t// \n\t// Note that May is listed twice. This is because in English May is the same\n\t// in both long and short forms, while in other languages it may not be the\n\t// case. Translate \"May\" to full word, while \"May(short)\" to shortened\n\t// version.\n\t// \n\t// Should month names and weekdays be capitalized or not?\n\t// \n\t// Rule of thumb is this: if the names should always be capitalized,\n\t// regardless of name position within date (\"January\", \"21st January 2018\",\n\t// etc.) use capitalized names. Otherwise enter all lowercase.\n\t// \n\t// The date formatter will automatically capitalize names if they are the\n\t// first (or only) word in resulting date.\n\t\"January\": \"\",\n\t\"February\": \"\",\n\t\"March\": \"\",\n\t\"April\": \"\",\n\t\"May\": \"\",\n\t\"June\": \"\",\n\t\"July\": \"\",\n\t\"August\": \"\",\n\t\"September\": \"\",\n\t\"October\": \"\",\n\t\"November\": \"\",\n\t\"December\": \"\",\n\t\"Jan\": \"\",\n\t\"Feb\": \"\",\n\t\"Mar\": \"\",\n\t\"Apr\": \"\",\n\t\"May(short)\": \"May\",\n\t\"Jun\": \"\",\n\t\"Jul\": \"\",\n\t\"Aug\": \"\",\n\t\"Sep\": \"\",\n\t\"Oct\": \"\",\n\t\"Nov\": \"\",\n\t\"Dec\": \"\",\n\n\t// Weekdays.\n\t\"Sunday\": \"\",\n\t\"Monday\": \"\",\n\t\"Tuesday\": \"\",\n\t\"Wednesday\": \"\",\n\t\"Thursday\": \"\",\n\t\"Friday\": \"\",\n\t\"Saturday\": \"\",\n\t\"Sun\": \"\",\n\t\"Mon\": \"\",\n\t\"Tue\": \"\",\n\t\"Wed\": \"\",\n\t\"Thu\": \"\",\n\t\"Fri\": \"\",\n\t\"Sat\": \"\",\n\n\t// Date ordinal function.\n\t// \n\t// This is used when adding number ordinal when formatting days in dates.\n\t// \n\t// E.g. \"January 1st\", \"February 2nd\".\n\t// \n\t// The function accepts day number, and returns a string to be added to the\n\t// day, like in default English translation, if we pass in 2, we will receive\n\t// \"nd\" back.\n\t\"_dateOrd\": function(day: number): string {\n\t\tlet res = \"th\";\n\t\tif ((day < 11) || (day > 13)) {\n\t\t\tswitch (day % 10) {\n\t\t\t\tcase 1:\n\t\t\t\t\tres = \"st\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tres = \"nd\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tres = \"rd\"\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\t// Various chart controls.\n\t// Shown as a tooltip on zoom out button.\n\t\"Zoom Out\": \"\",\n\n\t// Timeline buttons\n\t\"Play\": \"\",\n\t\"Stop\": \"\",\n\n\t// Chart's Legend screen reader title.\n\t\"Legend\": \"\",\n\n\t// Legend's item screen reader indicator.\n\t\"Click, tap or press ENTER to toggle\": \"\",\n\n\t// Shown when the cahrt is busy loading something.\n\t\"Loading\": \"\",\n\n\t// Shown as the first button in the breadcrumb navigation, e.g.:\n\t// Home > First level > ...\n\t\"Home\": \"\",\n\n\t// Chart types.\n\t// Those are used as default screen reader titles for the main chart element\n\t// unless developer has set some more descriptive title.\n\t\"Chart\": \"\",\n\t\"Serial chart\": \"\",\n\t\"X/Y chart\": \"\",\n\t\"Pie chart\": \"\",\n\t\"Gauge chart\": \"\",\n\t\"Radar chart\": \"\",\n\t\"Sankey diagram\": \"\",\n\t\"Flow diagram\": \"\",\n\t\"Chord diagram\": \"\",\n\t\"TreeMap chart\": \"\",\n\t\"Sliced chart\": \"\",\n\n\t// Series types.\n\t// Used to name series by type for screen readers if they do not have their\n\t// name set.\n\t\"Series\": \"\",\n\t\"Candlestick Series\": \"\",\n\t\"OHLC Series\": \"\",\n\t\"Column Series\": \"\",\n\t\"Line Series\": \"\",\n\t\"Pie Slice Series\": \"\",\n\t\"Funnel Series\": \"\",\n\t\"Pyramid Series\": \"\",\n\t\"X/Y Series\": \"\",\n\n\t// Map-related stuff.\n\t\"Map\": \"\",\n\t\"Press ENTER to zoom in\": \"\",\n\t\"Press ENTER to zoom out\": \"\",\n\t\"Use arrow keys to zoom in and out\": \"\",\n\t\"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n\n\t// Export-related stuff.\n\t// These prompts are used in Export menu labels.\n\t// \n\t// \"Export\" is the top-level menu item.\n\t// \n\t// \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n\t// operation.\n\t// \n\t// Leave actual format untranslated, unless you absolutely know that they\n\t// would convey more meaning in some other way.\n\t\"Export\": \"\",\n\t\"Image\": \"\",\n\t\"Data\": \"\",\n\t\"Print\": \"\",\n\t\"Click, tap or press ENTER to open\": \"\",\n\t\"Click, tap or press ENTER to print.\": \"\",\n\t\"Click, tap or press ENTER to export as %1.\": \"\",\n\t'To save the image, right-click this link and choose \"Save picture as...\"': \"\",\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': \"\",\n\t\"(Press ESC to close this message)\": \"\",\n\t\"Image Export Complete\": \"\",\n\t\"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n\t\"Saved from\": \"\",\n\t\"PNG\": \"\",\n\t\"JPG\": \"\",\n\t\"GIF\": \"\",\n\t\"SVG\": \"\",\n\t\"PDF\": \"\",\n\t\"JSON\": \"\",\n\t\"CSV\": \"\",\n\t\"XLSX\": \"\",\n\n\t// Scrollbar-related stuff.\n\t// \n\t// Scrollbar is a control which can zoom and pan the axes on the chart.\n\t// \n\t// Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n\t// upper and lower (for vertical one).\n\t// \n\t// Prompts change in relation to whether Scrollbar is vertical or horizontal.\n\t// \n\t// The final section is used to indicate the current range of selection.\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n\t\"Use left and right arrows to move selection\": \"\",\n\t\"Use left and right arrows to move left selection\": \"\",\n\t\"Use left and right arrows to move right selection\": \"\",\n\t\"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n\t\"Use up and down arrows to move selection\": \"\",\n\t\"Use up and down arrows to move lower selection\": \"\",\n\t\"Use up and down arrows to move upper selection\": \"\",\n\t\"From %1 to %2\": \"\",\n\t\"From %1\": \"\",\n\t\"To %1\": \"\",\n\n\t// Data loader-related.\n\t\"No parser available for file: %1\": \"\",\n\t\"Error parsing file: %1\": \"\",\n\t\"Unable to load file: %1\": \"\",\n\t\"Invalid date\": \"\",\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/git/amcharts4-lang/src/en.ts","import { StyleRule } from \"../utils/DOM\";\r\nimport { InterfaceColorSet } from \"../utils/InterfaceColorSet\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n\r\nconst rules = new Dictionary<string, CounterDisposer>();\r\n\r\n/**\r\n * A dynamically-loadable CSS module for Export menu.\r\n *\r\n * @ignore Exclude from docs\r\n * @param  {string}     prefix  Prefix to addtach to class names\r\n * @return {IDisposer}          A MultiDisposer with style rules\r\n */\r\nexport default function (prefix?: string): IDisposer {\r\n\tconst newPrefix = (prefix ? prefix : \"amexport\");\r\n\r\n\tlet colorSet = new InterfaceColorSet();\r\n\r\n\tconst counter = rules.insertKeyIfEmpty(newPrefix, () => {\r\n\t\tconst disposer = new MultiDisposer([\r\n\r\n\t\t\t/*new StyleRule(`.${newPrefix}-menu`, {\r\n\t\t\t\t\"opacity\": \"0.3\",\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`div:hover .${newPrefix}-menu, .${newPrefix}-menu.active`, {\r\n\t\t\t\t\"opacity\": \"0.9\",\r\n\t\t\t}),*/\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu-level-0`, {\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"5px\",\r\n\t\t\t\t\"right\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu-level-0.${newPrefix}-left`, {\r\n\t\t\t\t\"right\": \"auto\",\r\n\t\t\t\t\"left\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu-level-0.${newPrefix}-right`, {\r\n\t\t\t\t\"right\": \"5px\",\r\n\t\t\t\t\"left\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu-level-0.${newPrefix}-top`, {\r\n\t\t\t\t\"top\": \"5px\",\r\n\t\t\t\t\"bottom\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu-level-0.${newPrefix}-bottom`, {\r\n\t\t\t\t\"top\": \"auto\",\r\n\t\t\t\t\"bottom\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item.${newPrefix}-item-level-0`, {\r\n\t\t\t\t\"opacity\": \"0.3\",\r\n\t\t\t\t\"width\": \"30px\",\r\n\t\t\t\t\"height\": \"30px\",\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\r\n\t\t\t\t//\"text-indent\": \"-9999px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`div:hover .${newPrefix}-item.${newPrefix}-item-level-0, .${newPrefix}-item.${newPrefix}-item-level-0.active`, {\r\n\t\t\t\t\"opacity\": \"0.9\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item.${newPrefix}-item-level-0 > a`, {\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t\t\"text-align\": \"center\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item.${newPrefix}-item-level-0:before`, {\r\n\t\t\t\t\"display\": \"block\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item`, {\r\n\t\t\t\t\"position\": \"relative\",\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"opacity\": \"0\",\r\n\t\t\t\t\"z-index\": \"1\",\r\n\t\t\t\t\"border-radius\": \"3px\",\r\n\t\t\t\t\"background-color\": colorSet.getFor(\"secondaryButton\").hex,\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t\t\"margin\": \"1px 1px 0 0\",\r\n\t\t\t\t\"color\": colorSet.getFor(\"secondaryButton\").alternative.hex,\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out, opacity 0.5s ease 0.5s\",\r\n\t\t\t\t//\"width\": \"initial\",\r\n\t\t\t\t//\"height\": \"initial\",\r\n\t\t\t\t//\"text-indent\": \"initial\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-left .${newPrefix}-item`, {\r\n\t\t\t\t\"margin\": \"1px 0 0 1px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item:hover, .${newPrefix}-item.active`, {\r\n\t\t\t\t\"background\": colorSet.getFor(\"secondaryButtonHover\").hex,\r\n\t\t\t\t\"color\": colorSet.getFor(\"secondaryButtonText\").hex,\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"-1px\",\r\n\t\t\t\t\"right\": \"0\",\r\n\t\t\t\t\"margin-right\": \"100%\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-left .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"right\": \"auto\",\r\n\t\t\t\t\"margin-left\": \"100%\",\r\n\t\t\t\t\"margin-right\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-right .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"left\": \"auto\",\r\n\t\t\t\t\"right\": \"0\",\r\n\t\t\t\t\"margin-left\": \"auto\",\r\n\t\t\t\t\"margin-right\": \"100%\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-top .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"top\": \"-1px\",\r\n\t\t\t\t\"bottom\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-bottom .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"top\": \"auto\",\r\n\t\t\t\t\"bottom\": \"0\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"none\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item:hover > .${newPrefix}-menu, .${newPrefix}-item.active > .${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-item:hover > .${newPrefix}-menu > .${newPrefix}-item, .${newPrefix}-item.active > .${newPrefix}-menu > .${newPrefix}-item`, {\r\n\t\t\t\t\"opacity\": \"1\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"list-style\": \"none\",\r\n\t\t\t\t\"margin\": \"0\",\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-label`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"cursor\": \"default\",\r\n\t\t\t\t\"padding\": \"0.5em 1em\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`.${newPrefix}-clickable`, {\r\n\t\t\t\t\"cursor\": \"pointer\",\r\n\t\t\t}),\r\n\t\t]);\r\n\r\n\t\treturn new CounterDisposer(() => {\r\n\t\t\trules.removeKey(newPrefix);\r\n\t\t\tdisposer.dispose();\r\n\t\t});\r\n\t});\r\n\r\n\treturn counter.increment();\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/export/ExportCSS.ts","/**\r\n * Funnel tick module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Tick, ITickProperties, ITickAdapters, ITickEvents } from \"../elements/Tick\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelSlice } from \"./FunnelSlice\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { FunnelSeries } from \"../series/FunnelSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickProperties extends ITickProperties {\r\n\tlocationX?:number;\r\n\r\n\tlocationY?:number;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelTick]].\r\n */\r\nexport interface IFunnelTickEvents extends ITickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelTick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelTickAdapters extends ITickAdapters, IFunnelTickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an tick line for a funnel slice connecting it to a related label.\r\n *\r\n * @see {@link IFunnelTickEvents} for a list of available events\r\n * @see {@link IFunnelTickAdapters} for a list of available Adapters\r\n */\r\nexport class FunnelTick extends Tick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFunnelTickProperties}\r\n\t */\r\n\tpublic _properties!: IFunnelTickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IFunnelTickAdapters}\r\n\t */\r\n\tpublic _adapter!: IFunnelTickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFunnelTickEvents}\r\n\t */\r\n\tpublic _events!: IFunnelTickEvents;\r\n\r\n\t/**\r\n\t * A label element this tick is attached to.\r\n\t *\r\n\t * @type {MutableValueDisposer}\r\n\t */\r\n\tprotected _label = new MutableValueDisposer<Label>();\r\n\r\n\t/**\r\n\t * A slice element this tick is attached to.\r\n\t *\r\n\t * @type {MutableValueDisposer}\r\n\t */\r\n\tprotected _slice = new MutableValueDisposer<FunnelSlice>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelTick\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis._disposers.push(this._label);\r\n\t\tthis._disposers.push(this._slice);\r\n\t\t\r\n\t\tthis.setPropertyValue(\"locationX\", 0);\r\n\t\tthis.setPropertyValue(\"locationY\", 0);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the tick element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet slice: FunnelSlice = this.slice;\r\n\t\tlet point = slice.getPoint(this.locationX, this.locationY);\r\n\r\n\t\tif (point) {\r\n\t\t\tlet label = this.label;\r\n\r\n\t\t\tlet series = <FunnelSeries>slice.dataItem.component;\r\n\r\n\t\t\tif (series.orientation == \"vertical\") {\r\n\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY;\r\n\r\n\t\t\t\tlet p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tlet p1 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\r\n\t\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet x1 = label.pixelX;\r\n\t\t\t\tlet y1 = label.pixelY - label.measuredHeight;\r\n\r\n\t\t\t\tlet p0 = $utils.spritePointToSprite(point, slice, this.parent);\r\n\t\t\t\tlet p1 = $utils.spritePointToSprite({ x: x1, y: y1 }, label.parent, this.parent);\r\n\r\n\t\t\t\tthis.path = $path.moveTo(p0) + $path.lineTo(p1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [[FunnelSlice]] element tick is attached to.\r\n\t *\r\n\t * @param {FunnelSlice}  slice  Slice\r\n\t */\r\n\tpublic set slice(slice: FunnelSlice) {\r\n\t\tthis._slice.set(slice, new MultiDisposer([\r\n\t\t\tslice.events.on(\"transformed\", this.invalidate, this, false),\r\n\t\t\tslice.events.on(\"validated\", this.invalidate, this, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return {FunnelSlice} FunnelSlice\r\n\t */\r\n\tpublic get slice(): FunnelSlice {\r\n\t\treturn this._slice.get();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element tick is attached to.\r\n\t *\r\n\t * @param {Label}  label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tthis._label.set(label, label.events.on(\"transformed\", this.invalidate, this, false));\r\n\t}\r\n\r\n\t/**\r\n\t * @return {AxisLabelCircular} Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label.get();\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param {number}  value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tthis.setPropertyValue(\"locationX\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position within target element a tick is pointing\r\n\t * to.\r\n\t *\r\n\t * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.\r\n\t *\r\n\t * You can also set any value in-between (e.g. 0.5 will point to the middle\r\n\t * of the slice), or outside 0-1 range, which will put tick anchor position\r\n\t * outside target element.\r\n\t *\r\n\t * @param {number}  value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tthis.setPropertyValue(\"locationY\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelTick\"] = FunnelTick;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/elements/FunnelTick.ts","require('./modules/es6.symbol');\nrequire('./modules/es6.object.create');\nrequire('./modules/es6.object.define-property');\nrequire('./modules/es6.object.define-properties');\nrequire('./modules/es6.object.get-own-property-descriptor');\nrequire('./modules/es6.object.get-prototype-of');\nrequire('./modules/es6.object.keys');\nrequire('./modules/es6.object.get-own-property-names');\nrequire('./modules/es6.object.freeze');\nrequire('./modules/es6.object.seal');\nrequire('./modules/es6.object.prevent-extensions');\nrequire('./modules/es6.object.is-frozen');\nrequire('./modules/es6.object.is-sealed');\nrequire('./modules/es6.object.is-extensible');\nrequire('./modules/es6.object.assign');\nrequire('./modules/es6.object.is');\nrequire('./modules/es6.object.set-prototype-of');\nrequire('./modules/es6.object.to-string');\nrequire('./modules/es6.function.bind');\nrequire('./modules/es6.function.name');\nrequire('./modules/es6.function.has-instance');\nrequire('./modules/es6.parse-int');\nrequire('./modules/es6.parse-float');\nrequire('./modules/es6.number.constructor');\nrequire('./modules/es6.number.to-fixed');\nrequire('./modules/es6.number.to-precision');\nrequire('./modules/es6.number.epsilon');\nrequire('./modules/es6.number.is-finite');\nrequire('./modules/es6.number.is-integer');\nrequire('./modules/es6.number.is-nan');\nrequire('./modules/es6.number.is-safe-integer');\nrequire('./modules/es6.number.max-safe-integer');\nrequire('./modules/es6.number.min-safe-integer');\nrequire('./modules/es6.number.parse-float');\nrequire('./modules/es6.number.parse-int');\nrequire('./modules/es6.math.acosh');\nrequire('./modules/es6.math.asinh');\nrequire('./modules/es6.math.atanh');\nrequire('./modules/es6.math.cbrt');\nrequire('./modules/es6.math.clz32');\nrequire('./modules/es6.math.cosh');\nrequire('./modules/es6.math.expm1');\nrequire('./modules/es6.math.fround');\nrequire('./modules/es6.math.hypot');\nrequire('./modules/es6.math.imul');\nrequire('./modules/es6.math.log10');\nrequire('./modules/es6.math.log1p');\nrequire('./modules/es6.math.log2');\nrequire('./modules/es6.math.sign');\nrequire('./modules/es6.math.sinh');\nrequire('./modules/es6.math.tanh');\nrequire('./modules/es6.math.trunc');\nrequire('./modules/es6.string.from-code-point');\nrequire('./modules/es6.string.raw');\nrequire('./modules/es6.string.trim');\nrequire('./modules/es6.string.iterator');\nrequire('./modules/es6.string.code-point-at');\nrequire('./modules/es6.string.ends-with');\nrequire('./modules/es6.string.includes');\nrequire('./modules/es6.string.repeat');\nrequire('./modules/es6.string.starts-with');\nrequire('./modules/es6.string.anchor');\nrequire('./modules/es6.string.big');\nrequire('./modules/es6.string.blink');\nrequire('./modules/es6.string.bold');\nrequire('./modules/es6.string.fixed');\nrequire('./modules/es6.string.fontcolor');\nrequire('./modules/es6.string.fontsize');\nrequire('./modules/es6.string.italics');\nrequire('./modules/es6.string.link');\nrequire('./modules/es6.string.small');\nrequire('./modules/es6.string.strike');\nrequire('./modules/es6.string.sub');\nrequire('./modules/es6.string.sup');\nrequire('./modules/es6.date.now');\nrequire('./modules/es6.date.to-json');\nrequire('./modules/es6.date.to-iso-string');\nrequire('./modules/es6.date.to-string');\nrequire('./modules/es6.date.to-primitive');\nrequire('./modules/es6.array.is-array');\nrequire('./modules/es6.array.from');\nrequire('./modules/es6.array.of');\nrequire('./modules/es6.array.join');\nrequire('./modules/es6.array.slice');\nrequire('./modules/es6.array.sort');\nrequire('./modules/es6.array.for-each');\nrequire('./modules/es6.array.map');\nrequire('./modules/es6.array.filter');\nrequire('./modules/es6.array.some');\nrequire('./modules/es6.array.every');\nrequire('./modules/es6.array.reduce');\nrequire('./modules/es6.array.reduce-right');\nrequire('./modules/es6.array.index-of');\nrequire('./modules/es6.array.last-index-of');\nrequire('./modules/es6.array.copy-within');\nrequire('./modules/es6.array.fill');\nrequire('./modules/es6.array.find');\nrequire('./modules/es6.array.find-index');\nrequire('./modules/es6.array.species');\nrequire('./modules/es6.array.iterator');\nrequire('./modules/es6.regexp.constructor');\nrequire('./modules/es6.regexp.to-string');\nrequire('./modules/es6.regexp.flags');\nrequire('./modules/es6.regexp.match');\nrequire('./modules/es6.regexp.replace');\nrequire('./modules/es6.regexp.search');\nrequire('./modules/es6.regexp.split');\nrequire('./modules/es6.promise');\nrequire('./modules/es6.map');\nrequire('./modules/es6.set');\nrequire('./modules/es6.weak-map');\nrequire('./modules/es6.weak-set');\nrequire('./modules/es6.typed.array-buffer');\nrequire('./modules/es6.typed.data-view');\nrequire('./modules/es6.typed.int8-array');\nrequire('./modules/es6.typed.uint8-array');\nrequire('./modules/es6.typed.uint8-clamped-array');\nrequire('./modules/es6.typed.int16-array');\nrequire('./modules/es6.typed.uint16-array');\nrequire('./modules/es6.typed.int32-array');\nrequire('./modules/es6.typed.uint32-array');\nrequire('./modules/es6.typed.float32-array');\nrequire('./modules/es6.typed.float64-array');\nrequire('./modules/es6.reflect.apply');\nrequire('./modules/es6.reflect.construct');\nrequire('./modules/es6.reflect.define-property');\nrequire('./modules/es6.reflect.delete-property');\nrequire('./modules/es6.reflect.enumerate');\nrequire('./modules/es6.reflect.get');\nrequire('./modules/es6.reflect.get-own-property-descriptor');\nrequire('./modules/es6.reflect.get-prototype-of');\nrequire('./modules/es6.reflect.has');\nrequire('./modules/es6.reflect.is-extensible');\nrequire('./modules/es6.reflect.own-keys');\nrequire('./modules/es6.reflect.prevent-extensions');\nrequire('./modules/es6.reflect.set');\nrequire('./modules/es6.reflect.set-prototype-of');\nrequire('./modules/es7.array.includes');\nrequire('./modules/es7.array.flat-map');\nrequire('./modules/es7.array.flatten');\nrequire('./modules/es7.string.at');\nrequire('./modules/es7.string.pad-start');\nrequire('./modules/es7.string.pad-end');\nrequire('./modules/es7.string.trim-left');\nrequire('./modules/es7.string.trim-right');\nrequire('./modules/es7.string.match-all');\nrequire('./modules/es7.symbol.async-iterator');\nrequire('./modules/es7.symbol.observable');\nrequire('./modules/es7.object.get-own-property-descriptors');\nrequire('./modules/es7.object.values');\nrequire('./modules/es7.object.entries');\nrequire('./modules/es7.object.define-getter');\nrequire('./modules/es7.object.define-setter');\nrequire('./modules/es7.object.lookup-getter');\nrequire('./modules/es7.object.lookup-setter');\nrequire('./modules/es7.map.to-json');\nrequire('./modules/es7.set.to-json');\nrequire('./modules/es7.map.of');\nrequire('./modules/es7.set.of');\nrequire('./modules/es7.weak-map.of');\nrequire('./modules/es7.weak-set.of');\nrequire('./modules/es7.map.from');\nrequire('./modules/es7.set.from');\nrequire('./modules/es7.weak-map.from');\nrequire('./modules/es7.weak-set.from');\nrequire('./modules/es7.global');\nrequire('./modules/es7.system.global');\nrequire('./modules/es7.error.is-error');\nrequire('./modules/es7.math.clamp');\nrequire('./modules/es7.math.deg-per-rad');\nrequire('./modules/es7.math.degrees');\nrequire('./modules/es7.math.fscale');\nrequire('./modules/es7.math.iaddh');\nrequire('./modules/es7.math.isubh');\nrequire('./modules/es7.math.imulh');\nrequire('./modules/es7.math.rad-per-deg');\nrequire('./modules/es7.math.radians');\nrequire('./modules/es7.math.scale');\nrequire('./modules/es7.math.umulh');\nrequire('./modules/es7.math.signbit');\nrequire('./modules/es7.promise.finally');\nrequire('./modules/es7.promise.try');\nrequire('./modules/es7.reflect.define-metadata');\nrequire('./modules/es7.reflect.delete-metadata');\nrequire('./modules/es7.reflect.get-metadata');\nrequire('./modules/es7.reflect.get-metadata-keys');\nrequire('./modules/es7.reflect.get-own-metadata');\nrequire('./modules/es7.reflect.get-own-metadata-keys');\nrequire('./modules/es7.reflect.has-metadata');\nrequire('./modules/es7.reflect.has-own-metadata');\nrequire('./modules/es7.reflect.metadata');\nrequire('./modules/es7.asap');\nrequire('./modules/es7.observable');\nrequire('./modules/web.timers');\nrequire('./modules/web.immediate');\nrequire('./modules/web.dom.iterable');\nmodule.exports = require('./modules/_core');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/shim.js\n// module id = 344\n// module chunks = 302","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.symbol.js\n// module id = 345\n// module chunks = 302","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_enum-keys.js\n// module id = 346\n// module chunks = 302","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.create.js\n// module id = 347\n// module chunks = 302","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.define-property.js\n// module id = 348\n// module chunks = 302","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.define-properties.js\n// module id = 349\n// module chunks = 302","// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = require('./_to-iobject');\nvar $getOwnPropertyDescriptor = require('./_object-gopd').f;\n\nrequire('./_object-sap')('getOwnPropertyDescriptor', function () {\n  return function getOwnPropertyDescriptor(it, key) {\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-own-property-descriptor.js\n// module id = 350\n// module chunks = 302","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-prototype-of.js\n// module id = 351\n// module chunks = 302","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.keys.js\n// module id = 352\n// module chunks = 302","// 19.1.2.7 Object.getOwnPropertyNames(O)\nrequire('./_object-sap')('getOwnPropertyNames', function () {\n  return require('./_object-gopn-ext').f;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.get-own-property-names.js\n// module id = 353\n// module chunks = 302","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.freeze.js\n// module id = 354\n// module chunks = 302","// 19.1.2.17 Object.seal(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('seal', function ($seal) {\n  return function seal(it) {\n    return $seal && isObject(it) ? $seal(meta(it)) : it;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.seal.js\n// module id = 355\n// module chunks = 302","// 19.1.2.15 Object.preventExtensions(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('preventExtensions', function ($preventExtensions) {\n  return function preventExtensions(it) {\n    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.prevent-extensions.js\n// module id = 356\n// module chunks = 302","// 19.1.2.12 Object.isFrozen(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isFrozen', function ($isFrozen) {\n  return function isFrozen(it) {\n    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-frozen.js\n// module id = 357\n// module chunks = 302","// 19.1.2.13 Object.isSealed(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isSealed', function ($isSealed) {\n  return function isSealed(it) {\n    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-sealed.js\n// module id = 358\n// module chunks = 302","// 19.1.2.11 Object.isExtensible(O)\nvar isObject = require('./_is-object');\n\nrequire('./_object-sap')('isExtensible', function ($isExtensible) {\n  return function isExtensible(it) {\n    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is-extensible.js\n// module id = 359\n// module chunks = 302","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.assign.js\n// module id = 360\n// module chunks = 302","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.is.js\n// module id = 361\n// module chunks = 302","// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_same-value.js\n// module id = 362\n// module chunks = 302","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.set-prototype-of.js\n// module id = 363\n// module chunks = 302","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.object.to-string.js\n// module id = 364\n// module chunks = 302","// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)\nvar $export = require('./_export');\n\n$export($export.P, 'Function', { bind: require('./_bind') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.bind.js\n// module id = 365\n// module chunks = 302","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.name.js\n// module id = 366\n// module chunks = 302","'use strict';\nvar isObject = require('./_is-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar HAS_INSTANCE = require('./_wks')('hasInstance');\nvar FunctionProto = Function.prototype;\n// 19.2.3.6 Function.prototype[@@hasInstance](V)\nif (!(HAS_INSTANCE in FunctionProto)) require('./_object-dp').f(FunctionProto, HAS_INSTANCE, { value: function (O) {\n  if (typeof this != 'function' || !isObject(O)) return false;\n  if (!isObject(this.prototype)) return O instanceof this;\n  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;\n  return false;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.function.has-instance.js\n// module id = 367\n// module chunks = 302","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.parse-int.js\n// module id = 368\n// module chunks = 302","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.parse-float.js\n// module id = 369\n// module chunks = 302","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.constructor.js\n// module id = 370\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toInteger = require('./_to-integer');\nvar aNumberValue = require('./_a-number-value');\nvar repeat = require('./_string-repeat');\nvar $toFixed = 1.0.toFixed;\nvar floor = Math.floor;\nvar data = [0, 0, 0, 0, 0, 0];\nvar ERROR = 'Number.toFixed: incorrect invocation!';\nvar ZERO = '0';\n\nvar multiply = function (n, c) {\n  var i = -1;\n  var c2 = c;\n  while (++i < 6) {\n    c2 += n * data[i];\n    data[i] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\nvar divide = function (n) {\n  var i = 6;\n  var c = 0;\n  while (--i >= 0) {\n    c += data[i];\n    data[i] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\nvar numToString = function () {\n  var i = 6;\n  var s = '';\n  while (--i >= 0) {\n    if (s !== '' || i === 0 || data[i] !== 0) {\n      var t = String(data[i]);\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\n    }\n  } return s;\n};\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\n$export($export.P + $export.F * (!!$toFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !require('./_fails')(function () {\n  // V8 ~ Android 4.3-\n  $toFixed.call({});\n})), 'Number', {\n  toFixed: function toFixed(fractionDigits) {\n    var x = aNumberValue(this, ERROR);\n    var f = toInteger(fractionDigits);\n    var s = '';\n    var m = ZERO;\n    var e, z, j, k;\n    if (f < 0 || f > 20) throw RangeError(ERROR);\n    // eslint-disable-next-line no-self-compare\n    if (x != x) return 'NaN';\n    if (x <= -1e21 || x >= 1e21) return String(x);\n    if (x < 0) {\n      s = '-';\n      x = -x;\n    }\n    if (x > 1e-21) {\n      e = log(x * pow(2, 69, 1)) - 69;\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = f;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        m = numToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        m = numToString() + repeat.call(ZERO, f);\n      }\n    }\n    if (f > 0) {\n      k = m.length;\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\n    } else {\n      m = s + m;\n    } return m;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.to-fixed.js\n// module id = 371\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $fails = require('./_fails');\nvar aNumberValue = require('./_a-number-value');\nvar $toPrecision = 1.0.toPrecision;\n\n$export($export.P + $export.F * ($fails(function () {\n  // IE7-\n  return $toPrecision.call(1, undefined) !== '1';\n}) || !$fails(function () {\n  // V8 ~ Android 4.3-\n  $toPrecision.call({});\n})), 'Number', {\n  toPrecision: function toPrecision(precision) {\n    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');\n    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.to-precision.js\n// module id = 372\n// module chunks = 302","// 20.1.2.1 Number.EPSILON\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.epsilon.js\n// module id = 373\n// module chunks = 302","// 20.1.2.2 Number.isFinite(number)\nvar $export = require('./_export');\nvar _isFinite = require('./_global').isFinite;\n\n$export($export.S, 'Number', {\n  isFinite: function isFinite(it) {\n    return typeof it == 'number' && _isFinite(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-finite.js\n// module id = 374\n// module chunks = 302","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-integer.js\n// module id = 375\n// module chunks = 302","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-nan.js\n// module id = 376\n// module chunks = 302","// 20.1.2.5 Number.isSafeInteger(number)\nvar $export = require('./_export');\nvar isInteger = require('./_is-integer');\nvar abs = Math.abs;\n\n$export($export.S, 'Number', {\n  isSafeInteger: function isSafeInteger(number) {\n    return isInteger(number) && abs(number) <= 0x1fffffffffffff;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.is-safe-integer.js\n// module id = 377\n// module chunks = 302","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.max-safe-integer.js\n// module id = 378\n// module chunks = 302","// 20.1.2.10 Number.MIN_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.min-safe-integer.js\n// module id = 379\n// module chunks = 302","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 20.1.2.12 Number.parseFloat(string)\n$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.parse-float.js\n// module id = 380\n// module chunks = 302","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 20.1.2.13 Number.parseInt(string, radix)\n$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.number.parse-int.js\n// module id = 381\n// module chunks = 302","// 20.2.2.3 Math.acosh(x)\nvar $export = require('./_export');\nvar log1p = require('./_math-log1p');\nvar sqrt = Math.sqrt;\nvar $acosh = Math.acosh;\n\n$export($export.S + $export.F * !($acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  && Math.floor($acosh(Number.MAX_VALUE)) == 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  && $acosh(Infinity) == Infinity\n), 'Math', {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? Math.log(x) + Math.LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.acosh.js\n// module id = 382\n// module chunks = 302","// 20.2.2.5 Math.asinh(x)\nvar $export = require('./_export');\nvar $asinh = Math.asinh;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));\n}\n\n// Tor Browser bug: Math.asinh(0) -> -0\n$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.asinh.js\n// module id = 383\n// module chunks = 302","// 20.2.2.7 Math.atanh(x)\nvar $export = require('./_export');\nvar $atanh = Math.atanh;\n\n// Tor Browser bug: Math.atanh(-0) -> 0\n$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.atanh.js\n// module id = 384\n// module chunks = 302","// 20.2.2.9 Math.cbrt(x)\nvar $export = require('./_export');\nvar sign = require('./_math-sign');\n\n$export($export.S, 'Math', {\n  cbrt: function cbrt(x) {\n    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.cbrt.js\n// module id = 385\n// module chunks = 302","// 20.2.2.11 Math.clz32(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clz32: function clz32(x) {\n    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.clz32.js\n// module id = 386\n// module chunks = 302","// 20.2.2.12 Math.cosh(x)\nvar $export = require('./_export');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  cosh: function cosh(x) {\n    return (exp(x = +x) + exp(-x)) / 2;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.cosh.js\n// module id = 387\n// module chunks = 302","// 20.2.2.14 Math.expm1(x)\nvar $export = require('./_export');\nvar $expm1 = require('./_math-expm1');\n\n$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.expm1.js\n// module id = 388\n// module chunks = 302","// 20.2.2.16 Math.fround(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { fround: require('./_math-fround') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.fround.js\n// module id = 389\n// module chunks = 302","// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n\n$export($export.S, 'Math', {\n  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.hypot.js\n// module id = 390\n// module chunks = 302","// 20.2.2.18 Math.imul(x, y)\nvar $export = require('./_export');\nvar $imul = Math.imul;\n\n// some WebKit versions fails with big numbers, some has wrong arity\n$export($export.S + $export.F * require('./_fails')(function () {\n  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;\n}), 'Math', {\n  imul: function imul(x, y) {\n    var UINT16 = 0xffff;\n    var xn = +x;\n    var yn = +y;\n    var xl = UINT16 & xn;\n    var yl = UINT16 & yn;\n    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.imul.js\n// module id = 391\n// module chunks = 302","// 20.2.2.21 Math.log10(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log10: function log10(x) {\n    return Math.log(x) * Math.LOG10E;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log10.js\n// module id = 392\n// module chunks = 302","// 20.2.2.20 Math.log1p(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { log1p: require('./_math-log1p') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log1p.js\n// module id = 393\n// module chunks = 302","// 20.2.2.22 Math.log2(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.log2.js\n// module id = 394\n// module chunks = 302","// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.sign.js\n// module id = 395\n// module chunks = 302","// 20.2.2.30 Math.sinh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n// V8 near Chromium 38 has a problem with very small numbers\n$export($export.S + $export.F * require('./_fails')(function () {\n  return !Math.sinh(-2e-17) != -2e-17;\n}), 'Math', {\n  sinh: function sinh(x) {\n    return Math.abs(x = +x) < 1\n      ? (expm1(x) - expm1(-x)) / 2\n      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.sinh.js\n// module id = 396\n// module chunks = 302","// 20.2.2.33 Math.tanh(x)\nvar $export = require('./_export');\nvar expm1 = require('./_math-expm1');\nvar exp = Math.exp;\n\n$export($export.S, 'Math', {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.tanh.js\n// module id = 397\n// module chunks = 302","// 20.2.2.34 Math.trunc(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  trunc: function trunc(it) {\n    return (it > 0 ? Math.floor : Math.ceil)(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.math.trunc.js\n// module id = 398\n// module chunks = 302","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.from-code-point.js\n// module id = 399\n// module chunks = 302","var $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\n\n$export($export.S, 'String', {\n  // 21.1.2.4 String.raw(callSite, ...substitutions)\n  raw: function raw(callSite) {\n    var tpl = toIObject(callSite.raw);\n    var len = toLength(tpl.length);\n    var aLen = arguments.length;\n    var res = [];\n    var i = 0;\n    while (len > i) {\n      res.push(String(tpl[i++]));\n      if (i < aLen) res.push(String(arguments[i]));\n    } return res.join('');\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.raw.js\n// module id = 400\n// module chunks = 302","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.trim.js\n// module id = 401\n// module chunks = 302","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.iterator.js\n// module id = 402\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $at = require('./_string-at')(false);\n$export($export.P, 'String', {\n  // 21.1.3.3 String.prototype.codePointAt(pos)\n  codePointAt: function codePointAt(pos) {\n    return $at(this, pos);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.code-point-at.js\n// module id = 403\n// module chunks = 302","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.ends-with.js\n// module id = 404\n// module chunks = 302","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.includes.js\n// module id = 405\n// module chunks = 302","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.repeat.js\n// module id = 406\n// module chunks = 302","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.starts-with.js\n// module id = 407\n// module chunks = 302","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.anchor.js\n// module id = 408\n// module chunks = 302","'use strict';\n// B.2.3.3 String.prototype.big()\nrequire('./_string-html')('big', function (createHTML) {\n  return function big() {\n    return createHTML(this, 'big', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.big.js\n// module id = 409\n// module chunks = 302","'use strict';\n// B.2.3.4 String.prototype.blink()\nrequire('./_string-html')('blink', function (createHTML) {\n  return function blink() {\n    return createHTML(this, 'blink', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.blink.js\n// module id = 410\n// module chunks = 302","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.bold.js\n// module id = 411\n// module chunks = 302","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fixed.js\n// module id = 412\n// module chunks = 302","'use strict';\n// B.2.3.7 String.prototype.fontcolor(color)\nrequire('./_string-html')('fontcolor', function (createHTML) {\n  return function fontcolor(color) {\n    return createHTML(this, 'font', 'color', color);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fontcolor.js\n// module id = 413\n// module chunks = 302","'use strict';\n// B.2.3.8 String.prototype.fontsize(size)\nrequire('./_string-html')('fontsize', function (createHTML) {\n  return function fontsize(size) {\n    return createHTML(this, 'font', 'size', size);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.fontsize.js\n// module id = 414\n// module chunks = 302","'use strict';\n// B.2.3.9 String.prototype.italics()\nrequire('./_string-html')('italics', function (createHTML) {\n  return function italics() {\n    return createHTML(this, 'i', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.italics.js\n// module id = 415\n// module chunks = 302","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.link.js\n// module id = 416\n// module chunks = 302","'use strict';\n// B.2.3.11 String.prototype.small()\nrequire('./_string-html')('small', function (createHTML) {\n  return function small() {\n    return createHTML(this, 'small', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.small.js\n// module id = 417\n// module chunks = 302","'use strict';\n// B.2.3.12 String.prototype.strike()\nrequire('./_string-html')('strike', function (createHTML) {\n  return function strike() {\n    return createHTML(this, 'strike', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.strike.js\n// module id = 418\n// module chunks = 302","'use strict';\n// B.2.3.13 String.prototype.sub()\nrequire('./_string-html')('sub', function (createHTML) {\n  return function sub() {\n    return createHTML(this, 'sub', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.sub.js\n// module id = 419\n// module chunks = 302","'use strict';\n// B.2.3.14 String.prototype.sup()\nrequire('./_string-html')('sup', function (createHTML) {\n  return function sup() {\n    return createHTML(this, 'sup', '', '');\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.string.sup.js\n// module id = 420\n// module chunks = 302","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.now.js\n// module id = 421\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-json.js\n// module id = 422\n// module chunks = 302","// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar $export = require('./_export');\nvar toISOString = require('./_date-to-iso-string');\n\n// PhantomJS / old WebKit has a broken implementations\n$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {\n  toISOString: toISOString\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-iso-string.js\n// module id = 423\n// module chunks = 302","'use strict';\n// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()\nvar fails = require('./_fails');\nvar getTime = Date.prototype.getTime;\nvar $toISOString = Date.prototype.toISOString;\n\nvar lz = function (num) {\n  return num > 9 ? num : '0' + num;\n};\n\n// PhantomJS / old WebKit has a broken implementations\nmodule.exports = (fails(function () {\n  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';\n}) || !fails(function () {\n  $toISOString.call(new Date(NaN));\n})) ? function toISOString() {\n  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');\n  var d = this;\n  var y = d.getUTCFullYear();\n  var m = d.getUTCMilliseconds();\n  var s = y < 0 ? '-' : y > 9999 ? '+' : '';\n  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +\n    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +\n    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +\n    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';\n} : $toISOString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_date-to-iso-string.js\n// module id = 424\n// module chunks = 302","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-string.js\n// module id = 425\n// module chunks = 302","var TO_PRIMITIVE = require('./_wks')('toPrimitive');\nvar proto = Date.prototype;\n\nif (!(TO_PRIMITIVE in proto)) require('./_hide')(proto, TO_PRIMITIVE, require('./_date-to-primitive'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.date.to-primitive.js\n// module id = 426\n// module chunks = 302","'use strict';\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\nvar NUMBER = 'number';\n\nmodule.exports = function (hint) {\n  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');\n  return toPrimitive(anObject(this), hint != NUMBER);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_date-to-primitive.js\n// module id = 427\n// module chunks = 302","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.is-array.js\n// module id = 428\n// module chunks = 302","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.from.js\n// module id = 429\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar createProperty = require('./_create-property');\n\n// WebKit Array.of isn't generic\n$export($export.S + $export.F * require('./_fails')(function () {\n  function F() { /* empty */ }\n  return !(Array.of.call(F) instanceof F);\n}), 'Array', {\n  // 22.1.2.3 Array.of( ...items)\n  of: function of(/* ...args */) {\n    var index = 0;\n    var aLen = arguments.length;\n    var result = new (typeof this == 'function' ? this : Array)(aLen);\n    while (aLen > index) createProperty(result, index, arguments[index++]);\n    result.length = aLen;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.of.js\n// module id = 430\n// module chunks = 302","'use strict';\n// 22.1.3.13 Array.prototype.join(separator)\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar arrayJoin = [].join;\n\n// fallback for not array-like strings\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\n  join: function join(separator) {\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.join.js\n// module id = 431\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar html = require('./_html');\nvar cof = require('./_cof');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar arraySlice = [].slice;\n\n// fallback for not array-like ES3 strings and DOM objects\n$export($export.P + $export.F * require('./_fails')(function () {\n  if (html) arraySlice.call(html);\n}), 'Array', {\n  slice: function slice(begin, end) {\n    var len = toLength(this.length);\n    var klass = cof(this);\n    end = end === undefined ? len : end;\n    if (klass == 'Array') return arraySlice.call(this, begin, end);\n    var start = toAbsoluteIndex(begin, len);\n    var upTo = toAbsoluteIndex(end, len);\n    var size = toLength(upTo - start);\n    var cloned = new Array(size);\n    var i = 0;\n    for (; i < size; i++) cloned[i] = klass == 'String'\n      ? this.charAt(start + i)\n      : this[start + i];\n    return cloned;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.slice.js\n// module id = 432\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.sort.js\n// module id = 433\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $forEach = require('./_array-methods')(0);\nvar STRICT = require('./_strict-method')([].forEach, true);\n\n$export($export.P + $export.F * !STRICT, 'Array', {\n  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])\n  forEach: function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.for-each.js\n// module id = 434\n// module chunks = 302","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/_array-species-constructor.js\n// module id = 435\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $map = require('./_array-methods')(1);\n\n$export($export.P + $export.F * !require('./_strict-method')([].map, true), 'Array', {\n  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.map.js\n// module id = 436\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $filter = require('./_array-methods')(2);\n\n$export($export.P + $export.F * !require('./_strict-method')([].filter, true), 'Array', {\n  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.filter.js\n// module id = 437\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $some = require('./_array-methods')(3);\n\n$export($export.P + $export.F * !require('./_strict-method')([].some, true), 'Array', {\n  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.some.js\n// module id = 438\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $every = require('./_array-methods')(4);\n\n$export($export.P + $export.F * !require('./_strict-method')([].every, true), 'Array', {\n  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.every.js\n// module id = 439\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduce, true), 'Array', {\n  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], false);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.reduce.js\n// module id = 440\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $reduce = require('./_array-reduce');\n\n$export($export.P + $export.F * !require('./_strict-method')([].reduceRight, true), 'Array', {\n  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])\n  reduceRight: function reduceRight(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments[1], true);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.reduce-right.js\n// module id = 441\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $indexOf = require('./_array-includes')(false);\nvar $native = [].indexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? $native.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments[1]);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.index-of.js\n// module id = 442\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toIObject = require('./_to-iobject');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar $native = [].lastIndexOf;\nvar NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n    // convert -0 to +0\n    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;\n    var O = toIObject(this);\n    var length = toLength(O.length);\n    var index = length - 1;\n    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));\n    if (index < 0) index = length + index;\n    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;\n    return -1;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.last-index-of.js\n// module id = 443\n// module chunks = 302","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { copyWithin: require('./_array-copy-within') });\n\nrequire('./_add-to-unscopables')('copyWithin');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.copy-within.js\n// module id = 444\n// module chunks = 302","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.fill.js\n// module id = 445\n// module chunks = 302","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.find.js\n// module id = 446\n// module chunks = 302","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.find-index.js\n// module id = 447\n// module chunks = 302","require('./_set-species')('Array');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.array.species.js\n// module id = 448\n// module chunks = 302","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.constructor.js\n// module id = 449\n// module chunks = 302","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.to-string.js\n// module id = 450\n// module chunks = 302","// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match) {\n  // 21.1.3.11 String.prototype.match(regexp)\n  return [function match(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[MATCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n  }, $match];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.match.js\n// module id = 451\n// module chunks = 302","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue) {\n    'use strict';\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.replace.js\n// module id = 452\n// module chunks = 302","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.search.js\n// module id = 453\n// module chunks = 302","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.regexp.split.js\n// module id = 454\n// module chunks = 302","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.promise.js\n// module id = 455\n// module chunks = 302","'use strict';\nvar weak = require('./_collection-weak');\nvar validate = require('./_validate-collection');\nvar WEAK_SET = 'WeakSet';\n\n// 23.4 WeakSet Objects\nrequire('./_collection')(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.weak-set.js\n// module id = 456\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar $typed = require('./_typed');\nvar buffer = require('./_typed-buffer');\nvar anObject = require('./_an-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nvar isObject = require('./_is-object');\nvar ArrayBuffer = require('./_global').ArrayBuffer;\nvar speciesConstructor = require('./_species-constructor');\nvar $ArrayBuffer = buffer.ArrayBuffer;\nvar $DataView = buffer.DataView;\nvar $isView = $typed.ABV && ArrayBuffer.isView;\nvar $slice = $ArrayBuffer.prototype.slice;\nvar VIEW = $typed.VIEW;\nvar ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it) {\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function () {\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end) {\n    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix\n    var len = anObject(this).byteLength;\n    var first = toAbsoluteIndex(start, len);\n    var final = toAbsoluteIndex(end === undefined ? len : end, len);\n    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first));\n    var viewS = new $DataView(this);\n    var viewT = new $DataView(result);\n    var index = 0;\n    while (first < final) {\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.array-buffer.js\n// module id = 457\n// module chunks = 302","var $export = require('./_export');\n$export($export.G + $export.W + $export.F * !require('./_typed').ABV, {\n  DataView: require('./_typed-buffer').DataView\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.data-view.js\n// module id = 458\n// module chunks = 302","require('./_typed-array')('Int8', 1, function (init) {\n  return function Int8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int8-array.js\n// module id = 459\n// module chunks = 302","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint8-array.js\n// module id = 460\n// module chunks = 302","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint8-clamped-array.js\n// module id = 461\n// module chunks = 302","require('./_typed-array')('Int16', 2, function (init) {\n  return function Int16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int16-array.js\n// module id = 462\n// module chunks = 302","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint16-array.js\n// module id = 463\n// module chunks = 302","require('./_typed-array')('Int32', 4, function (init) {\n  return function Int32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.int32-array.js\n// module id = 464\n// module chunks = 302","require('./_typed-array')('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.uint32-array.js\n// module id = 465\n// module chunks = 302","require('./_typed-array')('Float32', 4, function (init) {\n  return function Float32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.float32-array.js\n// module id = 466\n// module chunks = 302","require('./_typed-array')('Float64', 8, function (init) {\n  return function Float64Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.typed.float64-array.js\n// module id = 467\n// module chunks = 302","// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar rApply = (require('./_global').Reflect || {}).apply;\nvar fApply = Function.apply;\n// MS Edge argumentsList argument is optional\n$export($export.S + $export.F * !require('./_fails')(function () {\n  rApply(function () { /* empty */ });\n}), 'Reflect', {\n  apply: function apply(target, thisArgument, argumentsList) {\n    var T = aFunction(target);\n    var L = anObject(argumentsList);\n    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.apply.js\n// module id = 468\n// module chunks = 302","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.construct.js\n// module id = 469\n// module chunks = 302","// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)\nvar dP = require('./_object-dp');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar toPrimitive = require('./_to-primitive');\n\n// MS Edge has broken Reflect.defineProperty - throwing instead of returning false\n$export($export.S + $export.F * require('./_fails')(function () {\n  // eslint-disable-next-line no-undef\n  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });\n}), 'Reflect', {\n  defineProperty: function defineProperty(target, propertyKey, attributes) {\n    anObject(target);\n    propertyKey = toPrimitive(propertyKey, true);\n    anObject(attributes);\n    try {\n      dP.f(target, propertyKey, attributes);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.define-property.js\n// module id = 470\n// module chunks = 302","// 26.1.4 Reflect.deleteProperty(target, propertyKey)\nvar $export = require('./_export');\nvar gOPD = require('./_object-gopd').f;\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  deleteProperty: function deleteProperty(target, propertyKey) {\n    var desc = gOPD(anObject(target), propertyKey);\n    return desc && !desc.configurable ? false : delete target[propertyKey];\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.delete-property.js\n// module id = 471\n// module chunks = 302","'use strict';\n// 26.1.5 Reflect.enumerate(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar Enumerate = function (iterated) {\n  this._t = anObject(iterated); // target\n  this._i = 0;                  // next index\n  var keys = this._k = [];      // keys\n  var key;\n  for (key in iterated) keys.push(key);\n};\nrequire('./_iter-create')(Enumerate, 'Object', function () {\n  var that = this;\n  var keys = that._k;\n  var key;\n  do {\n    if (that._i >= keys.length) return { value: undefined, done: true };\n  } while (!((key = keys[that._i++]) in that._t));\n  return { value: key, done: false };\n});\n\n$export($export.S, 'Reflect', {\n  enumerate: function enumerate(target) {\n    return new Enumerate(target);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.enumerate.js\n// module id = 472\n// module chunks = 302","// 26.1.6 Reflect.get(target, propertyKey [, receiver])\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\n\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var desc, proto;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')\n    ? desc.value\n    : desc.get !== undefined\n      ? desc.get.call(receiver)\n      : undefined;\n  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);\n}\n\n$export($export.S, 'Reflect', { get: get });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get.js\n// module id = 473\n// module chunks = 302","// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)\nvar gOPD = require('./_object-gopd');\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n    return gOPD.f(anObject(target), propertyKey);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js\n// module id = 474\n// module chunks = 302","// 26.1.8 Reflect.getPrototypeOf(target)\nvar $export = require('./_export');\nvar getProto = require('./_object-gpo');\nvar anObject = require('./_an-object');\n\n$export($export.S, 'Reflect', {\n  getPrototypeOf: function getPrototypeOf(target) {\n    return getProto(anObject(target));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.get-prototype-of.js\n// module id = 475\n// module chunks = 302","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.has.js\n// module id = 476\n// module chunks = 302","// 26.1.10 Reflect.isExtensible(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $isExtensible = Object.isExtensible;\n\n$export($export.S, 'Reflect', {\n  isExtensible: function isExtensible(target) {\n    anObject(target);\n    return $isExtensible ? $isExtensible(target) : true;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.is-extensible.js\n// module id = 477\n// module chunks = 302","// 26.1.11 Reflect.ownKeys(target)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', { ownKeys: require('./_own-keys') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.own-keys.js\n// module id = 478\n// module chunks = 302","// 26.1.12 Reflect.preventExtensions(target)\nvar $export = require('./_export');\nvar anObject = require('./_an-object');\nvar $preventExtensions = Object.preventExtensions;\n\n$export($export.S, 'Reflect', {\n  preventExtensions: function preventExtensions(target) {\n    anObject(target);\n    try {\n      if ($preventExtensions) $preventExtensions(target);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.prevent-extensions.js\n// module id = 479\n// module chunks = 302","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.set.js\n// module id = 480\n// module chunks = 302","// 26.1.14 Reflect.setPrototypeOf(target, proto)\nvar $export = require('./_export');\nvar setProto = require('./_set-proto');\n\nif (setProto) $export($export.S, 'Reflect', {\n  setPrototypeOf: function setPrototypeOf(target, proto) {\n    setProto.check(target, proto);\n    try {\n      setProto.set(target, proto);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es6.reflect.set-prototype-of.js\n// module id = 481\n// module chunks = 302","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.includes.js\n// module id = 482\n// module chunks = 302","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar aFunction = require('./_a-function');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen, A;\n    aFunction(callbackfn);\n    sourceLen = toLength(O.length);\n    A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatMap');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.flat-map.js\n// module id = 483\n// module chunks = 302","'use strict';\n// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatten\nvar $export = require('./_export');\nvar flattenIntoArray = require('./_flatten-into-array');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar arraySpeciesCreate = require('./_array-species-create');\n\n$export($export.P, 'Array', {\n  flatten: function flatten(/* depthArg = 1 */) {\n    var depthArg = arguments[0];\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n\nrequire('./_add-to-unscopables')('flatten');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.array.flatten.js\n// module id = 484\n// module chunks = 302","'use strict';\n// https://github.com/mathiasbynens/String.prototype.at\nvar $export = require('./_export');\nvar $at = require('./_string-at')(true);\n\n$export($export.P, 'String', {\n  at: function at(pos) {\n    return $at(this, pos);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.at.js\n// module id = 485\n// module chunks = 302","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.pad-start.js\n// module id = 486\n// module chunks = 302","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\n$export($export.P + $export.F * /Version\\/10\\.\\d+(\\.\\d+)? Safari\\//.test(userAgent), 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.pad-end.js\n// module id = 487\n// module chunks = 302","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimLeft', function ($trim) {\n  return function trimLeft() {\n    return $trim(this, 1);\n  };\n}, 'trimStart');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.trim-left.js\n// module id = 488\n// module chunks = 302","'use strict';\n// https://github.com/sebmarkbage/ecmascript-string-left-right-trim\nrequire('./_string-trim')('trimRight', function ($trim) {\n  return function trimRight() {\n    return $trim(this, 2);\n  };\n}, 'trimEnd');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.trim-right.js\n// module id = 489\n// module chunks = 302","'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar toLength = require('./_to-length');\nvar isRegExp = require('./_is-regexp');\nvar getFlags = require('./_flags');\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n  return { value: match, done: match === null };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.string.match-all.js\n// module id = 490\n// module chunks = 302","require('./_wks-define')('asyncIterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.symbol.async-iterator.js\n// module id = 491\n// module chunks = 302","require('./_wks-define')('observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.symbol.observable.js\n// module id = 492\n// module chunks = 302","// https://github.com/tc39/proposal-object-getownpropertydescriptors\nvar $export = require('./_export');\nvar ownKeys = require('./_own-keys');\nvar toIObject = require('./_to-iobject');\nvar gOPD = require('./_object-gopd');\nvar createProperty = require('./_create-property');\n\n$export($export.S, 'Object', {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIObject(object);\n    var getDesc = gOPD.f;\n    var keys = ownKeys(O);\n    var result = {};\n    var i = 0;\n    var key, desc;\n    while (keys.length > i) {\n      desc = getDesc(O, key = keys[i++]);\n      if (desc !== undefined) createProperty(result, key, desc);\n    }\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.get-own-property-descriptors.js\n// module id = 493\n// module chunks = 302","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.values.js\n// module id = 494\n// module chunks = 302","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.entries.js\n// module id = 495\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar aFunction = require('./_a-function');\nvar $defineProperty = require('./_object-dp');\n\n// B.2.2.2 Object.prototype.__defineGetter__(P, getter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineGetter__: function __defineGetter__(P, getter) {\n    $defineProperty.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.define-getter.js\n// module id = 496\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar aFunction = require('./_a-function');\nvar $defineProperty = require('./_object-dp');\n\n// B.2.2.3 Object.prototype.__defineSetter__(P, setter)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __defineSetter__: function __defineSetter__(P, setter) {\n    $defineProperty.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.define-setter.js\n// module id = 497\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\nvar getPrototypeOf = require('./_object-gpo');\nvar getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.4 Object.prototype.__lookupGetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupGetter__: function __lookupGetter__(P) {\n    var O = toObject(this);\n    var K = toPrimitive(P, true);\n    var D;\n    do {\n      if (D = getOwnPropertyDescriptor(O, K)) return D.get;\n    } while (O = getPrototypeOf(O));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.lookup-getter.js\n// module id = 498\n// module chunks = 302","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\nvar getPrototypeOf = require('./_object-gpo');\nvar getOwnPropertyDescriptor = require('./_object-gopd').f;\n\n// B.2.2.5 Object.prototype.__lookupSetter__(P)\nrequire('./_descriptors') && $export($export.P + require('./_object-forced-pam'), 'Object', {\n  __lookupSetter__: function __lookupSetter__(P) {\n    var O = toObject(this);\n    var K = toPrimitive(P, true);\n    var D;\n    do {\n      if (D = getOwnPropertyDescriptor(O, K)) return D.set;\n    } while (O = getPrototypeOf(O));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.object.lookup-setter.js\n// module id = 499\n// module chunks = 302","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.to-json.js\n// module id = 500\n// module chunks = 302","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.to-json.js\n// module id = 501\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.of.js\n// module id = 502\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.of.js\n// module id = 503\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of\nrequire('./_set-collection-of')('WeakMap');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-map.of.js\n// module id = 504\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of\nrequire('./_set-collection-of')('WeakSet');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-set.of.js\n// module id = 505\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.map.from.js\n// module id = 506\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.set.from.js\n// module id = 507\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from\nrequire('./_set-collection-from')('WeakMap');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-map.from.js\n// module id = 508\n// module chunks = 302","// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from\nrequire('./_set-collection-from')('WeakSet');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.weak-set.from.js\n// module id = 509\n// module chunks = 302","// https://github.com/tc39/proposal-global\nvar $export = require('./_export');\n\n$export($export.G, { global: require('./_global') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.global.js\n// module id = 510\n// module chunks = 302","// https://github.com/tc39/proposal-global\nvar $export = require('./_export');\n\n$export($export.S, 'System', { global: require('./_global') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.system.global.js\n// module id = 511\n// module chunks = 302","// https://github.com/ljharb/proposal-is-error\nvar $export = require('./_export');\nvar cof = require('./_cof');\n\n$export($export.S, 'Error', {\n  isError: function isError(it) {\n    return cof(it) === 'Error';\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.error.is-error.js\n// module id = 512\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  clamp: function clamp(x, lower, upper) {\n    return Math.min(upper, Math.max(lower, x));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.clamp.js\n// module id = 513\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { DEG_PER_RAD: Math.PI / 180 });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.deg-per-rad.js\n// module id = 514\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\nvar RAD_PER_DEG = 180 / Math.PI;\n\n$export($export.S, 'Math', {\n  degrees: function degrees(radians) {\n    return radians * RAD_PER_DEG;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.degrees.js\n// module id = 515\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\nvar scale = require('./_math-scale');\nvar fround = require('./_math-fround');\n\n$export($export.S, 'Math', {\n  fscale: function fscale(x, inLow, inHigh, outLow, outHigh) {\n    return fround(scale(x, inLow, inHigh, outLow, outHigh));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.fscale.js\n// module id = 516\n// module chunks = 302","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  iaddh: function iaddh(x0, x1, y0, y1) {\n    var $x0 = x0 >>> 0;\n    var $x1 = x1 >>> 0;\n    var $y0 = y0 >>> 0;\n    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.iaddh.js\n// module id = 517\n// module chunks = 302","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  isubh: function isubh(x0, x1, y0, y1) {\n    var $x0 = x0 >>> 0;\n    var $x1 = x1 >>> 0;\n    var $y0 = y0 >>> 0;\n    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.isubh.js\n// module id = 518\n// module chunks = 302","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  imulh: function imulh(u, v) {\n    var UINT16 = 0xffff;\n    var $u = +u;\n    var $v = +v;\n    var u0 = $u & UINT16;\n    var v0 = $v & UINT16;\n    var u1 = $u >> 16;\n    var v1 = $v >> 16;\n    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.imulh.js\n// module id = 519\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { RAD_PER_DEG: 180 / Math.PI });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.rad-per-deg.js\n// module id = 520\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\nvar DEG_PER_RAD = Math.PI / 180;\n\n$export($export.S, 'Math', {\n  radians: function radians(degrees) {\n    return degrees * DEG_PER_RAD;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.radians.js\n// module id = 521\n// module chunks = 302","// https://rwaldron.github.io/proposal-math-extensions/\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { scale: require('./_math-scale') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.scale.js\n// module id = 522\n// module chunks = 302","// https://gist.github.com/BrendanEich/4294d5c212a6d2254703\nvar $export = require('./_export');\n\n$export($export.S, 'Math', {\n  umulh: function umulh(u, v) {\n    var UINT16 = 0xffff;\n    var $u = +u;\n    var $v = +v;\n    var u0 = $u & UINT16;\n    var v0 = $v & UINT16;\n    var u1 = $u >>> 16;\n    var v1 = $v >>> 16;\n    var t = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);\n    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.umulh.js\n// module id = 523\n// module chunks = 302","// http://jfbastien.github.io/papers/Math.signbit.html\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { signbit: function signbit(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) != x ? x : x == 0 ? 1 / x == Infinity : x > 0;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.math.signbit.js\n// module id = 524\n// module chunks = 302","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.promise.finally.js\n// module id = 525\n// module chunks = 302","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.promise.try.js\n// module id = 526\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar toMetaKey = metadata.key;\nvar ordinaryDefineOwnMetadata = metadata.set;\n\nmetadata.exp({ defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey) {\n  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.define-metadata.js\n// module id = 527\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar toMetaKey = metadata.key;\nvar getOrCreateMetadataMap = metadata.map;\nvar store = metadata.store;\n\nmetadata.exp({ deleteMetadata: function deleteMetadata(metadataKey, target /* , targetKey */) {\n  var targetKey = arguments.length < 3 ? undefined : toMetaKey(arguments[2]);\n  var metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);\n  if (metadataMap === undefined || !metadataMap['delete'](metadataKey)) return false;\n  if (metadataMap.size) return true;\n  var targetMetadata = store.get(target);\n  targetMetadata['delete'](targetKey);\n  return !!targetMetadata.size || store['delete'](target);\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.delete-metadata.js\n// module id = 528\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar ordinaryHasOwnMetadata = metadata.has;\nvar ordinaryGetOwnMetadata = metadata.get;\nvar toMetaKey = metadata.key;\n\nvar ordinaryGetMetadata = function (MetadataKey, O, P) {\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) return ordinaryGetOwnMetadata(MetadataKey, O, P);\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;\n};\n\nmetadata.exp({ getMetadata: function getMetadata(metadataKey, target /* , targetKey */) {\n  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-metadata.js\n// module id = 529\n// module chunks = 302","var Set = require('./es6.set');\nvar from = require('./_array-from-iterable');\nvar metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar ordinaryOwnMetadataKeys = metadata.keys;\nvar toMetaKey = metadata.key;\n\nvar ordinaryMetadataKeys = function (O, P) {\n  var oKeys = ordinaryOwnMetadataKeys(O, P);\n  var parent = getPrototypeOf(O);\n  if (parent === null) return oKeys;\n  var pKeys = ordinaryMetadataKeys(parent, P);\n  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;\n};\n\nmetadata.exp({ getMetadataKeys: function getMetadataKeys(target /* , targetKey */) {\n  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-metadata-keys.js\n// module id = 530\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar ordinaryGetOwnMetadata = metadata.get;\nvar toMetaKey = metadata.key;\n\nmetadata.exp({ getOwnMetadata: function getOwnMetadata(metadataKey, target /* , targetKey */) {\n  return ordinaryGetOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-own-metadata.js\n// module id = 531\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar ordinaryOwnMetadataKeys = metadata.keys;\nvar toMetaKey = metadata.key;\n\nmetadata.exp({ getOwnMetadataKeys: function getOwnMetadataKeys(target /* , targetKey */) {\n  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.get-own-metadata-keys.js\n// module id = 532\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar getPrototypeOf = require('./_object-gpo');\nvar ordinaryHasOwnMetadata = metadata.has;\nvar toMetaKey = metadata.key;\n\nvar ordinaryHasMetadata = function (MetadataKey, O, P) {\n  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);\n  if (hasOwn) return true;\n  var parent = getPrototypeOf(O);\n  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;\n};\n\nmetadata.exp({ hasMetadata: function hasMetadata(metadataKey, target /* , targetKey */) {\n  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.has-metadata.js\n// module id = 533\n// module chunks = 302","var metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar ordinaryHasOwnMetadata = metadata.has;\nvar toMetaKey = metadata.key;\n\nmetadata.exp({ hasOwnMetadata: function hasOwnMetadata(metadataKey, target /* , targetKey */) {\n  return ordinaryHasOwnMetadata(metadataKey, anObject(target)\n    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.has-own-metadata.js\n// module id = 534\n// module chunks = 302","var $metadata = require('./_metadata');\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar toMetaKey = $metadata.key;\nvar ordinaryDefineOwnMetadata = $metadata.set;\n\n$metadata.exp({ metadata: function metadata(metadataKey, metadataValue) {\n  return function decorator(target, targetKey) {\n    ordinaryDefineOwnMetadata(\n      metadataKey, metadataValue,\n      (targetKey !== undefined ? anObject : aFunction)(target),\n      toMetaKey(targetKey)\n    );\n  };\n} });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.reflect.metadata.js\n// module id = 535\n// module chunks = 302","// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask\nvar $export = require('./_export');\nvar microtask = require('./_microtask')();\nvar process = require('./_global').process;\nvar isNode = require('./_cof')(process) == 'process';\n\n$export($export.G, {\n  asap: function asap(fn) {\n    var domain = isNode && process.domain;\n    microtask(domain ? domain.bind(fn) : fn);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.asap.js\n// module id = 536\n// module chunks = 302","'use strict';\n// https://github.com/zenparsing/es-observable\nvar $export = require('./_export');\nvar global = require('./_global');\nvar core = require('./_core');\nvar microtask = require('./_microtask')();\nvar OBSERVABLE = require('./_wks')('observable');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar anInstance = require('./_an-instance');\nvar redefineAll = require('./_redefine-all');\nvar hide = require('./_hide');\nvar forOf = require('./_for-of');\nvar RETURN = forOf.RETURN;\n\nvar getMethod = function (fn) {\n  return fn == null ? undefined : aFunction(fn);\n};\n\nvar cleanupSubscription = function (subscription) {\n  var cleanup = subscription._c;\n  if (cleanup) {\n    subscription._c = undefined;\n    cleanup();\n  }\n};\n\nvar subscriptionClosed = function (subscription) {\n  return subscription._o === undefined;\n};\n\nvar closeSubscription = function (subscription) {\n  if (!subscriptionClosed(subscription)) {\n    subscription._o = undefined;\n    cleanupSubscription(subscription);\n  }\n};\n\nvar Subscription = function (observer, subscriber) {\n  anObject(observer);\n  this._c = undefined;\n  this._o = observer;\n  observer = new SubscriptionObserver(this);\n  try {\n    var cleanup = subscriber(observer);\n    var subscription = cleanup;\n    if (cleanup != null) {\n      if (typeof cleanup.unsubscribe === 'function') cleanup = function () { subscription.unsubscribe(); };\n      else aFunction(cleanup);\n      this._c = cleanup;\n    }\n  } catch (e) {\n    observer.error(e);\n    return;\n  } if (subscriptionClosed(this)) cleanupSubscription(this);\n};\n\nSubscription.prototype = redefineAll({}, {\n  unsubscribe: function unsubscribe() { closeSubscription(this); }\n});\n\nvar SubscriptionObserver = function (subscription) {\n  this._s = subscription;\n};\n\nSubscriptionObserver.prototype = redefineAll({}, {\n  next: function next(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      try {\n        var m = getMethod(observer.next);\n        if (m) return m.call(observer, value);\n      } catch (e) {\n        try {\n          closeSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      }\n    }\n  },\n  error: function error(value) {\n    var subscription = this._s;\n    if (subscriptionClosed(subscription)) throw value;\n    var observer = subscription._o;\n    subscription._o = undefined;\n    try {\n      var m = getMethod(observer.error);\n      if (!m) throw value;\n      value = m.call(observer, value);\n    } catch (e) {\n      try {\n        cleanupSubscription(subscription);\n      } finally {\n        throw e;\n      }\n    } cleanupSubscription(subscription);\n    return value;\n  },\n  complete: function complete(value) {\n    var subscription = this._s;\n    if (!subscriptionClosed(subscription)) {\n      var observer = subscription._o;\n      subscription._o = undefined;\n      try {\n        var m = getMethod(observer.complete);\n        value = m ? m.call(observer, value) : undefined;\n      } catch (e) {\n        try {\n          cleanupSubscription(subscription);\n        } finally {\n          throw e;\n        }\n      } cleanupSubscription(subscription);\n      return value;\n    }\n  }\n});\n\nvar $Observable = function Observable(subscriber) {\n  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);\n};\n\nredefineAll($Observable.prototype, {\n  subscribe: function subscribe(observer) {\n    return new Subscription(observer, this._f);\n  },\n  forEach: function forEach(fn) {\n    var that = this;\n    return new (core.Promise || global.Promise)(function (resolve, reject) {\n      aFunction(fn);\n      var subscription = that.subscribe({\n        next: function (value) {\n          try {\n            return fn(value);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  }\n});\n\nredefineAll($Observable, {\n  from: function from(x) {\n    var C = typeof this === 'function' ? this : $Observable;\n    var method = getMethod(anObject(x)[OBSERVABLE]);\n    if (method) {\n      var observable = anObject(method.call(x));\n      return observable.constructor === C ? observable : new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n    return new C(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          try {\n            if (forOf(x, false, function (it) {\n              observer.next(it);\n              if (done) return RETURN;\n            }) === RETURN) return;\n          } catch (e) {\n            if (done) throw e;\n            observer.error(e);\n            return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  },\n  of: function of() {\n    for (var i = 0, l = arguments.length, items = new Array(l); i < l;) items[i] = arguments[i++];\n    return new (typeof this === 'function' ? this : $Observable)(function (observer) {\n      var done = false;\n      microtask(function () {\n        if (!done) {\n          for (var j = 0; j < items.length; ++j) {\n            observer.next(items[j]);\n            if (done) return;\n          } observer.complete();\n        }\n      });\n      return function () { done = true; };\n    });\n  }\n});\n\nhide($Observable.prototype, OBSERVABLE, function () { return this; });\n\n$export($export.G, { Observable: $Observable });\n\nrequire('./_set-species')('Observable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/es7.observable.js\n// module id = 537\n// module chunks = 302","// ie9- setTimeout & setInterval additional parameters fix\nvar global = require('./_global');\nvar $export = require('./_export');\nvar userAgent = require('./_user-agent');\nvar slice = [].slice;\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\nvar wrap = function (set) {\n  return function (fn, time /* , ...args */) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? slice.call(arguments, 2) : false;\n    return set(boundArgs ? function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);\n    } : fn, time);\n  };\n};\n$export($export.G + $export.B + $export.F * MSIE, {\n  setTimeout: wrap(global.setTimeout),\n  setInterval: wrap(global.setInterval)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.timers.js\n// module id = 538\n// module chunks = 302","var $export = require('./_export');\nvar $task = require('./_task');\n$export($export.G + $export.B, {\n  setImmediate: $task.set,\n  clearImmediate: $task.clear\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.immediate.js\n// module id = 539\n// module chunks = 302","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/core-js/modules/web.dom.iterable.js\n// module id = 540\n// module chunks = 302","import * as m from \"../es2015/core\";\nwindow.am4core = m;\n\n// TODO move all of this code into a different module and then import it\nfunction getCurrentScript() {\n\tif (document.currentScript) {\n\t\treturn document.currentScript;\n\n\t// Internet Explorer only\n\t} else {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\treturn scripts[scripts.length - 1];\n\t}\n}\n\nfunction dirpath(x) {\n\treturn /(.*\\/)[^\\/]*$/.exec(x)[1];\n}\n\n__webpack_public_path__ = dirpath(getCurrentScript().src);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./core.js\n// module id = 541\n// module chunks = 302","/**\n * This module houses all core/framework functionality and is required for\n * all charting components to work\n */\n\n/**\n * Elements: core\n */\nexport { System, system } from \"./.internal/core/System\";\nexport { BaseObject, IBaseObjectEvents, BaseObjectEvents } from \"./.internal/core/Base\";\nexport { CalculatedValue, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters, Component } from \"./.internal/core/Component\";\nexport { ContainerLayout, IContainerProperties, IContainerEvents, IContainerAdapters, Container, FontWeight, TextDecoration } from \"./.internal/core/Container\";\nexport { IValues, IDataItemEvents, IDataItemAdapters, DataItem } from \"./.internal/core/DataItem\";\nexport { ISpriteProperties, ISpriteAnimationOptions, ISpriteAdapters, Sprite } from \"./.internal/core/Sprite\";\nexport { SpriteEventDispatcher, SpritePointEvent, SpriteMouseTouchEvent, SpriteShiftEvent, ISpriteEvents } from \"./.internal/core/SpriteEvents\";\nexport { SpriteState } from \"./.internal/core/SpriteState\";\nexport { registry, Registry, IRegistryEvents } from \"./.internal/core/Registry\";\nexport { options, Options } from \"./.internal/core/Options\";\n\n/**\n * Elements: data\n */\nexport { ICSVOptions, CSVParser } from \"./.internal/core/data/CSVParser\";\nexport { IDataLoaderAdapters, DataLoader, dataLoader } from \"./.internal/core/data/DataLoader\";\nexport { IDataParserOptions, DataParser } from \"./.internal/core/data/DataParser\";\nexport { IDataSourceEvents, IDataSourceAdapters, DataSource } from \"./.internal/core/data/DataSource\";\nexport { IJSONOptions, JSONParser } from \"./.internal/core/data/JSONParser\";\n\n/**\n * Elements: defs\n */\nexport { Roles, AriaLive } from \"./.internal/core/defs/Accessibility\";\nexport { Align } from \"./.internal/core/defs/Align\";\nexport { HorizontalCenter } from \"./.internal/core/defs/HorizontalCenter\";\nexport { IGeoPoint } from \"./.internal/core/defs/IGeoPoint\";\nexport { iMinMaxer } from \"./.internal/core/defs/iMinMaxer\";\nexport { IMorphable } from \"./.internal/core/defs/IMorphable\";\nexport { IPoint, IOrientationPoint } from \"./.internal/core/defs/IPoint\";\nexport { IRange } from \"./.internal/core/defs/IRange\";\nexport { IStyleProperty } from \"./.internal/core/defs/IStyleProperty\";\nexport { ITimeInterval } from \"./.internal/core/defs/ITimeInterval\";\nexport { IWavedShape } from \"./.internal/core/defs/IWavedShape\";\nexport { Orientation } from \"./.internal/core/defs/Orientation\";\nexport { ShapeRendering } from \"./.internal/core/defs/ShapeRendering\";\nexport { SVGDefaults } from \"./.internal/core/defs/SVGDefaults\";\nexport { TextAlign } from \"./.internal/core/defs/TextAlign\";\nexport { TextValign } from \"./.internal/core/defs/TextValign\";\nexport { TimeUnit } from \"./.internal/core/defs/TimeUnit\";\nexport { VerticalAlign } from \"./.internal/core/defs/VerticalAlign\";\nexport { VerticalCenter } from \"./.internal/core/defs/VerticalCenter\";\n\n/**\n * Elements: elements\n */\nexport { IButtonProperties, IButtonEvents, IButtonAdapters, Button } from \"./.internal/core/elements/Button\";\nexport { ICircleProperties, ICircleEvents, ICircleAdapters, Circle } from \"./.internal/core/elements/Circle\";\nexport { IEllipseProperties, IEllipseEvents, IEllipseAdapters, Ellipse } from \"./.internal/core/elements/Ellipse\";\nexport { IImageProperties, IImageEvents, IImageAdapters, Image } from \"./.internal/core/elements/Image\";\nexport { ITextLineInfo, ILabelProperties, ILabelEvents, ILabelAdapters, Label } from \"./.internal/core/elements/Label\";\nexport { ILineProperties, ILineEvents, ILineAdapters, Line } from \"./.internal/core/elements/Line\";\nexport { IPopupAdapters, Popup } from \"./.internal/core/elements/Popup\";\nexport { IModalAdapters, Modal } from \"./.internal/core/elements/Modal\";\nexport { IPointedRectangleProperties, IPointedRectangleEvents, IPointedRectangleAdapters, PointedRectangle } from \"./.internal/core/elements/PointedRectangle\";\nexport { IPointedShapeProperties, IPointedShapeEvents, IPointedShapeAdapters, PointedShape } from \"./.internal/core/elements/PointedShape\";\nexport { IPolyarcProperties, IPolyarcEvents, IPolyarcAdapters, Polyarc } from \"./.internal/core/elements/Polyarc\";\nexport { IPolygonProperties, IPolygonEvents, IPolygonAdapters, Polygon } from \"./.internal/core/elements/Polygon\";\nexport { IPolylineProperties, IPolylineEvents, IPolylineAdapters, Polyline } from \"./.internal/core/elements/Polyline\";\nexport { IPolysplineProperties, IPolysplineEvents, IPolysplineAdapters, Polyspline } from \"./.internal/core/elements/Polyspline\";\nexport { IPreloaderProperties, IPreloaderEvents, IPreloaderAdapters, Preloader } from \"./.internal/core/elements/Preloader\";\nexport { IRectangleProperties, IRectangleEvents, IRectangleAdapters, Rectangle } from \"./.internal/core/elements/Rectangle\";\nexport { IResizeButtonProperties, IResizeButtonEvents, IResizeButtonAdapters, ResizeButton } from \"./.internal/core/elements/ResizeButton\";\nexport { IRoundedRectangleProperties, IRoundedRectangleEvents, IRoundedRectangleAdapters, RoundedRectangle } from \"./.internal/core/elements/RoundedRectangle\";\nexport { IScrollbarProperties, IScrollbarEvents, IScrollbarAdapters, Scrollbar } from \"./.internal/core/elements/Scrollbar\";\nexport { ISliderProperties, ISliderEvents, ISliderAdapters, Slider } from \"./.internal/core/elements/Slider\";\nexport { ISliceProperties, ISliceEvents, ISliceAdapters, Slice } from \"./.internal/core/elements/Slice\";\nexport { ITextLinkProperties, ITextLinkEvents, ITextLinkAdapters, TextLink } from \"./.internal/core/elements/TextLink\";\nexport { PointerOrientation, ITooltipProperties, ITooltipEvents, ITooltipAdapters, Tooltip } from \"./.internal/core/elements/Tooltip\";\nexport { ITrapezoidProperties, ITrapezoidEvents, ITrapezoidAdapters, Trapezoid } from \"./.internal/core/elements/Trapezoid\";\nexport { ITriangleProperties, ITriangleEvents, ITriangleAdapters, Triangle } from \"./.internal/core/elements/Triangle\";\nexport { IWavedCircleProperties, IWavedCircleEvents, IWavedCircleAdapters, WavedCircle } from \"./.internal/core/elements/WavedCircle\";\nexport { IWavedLineProperties, IWavedLineEvents, IWavedLineAdapters, WavedLine } from \"./.internal/core/elements/WavedLine\";\nexport { IWavedRectangleProperties, IWavedRectangleEvents, IWavedRectangleAdapters, WavedRectangle } from \"./.internal/core/elements/WavedRectangle\";\nexport { IZoomOutButtonProperties, IZoomOutButtonEvents, IZoomOutButtonAdapters, ZoomOutButton } from \"./.internal/core/elements/ZoomOutButton\";\nexport { IPlayButtonProperties, IPlayButtonEvents, IPlayButtonAdapters, PlayButton } from \"./.internal/core/elements/PlayButton\";\n\n/**\n * Elements: 3d\n */\nexport { IConeProperties, IConeEvents, IConeAdapters, Cone } from \"./.internal/core/elements/3d/Cone\";\nexport { Rectangle3DProperties, Rectangle3DEvents, Rectangle3DAdapters, Rectangle3D } from \"./.internal/core/elements/3d/Rectangle3D\";\nexport { ISlice3DProperties, ISlice3DEvents, ISlice3DAdapters, Slice3D } from \"./.internal/core/elements/3d/Slice3D\";\n\n/**\n * Elements: export\n */\nexport { ExportOperation, imageFormats, IExportImageOptions, IExportSVGOptions, pageSizes, IExportPDFOptions, IExportCSVOptions, IExportJSONOptions, IExportExcelOptions, IExportPrintOptions, IExportRemovedObject, IExportOptions, ExportOptions, IExportEvents, Keys, IExportAdapters, Export } from \"./.internal/core/export/Export\";\nexport { IExportMenuItem, IExportMenuEvents, IExportMenuAdapters, ExportMenu } from \"./.internal/core/export/ExportMenu\";\n\n/**\n * Elements: formatters\n */\nexport { DateFormatInfo, DateFormatter } from \"./.internal/core/formatters/DateFormatter\";\nexport { DurationFormatter } from \"./.internal/core/formatters/DurationFormatter\";\nexport { NumberFormatter } from \"./.internal/core/formatters/NumberFormatter\";\nexport { ITextChunk, ITextFormatterAdapters, TextFormatter, getTextFormatter } from \"./.internal/core/formatters/TextFormatter\";\n\n/**\n * Elements: interaction\n */\nexport { InertiaTypes, Inertia } from \"./.internal/core/interaction/Inertia\";\nexport { IInteractionEvents, Interaction, getInteraction } from \"./.internal/core/interaction/Interaction\";\nexport { InteractionKeyboardObject } from \"./.internal/core/interaction/InteractionKeyboardObject\";\nexport { InteractionObject } from \"./.internal/core/interaction/InteractionObject\";\nexport { PointEvent, PointerEvent, ShiftEvent, AngleEvent, ScaleEvent, CenterEvent, MouseTouchEvent, SimulatedKeyboardEvent, IInteractionObjectEvents, InteractionObjectEventDispatcher } from \"./.internal/core/interaction/InteractionObjectEvents\";\nexport { IInertiaOptions, IHitOptions, ISwipeOptions, ICursorOptions, IKeyboardOptions } from \"./.internal/core/interaction/InteractionOptions\";\nexport { MouseCursorStyle } from \"./.internal/core/interaction/Mouse\";\nexport { IPointer, IBreadcrumb } from \"./.internal/core/interaction/Pointer\";\n\n/**\n * Elements: rendering\n */\nexport { SVGAttribute, ISVGAttribute, AMElement } from \"./.internal/core/rendering/AMElement\";\nexport { Group } from \"./.internal/core/rendering/Group\";\nexport { SVGElementNames, Paper } from \"./.internal/core/rendering/Paper\";\nexport { ISmoothing, Tension, Basis } from \"./.internal/core/rendering/Smoothing\";\nexport { SVGContainer } from \"./.internal/core/rendering/SVGContainer\";\n\n/**\n * Elements: fills\n */\nexport { ColorModifier } from \"./.internal/core/rendering/fills/ColorModifier\";\nexport { IGradientStop, LinearGradient } from \"./.internal/core/rendering/fills/LinearGradient\";\nexport { LinearGradientModifier } from \"./.internal/core/rendering/fills/LinearGradientModifier\";\nexport { RadialGradientModifier } from \"./.internal/core/rendering/fills/RadialGradientModifier\";\nexport { LinePattern } from \"./.internal/core/rendering/fills/LinePattern\";\nexport { PatternUnits, PatternProperties, Pattern } from \"./.internal/core/rendering/fills/Pattern\";\nexport { RadialGradient } from \"./.internal/core/rendering/fills/RadialGradient\";\nexport { RectPatternProperties, RectPattern } from \"./.internal/core/rendering/fills/RectPattern\";\n\n/**\n * Elements: filters\n */\nexport { ColorizeFilterProperties, ColorizeFilter } from \"./.internal/core/rendering/filters/ColorizeFilter\";\nexport { DesaturateFilterProperties, DesaturateFilter } from \"./.internal/core/rendering/filters/DesaturateFilter\";\nexport { DropShadowFilterProperties, DropShadowFilter } from \"./.internal/core/rendering/filters/DropShadowFilter\";\nexport { BlurFilterProperties, BlurFilter } from \"./.internal/core/rendering/filters/BlurFilter\";\nexport { FilterProperties, Filter } from \"./.internal/core/rendering/filters/Filter\";\nexport { FocusFilterProperties, FocusFilter } from \"./.internal/core/rendering/filters/FocusFilter\";\nexport { LightenFilterProperties, LightenFilter } from \"./.internal/core/rendering/filters/LightenFilter\";\n\n/**\n * Elements: responsive\n */\nexport { IResponsiveRule, IResponsiveEvents, IResponsiveAdapters, Responsive } from \"./.internal/core/responsive/Responsive\";\n\n/**\n * Elements: utils\n */\nexport { GlobalAdapter, globalAdapter, Adapter } from \"./.internal/core/utils/Adapter\";\nexport { IAnimationObject, IAnimatable, IAnimationOptions, IPercentAnimationOptions, IColorAnimationOptions, IAnimationEvents, Animation, animate } from \"./.internal/core/utils/Animation\";\nexport { SortResult } from \"./.internal/core/utils/Array\";\nexport { Listener, nextFrame, readFrame, writeFrame, whenIdle, triggerIdle } from \"./.internal/core/utils/AsyncPending\";\nexport { Cache, cache } from \"./.internal/core/utils/Cache\";\nexport { IClone } from \"./.internal/core/utils/Clone\";\nexport { Color, iRGB, iHSL, iHSV, color, isColor, castColor } from \"./.internal/core/utils/Color\";\nexport { IColorSetStepOptions, ColorSet } from \"./.internal/core/utils/ColorSet\";\nexport { IColorPurpose, InterfaceColorSet } from \"./.internal/core/utils/InterfaceColorSet\";\nexport { Constructor } from \"./.internal/core/utils/Constructor\";\nexport { IDictionaryEvents, DictionaryLike, DictionaryDisposer, Dictionary, DictionaryTemplate } from \"./.internal/core/utils/Dictionary\";\nexport { IDisposer, Disposer, MultiDisposer, MutableValueDisposer, CounterDisposer } from \"./.internal/core/utils/Disposer\";\nexport { StyleRule, StyleClass, getElement, addClass, removeClass, blur, focus, outerHTML, isElement, copyAttributes, fixPixelPerfect, ready } from \"./.internal/core/utils/DOM\";\nexport { AMEvent, EventListener, EventDispatcher, TargetedEventDispatcher } from \"./.internal/core/utils/EventDispatcher\";\nexport { Iterator, Iterable, ListIterator, min, max, join } from \"./.internal/core/utils/Iterator\";\nexport { KeyboardKeys, Keyboard, keyboard } from \"./.internal/core/utils/Keyboard\";\nexport { ILanguageEvents, ILanguageAdapters, Language } from \"./.internal/core/utils/Language\";\nexport { IndexedIterable, IListEvents, ListGrouper, ListLike, ListDisposer, List, ListTemplate } from \"./.internal/core/utils/List\";\nexport { Morpher } from \"./.internal/core/utils/Morpher\";\nexport { INetLoadResult } from \"./.internal/core/utils/Net\";\nexport { Ordering, reverse, or } from \"./.internal/core/utils/Order\";\nexport { Percent, percent, isPercent } from \"./.internal/core/utils/Percent\";\nexport { ISortedListEvents, OrderedList, SortedList, OrderedListTemplate, SortedListTemplate } from \"./.internal/core/utils/SortedList\";\nexport { PX, STRING, NUMBER, DATE, DURATION, PLACEHOLDER, PLACEHOLDER2 } from \"./.internal/core/utils/Strings\";\nexport { Public, Optional, isNaN, checkString, checkBoolean, checkNumber, checkObject, castString, castNumber, isString, isNumber, isObject, isArray } from \"./.internal/core/utils/Type\";\nexport { Validatable } from \"./.internal/core/utils/Validatable\";\n\n  /**\n   * Functions: rendering\n   */\nimport * as path from \"./.internal/core/rendering/Path\";\nexport { path }\n\n\n  /**\n   * Functions: utils\n   */\nimport * as colors from \"./.internal/core/utils/Colors\";\nexport { colors }\n\nimport * as ease from \"./.internal/core/utils/Ease\";\nexport { ease }\n\nimport * as math from \"./.internal/core/utils/Math\";\nexport { math }\n\nimport * as number from \"./.internal/core/utils/Number\";\nexport { number }\n\nimport * as object from \"./.internal/core/utils/Object\";\nexport { object }\n\nimport * as string from \"./.internal/core/utils/String\";\nexport { string }\n\nimport * as time from \"./.internal/core/utils/Time\";\nexport { time }\n\nimport * as utils from \"./.internal/core/utils/Utils\";\nexport { utils }\n\nimport * as iter from \"./.internal/core/utils/Iterator\";\nexport { iter }\n\nimport * as type from \"./.internal/core/utils/Type\";\nexport { type }\n\nexport { ITheme } from \"./.internal/themes/ITheme\";\nexport { create, createFromConfig } from \"./.internal/core/utils/Instance\";\nexport { useTheme, unuseTheme, unuseAllThemes } from \"./.internal/core/utils/Instance\";\n\n\n\n// WEBPACK FOOTER //\n// ../../src/core.ts","/**\r\n * Functionality for adding images in SVG tree.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Image]].\r\n */\r\nexport interface IImageProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A URI of the image.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\thref?: string;\r\n\r\n\t/**\r\n\t * Sets image `width` in relation to its `height`.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\twidthRatio?: number;\r\n\r\n\t/**\r\n\t * Sets image `height` in relation to its `width`.\r\n\t * \r\n\t * @type {number}\r\n\t */\r\n\theightRatio?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Image]].\r\n */\r\nexport interface IImageEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Image]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IImageAdapters extends ISpriteAdapters, IImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\r\nexport class Image extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IImageProperties}\r\n\t */\r\n\tpublic _properties!: IImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IImageAdapters}\r\n\t */\r\n\tpublic _adapter!: IImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IImageEvents}\r\n\t */\r\n\tpublic _events!: IImageEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Image\";\r\n\t\tthis.element = this.paper.add(\"image\");\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.width = 50;\r\n\t\tthis.height = 50;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.href) {\r\n\r\n\t\t\tlet width = this.innerWidth;\r\n\t\t\tlet height = this.innerHeight;\r\n\r\n\t\t\tif ($type.isNumber(this.widthRatio)) {\r\n\t\t\t\twidth = height * this.widthRatio;\r\n\t\t\t\tthis.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this.heightRatio)) {\r\n\t\t\t\theight = width * this.heightRatio;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.element.attr({\r\n\t\t\t\t\"width\": width,\r\n\t\t\t\t\"height\": height\r\n\t\t\t});\r\n\t\t\tthis.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An image URI.\r\n\t *\r\n\t * @param {string}  value  Image URI\r\n\t */\r\n\tpublic set href(value: string) {\r\n\t\tthis.setPropertyValue(\"href\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Image URI\r\n\t */\r\n\tpublic get href(): string {\r\n\t\treturn this.getPropertyValue(\"href\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets image `width` relatively to its `height`.\r\n\t *\r\n\t * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n\t * `50`.\r\n\t * \r\n\t * @param {number}  value  Ratio\r\n\t */\r\n\tpublic set widthRatio(value: number) {\r\n\t\tthis.setPropertyValue(\"widthRatio\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Ratio\r\n\t */\r\n\tpublic get widthRatio(): number {\r\n\t\treturn this.getPropertyValue(\"widthRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets image `height` relatively to its `width`.\r\n\t *\r\n\t * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n\t * `50`.\r\n\t * \r\n\t * @param {number}  value  Ratio\r\n\t */\r\n\tpublic set heightRatio(value: number) {\r\n\t\tthis.setPropertyValue(\"heightRatio\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Ratio\r\n\t */\r\n\tpublic get heightRatio(): number {\r\n\t\treturn this.getPropertyValue(\"heightRatio\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IRectangle}\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\treturn {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this.pixelWidth,\r\n\t\t\theight: this.pixelHeight\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Image\"] = Image;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Image.ts","/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {ISliderProperties}\r\n\t */\r\n\tpublic _properties!: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {ISliderAdapters}\r\n\t */\r\n\tpublic _adapter!: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {ISliderEvents}\r\n\t */\r\n\tpublic _events!: ISliderEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.opacity = 0;\r\n\t\tthis.thumb.interactionsEnabled = false;\r\n\t\tthis.endGrip.opacity = 0;\r\n\t\tthis.endGrip.interactionsEnabled = false;\r\n\r\n\t\tthis.startGrip.events.on(\"drag\", () => {\r\n\t\t\tthis.endGrip.x = this.startGrip.x;\r\n\t\t\tthis.endGrip.y = this.startGrip.y;\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tprotected set __end(value: number) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} [description]\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param {number}  position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param {number}  position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/Slider.ts","/**\r\n * Play button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Triangle } from \"./Triangle\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PlayButton]].\r\n */\r\nexport interface IPlayButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[PlayButton]].\r\n */\r\nexport interface IPlayButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PlayButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPlayButtonAdapters extends IButtonAdapters, IPlayButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IPlayButtonEvents} for a list of available events\r\n * @see {@link IPlayButtonAdapters} for a list of available Adapters\r\n */\r\nexport class PlayButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IPlayButtonProperties}\r\n\t */\r\n\tpublic _properties!: IPlayButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IPlayButtonAdapters}\r\n\t */\r\n\tpublic _adapter!: IPlayButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IPlayButtonEvents}\r\n\t */\r\n\tpublic _events!: IPlayButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PlayButton\";\r\n\r\n\t\tthis.padding(12, 12, 12, 12);\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(25, 25, 25, 25);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create a play icon\r\n\t\tlet playIcon: Triangle = new Triangle();\r\n\t\tplayIcon.direction = \"right\";\r\n\t\tplayIcon.width = 9;\r\n\t\tplayIcon.height = 11;\r\n\t\tplayIcon.marginLeft = 1;\r\n\t\tplayIcon.marginRight = 1;\r\n\t\tplayIcon.horizontalCenter = \"middle\";\r\n\t\tplayIcon.verticalCenter = \"middle\";\r\n\r\n\t\tplayIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tplayIcon.fill = playIcon.stroke;\r\n\t\tthis.icon = playIcon;\r\n\r\n\t\t// Create a play icon\r\n\t\tlet stopIcon: RoundedRectangle = new RoundedRectangle();\r\n\t\tstopIcon.width = 11;\r\n\t\tstopIcon.height = 11;\r\n\t\tstopIcon.horizontalCenter = \"middle\";\r\n\t\tstopIcon.verticalCenter = \"middle\";\r\n\t\tstopIcon.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tstopIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tstopIcon.fill = playIcon.stroke;\r\n\r\n\t\tthis.togglable = true;\r\n\r\n\t\tlet activeState = this.states.create(\"active\");\r\n\t\tactiveState.transitionDuration = 0;\r\n\t\tactiveState.properties.icon = stopIcon;\r\n\r\n\t\tthis.defaultState.transitionDuration = 0;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Play\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PlayButton\"] = PlayButton;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/PlayButton.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColorModifier } from \"./ColorModifier\";\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify radial gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class RadialGradientModifier extends GradientModifier {\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t *\r\n\t * @type {RadialGradient}\r\n\t */\r\n\tpublic gradient: RadialGradient;\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadialGradientModifier\";\r\n\t\tthis.gradient = new RadialGradient();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.gradient = source.gradient.clone();\r\n\t}\t\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradientModifier\"] = RadialGradientModifier;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/RadialGradientModifier.ts","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Line pattern.\r\n */\r\nexport class LinePattern extends Pattern {\r\n\r\n\t/**\r\n\t * SVG `<line>` element used for pattern.\r\n\t * \r\n\t * @type {AMElement}\r\n\t */\r\n\tprotected _line: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._line = this.paper.add(\"line\");\r\n\t\tthis.addElement(this._line);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the pattern.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this._line) {\r\n\t\t\tthis._line.attr({ \"x2\": this.width * 2 }); // to solve rotation\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/LinePattern.ts","/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for rectangular pattern\r\n * @type {[type]}\r\n */\r\nexport interface RectPatternProperties extends PatternProperties {\r\n\trectWidth: number;\r\n\trectHeight: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Rectangular pattern\r\n */\r\nexport class RectPattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<rect>` element used in pattern.\r\n\t *\r\n\t * @type {Optional<AMElement>}\r\n\t */\r\n\tprotected _rect: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {RectPatternProperties}\r\n\t */\r\n\tpublic _properties!: RectPatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.rectHeight = 1;\r\n\t\tthis.rectWidth = 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the rectangular element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tif (this._rect) {\r\n\t\t\tthis.removeElement(this._rect);\r\n\t\t}\r\n\r\n\t\tthis._rect = this.paper.add(\"rect\");\r\n\t\tthis._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight });\r\n\t\tthis.addElement(this._rect);\r\n\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle width in pixels.\r\n\t *\r\n\t * @param {number} value Width (px)\r\n\t */\r\n\tpublic set rectWidth(value: number) {\r\n\t\tthis.properties[\"rectWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Width (px)\r\n\t */\r\n\tpublic get rectWidth(): number {\r\n\t\treturn this.properties[\"rectWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle height in pixels.\r\n\t *\r\n\t * @param {number} value Height (px)\r\n\t */\r\n\tpublic set rectHeight(value: number) {\r\n\t\tthis.properties[\"rectHeight\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Height (px)\r\n\t */\r\n\tpublic get rectHeight(): number {\r\n\t\treturn this.properties[\"rectHeight\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/fills/RectPattern.ts","/**\r\n * Module for \"Colorize\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Colorize\" filter.\r\n */\r\nexport interface ColorizeFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tcolor?: Color;\r\n\r\n\t/**\r\n\t * Intensity. (0-1)\r\n\t *\r\n\t * @default 1\r\n\t * @type {number}\r\n\t */\r\n\tintensity: number;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nexport class ColorizeFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {ColorizeFilterProperties}\r\n\t */\r\n\tpublic _properties!: ColorizeFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link ColorizeFilterProperties]\r\n\t * @type {Dictionary<ColorizeFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<ColorizeFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorizeFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\t//this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.intensity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)applies colors to the already existing filter by modifying filyer's\r\n\t * color matrix element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyFilter(): void {\r\n\r\n\t\tlet i: number = this.intensity;\r\n\t\tlet ii = 1 - i;\r\n\r\n\t\tlet r: number;\r\n\t\tlet g: number;\r\n\t\tlet b: number;\r\n\r\n\t\tconst color = this.color;\r\n\r\n\t\tif (color && color.rgb) {\r\n\t\t\tr = color.rgb.r / 255 * i;\r\n\t\t\tg = color.rgb.g / 255 * i;\r\n\t\t\tb = color.rgb.b / 255 * i;\r\n\r\n\t\t} else {\r\n\t\t\tr = 0;\r\n\t\t\tg = 0;\r\n\t\t\tb = 0;\r\n\t\t}\r\n\r\n\t\tthis.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * Target color to apply to the element.\r\n\t *\r\n\t * Depending on the `intensity`, all colors of the target element will steer\r\n\t * towards this color.\r\n\t *\r\n\t * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n\t *\r\n\t * @param {Color}  value  Color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"color\"] = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"color\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Intensity of the color (0-1).\r\n\t *\r\n\t * The bigger the number the more of a `color` target's colors will become.\r\n\t *\r\n\t * 0 means the colors will remain as they are.\r\n\t * 1 means all colors will become the target `color`.\r\n\t *\r\n\t * @default 1\r\n\t * @param {number}  value  Intensity (0-1)\r\n\t */\r\n\tpublic set intensity(value: number) {\r\n\t\tthis.properties.intensity = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Intensity (0-1)\r\n\t */\r\n\tpublic get intensity(): number {\r\n\t\treturn this.properties.intensity;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/ColorizeFilter.ts","/**\r\n * Module for \"Blur\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Blur\" filter.\r\n */\r\nexport interface BlurFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @type {number}\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdy?: number;\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Opacity. (0-1)\r\n\t *\r\n\t * @type {number}\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @type {Color}\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tcolor?: Color;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t *\r\n\t * @type {BlurFilterProperties}\r\n\t */\r\n\tpublic _properties!: BlurFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link BlurFilterProperties]\r\n\t * @type {Dictionary<BlurFilterProperties, any>}\r\n\t */\r\n\t//public propertyValues: Dictionary<BlurFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {AMElement}\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates primitve (effect) elements\r\n\t * * Sets default properties\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"BlurFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t *\r\n\t * The bigger the value, the blurrier the target element will become.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param {number} value Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/core/rendering/filters/BlurFilter.ts","/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AmChartsLogo]].\r\n *\r\n * @see {@link Adapter}\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoAdapters extends IContainerAdapters, IAmChartsLogoProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nexport class AmChartsLogo extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IAmChartsLogoProperties}\r\n\t */\r\n\tpublic _properties!: IAmChartsLogoProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IAmChartsLogoAdapters}\r\n\t */\r\n\tpublic _adapter!: IAmChartsLogoAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IAmChartsLogoEvents}\r\n\t */\r\n\tpublic _events!: IAmChartsLogoEvents;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AmChartsLogo\";\r\n\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tlet d = 0.3;\r\n\t\tthis.opacity = 0.3;\r\n\t\tthis.defaultState.properties.opacity = 0.4;\r\n\t\tthis.url = \"https://www.amcharts.com/\";\r\n\t\tthis.urlTarget = \"_blank\";\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\t\tthis.readerTitle = \"Chart created using amCharts library\";\r\n\t\tthis.width = 220 * d;\r\n\t\tthis.height = 70 * d;\r\n\t\tthis.background.opacity = 0;\r\n\r\n\t\tlet aColor = color(\"#474758\");\r\n\t\tif (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n\t\t\taColor = color(\"#ffffff\");\r\n\t\t}\r\n\r\n\t\tlet aGradient = new LinearGradient();\r\n\r\n\t\taGradient.addColor(aColor);\r\n\t\taGradient.addColor(aColor, 1, 0.75);\r\n\t\taGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n\t\taGradient.rotation = -10;\r\n\r\n\t\tlet aStroke = aGradient;\r\n\r\n\t\tlet m = this.createChild(Polyspline)\r\n\t\tm.shouldClone = false;\r\n\t\tm.isMeasured = false;\r\n\t\tm.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\tm.strokeWidth = 6 * d;\r\n\t\tm.tensionX = 0.8;\r\n\t\tm.tensionY = 1;\r\n\r\n\t\tm.stroke = color(\"#3cabff\");\r\n\r\n\t\tlet a = this.createChild(Polyspline);\r\n\t\ta.shouldClone = false;\r\n\t\ta.isMeasured = false;\r\n\t\ta.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\ta.strokeWidth = 6 * d;\r\n\t\ta.tensionX = 0.75;\r\n\t\ta.tensionY = 1;\r\n\t\ta.stroke = aStroke;\r\n\r\n\t\tthis._disposers.push(a);\r\n\r\n\t\tlet desaturateFilter = new DesaturateFilter();\r\n\t\tthis.filters.push(desaturateFilter);\r\n\r\n\t\tlet desaturateFilterHover = new DesaturateFilter();\r\n\t\tdesaturateFilterHover.saturation = 1;\r\n\r\n\t\tlet hoverState = this.states.create(\"hover\");\r\n\t\thoverState.properties.opacity = 1;\r\n\t\thoverState.filters.push(desaturateFilterHover);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/core/elements/AmChartsLogo.ts"],"sourceRoot":""}