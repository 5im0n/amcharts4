{"version":3,"file":"ExportMenu.js","sourceRoot":"","sources":["../../../../../src/.internal/core/export/ExportMenu.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IExportOptions } from \"./Export\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { interaction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { EventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IDisposer, MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language, ILocaleProperties } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard, KeyboardKeys } from \"../utils/Keyboard\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Export menu item interface.\r\n */\r\nexport interface IExportMenuItem {\r\n\r\n\t/**\r\n\t * Item type, usually an export format.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\ttype?: keyof IExportOptions;\r\n\r\n\t/**\r\n\t * Label to display in the menu.\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tlabel?: string;\r\n\r\n\t/**\r\n\t * Export format. (optional)\r\n\t *\r\n\t * @type {string}\r\n\t */\r\n\tformat?: string;\r\n\r\n\t/**\r\n\t * Menu item options.\r\n\t *\r\n\t * @see {@link IExportOptions}\r\n\t * @type {Object}\r\n\t */\r\n\toptions?: IExportOptions[keyof IExportOptions];\r\n\r\n\t/**\r\n\t * Priority.\r\n\t *\r\n\t * The items in Export menu will be sorted by their priority in ascending\r\n\t * order.\r\n\t *\r\n\t * @ignore Exclude from docs (this feature is not yet implemented)\r\n\t * @type {number}\r\n\t */\r\n\tpriority?: number;\r\n\r\n\t/**\r\n\t * An array of [[IExportMenuItem]] items, to construct a sub-menu out of.\r\n\t *\r\n\t * An Export menu can have any number of nesting levels.\r\n\t *\r\n\t * @type {Array<IExportMenuItem>}\r\n\t */\r\n\tmenu?: Array<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * If this is set to true, it means that this specific menu item is not\r\n\t * supported by the current client system.\r\n\t *\r\n\t * This is usually populated by [[Export]]'s `supported` Adapter.\r\n\t *\r\n\t * @see {@link IExportAdapters}\r\n\t * @type {boolean}\r\n\t */\r\n\tunsupported?: boolean\r\n\r\n\t/**\r\n\t * An [[InteractionObject]] representation of the menu item.\r\n\t *\r\n\t * @type {InteractionObject}\r\n\t */\r\n\tinteractions?: InteractionObject;\r\n\r\n\t/**\r\n\t * Holds list of parent menu items to this item.\r\n\t */\r\n\tascendants?: List<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * Holds timeout reference.\r\n\t *\r\n\t * Used to delay auto-closing of the menu when it is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IDisposer}\r\n\t */\r\n\tcloseTimeout?: IDisposer;\r\n\r\n}\r\n\r\n/**\r\n * Defines [[ExportMenu]] events.\r\n */\r\nexport interface IExportMenuEvents {\r\n\r\n\t/**\r\n\t * Invoked when menu item is clicked/tapped.\r\n\t */\r\n\thit: { event: MouseEvent | TouchEvent; };\r\n\r\n\t/**\r\n\t * Invoked when menu item is hovered.\r\n\t */\r\n\tover: { event: MouseEvent | TouchEvent; };\r\n\r\n\t/**\r\n\t * Invoked when menu item is no longer hovered.\r\n\t */\r\n\tout: { event: MouseEvent | TouchEvent; };\r\n\r\n\t/**\r\n\t * Invoked when ENTER key is pressed when certain menu item is in focus.\r\n\t *\r\n\t * @type {KeyboardEvent}\r\n\t */\r\n\tenter: { event: KeyboardEvent; }\r\n\r\n}\r\n\r\n/**\r\n * Represents a list of available adapters for Export\r\n */\r\nexport interface IExportMenuAdapters {\r\n\r\n\titems: {\r\n\t\titems: Array<IExportMenuItem>\r\n\t},\r\n\r\n\tmenuElement: {\r\n\t\tmenuElement: HTMLElement\r\n\t},\r\n\r\n\tbranch: {\r\n\t\tbranch: IExportMenuItem,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\trederLabel: {\r\n\t\tlabel: string,\r\n\t\tbranch: IExportMenuItem\r\n\t},\r\n\r\n\tmenuClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\titemClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype: keyof IExportOptions\r\n\t},\r\n\r\n\tlabelClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype: keyof IExportOptions\r\n\t},\r\n\r\n\tmenuTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\titemTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\tlabelTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\talign: {\r\n\t\talign: Align\r\n\t},\r\n\r\n\tverticalAlign: {\r\n\t\tverticalAlign: VerticalAlign\r\n\t},\r\n\r\n\tclassPrefix: {\r\n\t\tclassPrefix: string\r\n\t},\r\n\r\n\tdefaultStyles: {\r\n\t\tdefaultStyles: boolean\r\n\t},\r\n\r\n\ttabindex: {\r\n\t\ttabindex: number\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new amcharts4.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new amcharts4.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nexport class ExportMenu extends Validatable {\r\n\r\n\t/**\r\n\t * Holds [[EventDispatcher]].\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<IExportMenuItem, IExportMenuEvents>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * An [[Adapter]].\r\n\t *\r\n\t * @type {Adapter<ExportMenu, IExportMenuAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<ExportMenu, IExportMenuAdapters> = new Adapter<ExportMenu, IExportMenuAdapters>(this);\r\n\r\n\t/**\r\n\t * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n\t * hover, before auto-closing it.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tpublic closeDelay: number = 1000;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {MutableValueDisposer<Language>}\r\n\t */\r\n\tprotected _language = new MutableValueDisposer<Language>();\r\n\r\n\t/**\r\n\t * Reference to DOM element that holds Export menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * Menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {HTMLElement}\r\n\t */\r\n\tprotected _element: HTMLElement;\r\n\r\n\t/**\r\n\t * Currently selected menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IExportMenuItem}\r\n\t */\r\n\tprotected _currentSelection: IExportMenuItem;\r\n\r\n\t/**\r\n\t * What HTML tags to use to build menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _menuTag: \"ul\" | \"div\" = \"ul\";\r\n\r\n\t/**\r\n\t * Which tag to use to enclose individual menu items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _itemTag: \"li\" | \"div\" = \"li\";\r\n\r\n\t/**\r\n\t * Tag to wrap menu item labels in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _labelTag: \"a\" = \"a\";\r\n\r\n\t/**\r\n\t * Prefix for class names applied to menu elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {string}\r\n\t */\r\n\tprotected _classPrefix: string = \"amexport\";\r\n\r\n\t/**\r\n\t * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n\t * instantiated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal positioning.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Align}\r\n\t */\r\n\tprotected _align: Align = \"right\";\r\n\r\n\t/**\r\n\t * Vertical positioning.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {VerticalAlign}\r\n\t */\r\n\tprotected _verticalAlign: VerticalAlign = \"top\";\r\n\r\n\t/**\r\n\t * A tabindex to apply to Export Menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _tabindex: number = 0;\r\n\r\n\t/**\r\n\t * Whether next menu close event should be ignored.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreNextClose: boolean = false;\r\n\r\n\t/**\r\n\t * Default menu items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Array<IExportMenuItem>}\r\n\t */\r\n\tprotected _items: Array<IExportMenuItem> = [\r\n\t\t{\r\n\t\t\t\"label\": \"...\",\r\n\t\t\t\"menu\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"label\": \"Image\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"png\", \"label\": \"PNG\" },\r\n\t\t\t\t\t\t{ \"type\": \"jpg\", \"label\": \"JPG\" },\r\n\t\t\t\t\t\t{ \"type\": \"gif\", \"label\": \"GIF\" },\r\n\t\t\t\t\t\t{ \"type\": \"svg\", \"label\": \"SVG\" },\r\n\t\t\t\t\t\t{ \"type\": \"pdf\", \"label\": \"PDF\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Data\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"json\", \"label\": \"JSON\" },\r\n\t\t\t\t\t\t{ \"type\": \"csv\", \"label\": \"CSV\" },\r\n\t\t\t\t\t\t{ \"type\": \"xlsx\", \"label\": \"XLSX\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Print\", \"type\": \"print\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ExportMenu\";\r\n\t\tthis.invalidate();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the Export menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.draw();\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the menu based on current items.\r\n\t *\r\n\t * Normally, there's no need to call this explicitly. The chart, if it has\r\n\t * export menu enabled, will automatically draw the menu.\r\n\t */\r\n\tpublic draw(): void {\r\n\r\n\t\t// Create top-level menu item, or clear it\r\n\t\tif (!this._element) {\r\n\t\t\tthis._element = this.createMenuElement(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._element.innerHTML = \"\";\r\n\t\t\tthis._element.className = this.getMenuItemClass(0);\r\n\t\t}\r\n\r\n\t\t// See if we're loading external CSS\r\n\t\t// Hide it until CSS is loaded\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis._element.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\tthis._container.appendChild(this._element);\r\n\r\n\t\t// Apply adapter to menu items before processing\r\n\t\tthis._items = this.adapter.apply(\"items\", {\r\n\t\t\titems: this._items\r\n\t\t}).items;\r\n\r\n\t\tfor (let len = this._items.length, i = 0; i < len; i++) {\r\n\t\t\tthis.drawBranch(this._element, this._items[i], 0);\r\n\t\t}\r\n\r\n\t\t// Apply adapter to finalized menu element\r\n\t\tthis._element = this.adapter.apply(\"menuElement\", {\r\n\t\t\tmenuElement: this._element\r\n\t\t}).menuElement;\r\n\r\n\t\t// Set up global \"down\" event\r\n\t\tinteraction.body.events.on(\"down\", (ev) => {\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis._ignoreNextClose = false;\r\n\t\t\t}\r\n\t\t\tthis.close();\r\n\t\t});\r\n\r\n\t\t// Set up global event on ESC press to close the menu\r\n\t\tinteraction.body.events.on(\"keyup\", (ev) => {\r\n\t\t\tlet key = keyboard.getEventKey(ev.event);\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"esc\":\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"up\":\r\n\t\t\t\tcase \"down\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.moveSelection(key);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS().then((css: any) => {\r\n\t\t\t\tthis._disposers.push(css.default(this.classPrefix));\r\n\t\t\t\tthis._element.style.display = \"initial\";\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new branch in export menu. This function is recursive for\r\n\t * building multi-level menus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {HTMLElement}     container Container to put branch elements in\r\n\t * @param {IExportMenuItem} branch    Menu item\r\n\t * @param {number}          level     Current nesting level\r\n\t */\r\n\tprotected drawBranch(container: HTMLElement, branch: IExportMenuItem, level: number): void {\r\n\r\n\t\t// Apply adapter\r\n\t\tbranch = this.adapter.apply(\"branch\", {\r\n\t\t\tbranch: branch,\r\n\t\t\tlevel: level\r\n\t\t}).branch;\r\n\r\n\t\t// Unsupported?\r\n\t\t// ExportMenu does not check or know for specific browser/system\r\n\t\t// capabilities. It must happen in some other code and applied via Adapter.\r\n\t\t// Export itself will check compatibility, but there might be other plugins\r\n\t\t// that influence it or even add any specific export functionality.\r\n\t\tif (branch.unsupported === true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init ascendants\r\n\t\tif (!branch.ascendants) {\r\n\t\t\tbranch.ascendants = new List<IExportMenuItem>();\r\n\t\t}\r\n\r\n\t\t// Get type\r\n\t\tlet type: keyof IExportOptions | undefined | null = branch.type;\r\n\r\n\t\t// Create an item\r\n\t\tlet element = this.createItemElement(level, type);\r\n\r\n\t\t// Create label\r\n\t\tlet label = this.createLabelElement(level, type);\r\n\t\tlabel.innerHTML = (branch.label ? this.language.translate(<keyof ILocaleProperties>branch.label) : \"\");\r\n\r\n\t\t// Apply reader text to label\r\n\t\tlet readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n\t\tlabel.setAttribute(\"aria-label\", readerLabel);\r\n\r\n\t\t// Add Label\r\n\t\telement.appendChild(label);\r\n\r\n\t\t// Create interaction object\r\n\t\tbranch.interactions = interaction.getInteraction(label);\r\n\r\n\t\t// Create interaction manager we can set event listeners to\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\t//branch.interactions.clickable = true;\r\n\t\t\tbranch.interactions.events.on(\"hit\", (ev) => {\r\n\t\t\t\tif (this.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"hit\", {\r\n\t\t\t\t\t\t\"type\": \"hit\",\r\n\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\"target\": branch\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\tif (this.events.isEnabled(\"enter\")) {\r\n\t\t\t\t\t\tthis.events.dispatchImmediately(\"enter\", {\r\n\t\t\t\t\t\t\t\"type\": \"enter\",\r\n\t\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\t\"target\": branch\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add ENTER event to open sub-menus\r\n\t\tif (this.hasSubMenu(branch)) {\r\n\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\t// This is item has sub-menu, activate the first child on ENTER\r\n\t\t\t\t\tthis.selectBranch(branch.menu[0]);\r\n\r\n\t\t\t\t\t// Attempt to set focus\r\n\t\t\t\t\tthis.setFocus(branch.menu[0]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add events\r\n\t\tbranch.interactions.events.on(\"over\", (ev) => {\r\n\t\t\tif (ev.pointer.touch) {\r\n\t\t\t\t// Cancel pending menu closure\r\n\t\t\t\tthis._ignoreNextClose = true;\r\n\t\t\t}\r\n\t\t\tthis.selectBranch(branch);\r\n\t\t});\r\n\r\n\t\tbranch.interactions.events.on(\"out\", (ev) => {\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tbranch.interactions.events.on(\"focus\", (ev) => {\r\n\t\t\tthis.selectBranch(branch);\r\n\t\t});\r\n\r\n\t\tbranch.interactions.events.on(\"blur\", (ev) => {\r\n\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t});\r\n\r\n\t\t// Increment level\r\n\t\tlet local_level = level + 1;\r\n\r\n\t\t// Has sub-menu?\r\n\t\tif (branch.menu) {\r\n\t\t\tlet submenu = this.createMenuElement(local_level);\r\n\t\t\tfor (let len = branch.menu.length, i = 0; i < len; i++) {\r\n\t\t\t\tbranch.menu[i].ascendants = new List<IExportMenuItem>();\r\n\t\t\t\tif (branch.ascendants.length) {\r\n\t\t\t\t\tbranch.menu[i].ascendants.copyFrom(branch.ascendants);\r\n\t\t\t\t}\r\n\t\t\t\tbranch.menu[i].ascendants.push(branch);\r\n\t\t\t\tthis.drawBranch(submenu, branch.menu[i], local_level);\r\n\t\t\t}\r\n\r\n\t\t\t// Sub-menu is empty (all items are not supported)\r\n\t\t\t// Do not draw this menu item at all\r\n\t\t\tif (submenu.innerHTML == \"\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.appendChild(submenu);\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\tcontainer.appendChild(element);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n\t * tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @return {HTMLElement}         HTML element reference\r\n\t */\r\n\tpublic createMenuElement(level: number): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.menuTag);\r\n\t\telement.className = this.getMenuItemClass(level);\r\n\r\n\t\t// Accessibility\r\n\t\tif (level === 0) {\r\n\t\t\telement.setAttribute(\"role\", \"menu\");\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a class name for the menu element based on its nesting level.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}  level  Current nesting level\r\n\t * @return {string}         Class name(s)\r\n\t */\r\n\tpublic getMenuItemClass(level: number): string {\r\n\t\tlet className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n\t\tif (level === 0) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-menu-root \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.align + \" \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.verticalAlign;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"menuClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level\r\n\t\t}).className;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n\t * into this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @param  {string}       type   Type of the menu item\r\n\t * @return {HTMLElement}         HTML element reference\r\n\t */\r\n\tpublic createItemElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.itemTag);\r\n\t\tlet className = this.classPrefix + \"-item \" + this.classPrefix\r\n\t\t\t+ \"-item-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\telement.className = this.adapter.apply(\"itemClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n\t * content.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}       level  Current nesting level\r\n\t * @param  {string}       type   Type of the menu item\r\n\t * @return {HTMLElement}         An HTML Element\r\n\t */\r\n\tpublic createLabelElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.labelTag);\r\n\t\tlet className = this.classPrefix + \"-label \" + this.classPrefix\r\n\t\t\t+ \"-label-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-clickable\";\r\n\t\t}\r\n\t\telement.className = this.adapter.apply(\"labelClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\r\n\t\t// Accessible navigation\r\n\t\telement.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\telement.setAttribute(\"role\", \"menuitem\");\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the menu and all its elements.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis._element\r\n\t\t\t\t&& this._element.parentNode\r\n\t\t\t\t&& this._element.parentNode.removeChild(this._element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item type is supposed to be clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string}   type  Menu item type\r\n\t * @return {boolean}        Is clickable?\r\n\t */\r\n\tpublic typeClickable(type: keyof IExportOptions | undefined | null): type is keyof IExportOptions {\r\n\t\treturn $type.hasValue(type);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item has any sub-items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  A menu item\r\n\t * @return {boolean}                  Has sub-items?\r\n\t */\r\n\tpublic hasSubMenu(branch: IExportMenuItem): boolean {\r\n\t\treturn (branch.menu && branch.menu.length) ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates and returns an applicable label to be used for screen readers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  item   A menu item instance\r\n\t * @param  {string}           label  Current label\r\n\t * @return {string}                  Reader text\r\n\t */\r\n\tpublic getReaderLabel(branch: IExportMenuItem, label: string): string {\r\n\r\n\t\t// Strip any HTML from the label\r\n\t\tlabel = $utils.stripTags(label);\r\n\r\n\t\t// Add textual note if the branch is clickable\r\n\t\tif (this.hasSubMenu(branch)) {\r\n\t\t\tlabel += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n\t\t}\r\n\t\telse if (branch.type == \"print\") {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n\t\t}\r\n\t\telse if (this.typeClickable(branch.type)) {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to export as %1.\", null, label);\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"rederLabel\", {\r\n\t\t\tlabel: label,\r\n\t\t\tbranch: branch\r\n\t\t}).label;\r\n\t}\r\n\r\n\t/**\r\n\t * Getters and setters\r\n\t */\r\n\r\n\t/**\r\n\t * Sets HTML container to place the Menu in.\r\n\t *\r\n\t * A container must be an HTML element, because menu itself is HTML, and\r\n\t * cannot be placed into SVG.\r\n\t *\r\n\t * @param {HTMLElement} container Reference to container element\r\n\t * @todo Check if menu is already build. If it is, just move it to a new container\r\n\t */\r\n\tpublic set container(container: HTMLElement) {\r\n\t\tthis._container = container;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current menu container.\r\n\t *\r\n\t * @return {HTMLElement} Container\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a list of menu items. Can be nested.\r\n\t *\r\n\t * @param {Array<IExportMenuItem>}  items  Menu items\r\n\t */\r\n\tpublic set items(items: Array<IExportMenuItem>) {\r\n\t\tthis._items = items;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current menu items.\r\n\t *\r\n\t * @return {Array<IExportMenuItem>} Menu items\r\n\t */\r\n\tpublic get items(): Array<IExportMenuItem> {\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets main menu tag to place menu in.\r\n\t *\r\n\t * This also sets up how menu items are built.\r\n\t *\r\n\t * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n\t *\r\n\t * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n\t *\r\n\t * @default \"ul\"\r\n\t * @param {\"ul\" | \"div\"} tag Tag to use for menu\r\n\t */\r\n\tpublic set tag(tag: \"ul\" | \"div\") {\r\n\t\tthis._menuTag = tag;\r\n\t\tthis._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current menu tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Menu tag (item that contains sub-items)\r\n\t */\r\n\tpublic get menuTag(): string {\r\n\t\treturn this.adapter.apply(\"menuTag\", {\r\n\t\t\ttag: this._menuTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns tag to wrap items into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Item tag\r\n\t */\r\n\tpublic get itemTag(): string {\r\n\t\treturn this.adapter.apply(\"itemTag\", {\r\n\t\t\ttag: this._itemTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu label tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {string} Label tag\r\n\t */\r\n\tpublic get labelTag(): string {\r\n\t\treturn this.adapter.apply(\"labelTag\", {\r\n\t\t\ttag: this._labelTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets horizontal alignement for the menu placement.\r\n\t *\r\n\t * @param {Align} value Horizontal alignement\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tthis._align = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current setting for horizontal alignement.\r\n\t *\r\n\t * @return {Align} Horizontal alignement\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", {\r\n\t\t\talign: this._align\r\n\t\t}).align;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets vertical alignement for the menu placement.\r\n\t *\r\n\t * @param {VerticalAlign} value Vertical alignement\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tthis._verticalAlign = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current setting for vertical alignement.\r\n\t *\r\n\t * @return {VerticalAlign} Vertical alignement\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", {\r\n\t\t\tverticalAlign: this._verticalAlign\r\n\t\t}).verticalAlign;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets class name prefix.\r\n\t *\r\n\t * @default \"amexport\"\r\n\t * @param {string} value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Return current class name prefix.\r\n\t *\r\n\t * @return {string} Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", {\r\n\t\t\tclassPrefix: this._classPrefix\r\n\t\t}).classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets whether [[ExportMenu]] should load external CSS to style itself.\r\n\t *\r\n\t * If set to `false`, the menu will not be styled, and will rely on some\r\n\t * external CSS.\r\n\t *\r\n\t * @default true\r\n\t * @param {string} Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.loadDefaultCSS();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current setting for deafult style usage.\r\n\t *\r\n\t * @return {boolean} Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", {\r\n\t\t\tdefaultStyles: this._defaultStyles\r\n\t\t}).defaultStyles;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {Promise<any>} Promise\r\n\t */\r\n\tpublic loadDefaultCSS(): Promise<any> {\r\n\t\treturn import(/* webpackChunkName: \"exportcss\" */ \"./ExportCSS\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets tab index for the menu.\r\n\t *\r\n\t * Tab index will influence the order in which elements on the chart and\r\n\t * the whole page are selected when pressing TAB key.\r\n\t *\r\n\t * @param {number} value Tab index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tthis._tabindex = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current tab index setting.\r\n\t *\r\n\t * @return {number} Tab index\r\n\t */\r\n\tpublic get tabindex(): number {\r\n\t\treturn this.adapter.apply(\"tabindex\", {\r\n\t\t\ttabindex: this._tabindex\r\n\t\t}).tabindex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Language]] instance.\r\n\t *\r\n\t * @param {Language} value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language.set(value, value.events.on(\"localeChanged\", (ev) => {\r\n\t\t\tthis.invalidate();\r\n\t\t}));\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current [[Language]] instance. If it's not set a new instance is\r\n\t * created.\r\n\t *\r\n\t * @return {Language} A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tlet language = this._language.get();\r\n\r\n\t\tif (language == null) {\r\n\t\t\tlanguage = new Language();\r\n\r\n\t\t\t// TODO code duplication with `set language()`\r\n\t\t\tthis._language.set(language, language.events.on(\"localeChanged\", (ev) => {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn language;\r\n\t}\r\n\r\n\t/**\r\n\t * Controlling the menu\r\n\t */\r\n\r\n\t/**\r\n\t * Removes all active classes from menu items. Useful on touch devices and\r\n\t * keyboard navigation where open menu can be closed instantly by clicking or\r\n\t * tapping outside it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._ignoreNextClose) {\r\n\t\t\tthis._ignoreNextClose = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._currentSelection) {\r\n\t\t\tthis.setBlur(this._currentSelection);\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\t\tlet items = this._element.getElementsByClassName(\"active\");\r\n\t\tfor (let len = items.length, i = len - 1; i >= 0; i--) {\r\n\t\t\tif (items[i]) {\r\n\t\t\t\t$dom.removeClass(<HTMLElement>items[i], \"active\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Selects a branch in the menu.\r\n\t *\r\n\t * Handles closing of currently open branch.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to select\r\n\t */\r\n\tpublic selectBranch(branch: IExportMenuItem): void {\r\n\r\n\t\t// Cancel previous closure\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = null;\r\n\t\t}\r\n\r\n\t\t// Add active class\r\n\t\t$dom.addClass(branch.interactions.element.parentElement, \"active\");\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection && this._currentSelection !== branch) {\r\n\t\t\t$iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), (ascendant) => {\r\n\t\t\t\tif (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n\t\t\t\t\tthis.unselectBranch(ascendant, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Select and/or cancel timeout for current ascendants\r\n\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\tif (ascendant.closeTimeout) {\r\n\t\t\t\tthis.removeDispose(ascendant.closeTimeout);\r\n\t\t\t\tascendant.closeTimeout = null;\r\n\t\t\t}\r\n\t\t\t$dom.addClass(ascendant.interactions.element.parentElement, \"active\");\r\n\t\t});\r\n\r\n\t\t// Log current selection\r\n\t\tthis._currentSelection = branch;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects a branch. Also selects a branch one level up if necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to unselect\r\n\t * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic unselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\t// Remove active class\r\n\t\t$dom.removeClass(branch.interactions.element.parentElement, \"active\");\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection == branch) {\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Delay unselection of a branch. This can still be cancelled in some other\r\n\t * place if the branch or its children regain focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Branch to unselect\r\n\t * @param {boolean}         simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic delayUnselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\t// Schedule branch unselection\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = null;\r\n\t\t}\r\n\t\tbranch.closeTimeout = this.setTimeout(() => {\r\n\t\t\tthis.unselectBranch(branch, simple);\r\n\t\t}, this.closeDelay);\r\n\r\n\t\t// Schedule unselection of all ascendants\r\n\t\t// In case focus went away from the export menu altogether, this will ensure\r\n\t\t// that all items will be closed.\r\n\t\t// In case we're jumping to other menu item, those delayed unselections will\r\n\t\t// be cancelled by `selectBranch`\r\n\t\tif (simple !== true) {\r\n\t\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\t\tthis.delayUnselectBranch(ascendant, true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates the menu based on which direction kayboard key was pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {KeyboardKeys} key A key that was pressed\r\n\t */\r\n\tpublic moveSelection(key: KeyboardKeys): void {\r\n\r\n\t\t// Check if there's a current selection\r\n\t\tif (!this._currentSelection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet newSelection: IExportMenuItem;\r\n\r\n\t\tif (key == \"up\") {\r\n\t\t\t// Try moving up in current menu list, or to the last item if already\r\n\t\t\t// at the top\r\n\t\t\tnewSelection = this.getPrevSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if (key == \"down\") {\r\n\t\t\t// Try moving down in current menu list, or to the top item if already\r\n\t\t\t// at the bottom\r\n\t\t\tnewSelection = this.getNextSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n\t\t\t// Go one level-deeper\r\n\t\t\tif (this.hasSubMenu(this._currentSelection)) {\r\n\t\t\t\tnewSelection = this._currentSelection.menu[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n\t\t\t// Go one level-deeper\r\n\t\t\tnewSelection = this.getParentItem(this._currentSelection);\r\n\t\t}\r\n\r\n\t\tif (newSelection && newSelection !== this._currentSelection) {\r\n\t\t\tthis.selectBranch(newSelection);\r\n\t\t\tthis.setFocus(newSelection);\r\n\t\t\tthis._currentSelection = newSelection;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all siblings of a menu item, including this same menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}         branch  Menu item\r\n\t * @return {Array<IExportMenuItem>}          List of sibling menu items\r\n\t */\r\n\tpublic getSiblings(branch: IExportMenuItem): Array<IExportMenuItem> {\r\n\t\tlet parent = this.getParentItem(branch);\r\n\t\treturn parent ? parent.menu : [];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu items parent item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  Menu item\r\n\t * @return {IExportMenuItem}          Parent menu item\r\n\t */\r\n\tpublic getParentItem(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tif (branch.ascendants.length) {\r\n\t\t\treturn branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns next sibling in the same menu branch. If there is no next sibling,\r\n\t * the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  Menu item to search siblings for\r\n\t * @return {IExportMenuItem}          Menu item\r\n\t */\r\n\tpublic getNextSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet next = siblings.indexOf(branch) + 1;\r\n\t\t\tnext = siblings.length == next ? 0 : next;\r\n\t\t\treturn siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns previous sibling in the same menu branch. If there is no next\r\n\t * sibling, the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {IExportMenuItem}  branch  Menu item to search siblings for\r\n\t * @return {IExportMenuItem}          Menu item\r\n\t */\r\n\tpublic getPrevSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet prev = siblings.indexOf(branch) - 1;\r\n\t\t\tprev = prev == -1 ? siblings.length - 1 : prev;\r\n\t\t\treturn siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to set focus on particular menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Menu item\r\n\t */\r\n\tpublic setFocus(branch: IExportMenuItem): void {\r\n\t\t(<HTMLElement>branch.interactions.element).focus();\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to remove focus from the menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IExportMenuItem} branch Menu item\r\n\t */\r\n\tpublic setBlur(branch: IExportMenuItem): void {\r\n\t\t(<HTMLElement>branch.interactions.element).blur();\r\n\t}\r\n\r\n}"]}