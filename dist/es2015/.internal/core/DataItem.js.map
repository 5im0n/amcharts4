{"version":3,"file":"DataItem.js","sourceRoot":"","sources":["../../../../src/.internal/core/DataItem.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Defines functionality for \"Data Item\"\r\n *\r\n * A Data Item can be any object that can hold data. For example [[LineSeries]]\r\n * holds a number of values, that comprise a line graph. Each of those values\r\n * (data points) is a {DataItem}.\r\n *\r\n * Furthermore the [[LineSeries]] itself can be represented as a entry in the\r\n * legend. Since legend needs access to Line Series' value, a DataItem is\r\n * created for the series.\r\n *\r\n * @todo Verify/update description\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"./Base\";\r\nimport { List, ListDisposer } from \"./utils/List\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Component, CalculatedValue } from \"./Component\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { IAnimatable, Animation, IAnimationOptions, IAnimationEvents } from \"./utils/Animation\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\nimport { IDisposer } from \"./utils/Disposer\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n *\r\n * @todo Description\r\n  */\r\nexport interface IValues { }\r\n\r\n/**\r\n * Defines data events for [[DataItem]]\r\n */\r\nexport interface IDataItemEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when the visibility of the Data Item changes, i.e. Series is\r\n\t * hidden\r\n\t */\r\n\tvisibilitychanged: {\r\n\t\tvisible: boolean;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the value is changed\r\n\t */\r\n\tvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the internal/intermediate value has changed\r\n\t */\r\n\tworkingvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the calculated value has changed\r\n\t */\r\n\tcalculatedvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the location of Data Item changes\r\n\t */\r\n\tlocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when working location of Data Item changes\r\n\t */\r\n\tworkinglocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a property of the Data Item changes\r\n\t */\r\n\tpropertychanged: {\r\n\t\tproperty: string;\r\n\t\tvalue: any; // TODO don't make this any\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDataItemAdapters {\r\n\r\n\tduration: number;\r\n\r\n\tvalue: {\r\n\t\tvalue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tworkingValue: {\r\n\t\tworkingValue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tdate: {\r\n\t\tdate: Date,\r\n\t\tfield: string\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * DataItem represents single element in data, for example a data point in a\r\n * Serial Chart Series, e.g. a column.\r\n *\r\n * DataItem defines relationship between structured data, required for specific\r\n * chart type or task, and raw source data.\r\n *\r\n * It also implements required calculations, updates related visual elements,\r\n * etc.\r\n *\r\n * @todo Description\r\n * @important\r\n */\r\nexport class DataItem extends BaseObjectEvents implements IAnimatable {\r\n\r\n\t/**\r\n\t * When we are using a nested data structure, like for example in a TreeMap,\r\n\t * this property points to a parent Data Item of this one.\r\n\t *\r\n\t * @type {this}\r\n\t */\r\n\tpublic parent: this;\r\n\r\n\t/**\r\n\t * Event dispacther..\r\n\t *\r\n\t * @type {EventDispatcher<AMEvent<DataItem, IDataItemEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<DataItem, IDataItemEvents>>;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t *\r\n\t * @type {Adapter<DataItem, IDataItemAdapters>}\r\n\t */\r\n\tpublic adapter = new Adapter<DataItem, IDataItemAdapters>(this);\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this Data Item is used for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Component}\r\n\t */\r\n\tpublic _component: Component;\r\n\r\n\t/**\r\n\t * A reference to a [[Component]] this Data Item belongs to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Component}\r\n\t */\r\n\tpublic component: this[\"_component\"];\r\n\r\n\t/**\r\n\t * A reference to the original Data Item in raw data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Object}\r\n\t */\r\n\tprotected _dataContext: Object;\r\n\r\n\t/**\r\n\t * This Data Item is currently disabled.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _disabled: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether Data Item has any properties set.\r\n\t *\r\n\t * If it does not have any, the code can use this property to check whether\r\n\t * they need to apply costly operation of re-applying properties, whenever\r\n\t * Data Item-related element is redrawn, e.g. series.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic hasProperties: boolean = false;\r\n\r\n\t/**\r\n\t * An object containing calculated values.\r\n\t */\r\n\tpublic readonly values: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object container current working values.\r\n\t */\r\n\t//public readonly workingValues: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object containing categories.\r\n\t */\r\n\tpublic readonly categories: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * An object containing dates.\r\n\t */\r\n\tpublic readonly dates: { [index: string]: Date } = {};\r\n\r\n\t/**\r\n\t * An object containing locations for the Data Item.\r\n\t *\r\n\t * A location is a position within date or category, or, in some other cases,\r\n\t * where there is no single point but rather some period.\r\n\t */\r\n\tpublic readonly locations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * Current working locations.\r\n\t */\r\n\tpublic readonly workingLocations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * An object containing Data Item specific appearance properties in key-value\r\n\t * pairs.\r\n\t *\r\n\t * Sometimes a single Data Item needs to apply different properties than the\r\n\t * rest of the data [[Series]] it is part of. E.g. a single column,\r\n\t * represented by a Data Item needs to be filled with a different color than\r\n\t * the reset of the [[ColumnSeries]] it belongs to.\r\n\t *\r\n\t * That's where Data Item's `properties` come into play.\r\n\t *\r\n\t * Please note that you should set Data Item-specific properties using\r\n\t * `setProperty()` method, rather than access `properties` object directly.\r\n\t */\r\n\tpublic readonly properties: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that are associated with this Data Item.\r\n\t *\r\n\t * E.g. an [[Axis]] Data Item has several separate elements associated with\r\n\t * it, like [[AxisTick]], [[AxisLabel]], and [[Grid]].\r\n\t *\r\n\t * Data Item keeps track of all of them, so it can toggle all related visual\r\n\t * elements when it itself is toggled.\r\n\t *\r\n\t * @type {Sprite[]}\r\n\t */\r\n\tpublic readonly sprites: Sprite[] = [];\r\n\r\n\t/**\r\n\t * List of animations currently animating Data Item's values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<Animation>}\r\n\t */\r\n\tprotected _animations: List<Animation>;\r\n\r\n\t/**\r\n\t * Is Data Item currently visible?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _visible: boolean = true;\r\n\r\n\t/**\r\n\t * Should this Data Item be used when calculating data ranges and scales?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Some of the Data Item's data fields may contain an array of children. This\r\n\t * property contains an object indicating which fields hold an array, so that\r\n\t * they can be processed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hasChildren: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Indicates whether Data Item is currently animiting from visible to hidden\r\n\t * state.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic isHiding: boolean = false;\r\n\r\n\t/**\r\n\t * Holds a Disposer reference to hiding [[Animation]] currently playing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IDisposer}\r\n\t */\r\n\tprotected _hideDisposer: IDisposer;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _valueAnimation: Animation;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _locationAnimation: Animation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * @todo Adding events to disposers produces errors in some cases, which means that chart is using disposed Data Items which is not right\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Data Item's position index in Component's data.\r\n\t *\r\n\t * @return {number} Index\r\n\t */\r\n\tpublic get index(): number {\r\n\t\treturn this.component.dataItems.indexOf(this);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of [[Animations]] objects currently mutating Data Item's values.\r\n\t *\r\n\t * @return {List<Animation>} [description]\r\n\t */\r\n\tpublic get animations(): List<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = new List<Animation>();\r\n\t\t\tthis._disposers.push(new ListDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param {boolean} value Visible?\r\n\t */\r\n\tpublic set visible(value: boolean) {\r\n\t\tthis.setVisibility(value);\r\n\t\tif (this._visible != value) {\r\n\t\t\tthis._visible = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", {\r\n\t\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tvisible: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables all Sprites associated with this Data Item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic set __disabled(value: boolean) {\r\n\t\t//\tif (this._disabled != value) { // not good\r\n\t\tthis._disabled = value;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.__disabled = value;\r\n\t\t});\r\n\t\t//\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Is this Data Item currently disabled?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic get __disabled(): boolean {\r\n\t\treturn this._disabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param {boolean} value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean): void {\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.visible = value;\r\n\t\t\t//sprite.hide();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this Data Item is currently visible.\r\n\t *\r\n\t * @return {boolean} Visible?\r\n\t */\r\n\tpublic get visible(): boolean {\r\n\t\treturn this._visible;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param {number}    duration  Animation duration (ms)\r\n\t * @param {number}    delay     Delay animation (ms)\r\n\t * @param {string[]}  fields    A list of fields to reset values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): Animation {\r\n\t\tthis.isHiding = false;\r\n\r\n\t\tif (this._hideDisposer) {\r\n\t\t\tthis.removeDispose(this._hideDisposer);\r\n\t\t}\r\n\r\n\t\tlet animation: Animation;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.show(duration);\r\n\t\t});\r\n\t\tif (fields) {\r\n\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\tanimation = this.setWorkingValue(field, this.values[field].value, duration, delay);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._visible = true;\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param {number}    duration  Animation duration (ms)\r\n\t * @param {number}    delay     Delay animation (ms)\r\n\t * @param {number}    toValue   A value to set to `fields` when hiding\r\n\t * @param {string[]}  fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): Animation {\r\n\r\n\t\tthis.isHiding = true;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.hide(duration);\r\n\t\t});\r\n\r\n\t\tif ($type.isNumber(toValue) && fields) {\r\n\t\t\tlet animation: Animation;\r\n\r\n\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\tlet anim = this.setWorkingValue(field, toValue, duration, delay);\r\n\t\t\t\tif (anim) {\r\n\t\t\t\t\tanimation = anim;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (animation) {\r\n\t\t\t\tthis._hideDisposer = animation.events.on(\"animationend\", () => {\r\n\t\t\t\t\tthis.visible = false;\r\n\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._disposers.push(this._hideDisposer);\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.visible = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a duration (ms) the Data Item should take to animate from one\r\n\t * value to another.\r\n\t *\r\n\t * If the duration is not specified via parameter, this method will try to\r\n\t * request a default duration from the ralated `Component`.\r\n\t *\r\n\t * @param  {number}  duration  Default duration (ms)\r\n\t * @return {number}            Duration (ms)\r\n\t */\r\n\tpublic getDuration(duration?: number): number {\r\n\t\tlet component: Component = this.component;\r\n\t\tif (component) {\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = component.interpolationDuration;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"duration\", duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a numeric value for specific data field.\r\n\t *\r\n\t * If `calculated` is not set, it will return a raw value, as it is in\r\n\t * source data.\r\n\t *\r\n\t * If `calculated` is set, it will return a pre-calculated specific value.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {CalculatedValue}  calculated  A calculated value name\r\n\t * @return {number}                       Value\r\n\t */\r\n\tpublic getValue(name: string, calculated?: CalculatedValue): number {\r\n\t\tif (name && this.component) {\r\n\t\t\tif (!calculated) {\r\n\t\t\t\tcalculated = (<any>this.component.dataFields)[name + \"Show\"];\r\n\t\t\t\tif (!calculated) {\r\n\t\t\t\t\tcalculated = \"value\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst value = this.values[name][calculated];\r\n\r\n\t\t\tif (this.adapter.isEnabled(\"value\")) {\r\n\t\t\t\treturn this.adapter.apply(\"value\", {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tfield: name\r\n\t\t\t\t}).value;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a current working value for a specific data field.\r\n\t *\r\n\t * The actual value may differ from the one returned by `getValue()`. The\r\n\t * latter returns static values from the data source.\r\n\t *\r\n\t * `getWorkingValue()` returns current value, which is usually different if\r\n\t * Data Item is animating from one state to another.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {CalculatedValue}  calculated  A calculated value name\r\n\t * @return {number}                       Value\r\n\t */\r\n\tpublic getWorkingValue(name: string): number {\r\n\t\tif (name && this.component) {\r\n\t\t\tlet realName = (<any>this.component.dataFields)[name + \"Show\"];\r\n\t\t\tif (!realName) {\r\n\t\t\t\trealName = \"workingValue\";\r\n\t\t\t}\r\n\r\n\t\t\treturn this.adapter.apply(\"workingValue\", {\r\n\t\t\t\tworkingValue: this.values[name][realName],\r\n\t\t\t\tfield: name\r\n\t\t\t}).workingValue;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets a numeric value for specific data field.\r\n\t *\r\n\t * @param {string}           name        Data field name\r\n\t * @param {number}           value       Value\r\n\t * @param {CalculatedValue}  calculated  Calculated data field name\r\n\t * @param {number}           duration    Duration (ms) to animate to new value to\r\n\t * @param {number}           delay       Delay animation (ms)\r\n\t */\r\n\tpublic setValue(name: string, value: number, duration?: number, delay?: number): void {\r\n\t\tlet currentValue: number = this.values[name].value;\r\n\t\tduration = this.getDuration(duration);\r\n\r\n\t\tif (currentValue !== value) {\r\n\t\t\tthis.values[name].value = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"valuechanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"valuechanged\", {\r\n\t\t\t\t\ttype: \"valuechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setWorkingValue(name, value, duration, delay);\r\n\t}\r\n\r\n\tsetCalculatedValue(name: string, value: number, calculated?: CalculatedValue): void {\r\n\t\tlet currentValue: number = this.values[name][calculated];\r\n\r\n\t\tif (currentValue !== value && $type.isNumber(value)) {\r\n\t\t\tthis.values[name][calculated] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"calculatedvaluechanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"calculatedvaluechanged\", {\r\n\t\t\t\t\ttype: \"calculatedvaluechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set current working numeric value for a specific data field.\r\n\t *\r\n\t * @param  {string}           name        Data field name\r\n\t * @param  {number}           value       Value\r\n\t * @param  {CalculatedValue}  calculated  Calculated data field name\r\n\t * @param  {number}           duration    Duration (ms) to animate to new value to\r\n\t * @param  {number}           delay       Delay animation (ms)\r\n\t * @return {Animation}                    An [[Animation]] object used for transition to new values\r\n\t */\r\n\tpublic setWorkingValue(name: string, value: number, duration?: number, delay?: number): Animation {\r\n\t\tif ($type.isNumber(this.values[name].value)) {\r\n\t\t\tduration = this.getDuration(duration);\r\n\t\t\tlet workingValue: number = this.values[name].workingValue;\r\n\r\n\t\t\tif ((duration > 0) && $type.isNumber(workingValue) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\r\n\t\t\t\tif (workingValue != value) {\r\n\r\n\t\t\t\t\tif (this._valueAnimation) {\r\n\t\t\t\t\t\tthis._valueAnimation.stop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet animation: Animation = this.animate({ childObject: this.values[name], property: \"workingValue\", from: workingValue, to: value }, duration, this.component.interpolationEasing);\r\n\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\tanimation.events.on(\"animationstart\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationend\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tthis._valueAnimation = animation;\r\n\t\t\t\t\treturn animation;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._valueAnimation) {\r\n\t\t\t\t\t\tthis._valueAnimation.stop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.values[name].workingValue = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.values[name].workingValue = value;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", {\r\n\t\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a relative location for a data field.\r\n\t *\r\n\t * A location is always relative on a 0 to 1 scale, with 0 being beginning,\r\n\t * 0.5 middle and 1 end.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param {string}  name      Data field name\r\n\t * @param {number}  value     Location (0-1)\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t * @param {number}  delay     Delay animation (ms)\r\n\t */\r\n\tpublic setLocation(name: string, value: number, duration?: number, delay?: number) {\r\n\t\tlet currentLocation: number = this.locations[name];\r\n\r\n\t\tif (currentLocation !== value) {\r\n\t\t\tthis.locations[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"locationchanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"locationchanged\", {\r\n\t\t\t\t\ttype: \"locationchanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.setWorkingLocation(name, value, duration, delay);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a current working location for a data field.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param {string}  name      Data field name\r\n\t * @param {number}  value     Location (0-1)\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t * @param {number}  delay     Delay animation (ms)\r\n\t */\r\n\tpublic setWorkingLocation(name: string, value: number, duration?: number, delay?: number): Animation {\r\n\t\tduration = this.getDuration(duration);\r\n\t\tlet workingLocation: number = this.workingLocations[name];\r\n\r\n\t\tif ((duration > 0) && $type.isNumber(workingLocation) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\t\t\tif (workingLocation != value) {\r\n\t\t\t\tif (this._locationAnimation) {\r\n\t\t\t\t\tthis._locationAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet animation: Animation = this.animate({ childObject: this.workingLocations, property: name, from: workingLocation, to: value }, duration, this.component.interpolationEasing);\r\n\t\t\t\tanimation.delay(delay);\r\n\t\t\t\tanimation.events.on(\"animationstart\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationend\", this.handleInterpolationProgress, this);\r\n\t\t\t\tthis._locationAnimation = animation;\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._locationAnimation) {\r\n\t\t\t\t\tthis._locationAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.workingLocations[name] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.workingLocations[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"workinglocationchanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"workinglocationchanged\", {\r\n\t\t\t\t\ttype: \"workinglocationchanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets Date value to a data field.\r\n\t *\r\n\t * @param {string}  name      Data field name\r\n\t * @param {Date}    date      Date object\r\n\t * @param {number}  duration  Duration (ms) to animate to new value to\r\n\t */\r\n\tpublic setDate(name: string, date: Date, duration?: number) {\r\n\t\tlet currentDate: Date = this.dates[name];\r\n\t\tif (currentDate !== date) {\r\n\t\t\tthis.dates[name] = date;\r\n\t\t\tthis.setValue(name, date.getTime(), duration);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Date value of the data field.\r\n\t *\r\n\t * @param  {string}  name  Data field name\r\n\t * @return {Date}          Date object\r\n\t */\r\n\tpublic getDate(name: string): Date {\r\n\t\treturn this.adapter.apply(\"date\", {\r\n\t\t\tdate: this.dates[name],\r\n\t\t\tfield: name\r\n\t\t}).date;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a Data Item-specific visual properties to apply to related elements.\r\n\t *\r\n\t * @param {string}  name   Property name\r\n\t * @param {any}     value  Property value\r\n\t */\r\n\tpublic setProperty(name: string, value: any) {\r\n\t\tif (this.properties[name] !== value) {\r\n\t\t\tthis.hasProperties = true;\r\n\t\t\tthis.properties[name] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", {\r\n\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: name,\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a related category for this Data Item.\r\n\t *\r\n\t * @todo Review description\r\n\t * @param {string}  name   Data field name\r\n\t * @param {string}  value  Category\r\n\t */\r\n\tpublic setCategory(name: string, value: string) {\r\n\t\tif (this.categories[name] !== value) {\r\n\t\t\tthis.categories[name] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the Data Item, including all related data.\r\n\t *\r\n\t * @return {this} New Data Item clone\r\n\t */\r\n\tpublic clone(cloneId?: string): this {\r\n\t\tlet dataItem: this = super.clone(cloneId);\r\n\t\tif (this.dataContext) {\r\n\t\t\tdataItem.dataContext = $utils.copy(this.dataContext, {});\r\n\t\t}\r\n\r\n\t\t$utils.copyProperties(this.locations, dataItem.locations);\r\n\t\t$utils.copyProperties(this.properties, dataItem.properties);\r\n\t\t$utils.copyProperties(this.categories, dataItem.categories);\r\n\t\t$utils.copyProperties(this.values, dataItem.values);\r\n\t\t$utils.copyProperties(this.dates, dataItem.dates);\r\n\r\n\t\t$object.each(this.values, (name, value) => {\r\n\t\t\t//for (let name in this.values) {\r\n\t\t\tdataItem.values[name] = $object.copy(value);\r\n\t\t});\r\n\r\n\t\tdataItem.component = this.component;\r\n\r\n\t\treturn dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets opacity for all Data Item's related elements (Sprites).\r\n\t *\r\n\t * @param {number} value Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.opacity = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets whether this data point should not be included in the scale and\r\n\t * minimum/maximum calculations.\r\n\t *\r\n\t * E.g. some we may want to exclude a particular data point from influencing\r\n\t * [[ValueAxis]] scale.\r\n\t *\r\n\t * @param {boolean}  value  Exclude from min/max calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\r\n\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"propertychanged\", {\r\n\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tproperty: \"ignoreMinMax\",\r\n\t\t\t\tvalue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Exclude from min/max calculations?\r\n\t * @return {boolean} Exclude from min/max calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and starts an [[Animation]] to interpolate (morph) Data Item's\r\n\t * properties and/or values.\r\n\t *\r\n\t * @see {@link Animation}\r\n\t * @param  {IAnimationOptions[] | IAnimationOptions}  animationOptions  Animation options\r\n\t * @param  {number}                                   duration          Animation duration (ms)\r\n\t * @param  {function}                                 easing            Easing function\r\n\t * @return {Animation}                                                  Animation\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles intermediate steps when Data Item is interpolating (morphing) from\r\n\t * one value to another.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Animation, IAnimationEvents>[\"animationstart\" | \"animationend\" | \"animationprogress\"]} event Event object\r\n\t */\r\n\tpublic handleInterpolationProgress(event: AMEvent<Animation, IAnimationEvents>[\"animationstart\" | \"animationend\" | \"animationprogress\"]) {\r\n\t\tlet animation: Animation = event.target;\r\n\t\t// it's always only one options, no need cycle\r\n\t\tlet animationOptions: IAnimationOptions = animation.animationOptions[0];\r\n\t\tif (animationOptions) {\r\n\t\t\tlet property = animationOptions.property;\r\n\r\n\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", {\r\n\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: property\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether Data Item has values set for all of the data fields,\r\n\t * supplied via argument.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {string[]}  fields  Field list to check\r\n\t * @return {boolean}           Has values for all fields?\r\n\t */\r\n\tpublic hasValue(fields: string[]): boolean {\r\n\t\t// todo: what about categories?\r\n\t\tfor (let i: number = 0; i < fields.length; i++) {\r\n\t\t\tif (!$type.hasValue(this.values[fields[i]].value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the Data Item.\r\n\t *\r\n\t * In nested data structures, like TreeMap, this indicates the level this\r\n\t * data point is at, in relation to the parent Data Item.\r\n\t *\r\n\t * @return {number} Depth\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.depth + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets to a reference to an original object from Component's data.\r\n\t *\r\n\t * @return {Object} [description]\r\n\t */\r\n\tpublic get dataContext(): Object {\r\n\t\treturn this._dataContext;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to an original object in Component's data, that this Data Item\r\n\t * is derived from.\r\n\t *\r\n\t * @param {Object} value Original data object\r\n\t */\r\n\tpublic set dataContext(value: Object) {\r\n\t\tthis._dataContext = value;\r\n\t}\r\n\r\n}\r\n"]}