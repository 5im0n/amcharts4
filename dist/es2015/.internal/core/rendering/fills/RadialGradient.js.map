{"version":3,"file":"RadialGradient.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/rendering/fills/RadialGradient.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Contains code and logic for generating radial gradients.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { getSystem } from \"../../System\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport { IGradientStop } from \"./LinearGradient\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Radial gradient class.\r\n */\r\nexport class RadialGradient extends BaseObject {\r\n\r\n\t/**\r\n\t * List of colors switch definitions in a gradient.\r\n\t *\r\n\t * @type {List<IGradientStop>}\r\n\t */\r\n\tprotected _stops: List<IGradientStop> = new List<IGradientStop>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element used to draw gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Group}\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to Paper to add element to.\r\n\t *\r\n\t * @type {Paper}\r\n\t */\r\n\tprotected _paper: Paper;\r\n\r\n\t/**\r\n\t * A center coordinates for the radial gradient.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tprotected _center: IPoint;\r\n\r\n\t/**\r\n\t * Focal point coordinates.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tprotected _focalPoint: IPoint;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.element = this.paper.addGroup(\"radialGradient\");\r\n\t\tthis.id = \"gradient-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws gradient.\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t\tlet gradientElement = this.element;\r\n\t\tif (this._center) {\r\n\t\t\tgradientElement.attr({ \"cx\": this._center.x, \"cy\": this._center.y });\r\n\t\t}\r\n\r\n\t\tif (this._focalPoint) {\r\n\t\t\tgradientElement.attr({ \"fx\": this._focalPoint.x, \"fy\": this._focalPoint.y });\r\n\t\t}\r\n\r\n\t\t$iter.each($iter.indexed(this._stops.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet stop = a[1];\r\n\t\t\tlet offset: number = stop.offset;\r\n\r\n\t\t\tif (isNaN(offset)) {\r\n\t\t\t\toffset = i / (this._stops.length - 1)\r\n\t\t\t}\r\n\r\n\t\t\tlet gradientStop: AMElement = this.paper.add(\"stop\");\r\n\t\t\tgradientStop.attr({ \"stop-color\": stop.color });\r\n\t\t\tif (!isNaN(stop.opacity)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n\t\t\t}\r\n\t\t\tif (!isNaN(offset)) {\r\n\t\t\t\tgradientStop.attr({ \"offset\": offset });\r\n\t\t\t}\r\n\r\n\t\t\tgradientElement.add(gradientStop);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a color step to the gradient.\r\n\t *\r\n\t * @param {Color}   color    Color (hex code or named color)\r\n\t * @param {number}  opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n\t * @param {number}  offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n\t */\r\n\tpublic addColor(color: Color, opacity?: number, offset?: number): void {\r\n\t\tthis._stops.push({ color: color, opacity: opacity, offset: offset });\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Paper]] instace to use for the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Paper}  paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.draw();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return {Paper} Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getSystem().ghostPaper;\r\n\t}\r\n\r\n\t/**\r\n\t * Center coordinates of the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPoint}  point  Center point\r\n\t */\r\n\tpublic set center(point: IPoint) {\r\n\t\tthis._center = point;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Focal point coordinates of the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IPoint}  point  Focal point\r\n\t */\r\n\tpublic set focalPoint(point: IPoint) {\r\n\t\tthis._focalPoint = point;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic copyFrom(source:this){\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis._stops = source.stops;\r\n\t\tthis._focalPoint = source.focalPoint;\r\n\t\tthis._center = source.center;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of color stops in the gradient.\r\n\t *\r\n\t * @return {List<IGradientStop>} Stops\r\n\t */\r\n\tpublic get stops(): List<IGradientStop> {\r\n\t\treturn this._stops;\r\n\t}\r\n\r\n}\r\n"]}