{"version":3,"file":"Renderer.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Interaction } from \"../../core/interaction/Interaction\";\nimport { options } from \"../Options\";\nimport { Sprite } from \"../Sprite\";\n\n/**\n * The item with the information to be queued.\n * \n * @class Item\n * @ignore Exclude from docs\n */\nclass Item {\n\n    constructor(readonly element: HTMLElement, readonly sprite: Sprite, readonly callback: Function) { }\n}\n\n/**\n * Timeout to delay scroll and resize event handler triggering.\n */\nlet timeout = 0;\n\nconst items = new Set<Item>();\nconst queue = new Array<Item>();\n\n/**\n * Remove an item from queue.\n * \n * @param item The item to be removed from queue.\n */\nconst removeFromQueue = (item: Item) => {\n\n    let index = queue.indexOf(item);\n\n    if (index > -1) {\n        queue.splice(index, 1);\n    }\n}\n\n/**\n * Add an item to queue.\n * \n * @param item The item to be queued.\n */\nconst addToQueue = (item: Item) => {\n\n    if (item.sprite.isDisposed()) {\n        return;\n    }\n\n    // Queue charts but show event out of the viewport\n    queue.push(item);\n\n    if (queue.length > 1) {\n\n        let previousSprite = queue[queue.length - 2].sprite;\n\n        if (previousSprite.isReady()) {\n            item.callback();\n        } else {\n\n            // Add an event to previous chart\n            previousSprite.events.once(\"ready\", () => {\n                item.callback();\n            });\n        }\n    } else {\n        item.callback();\n    }\n\n    // Remove from renderer when ready\n    item.sprite.events.once(\"ready\", () => {\n        removeFromQueue(item);\n    });\n\n    // Remove from renderer before disposing\n    item.sprite.events.once(\"beforedisposed\", () => {\n\n        if (items.has(item)) {\n            items.delete(item);\n        }\n\n        removeFromQueue(item);\n    });\n}\n\n/**\n * Check whether an element is visible on the viewport.\n * \n * @param item The item to be checked.\n * @param clientWidth The HTML element width.\n * @param clientHeight The HTML element height.\n * @param e The event.\n */\nconst check = (item: Item, clientWidth: number, clientHeight: number, e: Event) => {\n\n    let clientRect = item.element.getBoundingClientRect(),\n        visibleHeight = clientRect.height;\n\n    // If there is something visible vertically (Should we check horizontally?)\n    if ((clientRect.top >= visibleHeight * -1 && clientRect.bottom <= clientHeight + visibleHeight)\n        // If there is an area visible in the container. This may be needed if the CSS display and\n        // and dimenion properties didn't take effect yet depending when it's loaded.\n        && (clientRect.top || clientRect.right || clientRect.bottom || clientRect.left)) {\n\n        if (options.queue) {\n            addToQueue(item);\n        } else {\n            item.callback();\n        }\n\n        // Remove the element from the list of items as the callback is already executed\n        items.delete(item);\n    }\n}\n\n/**\n * Handler to check when an element is in the viewport\n * \n * @param e The event object.\n * @param instantly Whether the execute the check right away or wait.\n */\nconst handler = (e: Event, instantly?: boolean) => {\n\n    clearTimeout(timeout);\n\n    let executor = () => {\n\n        let html = document.documentElement,\n            clientWidth = html.clientWidth,\n            clientHeight = html.clientHeight,\n            item;\n\n        for (item of items) {\n            check(item, clientWidth, clientHeight, e);\n        }\n\n        // Unbind the events if there is nothing to watch for\n        if (!items.size) {\n\n            window.removeEventListener(\"resize\", handler, false);\n            window.removeEventListener(\"scroll\", handler, false);\n        }\n    }\n\n    if (instantly) {\n        executor();\n    } else {\n        // Delay the checks\n        timeout = setTimeout(executor, 200);\n    }\n}\n\n/**\n * Promise resolved when the DOM content finishes loading or the `deviceready`\n * event triggers in a Cordova environment.\n */\nexport let documentReady = new Promise<Event>((resolve, reject) => {\n\n    // Fallback to the current document\n    let doc = window.document;\n\n    if (doc.readyState === \"complete\") {\n        resolve();\n    } else {\n\n        // Support Cordova or document ready events\n        doc.addEventListener((window as any).cordova ? \"deviceready\" : \"DOMContentLoaded\", (e) => {\n            resolve(e);\n        }, false);\n    }\n});\n\n/**\n * Add elements to be checked when available on the viewport. Also add\n * callback to be executed when the element is on the viewport.\n * \n * @param element  The HTML element where the charts is rendered\n * @param callback The callback function\n */\nexport function add(element: HTMLElement, sprite: Sprite, callback: Function): void {\n\n    documentReady.then(async (e) => {\n\n        if (!options.queue && !options.onlyShowOnViewport) {\n\n            // Show the chart right away and don't wait to be in the viewport or queued\n            callback();\n\n        } else if (options.queue && !options.onlyShowOnViewport) {\n            addToQueue(new Item(element, sprite, callback));\n        } else {\n\n            // Only bind the DOM events when there is something to check\n            if (!items.size) {\n\n                window.addEventListener(\"resize\", handler, Interaction.passiveSupported ? { passive: true } : false);\n                window.addEventListener(\"scroll\", handler, Interaction.passiveSupported ? { passive: true } : false);\n            }\n\n            // Add items to show when visible on the viewport\n            items.add({\n                element: element,\n                sprite: sprite,\n                callback: callback\n            });\n\n            // Call the handler right away to check it the element is already in the\n            // viewport\n            handler(e, true);\n        }\n    });\n}"]}