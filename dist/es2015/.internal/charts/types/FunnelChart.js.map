{"version":3,"file":"FunnelChart.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/types/FunnelChart.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,YAAY,EAAgG,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AASlK,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAI/C,OAAO,KAAK,KAAK,MAAM,uBAAuB,CAAC;AAE/C;;;;;GAKG;AAEH;;;;GAIG;AACH;IAAyC,+CAAoB;IAS5D;;OAEG;IACH;QAAA,YACC,iBAAO,SAGP;QAFA,KAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC;QACvC,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAEF,0BAAC;AAAD,CAAC,AAlBD,CAAyC,oBAAoB,GAkB5D;;AAiCD;;;;;GAKG;AAEH;;;;;;;GAOG;AACH;IAAiC,uCAAY;IAqC5C;;OAEG;IACH;QAAA;QAEC,OAAO;QACP,iBAAO,SAaP;QAZA,KAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAE/B,KAAI,CAAC,eAAe,CAAC,MAAM,GAAG,YAAY,CAAC;QAE3C,KAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAE7B,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE;QAEjD,CAAC,CAAC,CAAA;QAEF,cAAc;QACd,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAED;;;OAGG;IACO,2CAAqB,GAA/B;QAEC,iBAAM,qBAAqB,WAAE,CAAC;QAE9B,sDAAsD;QACtD,yEAAyE;QACzE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SAC3D;IACF,CAAC;IAED;;;;OAIG;IACI,8BAAQ,GAAf;QACC,iBAAM,QAAQ,WAAE,CAAC;IAClB,CAAC;IACF,kBAAC;AAAD,CAAC,AAjFD,CAAiC,YAAY,GAiF5C;;AAED;;;;;GAKG;AACH,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC;AACxD,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,mBAAmB,CAAC","sourcesContent":["/**\r\n * Funnel chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, IPercentChartProperties, IPercentChartDataFields, IPercentChartAdapters, IPercentChartEvents, PercentChartDataItem } from \"./PercentChart\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { FunnelSeries, FunnelSeriesDataItem } from \"../series/FunnelSeries\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { List, IListEvents, ListTemplate } from \"../../core/utils/List\";\r\nimport { Legend } from \"../Legend\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelChartDataItem extends PercentChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @type {FunnelChart}\r\n\t */\r\n\tpublic _component!: FunnelChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelChart]].\r\n */\r\nexport interface IFunnelChartDataFields extends IPercentChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelChart]]\r\n */\r\nexport interface IFunnelChartProperties extends IPercentChartProperties { }\r\n\r\n/**\r\n * Defines events for [[FunnelChart]].\r\n */\r\nexport interface IFunnelChartEvents extends IPercentChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelChartAdapters extends IPercentChartAdapters, IFunnelChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a Funnel chart.\r\n *\r\n * @see {@link IFunnelChartEvents} for a list of available Events\r\n * @see {@link IFunnelChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/funnel-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelChart extends PercentChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t *\r\n\t * @type {IFunnelChartDataFields}\r\n\t */\r\n\tpublic _dataFields: IFunnelChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IFunnelChartProperties}\r\n\t */\r\n\tpublic _properties!: IFunnelChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {SeriesAdapters}\r\n\t */\r\n\tpublic _adapter!: IFunnelChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @type {IFunnelChartEvents}\r\n\t */\r\n\tpublic _events!: IFunnelChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t *\r\n\t * @type {FunnelSeries}\r\n\t */\r\n\tpublic _seriesType: FunnelSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelChart\";\r\n\r\n\t\tthis.seriesContainer.layout = \"horizontal\";\r\n\r\n\t\tthis.padding(15, 15, 15, 15);\r\n\r\n\t\tthis.seriesContainer.events.on(\"maxsizechanged\", () => {\r\n\r\n\t\t})\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the chart, causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelChart\"] = FunnelChart;\r\nregistry.registeredClasses[\"FunnelChartDataItem\"] = FunnelChartDataItem;\r\n"]}