{"version":3,"file":"Series.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/series/Series.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents } from \"../../core/utils/List\";\r\nimport { OrderedList, OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { Adapter } from \"../../core/utils/Adapter\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis, AxisItemLocation } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { ILegendItem, LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { NumberFormatter } from \"../../core/formatters/NumberFormatter\";\r\nimport { DateFormatter } from \"../../core/formatters/DateFormatter\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { system } from \"../../core/System\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n * \r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t * \r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t * \r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t * \r\n\t * @ignore Exclude from docs\r\n\t * @todo review description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic bullets = new Dictionary<string, Bullet>();\r\n\r\n\t/**\r\n\t * Should this series be shown in the legend?\r\n\t * \r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _visibleInLegend: boolean = true;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Series}\r\n\t */\r\n\tpublic _component: Series;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\t\t\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be visible in legend?\r\n\t * \r\n\t * @param {boolean} value Visible in legend?\r\n\t */\r\n\tpublic set visibleInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"visibleInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Visible in legend?\r\n\t */\r\n\tpublic get visibleInLegend(): boolean {\r\n\t\treturn this.properties.getKey(\"visibleInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t * \r\n\t * @param {number}  value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\t\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tvalue?: string;\t\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 50\r\n\t * @type {number}\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Are bullets completely disabled in the series?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tbulletsDisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\r\n\t/**\r\n\t * Applied to the series name when it is retrieved.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tname: string,\r\n\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\titemReaderText: string\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n * \r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component implements ILegendItem<Series, ISeriesEvents> {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ISeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IComponentProperties}\r\n\t */\r\n\tpublic _properties: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t * \r\n\t * @ignore Exclude from docs\r\n\t * @type {ISeriesAdapters}\r\n\t */\r\n\tpublic _adapter: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t * \r\n\t * @type {SpriteEventDispatcher<AMEvent<Series, ISeriesEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<Series, ISeriesEvents>>;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {SeriesDataItem}\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A name of the Series.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tprotected _title: string;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t * \r\n\t * @type {LegendDataItem<Series, ISeriesEvents>}\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem<Series, ISeriesEvents>;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t * \r\n\t * @type {ListTemplate<Bullet>}\r\n\t */\r\n\tprotected _bullets: ListTemplate<Bullet>;\r\n\r\n\t/**\r\n\t * Series' bullets by id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary<string, List<Bullet>>}\r\n\t */\r\n\tpublic bulletsLists: Dictionary<string, List<Bullet>>;\r\n\r\n\t/**\r\n\t * Bullet iterations by id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic bulletsIterators: Dictionary<string, $iter.ListIterator<Bullet>>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t * \r\n\t * @ignore Exclude from docs\r\n\t * @type {SerialChart}\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t * \r\n\t * @ignore Exclude from docs\r\n\t * @type {Container}\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t * \r\n\t * @type {List<AxisDataItem>}\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t * \r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t * \r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t * \r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t * \r\n\t * @type {Dictionary}\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t * \r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {Dictionary}\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t * \r\n\t * @type {Number}\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t * \r\n\t * @type {string}\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\t/**\r\n\t * flag which is set to true when initial animation is finished\r\n\t */\r\n\tpublic appeared:boolean = false;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.noLayouting = true;\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"insert\", this.processAxisRange, this);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tthis.bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis.bulletsContainer.noLayouting = true;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\r\n\t\tthis.hiddenState.easing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.once(\"prevalidate\", this.appear, this);\r\n\r\n\t\tthis.hiddenState.properties.opacity = 1; // because we hide by changing values\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t * \r\n\t * @see {@link DataItem}\r\n\t * @return {SeriesDataItem} Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param {this[\"_chart\"]}  value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {this} Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Performs initial animation of the series after data validation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appear(): void {\r\n\t\tthis.appeared = false;\r\n\t\tthis.hide(0);\t\t\r\n\t\tlet animation = this.show();\r\n\t\tif(animation){\r\n\t\t\tanimation.events.once(\"animationend\", ()=>{\r\n\t\t\t\tthis.appeared = true;\r\n\t\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.appeared = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Fades in bullet container and related elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}     duration  Animation duration (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic showReal(duration: number): Animation {\r\n\t\tthis.bulletsContainer.show(duration);\r\n\t\treturn super.showReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Fades out bullet container and related elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}     duration  Animation duration (ms)\r\n\t * @return {Animation}            Animation\r\n\t */\r\n\tpublic hideReal(duration: number): Animation {\r\n\t\tthis.bulletsContainer.hide(duration);\r\n\t\treturn super.hideReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t * \r\n\t * @param {Bullet}  bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t * \r\n\t * @param {IListEvents<Bullet>[\"insert\"]}  event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Bullet>[\"insert\"]) {\r\n\t\tlet bullet: Bullet = event.newValue;\r\n\r\n\t\t// create list and iterator\r\n\t\tlet bulletsList = new ListTemplate<Bullet>(bullet);\r\n\t\tthis.bulletsLists.setKey(bullet.uid, bulletsList);\r\n\r\n\t\tlet iterator = new $iter.ListIterator<Bullet>(bulletsList, () => bulletsList.create());\r\n\t\tthis.bulletsIterators.setKey(bullet.uid, iterator);\r\n\t\titerator.createNewItems = true;\r\n\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tif (this.itemsFocusable()) {\r\n\t\t\tbullet.focusable = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param  {string}  key  Key\r\n\t * @return {number}       Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string): number {\r\n\t\t// find first\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param {OrderedList<this[\"_dataItem\"]>} dataItems [description]\r\n\t */\r\n\tprotected processValues(working:boolean) {\r\n\t\tlet dataItems = this.dataItems;\r\n\r\n\t\tlet count: { [index: string]: number } = {};\r\n\t\tlet sum: { [index: string]: number } = {};\r\n\t\tlet low: { [index: string]: number } = {};\r\n\t\tlet high: { [index: string]: number } = {};\r\n\t\tlet open: { [index: string]: number } = {};\r\n\t\tlet close: { [index: string]: number } = {};\r\n\t\tlet previous: { [index: string]: number } = {};\r\n\t\tlet first: { [index: string]: number } = {};\r\n\r\n\t\tlet duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\tlet startIndex: number = this._workingStartIndex;\r\n\t\tlet endIndex: number = this._workingEndIndex;\r\n\r\n\t\t// it's ok, we loop trough all the data and check if i is within start/end index later\r\n\t\t$iter.each($iter.indexed(dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\tfor (let key in dataItem.values) {\r\n\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\tif (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\tfirst[key] = this.getFirstValue(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// change\r\n\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t// change from start percent\r\n\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t// previous change\r\n\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\tprevValue = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t// previous change percent\r\n\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t// save previous\r\n\t\t\t\tprevious[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// todo: this is not often needed (pie chart mostly), any chance to avoid? chart could have a flag which would enable/disable this calculations\r\n\t\t// todo: think what to do with value.percent - we need to cycle through all data in order to have proper values, but this is expensive. flag might be a solution.\r\n\t\t$iter.each($iter.indexed(dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tlet ksum: number = sum[key];\r\n\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\r\n\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i >= startIndex && i <= endIndex) {\r\n\t\t\t\t\tlet percent: number; // used to be = 0; but no good for pie chart\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && ksum > 0) {\r\n\t\t\t\t\t\tpercent = value / ksum * 100;\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\r\n\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t// so we do startIndex - 1\r\n\t\tif (startIndex > 0) {\r\n\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t//for (let key in zeroItem.values) {\r\n\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t// change\r\n\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t// change percent\r\n\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t//}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.bulletsIterators) {\r\n\t\t\t$iter.each(this.bulletsIterators.iterator(), (a) => {\r\n\t\t\t\tlet iterator = a[1];\r\n\t\t\t\titerator.reset();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.hideUnusedBullets();\r\n\t\tthis.bulletsContainer.fill = this.fill;\r\n\t\tthis.bulletsContainer.stroke = this.stroke;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {SeriesDataItem}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets && !this.bulletsDisabled) {\r\n\t\t\t$iter.each(this.bullets.iterator(), (bulletTemplate) => {\r\n\t\t\t\tlet iterator: $iter.ListIterator<Bullet> = this.bulletsIterators.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Bullet = <Bullet>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (!bullet) {\r\n\t\t\t\t\tbullet = iterator.getFirst();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\titerator.removeItem(bullet);\r\n\t\t\t\t}\r\n\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.dataItem = dataItem;\r\n\r\n\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet);\r\n\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet);\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\tbullet.visible = true;\r\n\r\n\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\tlet readerText = this.itemReaderText || (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\tbullet.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbullet.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\tbullet.events.once(\"over\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbullet.events.once(\"out\", (ev) => {\r\n\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\r\n\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t * \r\n\t * @todo Description\r\n\t */\r\n\tprotected handleDataItemWorkingValueChange(event:AMEvent<SeriesDataItem, IDataItemEvents>[\"workingvaluechanged\"]): void {\r\n\t\tthis.invalidateProcessedData();\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param {IListEvents<AxisDataItem>[\"insert\"]}  event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"insert\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Axis}    axis  [description]\r\n\t * @return {string}        [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {number}  xPosition  X\r\n\t * @param {number}  yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between two adjacent bullets in pixels.\r\n\t *\r\n\t * If bullet is closer, it will be skipped and not shown.\r\n\t *\r\n\t * This allows to avoid crammed up graphs wil a lot of bullets.\r\n\t *\r\n\t * @default 50\r\n\t * @param {number}  value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value);\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * List of bullets that can be used for the series' purposes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {ListTemplate<Bullet>} [description]\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Bullet> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Bullet>(new Bullet());\r\n\t\t\tthis._bullets.events.on(\"insert\", this.processBullet, this);\r\n\r\n\t\t\tthis.bulletsIterators = new Dictionary<string, $iter.ListIterator<Bullet>>();\r\n\t\t\tthis.bulletsLists = new Dictionary<string, List<Bullet>>();\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides bullet elements that are currently not in use.\r\n\t */\r\n\tprotected hideUnusedBullets(): void {\r\n\t\t// hide all unused\r\n\t\tlet bulletsIterators: Dictionary<string, $iter.ListIterator<Bullet>> = this.bulletsIterators;\r\n\t\tif (bulletsIterators) {\r\n\t\t\t$iter.each(bulletsIterators.iterator(), (a) => {\r\n\t\t\t\tlet iterator = a[1];\r\n\t\t\t\titerator.createNewItems = false;\r\n\t\t\t\t$iter.each(iterator.iterator(), (bullet) => {\r\n\t\t\t\t\tbullet.visible = false;\r\n\t\t\t\t});\r\n\t\t\t\titerator.clear();\r\n\t\t\t\titerator.createNewItems = true;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys series and related elements.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis.removeDispose(this.bulletsContainer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t * \r\n\t * @param {string}  value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis._title = value;\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.adapter.apply(\"name\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t * \r\n\t * @param {string} value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"itemReaderText\", readerText);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {boolean} Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t * \r\n\t * @param {LegendDataItem<Series, ISeriesEvents>}  value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem<Series, ISeriesEvents>) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.container.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {LegendDataItem<Series, ISeriesEvents>} Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem<Series, ISeriesEvents> {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]}  dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"]) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t\t\tvalueLabel.deepInvalidate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t\t\tlabel.deepInvalidate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// todo: we might change color of bullets/etc here\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t\tvalueLabel.deepInvalidate();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText) {\r\n\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t\tlabel.deepInvalidate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t * \r\n\t * @param {Series}  source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Are bullets completely disabled in the series?\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Bullets disabled?\r\n\t */\r\n\tpublic set bulletsDisabled(value: boolean) {\r\n\t\tthis.setPropertyValue(\"bulletsDisabled\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Bullets disabled?\r\n\t */\r\n\tpublic get bulletsDisabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"bulletsDisabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t * \r\n\t * @param {Error} e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tthis._chart.modal.content = e.message;\r\n\t\tthis._chart.modal.closable = false;\r\n\t\tthis._chart.modal.show();\r\n\t\tthis._chart.disabled = true;\r\n\t\tif (system.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters(){\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\t\tthis.bulletsContainer.filters.copyFrom(this.filters);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n * \r\n * @ignore\r\n */\r\nsystem.registeredClasses[\"Series\"] = Series;\r\nsystem.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;"]}