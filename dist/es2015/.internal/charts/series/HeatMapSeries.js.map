{"version":3,"file":"HeatMapSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/series/HeatMapSeries.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * HeatMapSeries module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { system } from \"../../core/System\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[HeatMapSeries]].\r\n * \r\n * @see {@link DataItem}\r\n */\r\nexport class HeatMapSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {HeatMapSeries}\r\n\t */\r\n\tpublic _component: HeatMapSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"HeatMapSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[HeatMapSeries]].\r\n */\r\nexport interface IHeatMapSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[HeatMapSeries]].\r\n */\r\nexport interface IHeatMapSeriesProperties extends IColumnSeriesProperties {\r\n\t/**\r\n * A color to apply to columns with the lowest value.\r\n *\r\n * @type {Color}\r\n */\r\n\tminColor?: Color;\r\n\r\n\t/**\r\n\t * A color to apply to columns with the highest value.\r\n\t *\r\n\t * @type {Color}\r\n\t */\r\n\tmaxColor?: Color;\r\n}\r\n\r\n/**\r\n * Defines events for [[HeatMapSeries]].\r\n */\r\nexport interface IHeatMapSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[HeatMapSeries]].\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface IHeatMapSeriesAdapters extends IColumnSeriesAdapters, IHeatMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n * \r\n * @see {@link IHeatMapSeriesEvents} for a list of available Events\r\n * @see {@link IHeatMapSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class HeatMapSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IHeatMapSeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: IHeatMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IHeatMapSeriesProperties}\r\n\t */\r\n\tpublic _properties: IHeatMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IHeatMapSeriesAdapters}\r\n\t */\r\n\tpublic _adapter: IHeatMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t * \r\n\t * @type {SpriteEventDispatcher<AMEvent<HeatMapSeries, IHeatMapSeriesEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<HeatMapSeries, IHeatMapSeriesEvents>>;\r\n\r\n\r\n\t/**\r\n\t * User-defined lowest value in the series.\r\n\t * @ignore\r\n\t * @type {number}\r\n\t */\r\n\tprotected _minValue: number;\r\n\r\n\t/**\r\n\t * User-defined heighest value in the series.\r\n\t * @ignore\r\n\t * @type {number}\r\n\t */\r\n\tprotected _maxValue: number;\r\n\r\n\t/**\r\n\t * previous min value\r\n\t * @ignore\r\n\t * @type {number}\r\n\t */\r\n\tprotected _prevMin: number;\r\n\r\n\t/**\r\n\t * previous max value\r\n\t * @ignore\r\n\t * @type {number}\r\n\t */\r\n\tprotected _prevMax: number;\r\n\r\n\t/**\r\n\t * A function which fills columns with intermediate color between minColor and maxColor if dataItem has value\r\n\t *\r\n\t * @todo Description\r\n\t * @type {function} \r\n\t */\r\n\tpublic fillRule: (column: Sprite) => any = function(column: Sprite) {\r\n\t\tlet dataItem: HeatMapSeriesDataItem = <HeatMapSeriesDataItem>column.dataItem;\r\n\r\n\t\tif (dataItem && dataItem.value) {\r\n\t\t\tlet series = dataItem.component;\r\n\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\tcolumn.fill = $colors.interpolate(series.minColor, series.maxColor, percent);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.minColor = new InterfaceColorSet().getFor(\"background\");\r\n\t\tthis.className = \"HeatMapSeries\";\r\n\t\tthis.columns.template.width = percent(100);\r\n\t\tthis.columns.template.height = percent(100);\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tif (this.minValue != this._prevMin || this.maxValue != this._prevMax) {\r\n\t\t\tthis.dispatchImmediately(\"valueextremeschanged\");\r\n\t\t\tthis._prevMin = this.minValue;\r\n\t\t\tthis._prevMax = this.maxValue;\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {this[\"_dataItem\"]}  dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tthis.fillRule(dataItem.column);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Color for the lowest value in a heat map.\r\n\t *\r\n\t * In heat map, each object will be colored with an intermediate color\r\n\t * between `minColor` and `maxColor` based on their `value` position between\r\n\t * `min` and `max`.\r\n\t *\r\n\t * @param {Color}  value  Lowest color\r\n\t */\r\n\tpublic set minColor(value: Color) {\r\n\r\n\t\tif (!$type.isObject(value)) {\r\n\t\t\tvalue = $type.toColor(value);\r\n\t\t}\r\n\t\t\r\n\t\tthis.setPropertyValue(\"minColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Lowest color\r\n\t */\r\n\tpublic get minColor(): Color {\r\n\t\treturn this.getPropertyValue(\"minColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Color for the highest value in a heat map.\r\n\t *\r\n\t * In heat map, each object will be colored with an intermediate color\r\n\t * between `minColor` and `maxColor` based on their `value` position between\r\n\t * `min` and `max`.\r\n\t *\r\n\t * @param {Color}  value  Highest color\r\n\t */\r\n\tpublic set maxColor(value: Color) {\r\n\r\n\t\tif (!$type.isObject(value)) {\r\n\t\t\tvalue = $type.toColor(value);\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"maxColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Color} Highest color\r\n\t */\r\n\tpublic get maxColor(): Color {\r\n\t\tlet maxColor = this.getPropertyValue(\"maxColor\");\r\n\t\tif ($type.hasValue(maxColor)) {\r\n\t\t\treturn maxColor;\r\n\t\t}\r\n\t\telse if(this.fill instanceof Color) {\r\n\t\t\treturn this.fill;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * User-defined highest value in the series.\r\n\t *\r\n\t * If not set, the map will use the highest `value` out of actual items in\r\n\t * the series.\r\n\t *\r\n\t * This is used to determine object's color in a heat map.\r\n\t *\r\n\t * @param {number}  value  Highest value\r\n\t */\r\n\tpublic set maxValue(value: number) {\r\n\t\tthis._maxValue = value;\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return {number} Highest value\r\n\t */\r\n\tpublic get maxValue(): number {\r\n\t\tlet maxValue = this._maxValue;\r\n\t\tif ($type.isNumber(maxValue)) {\r\n\t\t\treturn maxValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet dataItem = this.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem.values.value.high;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * User-defined lowest value in the series.\r\n\t *\r\n\t * If not set, the map will use the lowest `value` out of actual items in\r\n\t * the series.\r\n\t *\r\n\t * This is used to determine object's color in a heat map.\r\n\t *\r\n\t * @param {number}  value  Lowest value\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tthis._minValue = value;\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Lowest value\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\tlet minValue = this._minValue;\r\n\r\n\t\tif ($type.isNumber(minValue)) {\r\n\t\t\treturn minValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet dataItem = this.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\treturn dataItem.values.value.low;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n * \r\n * @ignore\r\n */\r\nsystem.registeredClasses[\"HeatMapSeries\"] = HeatMapSeries;\r\nsystem.registeredClasses[\"HeatMapSeriesDataItem\"] = HeatMapSeriesDataItem;"]}