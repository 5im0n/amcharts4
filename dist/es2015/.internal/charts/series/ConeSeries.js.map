{"version":3,"file":"ConeSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/series/ConeSeries.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,cAAc,EAAwG,sBAAsB,EAAE,MAAM,kBAAkB,CAAC;AAEhL,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAG3C;;;;;GAKG;AAEH;;;;GAIG;AACH;IAAwC,sCAAsB;IAU7D;;OAEG;IACH;QAAA,YACC,iBAAO,SAGP;QAFA,KAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;QACtC,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAEF,yBAAC;AAAD,CAAC,AAnBD,CAAwC,sBAAsB,GAmB7D;;AAiCD;;;;;GAKG;AAEH;;;;;;;GAOG;AACH;IAAgC,8BAAc;IAiC7C;;OAEG;IACH;QAAA,YACC,iBAAO,SAIP;QAFA,KAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAED;;;;OAIG;IACO,sCAAiB,GAA3B;QACC,IAAI,QAAQ,GAAS,IAAI,IAAI,EAAE,CAAC;QAChC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7B,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAEF,iBAAC;AAAD,CAAC,AAxDD,CAAgC,cAAc,GAwD7C;;AAED;;;;;GAKG;AACH,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;AACpD,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,GAAG,kBAAkB,CAAC","sourcesContent":["/**\r\n * ConeSeries module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries3D, IColumnSeries3DDataFields, IColumnSeries3DProperties, IColumnSeries3DAdapters, IColumnSeries3DEvents, ColumnSeries3DDataItem } from \"./ColumnSeries3D\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { Cone } from \"../../core/elements/3d/Cone\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { system } from \"../../core/System\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n * \r\n * @see {@link DataItem}\r\n */\r\nexport class ConeSeriesDataItem extends ColumnSeries3DDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ConeSeries}\r\n\t */\r\n\tpublic _component: ConeSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ConeSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesDataFields extends IColumnSeries3DDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesProperties extends IColumnSeries3DProperties { }\r\n\r\n/**\r\n * Defines events for [[ConeSeries]].\r\n */\r\nexport interface IConeSeriesEvents extends IColumnSeries3DEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ConeSeries]].\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeSeriesAdapters extends IColumnSeries3DAdapters, IConeSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n * \r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class ConeSeries extends ColumnSeries3D {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IConeSeriesDataFields}\r\n\t */\r\n\tpublic _dataFields: IConeSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IConeSeriesProperties}\r\n\t */\r\n\tpublic _properties: IConeSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {IConeSeriesAdapters}\r\n\t */\r\n\tpublic _adapter: IConeSeriesAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t * \r\n\t * @type {SpriteEventDispatcher<AMEvent<ConeSeries, IConeSeriesEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<ConeSeries, IConeSeriesEvents>>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ConeSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new element to use as a template for the series.\r\n\t * \r\n\t * @return {Sprite} Element\r\n\t */\r\n\tprotected getColumnTemplate(): Sprite {\r\n\t\tlet template: Cone = new Cone();\r\n\t\ttemplate.topRadius = percent(0);\r\n\t\ttemplate.width = percent(80);\r\n\t\ttemplate.height = percent(80);\r\n\t\treturn template;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n * \r\n * @ignore\r\n */\r\nsystem.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nsystem.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;"]}