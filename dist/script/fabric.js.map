{"version":3,"sources":["webpack:///C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/fabric/dist/fabric.js","webpack:///C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/base64-js/index.js","webpack:///C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/ieee754/index.js","webpack:///C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/isarray/index.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","min","max","supportQuality","degreesToRadians","originXOffset","originYOffset","clone","toFixed","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","__webpack_require__","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","isLikelyNode","Buffer","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","concat","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegmentsCache","segmentToBezierCache","boundsOfCurveCache","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","toLowerCase","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createListener","wrappedHandler","e","event","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","touchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","makeXHR","factories","ActiveXObject","XMLHttpRequest","emptyFn","request","onComplete","xhr","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","n","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","firstChild","parseSVGDocument","parsingOptions","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","el3","nodeValue","removeAttribute","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","proto","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","charIndex","fontList","_setSVGObject","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","ignoreZoom","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","mr","mb","ml","checkClick","which","button","cursorMap","_bindEvents","_onResize","_onMouseDown","_onDoubleClick","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","passive","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","eventsBound","_onMouseUp","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_handleEvent","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","__corner","eventType","subTargets","targetObj","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","lockRotation","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_cacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","zoomX","capped","zoomY","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","cacheTranslationX","cacheTranslationY","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","shouldCache","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","addTransform","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","clipPath","clipPathId","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","aPostion","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","previousGrapheme","skipLeft","getCompleteStyleDeclaration","info","previousBox","__lineHeights","maxHeight","currentCharHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","prevStyle","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","CACHE_FONT_SIZE","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","loc","get2DCursorLocation","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","setSelectionStyles","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","clearContextTop","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","styleProps","fillStyles","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","module","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","eval","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"fabric.js","sourcesContent":["var fabric = fabric || {\n    version: \"2.1.0\"\n};\n\nif (typeof exports !== \"undefined\") {\n    exports.fabric = fabric;\n}\n\nif (typeof document !== \"undefined\" && typeof window !== \"undefined\") {\n    fabric.document = document;\n    fabric.window = window;\n} else {\n    fabric.document = require(\"jsdom\").jsdom(decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\"), {\n        features: {\n            FetchExternalResources: [ \"img\" ]\n        }\n    });\n    fabric.jsdomImplForWrapper = require(\"jsdom/lib/jsdom/living/generated/utils\").implForWrapper;\n    fabric.nodeCanvas = require(\"jsdom/lib/jsdom/utils\").Canvas;\n    fabric.window = fabric.document.defaultView;\n    DOMParser = require(\"xmldom\").DOMParser;\n}\n\nfabric.isTouchSupported = \"ontouchstart\" in fabric.window;\n\nfabric.isLikelyNode = typeof Buffer !== \"undefined\" && typeof window === \"undefined\";\n\nfabric.SHARED_ATTRIBUTES = [ \"display\", \"transform\", \"fill\", \"fill-opacity\", \"fill-rule\", \"opacity\", \"stroke\", \"stroke-dasharray\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"id\", \"paint-order\", \"instantiated_by_use\" ];\n\nfabric.DPI = 96;\n\nfabric.reNum = \"(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)\";\n\nfabric.fontPaths = {};\n\nfabric.iMatrix = [ 1, 0, 0, 1, 0, 0 ];\n\nfabric.canvasModule = \"canvas\";\n\nfabric.perfLimitSizeTotal = 2097152;\n\nfabric.maxCacheSideLimit = 4096;\n\nfabric.minCacheSideLimit = 256;\n\nfabric.charWidthsCache = {};\n\nfabric.textureSize = 2048;\n\nfabric.enableGLFiltering = true;\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n    if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n        console.log(\"max texture size: \" + fabric.maxTextureSize);\n        return new fabric.WebglFilterBackend({\n            tileSize: fabric.textureSize\n        });\n    } else if (fabric.Canvas2dFilterBackend) {\n        return new fabric.Canvas2dFilterBackend();\n    }\n};\n\nif (typeof document !== \"undefined\" && typeof window !== \"undefined\") {\n    window.fabric = fabric;\n}\n\n(function() {\n    function _removeEventListener(eventName, handler) {\n        if (!this.__eventListeners[eventName]) {\n            return;\n        }\n        var eventListener = this.__eventListeners[eventName];\n        if (handler) {\n            eventListener[eventListener.indexOf(handler)] = false;\n        } else {\n            fabric.util.array.fill(eventListener, false);\n        }\n    }\n    function observe(eventName, handler) {\n        if (!this.__eventListeners) {\n            this.__eventListeners = {};\n        }\n        if (arguments.length === 1) {\n            for (var prop in eventName) {\n                this.on(prop, eventName[prop]);\n            }\n        } else {\n            if (!this.__eventListeners[eventName]) {\n                this.__eventListeners[eventName] = [];\n            }\n            this.__eventListeners[eventName].push(handler);\n        }\n        return this;\n    }\n    function stopObserving(eventName, handler) {\n        if (!this.__eventListeners) {\n            return;\n        }\n        if (arguments.length === 0) {\n            for (eventName in this.__eventListeners) {\n                _removeEventListener.call(this, eventName);\n            }\n        } else if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            for (var prop in eventName) {\n                _removeEventListener.call(this, prop, eventName[prop]);\n            }\n        } else {\n            _removeEventListener.call(this, eventName, handler);\n        }\n        return this;\n    }\n    function fire(eventName, options) {\n        if (!this.__eventListeners) {\n            return;\n        }\n        var listenersForEvent = this.__eventListeners[eventName];\n        if (!listenersForEvent) {\n            return;\n        }\n        for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n            listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n        }\n        this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n            return value !== false;\n        });\n        return this;\n    }\n    fabric.Observable = {\n        observe: observe,\n        stopObserving: stopObserving,\n        fire: fire,\n        on: observe,\n        off: stopObserving,\n        trigger: fire\n    };\n})();\n\nfabric.Collection = {\n    _objects: [],\n    add: function() {\n        this._objects.push.apply(this._objects, arguments);\n        if (this._onObjectAdded) {\n            for (var i = 0, length = arguments.length; i < length; i++) {\n                this._onObjectAdded(arguments[i]);\n            }\n        }\n        this.renderOnAddRemove && this.requestRenderAll();\n        return this;\n    },\n    insertAt: function(object, index, nonSplicing) {\n        var objects = this.getObjects();\n        if (nonSplicing) {\n            objects[index] = object;\n        } else {\n            objects.splice(index, 0, object);\n        }\n        this._onObjectAdded && this._onObjectAdded(object);\n        this.renderOnAddRemove && this.requestRenderAll();\n        return this;\n    },\n    remove: function() {\n        var objects = this.getObjects(), index, somethingRemoved = false;\n        for (var i = 0, length = arguments.length; i < length; i++) {\n            index = objects.indexOf(arguments[i]);\n            if (index !== -1) {\n                somethingRemoved = true;\n                objects.splice(index, 1);\n                this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n            }\n        }\n        this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n        return this;\n    },\n    forEachObject: function(callback, context) {\n        var objects = this.getObjects();\n        for (var i = 0, len = objects.length; i < len; i++) {\n            callback.call(context, objects[i], i, objects);\n        }\n        return this;\n    },\n    getObjects: function(type) {\n        if (typeof type === \"undefined\") {\n            return this._objects;\n        }\n        return this._objects.filter(function(o) {\n            return o.type === type;\n        });\n    },\n    item: function(index) {\n        return this.getObjects()[index];\n    },\n    isEmpty: function() {\n        return this.getObjects().length === 0;\n    },\n    size: function() {\n        return this.getObjects().length;\n    },\n    contains: function(object) {\n        return this.getObjects().indexOf(object) > -1;\n    },\n    complexity: function() {\n        return this.getObjects().reduce(function(memo, current) {\n            memo += current.complexity ? current.complexity() : 0;\n            return memo;\n        }, 0);\n    }\n};\n\nfabric.CommonMethods = {\n    _setOptions: function(options) {\n        for (var prop in options) {\n            this.set(prop, options[prop]);\n        }\n    },\n    _initGradient: function(filler, property) {\n        if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n            this.set(property, new fabric.Gradient(filler));\n        }\n    },\n    _initPattern: function(filler, property, callback) {\n        if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n            this.set(property, new fabric.Pattern(filler, callback));\n        } else {\n            callback && callback();\n        }\n    },\n    _initClipping: function(options) {\n        if (!options.clipTo || typeof options.clipTo !== \"string\") {\n            return;\n        }\n        var functionBody = fabric.util.getFunctionBody(options.clipTo);\n        if (typeof functionBody !== \"undefined\") {\n            this.clipTo = new Function(\"ctx\", functionBody);\n        }\n    },\n    _setObject: function(obj) {\n        for (var prop in obj) {\n            this._set(prop, obj[prop]);\n        }\n    },\n    set: function(key, value) {\n        if (typeof key === \"object\") {\n            this._setObject(key);\n        } else {\n            if (typeof value === \"function\" && key !== \"clipTo\") {\n                this._set(key, value(this.get(key)));\n            } else {\n                this._set(key, value);\n            }\n        }\n        return this;\n    },\n    _set: function(key, value) {\n        this[key] = value;\n    },\n    toggle: function(property) {\n        var value = this.get(property);\n        if (typeof value === \"boolean\") {\n            this.set(property, !value);\n        }\n        return this;\n    },\n    get: function(property) {\n        return this[property];\n    }\n};\n\n(function(global) {\n    var sqrt = Math.sqrt, atan2 = Math.atan2, pow = Math.pow, abs = Math.abs, PiBy180 = Math.PI / 180, PiBy2 = Math.PI / 2;\n    fabric.util = {\n        cos: function(angle) {\n            if (angle === 0) {\n                return 1;\n            }\n            if (angle < 0) {\n                angle = -angle;\n            }\n            var angleSlice = angle / PiBy2;\n            switch (angleSlice) {\n              case 1:\n              case 3:\n                return 0;\n\n              case 2:\n                return -1;\n            }\n            return Math.cos(angle);\n        },\n        sin: function(angle) {\n            if (angle === 0) {\n                return 0;\n            }\n            var angleSlice = angle / PiBy2, sign = 1;\n            if (angle < 0) {\n                sign = -1;\n            }\n            switch (angleSlice) {\n              case 1:\n                return sign;\n\n              case 2:\n                return 0;\n\n              case 3:\n                return -sign;\n            }\n            return Math.sin(angle);\n        },\n        removeFromArray: function(array, value) {\n            var idx = array.indexOf(value);\n            if (idx !== -1) {\n                array.splice(idx, 1);\n            }\n            return array;\n        },\n        getRandomInt: function(min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        },\n        degreesToRadians: function(degrees) {\n            return degrees * PiBy180;\n        },\n        radiansToDegrees: function(radians) {\n            return radians / PiBy180;\n        },\n        rotatePoint: function(point, origin, radians) {\n            point.subtractEquals(origin);\n            var v = fabric.util.rotateVector(point, radians);\n            return new fabric.Point(v.x, v.y).addEquals(origin);\n        },\n        rotateVector: function(vector, radians) {\n            var sin = fabric.util.sin(radians), cos = fabric.util.cos(radians), rx = vector.x * cos - vector.y * sin, ry = vector.x * sin + vector.y * cos;\n            return {\n                x: rx,\n                y: ry\n            };\n        },\n        transformPoint: function(p, t, ignoreOffset) {\n            if (ignoreOffset) {\n                return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n            }\n            return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n        },\n        makeBoundingBoxFromPoints: function(points) {\n            var xPoints = [ points[0].x, points[1].x, points[2].x, points[3].x ], minX = fabric.util.array.min(xPoints), maxX = fabric.util.array.max(xPoints), width = maxX - minX, yPoints = [ points[0].y, points[1].y, points[2].y, points[3].y ], minY = fabric.util.array.min(yPoints), maxY = fabric.util.array.max(yPoints), height = maxY - minY;\n            return {\n                left: minX,\n                top: minY,\n                width: width,\n                height: height\n            };\n        },\n        invertTransform: function(t) {\n            var a = 1 / (t[0] * t[3] - t[1] * t[2]), r = [ a * t[3], -a * t[1], -a * t[2], a * t[0] ], o = fabric.util.transformPoint({\n                x: t[4],\n                y: t[5]\n            }, r, true);\n            r[4] = -o.x;\n            r[5] = -o.y;\n            return r;\n        },\n        toFixed: function(number, fractionDigits) {\n            return parseFloat(Number(number).toFixed(fractionDigits));\n        },\n        parseUnit: function(value, fontSize) {\n            var unit = /\\D{0,2}$/.exec(value), number = parseFloat(value);\n            if (!fontSize) {\n                fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n            }\n            switch (unit[0]) {\n              case \"mm\":\n                return number * fabric.DPI / 25.4;\n\n              case \"cm\":\n                return number * fabric.DPI / 2.54;\n\n              case \"in\":\n                return number * fabric.DPI;\n\n              case \"pt\":\n                return number * fabric.DPI / 72;\n\n              case \"pc\":\n                return number * fabric.DPI / 72 * 12;\n\n              case \"em\":\n                return number * fontSize;\n\n              default:\n                return number;\n            }\n        },\n        falseFunction: function() {\n            return false;\n        },\n        getKlass: function(type, namespace) {\n            type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n            return fabric.util.resolveNamespace(namespace)[type];\n        },\n        getSvgAttributes: function(type) {\n            var attributes = [ \"instantiated_by_use\", \"style\", \"id\", \"class\" ];\n            switch (type) {\n              case \"linearGradient\":\n                attributes = attributes.concat([ \"x1\", \"y1\", \"x2\", \"y2\", \"gradientUnits\", \"gradientTransform\" ]);\n                break;\n\n              case \"radialGradient\":\n                attributes = attributes.concat([ \"gradientUnits\", \"gradientTransform\", \"cx\", \"cy\", \"r\", \"fx\", \"fy\", \"fr\" ]);\n                break;\n\n              case \"stop\":\n                attributes = attributes.concat([ \"offset\", \"stop-color\", \"stop-opacity\" ]);\n                break;\n            }\n            return attributes;\n        },\n        resolveNamespace: function(namespace) {\n            if (!namespace) {\n                return fabric;\n            }\n            var parts = namespace.split(\".\"), len = parts.length, i, obj = global || fabric.window;\n            for (i = 0; i < len; ++i) {\n                obj = obj[parts[i]];\n            }\n            return obj;\n        },\n        loadImage: function(url, callback, context, crossOrigin) {\n            if (!url) {\n                callback && callback.call(context, url);\n                return;\n            }\n            var img = fabric.util.createImage();\n            var onLoadCallback = function() {\n                callback && callback.call(context, img);\n                img = img.onload = img.onerror = null;\n            };\n            img.onload = onLoadCallback;\n            img.onerror = function() {\n                fabric.log(\"Error loading \" + img.src);\n                callback && callback.call(context, null, true);\n                img = img.onload = img.onerror = null;\n            };\n            if (url.indexOf(\"data\") !== 0 && crossOrigin) {\n                img.crossOrigin = crossOrigin;\n            }\n            if (url.substring(0, 14) === \"data:image/svg\") {\n                img.onload = null;\n                fabric.util.loadImageInDom(img, onLoadCallback);\n            }\n            img.src = url;\n        },\n        loadImageInDom: function(img, onLoadCallback) {\n            var div = fabric.document.createElement(\"div\");\n            div.style.width = div.style.height = \"1px\";\n            div.style.left = div.style.top = \"-100%\";\n            div.style.position = \"absolute\";\n            div.appendChild(img);\n            fabric.document.querySelector(\"body\").appendChild(div);\n            img.onload = function() {\n                onLoadCallback();\n                div.parentNode.removeChild(div);\n                div = null;\n            };\n        },\n        enlivenObjects: function(objects, callback, namespace, reviver) {\n            objects = objects || [];\n            function onLoaded() {\n                if (++numLoadedObjects === numTotalObjects) {\n                    callback && callback(enlivenedObjects);\n                }\n            }\n            var enlivenedObjects = [], numLoadedObjects = 0, numTotalObjects = objects.length;\n            if (!numTotalObjects) {\n                callback && callback(enlivenedObjects);\n                return;\n            }\n            objects.forEach(function(o, index) {\n                if (!o || !o.type) {\n                    onLoaded();\n                    return;\n                }\n                var klass = fabric.util.getKlass(o.type, namespace);\n                klass.fromObject(o, function(obj, error) {\n                    error || (enlivenedObjects[index] = obj);\n                    reviver && reviver(o, obj, error);\n                    onLoaded();\n                });\n            });\n        },\n        enlivenPatterns: function(patterns, callback) {\n            patterns = patterns || [];\n            function onLoaded() {\n                if (++numLoadedPatterns === numPatterns) {\n                    callback && callback(enlivenedPatterns);\n                }\n            }\n            var enlivenedPatterns = [], numLoadedPatterns = 0, numPatterns = patterns.length;\n            if (!numPatterns) {\n                callback && callback(enlivenedPatterns);\n                return;\n            }\n            patterns.forEach(function(p, index) {\n                if (p && p.source) {\n                    new fabric.Pattern(p, function(pattern) {\n                        enlivenedPatterns[index] = pattern;\n                        onLoaded();\n                    });\n                } else {\n                    enlivenedPatterns[index] = p;\n                    onLoaded();\n                }\n            });\n        },\n        groupSVGElements: function(elements, options, path) {\n            var object;\n            if (elements.length === 1) {\n                return elements[0];\n            }\n            if (options) {\n                if (options.width && options.height) {\n                    options.centerPoint = {\n                        x: options.width / 2,\n                        y: options.height / 2\n                    };\n                } else {\n                    delete options.width;\n                    delete options.height;\n                }\n            }\n            object = new fabric.Group(elements, options);\n            if (typeof path !== \"undefined\") {\n                object.sourcePath = path;\n            }\n            return object;\n        },\n        populateWithProperties: function(source, destination, properties) {\n            if (properties && Object.prototype.toString.call(properties) === \"[object Array]\") {\n                for (var i = 0, len = properties.length; i < len; i++) {\n                    if (properties[i] in source) {\n                        destination[properties[i]] = source[properties[i]];\n                    }\n                }\n            }\n        },\n        drawDashedLine: function(ctx, x, y, x2, y2, da) {\n            var dx = x2 - x, dy = y2 - y, len = sqrt(dx * dx + dy * dy), rot = atan2(dy, dx), dc = da.length, di = 0, draw = true;\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.moveTo(0, 0);\n            ctx.rotate(rot);\n            x = 0;\n            while (len > x) {\n                x += da[di++ % dc];\n                if (x > len) {\n                    x = len;\n                }\n                ctx[draw ? \"lineTo\" : \"moveTo\"](x, 0);\n                draw = !draw;\n            }\n            ctx.restore();\n        },\n        createCanvasElement: function() {\n            return fabric.document.createElement(\"canvas\");\n        },\n        createImage: function() {\n            return fabric.document.createElement(\"img\");\n        },\n        clipContext: function(receiver, ctx) {\n            ctx.save();\n            ctx.beginPath();\n            receiver.clipTo(ctx);\n            ctx.clip();\n        },\n        multiplyTransformMatrices: function(a, b, is2x2) {\n            return [ a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5] ];\n        },\n        qrDecompose: function(a) {\n            var angle = atan2(a[1], a[0]), denom = pow(a[0], 2) + pow(a[1], 2), scaleX = sqrt(denom), scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX, skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n            return {\n                angle: angle / PiBy180,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                skewX: skewX / PiBy180,\n                skewY: 0,\n                translateX: a[4],\n                translateY: a[5]\n            };\n        },\n        customTransformMatrix: function(scaleX, scaleY, skewX) {\n            var skewMatrixX = [ 1, 0, abs(Math.tan(skewX * PiBy180)), 1 ], scaleMatrix = [ abs(scaleX), 0, 0, abs(scaleY) ];\n            return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n        },\n        resetObjectTransform: function(target) {\n            target.scaleX = 1;\n            target.scaleY = 1;\n            target.skewX = 0;\n            target.skewY = 0;\n            target.flipX = false;\n            target.flipY = false;\n            target.rotate(0);\n        },\n        getFunctionBody: function(fn) {\n            return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n        },\n        isTransparent: function(ctx, x, y, tolerance) {\n            if (tolerance > 0) {\n                if (x > tolerance) {\n                    x -= tolerance;\n                } else {\n                    x = 0;\n                }\n                if (y > tolerance) {\n                    y -= tolerance;\n                } else {\n                    y = 0;\n                }\n            }\n            var _isTransparent = true, i, temp, imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1), l = imageData.data.length;\n            for (i = 3; i < l; i += 4) {\n                temp = imageData.data[i];\n                _isTransparent = temp <= 0;\n                if (_isTransparent === false) {\n                    break;\n                }\n            }\n            imageData = null;\n            return _isTransparent;\n        },\n        parsePreserveAspectRatioAttribute: function(attribute) {\n            var meetOrSlice = \"meet\", alignX = \"Mid\", alignY = \"Mid\", aspectRatioAttrs = attribute.split(\" \"), align;\n            if (aspectRatioAttrs && aspectRatioAttrs.length) {\n                meetOrSlice = aspectRatioAttrs.pop();\n                if (meetOrSlice !== \"meet\" && meetOrSlice !== \"slice\") {\n                    align = meetOrSlice;\n                    meetOrSlice = \"meet\";\n                } else if (aspectRatioAttrs.length) {\n                    align = aspectRatioAttrs.pop();\n                }\n            }\n            alignX = align !== \"none\" ? align.slice(1, 4) : \"none\";\n            alignY = align !== \"none\" ? align.slice(5, 8) : \"none\";\n            return {\n                meetOrSlice: meetOrSlice,\n                alignX: alignX,\n                alignY: alignY\n            };\n        },\n        clearFabricFontCache: function(fontFamily) {\n            if (!fontFamily) {\n                fabric.charWidthsCache = {};\n            } else if (fabric.charWidthsCache[fontFamily]) {\n                delete fabric.charWidthsCache[fontFamily];\n            }\n        },\n        limitDimsByArea: function(ar, maximumArea) {\n            var roughWidth = Math.sqrt(maximumArea * ar), perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n            return {\n                x: Math.floor(roughWidth),\n                y: perfLimitSizeY\n            };\n        },\n        capValue: function(min, value, max) {\n            return Math.max(min, Math.min(value, max));\n        },\n        findScaleToFit: function(source, destination) {\n            return Math.min(destination.width / source.width, destination.height / source.height);\n        },\n        findScaleToCover: function(source, destination) {\n            return Math.max(destination.width / source.width, destination.height / source.height);\n        }\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var arcToSegmentsCache = {}, segmentToBezierCache = {}, boundsOfCurveCache = {}, _join = Array.prototype.join;\n    function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n        var argsString = _join.call(arguments);\n        if (arcToSegmentsCache[argsString]) {\n            return arcToSegmentsCache[argsString];\n        }\n        var PI = Math.PI, th = rotateX * PI / 180, sinTh = fabric.util.sin(th), cosTh = fabric.util.cos(th), fromX = 0, fromY = 0;\n        rx = Math.abs(rx);\n        ry = Math.abs(ry);\n        var px = -cosTh * toX * .5 - sinTh * toY * .5, py = -cosTh * toY * .5 + sinTh * toX * .5, rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px, pl = rx2 * ry2 - rx2 * py2 - ry2 * px2, root = 0;\n        if (pl < 0) {\n            var s = Math.sqrt(1 - pl / (rx2 * ry2));\n            rx *= s;\n            ry *= s;\n        } else {\n            root = (large === sweep ? -1 : 1) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n        }\n        var cx = root * rx * py / ry, cy = -root * ry * px / rx, cx1 = cosTh * cx - sinTh * cy + toX * .5, cy1 = sinTh * cx + cosTh * cy + toY * .5, mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry), dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n        if (sweep === 0 && dtheta > 0) {\n            dtheta -= 2 * PI;\n        } else if (sweep === 1 && dtheta < 0) {\n            dtheta += 2 * PI;\n        }\n        var segments = Math.ceil(Math.abs(dtheta / PI * 2)), result = [], mDelta = dtheta / segments, mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2), th3 = mTheta + mDelta;\n        for (var i = 0; i < segments; i++) {\n            result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n            fromX = result[i][4];\n            fromY = result[i][5];\n            mTheta = th3;\n            th3 += mDelta;\n        }\n        arcToSegmentsCache[argsString] = result;\n        return result;\n    }\n    function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n        var argsString2 = _join.call(arguments);\n        if (segmentToBezierCache[argsString2]) {\n            return segmentToBezierCache[argsString2];\n        }\n        var costh2 = fabric.util.cos(th2), sinth2 = fabric.util.sin(th2), costh3 = fabric.util.cos(th3), sinth3 = fabric.util.sin(th3), toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1, toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1, cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2), cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2), cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3), cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n        segmentToBezierCache[argsString2] = [ cp1X, cp1Y, cp2X, cp2Y, toX, toY ];\n        return segmentToBezierCache[argsString2];\n    }\n    function calcVectorAngle(ux, uy, vx, vy) {\n        var ta = Math.atan2(uy, ux), tb = Math.atan2(vy, vx);\n        if (tb >= ta) {\n            return tb - ta;\n        } else {\n            return 2 * Math.PI - (ta - tb);\n        }\n    }\n    fabric.util.drawArc = function(ctx, fx, fy, coords) {\n        var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], tx = coords[5], ty = coords[6], segs = [ [], [], [], [] ], segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n        for (var i = 0, len = segsNorm.length; i < len; i++) {\n            segs[i][0] = segsNorm[i][0] + fx;\n            segs[i][1] = segsNorm[i][1] + fy;\n            segs[i][2] = segsNorm[i][2] + fx;\n            segs[i][3] = segsNorm[i][3] + fy;\n            segs[i][4] = segsNorm[i][4] + fx;\n            segs[i][5] = segsNorm[i][5] + fy;\n            ctx.bezierCurveTo.apply(ctx, segs[i]);\n        }\n    };\n    fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n        var fromX = 0, fromY = 0, bound, bounds = [], segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n        for (var i = 0, len = segs.length; i < len; i++) {\n            bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n            bounds.push({\n                x: bound[0].x + fx,\n                y: bound[0].y + fy\n            });\n            bounds.push({\n                x: bound[1].x + fx,\n                y: bound[1].y + fy\n            });\n            fromX = segs[i][4];\n            fromY = segs[i][5];\n        }\n        return bounds;\n    };\n    function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var argsString = _join.call(arguments);\n        if (boundsOfCurveCache[argsString]) {\n            return boundsOfCurveCache[argsString];\n        }\n        var sqrt = Math.sqrt, min = Math.min, max = Math.max, abs = Math.abs, tvalues = [], bounds = [ [], [] ], a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n        for (var i = 0; i < 2; ++i) {\n            if (i > 0) {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            if (b2ac < 0) {\n                continue;\n            }\n            sqrtb2ac = sqrt(b2ac);\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n        var x, y, j = tvalues.length, jlen = j, mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[0][j] = x;\n            y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            bounds[1][j] = y;\n        }\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        var result = [ {\n            x: min.apply(null, bounds[0]),\n            y: min.apply(null, bounds[1])\n        }, {\n            x: max.apply(null, bounds[0]),\n            y: max.apply(null, bounds[1])\n        } ];\n        boundsOfCurveCache[argsString] = result;\n        return result;\n    }\n    fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function() {\n    var slice = Array.prototype.slice;\n    function invoke(array, method) {\n        var args = slice.call(arguments, 2), result = [];\n        for (var i = 0, len = array.length; i < len; i++) {\n            result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n        }\n        return result;\n    }\n    function max(array, byProperty) {\n        return find(array, byProperty, function(value1, value2) {\n            return value1 >= value2;\n        });\n    }\n    function min(array, byProperty) {\n        return find(array, byProperty, function(value1, value2) {\n            return value1 < value2;\n        });\n    }\n    function fill(array, value) {\n        var k = array.length;\n        while (k--) {\n            array[k] = value;\n        }\n        return array;\n    }\n    function find(array, byProperty, condition) {\n        if (!array || array.length === 0) {\n            return;\n        }\n        var i = array.length - 1, result = byProperty ? array[i][byProperty] : array[i];\n        if (byProperty) {\n            while (i--) {\n                if (condition(array[i][byProperty], result)) {\n                    result = array[i][byProperty];\n                }\n            }\n        } else {\n            while (i--) {\n                if (condition(array[i], result)) {\n                    result = array[i];\n                }\n            }\n        }\n        return result;\n    }\n    fabric.util.array = {\n        fill: fill,\n        invoke: invoke,\n        min: min,\n        max: max\n    };\n})();\n\n(function() {\n    function extend(destination, source, deep) {\n        if (deep) {\n            if (!fabric.isLikelyNode && source instanceof Element) {\n                destination = source;\n            } else if (source instanceof Array) {\n                destination = [];\n                for (var i = 0, len = source.length; i < len; i++) {\n                    destination[i] = extend({}, source[i], deep);\n                }\n            } else if (source && typeof source === \"object\") {\n                for (var property in source) {\n                    if (source.hasOwnProperty(property)) {\n                        destination[property] = extend({}, source[property], deep);\n                    }\n                }\n            } else {\n                destination = source;\n            }\n        } else {\n            for (var property in source) {\n                destination[property] = source[property];\n            }\n        }\n        return destination;\n    }\n    function clone(object, deep) {\n        return extend({}, object, deep);\n    }\n    fabric.util.object = {\n        extend: extend,\n        clone: clone\n    };\n    fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function() {\n    function camelize(string) {\n        return string.replace(/-+(.)?/g, function(match, character) {\n            return character ? character.toUpperCase() : \"\";\n        });\n    }\n    function capitalize(string, firstLetterOnly) {\n        return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n    }\n    function escapeXml(string) {\n        return string.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n    function graphemeSplit(textstring) {\n        var i = 0, chr, graphemes = [];\n        for (i = 0, chr; i < textstring.length; i++) {\n            if ((chr = getWholeChar(textstring, i)) === false) {\n                continue;\n            }\n            graphemes.push(chr);\n        }\n        return graphemes;\n    }\n    function getWholeChar(str, i) {\n        var code = str.charCodeAt(i);\n        if (isNaN(code)) {\n            return \"\";\n        }\n        if (code < 55296 || code > 57343) {\n            return str.charAt(i);\n        }\n        if (55296 <= code && code <= 56319) {\n            if (str.length <= i + 1) {\n                throw \"High surrogate without following low surrogate\";\n            }\n            var next = str.charCodeAt(i + 1);\n            if (56320 > next || next > 57343) {\n                throw \"High surrogate without following low surrogate\";\n            }\n            return str.charAt(i) + str.charAt(i + 1);\n        }\n        if (i === 0) {\n            throw \"Low surrogate without preceding high surrogate\";\n        }\n        var prev = str.charCodeAt(i - 1);\n        if (55296 > prev || prev > 56319) {\n            throw \"Low surrogate without preceding high surrogate\";\n        }\n        return false;\n    }\n    fabric.util.string = {\n        camelize: camelize,\n        capitalize: capitalize,\n        escapeXml: escapeXml,\n        graphemeSplit: graphemeSplit\n    };\n})();\n\n(function() {\n    var slice = Array.prototype.slice, emptyFunction = function() {}, IS_DONTENUM_BUGGY = function() {\n        for (var p in {\n            toString: 1\n        }) {\n            if (p === \"toString\") {\n                return false;\n            }\n        }\n        return true;\n    }(), addMethods = function(klass, source, parent) {\n        for (var property in source) {\n            if (property in klass.prototype && typeof klass.prototype[property] === \"function\" && (source[property] + \"\").indexOf(\"callSuper\") > -1) {\n                klass.prototype[property] = function(property) {\n                    return function() {\n                        var superclass = this.constructor.superclass;\n                        this.constructor.superclass = parent;\n                        var returnValue = source[property].apply(this, arguments);\n                        this.constructor.superclass = superclass;\n                        if (property !== \"initialize\") {\n                            return returnValue;\n                        }\n                    };\n                }(property);\n            } else {\n                klass.prototype[property] = source[property];\n            }\n            if (IS_DONTENUM_BUGGY) {\n                if (source.toString !== Object.prototype.toString) {\n                    klass.prototype.toString = source.toString;\n                }\n                if (source.valueOf !== Object.prototype.valueOf) {\n                    klass.prototype.valueOf = source.valueOf;\n                }\n            }\n        }\n    };\n    function Subclass() {}\n    function callSuper(methodName) {\n        var parentMethod = null, _this = this;\n        while (_this.constructor.superclass) {\n            var superClassMethod = _this.constructor.superclass.prototype[methodName];\n            if (_this[methodName] !== superClassMethod) {\n                parentMethod = superClassMethod;\n                break;\n            }\n            _this = _this.constructor.superclass.prototype;\n        }\n        if (!parentMethod) {\n            return console.log(\"tried to callSuper \" + methodName + \", method not found in prototype chain\", this);\n        }\n        return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n    }\n    function createClass() {\n        var parent = null, properties = slice.call(arguments, 0);\n        if (typeof properties[0] === \"function\") {\n            parent = properties.shift();\n        }\n        function klass() {\n            this.initialize.apply(this, arguments);\n        }\n        klass.superclass = parent;\n        klass.subclasses = [];\n        if (parent) {\n            Subclass.prototype = parent.prototype;\n            klass.prototype = new Subclass();\n            parent.subclasses.push(klass);\n        }\n        for (var i = 0, length = properties.length; i < length; i++) {\n            addMethods(klass, properties[i], parent);\n        }\n        if (!klass.prototype.initialize) {\n            klass.prototype.initialize = emptyFunction;\n        }\n        klass.prototype.constructor = klass;\n        klass.prototype.callSuper = callSuper;\n        return klass;\n    }\n    fabric.util.createClass = createClass;\n})();\n\n(function() {\n    var unknown = \"unknown\";\n    function areHostMethods(object) {\n        var methodNames = Array.prototype.slice.call(arguments, 1), t, i, len = methodNames.length;\n        for (i = 0; i < len; i++) {\n            t = typeof object[methodNames[i]];\n            if (!/^(?:function|object|unknown)$/.test(t)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    var getElement, setElement, getUniqueId = function() {\n        var uid = 0;\n        return function(element) {\n            return element.__uniqueID || (element.__uniqueID = \"uniqueID__\" + uid++);\n        };\n    }();\n    (function() {\n        var elements = {};\n        getElement = function(uid) {\n            return elements[uid];\n        };\n        setElement = function(uid, element) {\n            elements[uid] = element;\n        };\n    })();\n    function createListener(uid, handler) {\n        return {\n            handler: handler,\n            wrappedHandler: createWrappedHandler(uid, handler)\n        };\n    }\n    function createWrappedHandler(uid, handler) {\n        return function(e) {\n            handler.call(getElement(uid), e || fabric.window.event);\n        };\n    }\n    function createDispatcher(uid, eventName) {\n        return function(e) {\n            if (handlers[uid] && handlers[uid][eventName]) {\n                var handlersForEvent = handlers[uid][eventName];\n                for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n                    handlersForEvent[i].call(this, e || fabric.window.event);\n                }\n            }\n        };\n    }\n    var shouldUseAddListenerRemoveListener = areHostMethods(fabric.document.documentElement, \"addEventListener\", \"removeEventListener\") && areHostMethods(fabric.window, \"addEventListener\", \"removeEventListener\"), shouldUseAttachEventDetachEvent = areHostMethods(fabric.document.documentElement, \"attachEvent\", \"detachEvent\") && areHostMethods(fabric.window, \"attachEvent\", \"detachEvent\"), listeners = {}, handlers = {}, addListener, removeListener;\n    if (shouldUseAddListenerRemoveListener) {\n        addListener = function(element, eventName, handler, options) {\n            element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n        };\n        removeListener = function(element, eventName, handler, options) {\n            element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n        };\n    } else if (shouldUseAttachEventDetachEvent) {\n        addListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            setElement(uid, element);\n            if (!listeners[uid]) {\n                listeners[uid] = {};\n            }\n            if (!listeners[uid][eventName]) {\n                listeners[uid][eventName] = [];\n            }\n            var listener = createListener(uid, handler);\n            listeners[uid][eventName].push(listener);\n            element.attachEvent(\"on\" + eventName, listener.wrappedHandler);\n        };\n        removeListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element), listener;\n            if (listeners[uid] && listeners[uid][eventName]) {\n                for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n                    listener = listeners[uid][eventName][i];\n                    if (listener && listener.handler === handler) {\n                        element.detachEvent(\"on\" + eventName, listener.wrappedHandler);\n                        listeners[uid][eventName][i] = null;\n                    }\n                }\n            }\n        };\n    } else {\n        addListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            if (!handlers[uid]) {\n                handlers[uid] = {};\n            }\n            if (!handlers[uid][eventName]) {\n                handlers[uid][eventName] = [];\n                var existingHandler = element[\"on\" + eventName];\n                if (existingHandler) {\n                    handlers[uid][eventName].push(existingHandler);\n                }\n                element[\"on\" + eventName] = createDispatcher(uid, eventName);\n            }\n            handlers[uid][eventName].push(handler);\n        };\n        removeListener = function(element, eventName, handler) {\n            if (!element) {\n                return;\n            }\n            var uid = getUniqueId(element);\n            if (handlers[uid] && handlers[uid][eventName]) {\n                var handlersForEvent = handlers[uid][eventName];\n                for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n                    if (handlersForEvent[i] === handler) {\n                        handlersForEvent.splice(i, 1);\n                    }\n                }\n            }\n        };\n    }\n    fabric.util.addListener = addListener;\n    fabric.util.removeListener = removeListener;\n    function getPointer(event) {\n        event || (event = fabric.window.event);\n        var element = event.target || (typeof event.srcElement !== unknown ? event.srcElement : null), scroll = fabric.util.getScrollLeftTop(element);\n        return {\n            x: pointerX(event) + scroll.left,\n            y: pointerY(event) + scroll.top\n        };\n    }\n    var pointerX = function(event) {\n        return event.clientX;\n    }, pointerY = function(event) {\n        return event.clientY;\n    };\n    function _getPointer(event, pageProp, clientProp) {\n        var touchProp = event.type === \"touchend\" ? \"changedTouches\" : \"touches\";\n        return event[touchProp] && event[touchProp][0] ? event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]) || event[clientProp] : event[clientProp];\n    }\n    if (fabric.isTouchSupported) {\n        pointerX = function(event) {\n            return _getPointer(event, \"pageX\", \"clientX\");\n        };\n        pointerY = function(event) {\n            return _getPointer(event, \"pageY\", \"clientY\");\n        };\n    }\n    fabric.util.getPointer = getPointer;\n})();\n\n(function() {\n    function setStyle(element, styles) {\n        var elementStyle = element.style;\n        if (!elementStyle) {\n            return element;\n        }\n        if (typeof styles === \"string\") {\n            element.style.cssText += \";\" + styles;\n            return styles.indexOf(\"opacity\") > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n        }\n        for (var property in styles) {\n            if (property === \"opacity\") {\n                setOpacity(element, styles[property]);\n            } else {\n                var normalizedProperty = property === \"float\" || property === \"cssFloat\" ? typeof elementStyle.styleFloat === \"undefined\" ? \"cssFloat\" : \"styleFloat\" : property;\n                elementStyle[normalizedProperty] = styles[property];\n            }\n        }\n        return element;\n    }\n    var parseEl = fabric.document.createElement(\"div\"), supportsOpacity = typeof parseEl.style.opacity === \"string\", supportsFilters = typeof parseEl.style.filter === \"string\", reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/, setOpacity = function(element) {\n        return element;\n    };\n    if (supportsOpacity) {\n        setOpacity = function(element, value) {\n            element.style.opacity = value;\n            return element;\n        };\n    } else if (supportsFilters) {\n        setOpacity = function(element, value) {\n            var es = element.style;\n            if (element.currentStyle && !element.currentStyle.hasLayout) {\n                es.zoom = 1;\n            }\n            if (reOpacity.test(es.filter)) {\n                value = value >= .9999 ? \"\" : \"alpha(opacity=\" + value * 100 + \")\";\n                es.filter = es.filter.replace(reOpacity, value);\n            } else {\n                es.filter += \" alpha(opacity=\" + value * 100 + \")\";\n            }\n            return element;\n        };\n    }\n    fabric.util.setStyle = setStyle;\n})();\n\n(function() {\n    var _slice = Array.prototype.slice;\n    function getById(id) {\n        return typeof id === \"string\" ? fabric.document.getElementById(id) : id;\n    }\n    var sliceCanConvertNodelists, toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n    };\n    try {\n        sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n    } catch (err) {}\n    if (!sliceCanConvertNodelists) {\n        toArray = function(arrayLike) {\n            var arr = new Array(arrayLike.length), i = arrayLike.length;\n            while (i--) {\n                arr[i] = arrayLike[i];\n            }\n            return arr;\n        };\n    }\n    function makeElement(tagName, attributes) {\n        var el = fabric.document.createElement(tagName);\n        for (var prop in attributes) {\n            if (prop === \"class\") {\n                el.className = attributes[prop];\n            } else if (prop === \"for\") {\n                el.htmlFor = attributes[prop];\n            } else {\n                el.setAttribute(prop, attributes[prop]);\n            }\n        }\n        return el;\n    }\n    function addClass(element, className) {\n        if (element && (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") === -1) {\n            element.className += (element.className ? \" \" : \"\") + className;\n        }\n    }\n    function wrapElement(element, wrapper, attributes) {\n        if (typeof wrapper === \"string\") {\n            wrapper = makeElement(wrapper, attributes);\n        }\n        if (element.parentNode) {\n            element.parentNode.replaceChild(wrapper, element);\n        }\n        wrapper.appendChild(element);\n        return wrapper;\n    }\n    function getScrollLeftTop(element) {\n        var left = 0, top = 0, docElement = fabric.document.documentElement, body = fabric.document.body || {\n            scrollLeft: 0,\n            scrollTop: 0\n        };\n        while (element && (element.parentNode || element.host)) {\n            element = element.parentNode || element.host;\n            if (element === fabric.document) {\n                left = body.scrollLeft || docElement.scrollLeft || 0;\n                top = body.scrollTop || docElement.scrollTop || 0;\n            } else {\n                left += element.scrollLeft || 0;\n                top += element.scrollTop || 0;\n            }\n            if (element.nodeType === 1 && element.style.position === \"fixed\") {\n                break;\n            }\n        }\n        return {\n            left: left,\n            top: top\n        };\n    }\n    function getElementOffset(element) {\n        var docElem, doc = element && element.ownerDocument, box = {\n            left: 0,\n            top: 0\n        }, offset = {\n            left: 0,\n            top: 0\n        }, scrollLeftTop, offsetAttributes = {\n            borderLeftWidth: \"left\",\n            borderTopWidth: \"top\",\n            paddingLeft: \"left\",\n            paddingTop: \"top\"\n        };\n        if (!doc) {\n            return offset;\n        }\n        for (var attr in offsetAttributes) {\n            offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n        }\n        docElem = doc.documentElement;\n        if (typeof element.getBoundingClientRect !== \"undefined\") {\n            box = element.getBoundingClientRect();\n        }\n        scrollLeftTop = getScrollLeftTop(element);\n        return {\n            left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n            top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n        };\n    }\n    var getElementStyle;\n    if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n        getElementStyle = function(element, attr) {\n            var style = fabric.document.defaultView.getComputedStyle(element, null);\n            return style ? style[attr] : undefined;\n        };\n    } else {\n        getElementStyle = function(element, attr) {\n            var value = element.style[attr];\n            if (!value && element.currentStyle) {\n                value = element.currentStyle[attr];\n            }\n            return value;\n        };\n    }\n    (function() {\n        var style = fabric.document.documentElement.style, selectProp = \"userSelect\" in style ? \"userSelect\" : \"MozUserSelect\" in style ? \"MozUserSelect\" : \"WebkitUserSelect\" in style ? \"WebkitUserSelect\" : \"KhtmlUserSelect\" in style ? \"KhtmlUserSelect\" : \"\";\n        function makeElementUnselectable(element) {\n            if (typeof element.onselectstart !== \"undefined\") {\n                element.onselectstart = fabric.util.falseFunction;\n            }\n            if (selectProp) {\n                element.style[selectProp] = \"none\";\n            } else if (typeof element.unselectable === \"string\") {\n                element.unselectable = \"on\";\n            }\n            return element;\n        }\n        function makeElementSelectable(element) {\n            if (typeof element.onselectstart !== \"undefined\") {\n                element.onselectstart = null;\n            }\n            if (selectProp) {\n                element.style[selectProp] = \"\";\n            } else if (typeof element.unselectable === \"string\") {\n                element.unselectable = \"\";\n            }\n            return element;\n        }\n        fabric.util.makeElementUnselectable = makeElementUnselectable;\n        fabric.util.makeElementSelectable = makeElementSelectable;\n    })();\n    (function() {\n        function getScript(url, callback) {\n            var headEl = fabric.document.getElementsByTagName(\"head\")[0], scriptEl = fabric.document.createElement(\"script\"), loading = true;\n            scriptEl.onload = scriptEl.onreadystatechange = function(e) {\n                if (loading) {\n                    if (typeof this.readyState === \"string\" && this.readyState !== \"loaded\" && this.readyState !== \"complete\") {\n                        return;\n                    }\n                    loading = false;\n                    callback(e || fabric.window.event);\n                    scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n                }\n            };\n            scriptEl.src = url;\n            headEl.appendChild(scriptEl);\n        }\n        fabric.util.getScript = getScript;\n    })();\n    function getNodeCanvas(element) {\n        var impl = fabric.jsdomImplForWrapper(element);\n        return impl._canvas || impl._image;\n    }\n    fabric.util.getById = getById;\n    fabric.util.toArray = toArray;\n    fabric.util.makeElement = makeElement;\n    fabric.util.addClass = addClass;\n    fabric.util.wrapElement = wrapElement;\n    fabric.util.getScrollLeftTop = getScrollLeftTop;\n    fabric.util.getElementOffset = getElementOffset;\n    fabric.util.getElementStyle = getElementStyle;\n    fabric.util.getNodeCanvas = getNodeCanvas;\n})();\n\n(function() {\n    function addParamToUrl(url, param) {\n        return url + (/\\?/.test(url) ? \"&\" : \"?\") + param;\n    }\n    var makeXHR = function() {\n        var factories = [ function() {\n            return new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }, function() {\n            return new ActiveXObject(\"Msxml2.XMLHTTP\");\n        }, function() {\n            return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n        }, function() {\n            return new XMLHttpRequest();\n        } ];\n        for (var i = factories.length; i--; ) {\n            try {\n                var req = factories[i]();\n                if (req) {\n                    return factories[i];\n                }\n            } catch (err) {}\n        }\n    }();\n    function emptyFn() {}\n    function request(url, options) {\n        options || (options = {});\n        var method = options.method ? options.method.toUpperCase() : \"GET\", onComplete = options.onComplete || function() {}, xhr = makeXHR(), body = options.body || options.parameters;\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState === 4) {\n                onComplete(xhr);\n                xhr.onreadystatechange = emptyFn;\n            }\n        };\n        if (method === \"GET\") {\n            body = null;\n            if (typeof options.parameters === \"string\") {\n                url = addParamToUrl(url, options.parameters);\n            }\n        }\n        xhr.open(method, url, true);\n        if (method === \"POST\" || method === \"PUT\") {\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        }\n        xhr.send(body);\n        return xhr;\n    }\n    fabric.util.request = request;\n})();\n\nfabric.log = function() {};\n\nfabric.warn = function() {};\n\nif (typeof console !== \"undefined\") {\n    [ \"log\", \"warn\" ].forEach(function(methodName) {\n        if (typeof console[methodName] !== \"undefined\" && typeof console[methodName].apply === \"function\") {\n            fabric[methodName] = function() {\n                return console[methodName].apply(console, arguments);\n            };\n        }\n    });\n}\n\n(function() {\n    function noop() {\n        return false;\n    }\n    function animate(options) {\n        requestAnimFrame(function(timestamp) {\n            options || (options = {});\n            var start = timestamp || +new Date(), duration = options.duration || 500, finish = start + duration, time, onChange = options.onChange || noop, abort = options.abort || noop, onComplete = options.onComplete || noop, easing = options.easing || function(t, b, c, d) {\n                return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n            }, startValue = \"startValue\" in options ? options.startValue : 0, endValue = \"endValue\" in options ? options.endValue : 100, byValue = options.byValue || endValue - startValue;\n            options.onStart && options.onStart();\n            (function tick(ticktime) {\n                if (abort()) {\n                    onComplete(endValue, 1, 1);\n                    return;\n                }\n                time = ticktime || +new Date();\n                var currentTime = time > finish ? duration : time - start, timePerc = currentTime / duration, current = easing(currentTime, startValue, byValue, duration), valuePerc = Math.abs((current - startValue) / byValue);\n                onChange(current, valuePerc, timePerc);\n                if (time > finish) {\n                    options.onComplete && options.onComplete();\n                    return;\n                }\n                requestAnimFrame(tick);\n            })(start);\n        });\n    }\n    var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(callback) {\n        return fabric.window.setTimeout(callback, 1e3 / 60);\n    };\n    var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n    function requestAnimFrame() {\n        return _requestAnimFrame.apply(fabric.window, arguments);\n    }\n    function cancelAnimFrame() {\n        return _cancelAnimFrame.apply(fabric.window, arguments);\n    }\n    fabric.util.animate = animate;\n    fabric.util.requestAnimFrame = requestAnimFrame;\n    fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function() {\n    function calculateColor(begin, end, pos) {\n        var color = \"rgba(\" + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + \",\" + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + \",\" + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n        color += \",\" + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n        color += \")\";\n        return color;\n    }\n    function animateColor(fromColor, toColor, duration, options) {\n        var startColor = new fabric.Color(fromColor).getSource(), endColor = new fabric.Color(toColor).getSource();\n        options = options || {};\n        fabric.util.animate(fabric.util.object.extend(options, {\n            duration: duration || 500,\n            startValue: startColor,\n            endValue: endColor,\n            byValue: endColor,\n            easing: function(currentTime, startValue, byValue, duration) {\n                var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n                return calculateColor(startValue, byValue, posValue);\n            }\n        }));\n    }\n    fabric.util.animateColor = animateColor;\n})();\n\n(function() {\n    function normalize(a, c, p, s) {\n        if (a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        } else {\n            if (c === 0 && a === 0) {\n                s = p / (2 * Math.PI) * Math.asin(1);\n            } else {\n                s = p / (2 * Math.PI) * Math.asin(c / a);\n            }\n        }\n        return {\n            a: a,\n            c: c,\n            p: p,\n            s: s\n        };\n    }\n    function elastic(opts, t, d) {\n        return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n    }\n    function easeOutCubic(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t + 1) + b;\n    }\n    function easeInOutCubic(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\n    }\n    function easeInQuart(t, b, c, d) {\n        return c * (t /= d) * t * t * t + b;\n    }\n    function easeOutQuart(t, b, c, d) {\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    }\n    function easeInOutQuart(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t * t + b;\n        }\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n    }\n    function easeInQuint(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    }\n    function easeOutQuint(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    }\n    function easeInOutQuint(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * t * t * t * t * t + b;\n        }\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    }\n    function easeInSine(t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    }\n    function easeOutSine(t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    }\n    function easeInOutSine(t, b, c, d) {\n        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    }\n    function easeInExpo(t, b, c, d) {\n        return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n    }\n    function easeOutExpo(t, b, c, d) {\n        return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n    function easeInOutExpo(t, b, c, d) {\n        if (t === 0) {\n            return b;\n        }\n        if (t === d) {\n            return b + c;\n        }\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n        }\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n    }\n    function easeInCirc(t, b, c, d) {\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    }\n    function easeOutCirc(t, b, c, d) {\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    }\n    function easeInOutCirc(t, b, c, d) {\n        t /= d / 2;\n        if (t < 1) {\n            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n        }\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n    }\n    function easeInElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d;\n        if (t === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * .3;\n        }\n        var opts = normalize(a, c, p, s);\n        return -elastic(opts, t, d) + b;\n    }\n    function easeOutElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d;\n        if (t === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * .3;\n        }\n        var opts = normalize(a, c, p, s);\n        return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n    }\n    function easeInOutElastic(t, b, c, d) {\n        var s = 1.70158, p = 0, a = c;\n        if (t === 0) {\n            return b;\n        }\n        t /= d / 2;\n        if (t === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (.3 * 1.5);\n        }\n        var opts = normalize(a, c, p, s);\n        if (t < 1) {\n            return -.5 * elastic(opts, t, d) + b;\n        }\n        return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * .5 + opts.c + b;\n    }\n    function easeInBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    }\n    function easeOutBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    }\n    function easeInOutBack(t, b, c, d, s) {\n        if (s === undefined) {\n            s = 1.70158;\n        }\n        t /= d / 2;\n        if (t < 1) {\n            return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    }\n    function easeInBounce(t, b, c, d) {\n        return c - easeOutBounce(d - t, 0, c, d) + b;\n    }\n    function easeOutBounce(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        } else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n        } else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n        } else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n        }\n    }\n    function easeInOutBounce(t, b, c, d) {\n        if (t < d / 2) {\n            return easeInBounce(t * 2, 0, c, d) * .5 + b;\n        }\n        return easeOutBounce(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n    }\n    fabric.util.ease = {\n        easeInQuad: function(t, b, c, d) {\n            return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function(t, b, c, d) {\n            return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function(t, b, c, d) {\n            t /= d / 2;\n            if (t < 1) {\n                return c / 2 * t * t + b;\n            }\n            return -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function(t, b, c, d) {\n            return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: easeOutCubic,\n        easeInOutCubic: easeInOutCubic,\n        easeInQuart: easeInQuart,\n        easeOutQuart: easeOutQuart,\n        easeInOutQuart: easeInOutQuart,\n        easeInQuint: easeInQuint,\n        easeOutQuint: easeOutQuint,\n        easeInOutQuint: easeInOutQuint,\n        easeInSine: easeInSine,\n        easeOutSine: easeOutSine,\n        easeInOutSine: easeInOutSine,\n        easeInExpo: easeInExpo,\n        easeOutExpo: easeOutExpo,\n        easeInOutExpo: easeInOutExpo,\n        easeInCirc: easeInCirc,\n        easeOutCirc: easeOutCirc,\n        easeInOutCirc: easeInOutCirc,\n        easeInElastic: easeInElastic,\n        easeOutElastic: easeOutElastic,\n        easeInOutElastic: easeInOutElastic,\n        easeInBack: easeInBack,\n        easeOutBack: easeOutBack,\n        easeInOutBack: easeInOutBack,\n        easeInBounce: easeInBounce,\n        easeOutBounce: easeOutBounce,\n        easeInOutBounce: easeInOutBounce\n    };\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, toFixed = fabric.util.toFixed, parseUnit = fabric.util.parseUnit, multiplyTransformMatrices = fabric.util.multiplyTransformMatrices, svgValidTagNames = [ \"path\", \"circle\", \"polygon\", \"polyline\", \"ellipse\", \"rect\", \"line\", \"image\", \"text\", \"linearGradient\", \"radialGradient\", \"stop\" ], svgViewBoxElements = [ \"symbol\", \"image\", \"marker\", \"pattern\", \"view\", \"svg\" ], svgInvalidAncestors = [ \"pattern\", \"defs\", \"symbol\", \"metadata\", \"clipPath\", \"mask\", \"desc\" ], svgValidParents = [ \"symbol\", \"g\", \"a\", \"svg\" ], attributesMap = {\n        cx: \"left\",\n        x: \"left\",\n        r: \"radius\",\n        cy: \"top\",\n        y: \"top\",\n        display: \"visible\",\n        visibility: \"visible\",\n        transform: \"transformMatrix\",\n        \"fill-opacity\": \"fillOpacity\",\n        \"fill-rule\": \"fillRule\",\n        \"font-family\": \"fontFamily\",\n        \"font-size\": \"fontSize\",\n        \"font-style\": \"fontStyle\",\n        \"font-weight\": \"fontWeight\",\n        \"paint-order\": \"paintFirst\",\n        \"stroke-dasharray\": \"strokeDashArray\",\n        \"stroke-linecap\": \"strokeLineCap\",\n        \"stroke-linejoin\": \"strokeLineJoin\",\n        \"stroke-miterlimit\": \"strokeMiterLimit\",\n        \"stroke-opacity\": \"strokeOpacity\",\n        \"stroke-width\": \"strokeWidth\",\n        \"text-decoration\": \"textDecoration\",\n        \"text-anchor\": \"textAnchor\",\n        opacity: \"opacity\"\n    }, colorAttributes = {\n        stroke: \"strokeOpacity\",\n        fill: \"fillOpacity\"\n    };\n    fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n    fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n    fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n    fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n    fabric.cssRules = {};\n    fabric.gradientDefs = {};\n    function normalizeAttr(attr) {\n        if (attr in attributesMap) {\n            return attributesMap[attr];\n        }\n        return attr;\n    }\n    function normalizeValue(attr, value, parentAttributes, fontSize) {\n        var isArray = Object.prototype.toString.call(value) === \"[object Array]\", parsed;\n        if ((attr === \"fill\" || attr === \"stroke\") && value === \"none\") {\n            value = \"\";\n        } else if (attr === \"strokeDashArray\") {\n            if (value === \"none\") {\n                value = null;\n            } else {\n                value = value.replace(/,/g, \" \").split(/\\s+/).map(function(n) {\n                    return parseFloat(n);\n                });\n            }\n        } else if (attr === \"transformMatrix\") {\n            if (parentAttributes && parentAttributes.transformMatrix) {\n                value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n            } else {\n                value = fabric.parseTransformAttribute(value);\n            }\n        } else if (attr === \"visible\") {\n            value = value !== \"none\" && value !== \"hidden\";\n            if (parentAttributes && parentAttributes.visible === false) {\n                value = false;\n            }\n        } else if (attr === \"opacity\") {\n            value = parseFloat(value);\n            if (parentAttributes && typeof parentAttributes.opacity !== \"undefined\") {\n                value *= parentAttributes.opacity;\n            }\n        } else if (attr === \"textAnchor\") {\n            value = value === \"start\" ? \"left\" : value === \"end\" ? \"right\" : \"center\";\n        } else if (attr === \"paintFirst\") {\n            var fillIndex = value.indexOf(\"fill\");\n            var strokeIndex = value.indexOf(\"stroke\");\n            var value = \"fill\";\n            if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n                value = \"stroke\";\n            } else if (fillIndex === -1 && strokeIndex > -1) {\n                value = \"stroke\";\n            }\n        } else {\n            parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n        }\n        return !isArray && isNaN(parsed) ? value : parsed;\n    }\n    function getSvgRegex(arr) {\n        return new RegExp(\"^(\" + arr.join(\"|\") + \")\\\\b\", \"i\");\n    }\n    function _setStrokeFillOpacity(attributes) {\n        for (var attr in colorAttributes) {\n            if (typeof attributes[colorAttributes[attr]] === \"undefined\" || attributes[attr] === \"\") {\n                continue;\n            }\n            if (typeof attributes[attr] === \"undefined\") {\n                if (!fabric.Object.prototype[attr]) {\n                    continue;\n                }\n                attributes[attr] = fabric.Object.prototype[attr];\n            }\n            if (attributes[attr].indexOf(\"url(\") === 0) {\n                continue;\n            }\n            var color = new fabric.Color(attributes[attr]);\n            attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n        }\n        return attributes;\n    }\n    function _getMultipleNodes(doc, nodeNames) {\n        var nodeName, nodeArray = [], nodeList, i, len;\n        for (i = 0, len = nodeNames.length; i < len; i++) {\n            nodeName = nodeNames[i];\n            nodeList = doc.getElementsByTagName(nodeName);\n            nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n        }\n        return nodeArray;\n    }\n    fabric.parseTransformAttribute = function() {\n        function rotateMatrix(matrix, args) {\n            var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]), x = 0, y = 0;\n            if (args.length === 3) {\n                x = args[1];\n                y = args[2];\n            }\n            matrix[0] = cos;\n            matrix[1] = sin;\n            matrix[2] = -sin;\n            matrix[3] = cos;\n            matrix[4] = x - (cos * x - sin * y);\n            matrix[5] = y - (sin * x + cos * y);\n        }\n        function scaleMatrix(matrix, args) {\n            var multiplierX = args[0], multiplierY = args.length === 2 ? args[1] : args[0];\n            matrix[0] = multiplierX;\n            matrix[3] = multiplierY;\n        }\n        function skewMatrix(matrix, args, pos) {\n            matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n        }\n        function translateMatrix(matrix, args) {\n            matrix[4] = args[0];\n            if (args.length === 2) {\n                matrix[5] = args[1];\n            }\n        }\n        var iMatrix = [ 1, 0, 0, 1, 0, 0 ], number = fabric.reNum, commaWsp = \"(?:\\\\s+,?\\\\s*|,\\\\s*)\", skewX = \"(?:(skewX)\\\\s*\\\\(\\\\s*(\" + number + \")\\\\s*\\\\))\", skewY = \"(?:(skewY)\\\\s*\\\\(\\\\s*(\" + number + \")\\\\s*\\\\))\", rotate = \"(?:(rotate)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", scale = \"(?:(scale)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", translate = \"(?:(translate)\\\\s*\\\\(\\\\s*(\" + number + \")(?:\" + commaWsp + \"(\" + number + \"))?\\\\s*\\\\))\", matrix = \"(?:(matrix)\\\\s*\\\\(\\\\s*\" + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + commaWsp + \"(\" + number + \")\" + \"\\\\s*\\\\))\", transform = \"(?:\" + matrix + \"|\" + translate + \"|\" + scale + \"|\" + rotate + \"|\" + skewX + \"|\" + skewY + \")\", transforms = \"(?:\" + transform + \"(?:\" + commaWsp + \"*\" + transform + \")*\" + \")\", transformList = \"^\\\\s*(?:\" + transforms + \"?)\\\\s*$\", reTransformList = new RegExp(transformList), reTransform = new RegExp(transform, \"g\");\n        return function(attributeValue) {\n            var matrix = iMatrix.concat(), matrices = [];\n            if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n                return matrix;\n            }\n            attributeValue.replace(reTransform, function(match) {\n                var m = new RegExp(transform).exec(match).filter(function(match) {\n                    return !!match;\n                }), operation = m[1], args = m.slice(2).map(parseFloat);\n                switch (operation) {\n                  case \"translate\":\n                    translateMatrix(matrix, args);\n                    break;\n\n                  case \"rotate\":\n                    args[0] = fabric.util.degreesToRadians(args[0]);\n                    rotateMatrix(matrix, args);\n                    break;\n\n                  case \"scale\":\n                    scaleMatrix(matrix, args);\n                    break;\n\n                  case \"skewX\":\n                    skewMatrix(matrix, args, 2);\n                    break;\n\n                  case \"skewY\":\n                    skewMatrix(matrix, args, 1);\n                    break;\n\n                  case \"matrix\":\n                    matrix = args;\n                    break;\n                }\n                matrices.push(matrix.concat());\n                matrix = iMatrix.concat();\n            });\n            var combinedMatrix = matrices[0];\n            while (matrices.length > 1) {\n                matrices.shift();\n                combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n            }\n            return combinedMatrix;\n        };\n    }();\n    function parseStyleString(style, oStyle) {\n        var attr, value;\n        style.replace(/;\\s*$/, \"\").split(\";\").forEach(function(chunk) {\n            var pair = chunk.split(\":\");\n            attr = pair[0].trim().toLowerCase();\n            value = pair[1].trim();\n            oStyle[attr] = value;\n        });\n    }\n    function parseStyleObject(style, oStyle) {\n        var attr, value;\n        for (var prop in style) {\n            if (typeof style[prop] === \"undefined\") {\n                continue;\n            }\n            attr = prop.toLowerCase();\n            value = style[prop];\n            oStyle[attr] = value;\n        }\n    }\n    function getGlobalStylesForElement(element, svgUid) {\n        var styles = {};\n        for (var rule in fabric.cssRules[svgUid]) {\n            if (elementMatchesRule(element, rule.split(\" \"))) {\n                for (var property in fabric.cssRules[svgUid][rule]) {\n                    styles[property] = fabric.cssRules[svgUid][rule][property];\n                }\n            }\n        }\n        return styles;\n    }\n    function elementMatchesRule(element, selectors) {\n        var firstMatching, parentMatching = true;\n        firstMatching = selectorMatches(element, selectors.pop());\n        if (firstMatching && selectors.length) {\n            parentMatching = doesSomeParentMatch(element, selectors);\n        }\n        return firstMatching && parentMatching && selectors.length === 0;\n    }\n    function doesSomeParentMatch(element, selectors) {\n        var selector, parentMatching = true;\n        while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n            if (parentMatching) {\n                selector = selectors.pop();\n            }\n            element = element.parentNode;\n            parentMatching = selectorMatches(element, selector);\n        }\n        return selectors.length === 0;\n    }\n    function selectorMatches(element, selector) {\n        var nodeName = element.nodeName, classNames = element.getAttribute(\"class\"), id = element.getAttribute(\"id\"), matcher, i;\n        matcher = new RegExp(\"^\" + nodeName, \"i\");\n        selector = selector.replace(matcher, \"\");\n        if (id && selector.length) {\n            matcher = new RegExp(\"#\" + id + \"(?![a-zA-Z\\\\-]+)\", \"i\");\n            selector = selector.replace(matcher, \"\");\n        }\n        if (classNames && selector.length) {\n            classNames = classNames.split(\" \");\n            for (i = classNames.length; i--; ) {\n                matcher = new RegExp(\"\\\\.\" + classNames[i] + \"(?![a-zA-Z\\\\-]+)\", \"i\");\n                selector = selector.replace(matcher, \"\");\n            }\n        }\n        return selector.length === 0;\n    }\n    function elementById(doc, id) {\n        var el;\n        doc.getElementById && (el = doc.getElementById(id));\n        if (el) {\n            return el;\n        }\n        var node, i, len, nodelist = doc.getElementsByTagName(\"*\");\n        for (i = 0, len = nodelist.length; i < len; i++) {\n            node = nodelist[i];\n            if (id === node.getAttribute(\"id\")) {\n                return node;\n            }\n        }\n    }\n    function parseUseDirectives(doc) {\n        var nodelist = _getMultipleNodes(doc, [ \"use\", \"svg:use\" ]), i = 0;\n        while (nodelist.length && i < nodelist.length) {\n            var el = nodelist[i], xlink = el.getAttribute(\"xlink:href\").substr(1), x = el.getAttribute(\"x\") || 0, y = el.getAttribute(\"y\") || 0, el2 = elementById(doc, xlink).cloneNode(true), currentTrans = (el2.getAttribute(\"transform\") || \"\") + \" translate(\" + x + \", \" + y + \")\", parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n            applyViewboxTransform(el2);\n            if (/^svg$/i.test(el2.nodeName)) {\n                var el3 = el2.ownerDocument.createElement(\"g\");\n                for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n                    attr = attrs.item(j);\n                    el3.setAttribute(attr.nodeName, attr.nodeValue);\n                }\n                while (el2.firstChild) {\n                    el3.appendChild(el2.firstChild);\n                }\n                el2 = el3;\n            }\n            for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n                attr = attrs.item(j);\n                if (attr.nodeName === \"x\" || attr.nodeName === \"y\" || attr.nodeName === \"xlink:href\") {\n                    continue;\n                }\n                if (attr.nodeName === \"transform\") {\n                    currentTrans = attr.nodeValue + \" \" + currentTrans;\n                } else {\n                    el2.setAttribute(attr.nodeName, attr.nodeValue);\n                }\n            }\n            el2.setAttribute(\"transform\", currentTrans);\n            el2.setAttribute(\"instantiated_by_use\", \"1\");\n            el2.removeAttribute(\"id\");\n            parentNode = el.parentNode;\n            parentNode.replaceChild(el2, el);\n            if (nodelist.length === oldLength) {\n                i++;\n            }\n        }\n    }\n    var reViewBoxAttrValue = new RegExp(\"^\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*,?\" + \"\\\\s*(\" + fabric.reNum + \"+)\\\\s*\" + \"$\");\n    function applyViewboxTransform(element) {\n        var viewBoxAttr = element.getAttribute(\"viewBox\"), scaleX = 1, scaleY = 1, minX = 0, minY = 0, viewBoxWidth, viewBoxHeight, matrix, el, widthAttr = element.getAttribute(\"width\"), heightAttr = element.getAttribute(\"height\"), x = element.getAttribute(\"x\") || 0, y = element.getAttribute(\"y\") || 0, preserveAspectRatio = element.getAttribute(\"preserveAspectRatio\") || \"\", missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)), missingDimAttr = !widthAttr || !heightAttr || widthAttr === \"100%\" || heightAttr === \"100%\", toBeParsed = missingViewBox && missingDimAttr, parsedDim = {}, translateMatrix = \"\";\n        parsedDim.width = 0;\n        parsedDim.height = 0;\n        parsedDim.toBeParsed = toBeParsed;\n        if (toBeParsed) {\n            return parsedDim;\n        }\n        if (missingViewBox) {\n            parsedDim.width = parseUnit(widthAttr);\n            parsedDim.height = parseUnit(heightAttr);\n            return parsedDim;\n        }\n        minX = -parseFloat(viewBoxAttr[1]);\n        minY = -parseFloat(viewBoxAttr[2]);\n        viewBoxWidth = parseFloat(viewBoxAttr[3]);\n        viewBoxHeight = parseFloat(viewBoxAttr[4]);\n        if (!missingDimAttr) {\n            parsedDim.width = parseUnit(widthAttr);\n            parsedDim.height = parseUnit(heightAttr);\n            scaleX = parsedDim.width / viewBoxWidth;\n            scaleY = parsedDim.height / viewBoxHeight;\n        } else {\n            parsedDim.width = viewBoxWidth;\n            parsedDim.height = viewBoxHeight;\n        }\n        preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n        if (preserveAspectRatio.alignX !== \"none\") {\n            scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n        }\n        if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n            return parsedDim;\n        }\n        if (x || y) {\n            translateMatrix = \" translate(\" + parseUnit(x) + \" \" + parseUnit(y) + \") \";\n        }\n        matrix = translateMatrix + \" matrix(\" + scaleX + \" 0\" + \" 0 \" + scaleY + \" \" + minX * scaleX + \" \" + minY * scaleY + \") \";\n        if (element.nodeName === \"svg\") {\n            el = element.ownerDocument.createElement(\"g\");\n            while (element.firstChild) {\n                el.appendChild(element.firstChild);\n            }\n            element.appendChild(el);\n        } else {\n            el = element;\n            matrix = el.getAttribute(\"transform\") + matrix;\n        }\n        el.setAttribute(\"transform\", matrix);\n        return parsedDim;\n    }\n    function hasAncestorWithNodeName(element, nodeName) {\n        while (element && (element = element.parentNode)) {\n            if (element.nodeName && nodeName.test(element.nodeName.replace(\"svg:\", \"\")) && !element.getAttribute(\"instantiated_by_use\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n    fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n        if (!doc) {\n            return;\n        }\n        parseUseDirectives(doc);\n        var svgUid = fabric.Object.__uid++, i, len, options = applyViewboxTransform(doc), descendants = fabric.util.toArray(doc.getElementsByTagName(\"*\"));\n        options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n        options.svgUid = svgUid;\n        if (descendants.length === 0 && fabric.isLikelyNode) {\n            descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n            var arr = [];\n            for (i = 0, len = descendants.length; i < len; i++) {\n                arr[i] = descendants[i];\n            }\n            descendants = arr;\n        }\n        var elements = descendants.filter(function(el) {\n            applyViewboxTransform(el);\n            return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace(\"svg:\", \"\")) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx);\n        });\n        if (!elements || elements && !elements.length) {\n            callback && callback([], {});\n            return;\n        }\n        fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n        fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n        fabric.parseElements(elements, function(instances, elements) {\n            if (callback) {\n                callback(instances, options, elements, descendants);\n            }\n        }, clone(options), reviver, parsingOptions);\n    };\n    var reFontDeclaration = new RegExp(\"(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*\" + \"(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(\" + fabric.reNum + \"(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|\" + fabric.reNum + \"))?\\\\s+(.*)\");\n    extend(fabric, {\n        parseFontDeclaration: function(value, oStyle) {\n            var match = value.match(reFontDeclaration);\n            if (!match) {\n                return;\n            }\n            var fontStyle = match[1], fontWeight = match[3], fontSize = match[4], lineHeight = match[5], fontFamily = match[6];\n            if (fontStyle) {\n                oStyle.fontStyle = fontStyle;\n            }\n            if (fontWeight) {\n                oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n            }\n            if (fontSize) {\n                oStyle.fontSize = parseUnit(fontSize);\n            }\n            if (fontFamily) {\n                oStyle.fontFamily = fontFamily;\n            }\n            if (lineHeight) {\n                oStyle.lineHeight = lineHeight === \"normal\" ? 1 : lineHeight;\n            }\n        },\n        getGradientDefs: function(doc) {\n            var tagArray = [ \"linearGradient\", \"radialGradient\", \"svg:linearGradient\", \"svg:radialGradient\" ], elList = _getMultipleNodes(doc, tagArray), el, j = 0, id, xlink, gradientDefs = {}, idsToXlinkMap = {};\n            j = elList.length;\n            while (j--) {\n                el = elList[j];\n                xlink = el.getAttribute(\"xlink:href\");\n                id = el.getAttribute(\"id\");\n                if (xlink) {\n                    idsToXlinkMap[id] = xlink.substr(1);\n                }\n                gradientDefs[id] = el;\n            }\n            for (id in idsToXlinkMap) {\n                var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n                el = gradientDefs[id];\n                while (el2.firstChild) {\n                    el.appendChild(el2.firstChild);\n                }\n            }\n            return gradientDefs;\n        },\n        parseAttributes: function(element, attributes, svgUid) {\n            if (!element) {\n                return;\n            }\n            var value, parentAttributes = {}, fontSize;\n            if (typeof svgUid === \"undefined\") {\n                svgUid = element.getAttribute(\"svgUid\");\n            }\n            if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n                parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n            }\n            fontSize = parentAttributes && parentAttributes.fontSize || element.getAttribute(\"font-size\") || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n            var ownAttributes = attributes.reduce(function(memo, attr) {\n                value = element.getAttribute(attr);\n                if (value) {\n                    memo[attr] = value;\n                }\n                return memo;\n            }, {});\n            ownAttributes = extend(ownAttributes, extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n            var normalizedAttr, normalizedValue, normalizedStyle = {};\n            for (var attr in ownAttributes) {\n                normalizedAttr = normalizeAttr(attr);\n                normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n                normalizedStyle[normalizedAttr] = normalizedValue;\n            }\n            if (normalizedStyle && normalizedStyle.font) {\n                fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n            }\n            var mergedAttrs = extend(parentAttributes, normalizedStyle);\n            return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n        },\n        parseElements: function(elements, callback, options, reviver, parsingOptions) {\n            new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n        },\n        parseStyleAttribute: function(element) {\n            var oStyle = {}, style = element.getAttribute(\"style\");\n            if (!style) {\n                return oStyle;\n            }\n            if (typeof style === \"string\") {\n                parseStyleString(style, oStyle);\n            } else {\n                parseStyleObject(style, oStyle);\n            }\n            return oStyle;\n        },\n        parsePointsAttribute: function(points) {\n            if (!points) {\n                return null;\n            }\n            points = points.replace(/,/g, \" \").trim();\n            points = points.split(/\\s+/);\n            var parsedPoints = [], i, len;\n            for (i = 0, len = points.length; i < len; i += 2) {\n                parsedPoints.push({\n                    x: parseFloat(points[i]),\n                    y: parseFloat(points[i + 1])\n                });\n            }\n            return parsedPoints;\n        },\n        getCSSRules: function(doc) {\n            var styles = doc.getElementsByTagName(\"style\"), i, len, allRules = {}, rules;\n            for (i = 0, len = styles.length; i < len; i++) {\n                var styleContents = styles[i].textContent || styles[i].text;\n                styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, \"\");\n                if (styleContents.trim() === \"\") {\n                    continue;\n                }\n                rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n                rules = rules.map(function(rule) {\n                    return rule.trim();\n                });\n                rules.forEach(function(rule) {\n                    var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/), ruleObj = {}, declaration = match[2].trim(), propertyValuePairs = declaration.replace(/;$/, \"\").split(/\\s*;\\s*/);\n                    for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n                        var pair = propertyValuePairs[i].split(/\\s*:\\s*/), property = pair[0], value = pair[1];\n                        ruleObj[property] = value;\n                    }\n                    rule = match[1];\n                    rule.split(\",\").forEach(function(_rule) {\n                        _rule = _rule.replace(/^svg/i, \"\").trim();\n                        if (_rule === \"\") {\n                            return;\n                        }\n                        if (allRules[_rule]) {\n                            fabric.util.object.extend(allRules[_rule], ruleObj);\n                        } else {\n                            allRules[_rule] = fabric.util.object.clone(ruleObj);\n                        }\n                    });\n                });\n            }\n            return allRules;\n        },\n        loadSVGFromURL: function(url, callback, reviver, options) {\n            url = url.replace(/^\\n\\s*/, \"\").trim();\n            new fabric.util.request(url, {\n                method: \"get\",\n                onComplete: onComplete\n            });\n            function onComplete(r) {\n                var xml = r.responseXML;\n                if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n                    xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n                    xml.async = \"false\";\n                    xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, \"\"));\n                }\n                if (!xml || !xml.documentElement) {\n                    callback && callback(null);\n                }\n                fabric.parseSVGDocument(xml.documentElement, function(results, _options, elements, allElements) {\n                    callback && callback(results, _options, elements, allElements);\n                }, reviver, options);\n            }\n        },\n        loadSVGFromString: function(string, callback, reviver, options) {\n            string = string.trim();\n            var doc;\n            if (typeof DOMParser !== \"undefined\") {\n                var parser = new DOMParser();\n                if (parser && parser.parseFromString) {\n                    doc = parser.parseFromString(string, \"text/xml\");\n                }\n            } else if (fabric.window.ActiveXObject) {\n                doc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                doc.async = \"false\";\n                doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, \"\"));\n            }\n            fabric.parseSVGDocument(doc.documentElement, function(results, _options, elements, allElements) {\n                callback(results, _options, elements, allElements);\n            }, reviver, options);\n        }\n    });\n})(typeof exports !== \"undefined\" ? exports : this);\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n    this.elements = elements;\n    this.callback = callback;\n    this.options = options;\n    this.reviver = reviver;\n    this.svgUid = options && options.svgUid || 0;\n    this.parsingOptions = parsingOptions;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n        this.elements[i].setAttribute(\"svgUid\", this.svgUid);\n        (function(_obj, i) {\n            setTimeout(function() {\n                _obj.createObject(_obj.elements[i], i);\n            }, 0);\n        })(this, i);\n    }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n    var klass = fabric[fabric.util.string.capitalize(el.tagName.replace(\"svg:\", \"\"))];\n    if (klass && klass.fromElement) {\n        try {\n            this._createObject(klass, el, index);\n        } catch (err) {\n            fabric.log(err);\n        }\n    } else {\n        this.checkIfDone();\n    }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n        var _options;\n        _this.resolveGradient(obj, \"fill\");\n        _this.resolveGradient(obj, \"stroke\");\n        if (obj instanceof fabric.Image) {\n            _options = obj.parsePreserveAspectRatioAttribute(el);\n        }\n        obj._removeTransformMatrix(_options);\n        _this.reviver && _this.reviver(el, obj);\n        _this.instances[index] = obj;\n        _this.checkIfDone();\n    };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n    var instanceFillValue = obj.get(property);\n    if (!/^url\\(/.test(instanceFillValue)) {\n        return;\n    }\n    var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n    if (fabric.gradientDefs[this.svgUid][gradientId]) {\n        obj.set(property, fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n    }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n    if (--this.numElements === 0) {\n        this.instances = this.instances.filter(function(el) {\n            return el != null;\n        });\n        this.callback(this.instances, this.elements);\n    }\n};\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Point) {\n        fabric.warn(\"fabric.Point is already defined\");\n        return;\n    }\n    fabric.Point = Point;\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    Point.prototype = {\n        type: \"point\",\n        constructor: Point,\n        add: function(that) {\n            return new Point(this.x + that.x, this.y + that.y);\n        },\n        addEquals: function(that) {\n            this.x += that.x;\n            this.y += that.y;\n            return this;\n        },\n        scalarAdd: function(scalar) {\n            return new Point(this.x + scalar, this.y + scalar);\n        },\n        scalarAddEquals: function(scalar) {\n            this.x += scalar;\n            this.y += scalar;\n            return this;\n        },\n        subtract: function(that) {\n            return new Point(this.x - that.x, this.y - that.y);\n        },\n        subtractEquals: function(that) {\n            this.x -= that.x;\n            this.y -= that.y;\n            return this;\n        },\n        scalarSubtract: function(scalar) {\n            return new Point(this.x - scalar, this.y - scalar);\n        },\n        scalarSubtractEquals: function(scalar) {\n            this.x -= scalar;\n            this.y -= scalar;\n            return this;\n        },\n        multiply: function(scalar) {\n            return new Point(this.x * scalar, this.y * scalar);\n        },\n        multiplyEquals: function(scalar) {\n            this.x *= scalar;\n            this.y *= scalar;\n            return this;\n        },\n        divide: function(scalar) {\n            return new Point(this.x / scalar, this.y / scalar);\n        },\n        divideEquals: function(scalar) {\n            this.x /= scalar;\n            this.y /= scalar;\n            return this;\n        },\n        eq: function(that) {\n            return this.x === that.x && this.y === that.y;\n        },\n        lt: function(that) {\n            return this.x < that.x && this.y < that.y;\n        },\n        lte: function(that) {\n            return this.x <= that.x && this.y <= that.y;\n        },\n        gt: function(that) {\n            return this.x > that.x && this.y > that.y;\n        },\n        gte: function(that) {\n            return this.x >= that.x && this.y >= that.y;\n        },\n        lerp: function(that, t) {\n            if (typeof t === \"undefined\") {\n                t = .5;\n            }\n            t = Math.max(Math.min(1, t), 0);\n            return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n        },\n        distanceFrom: function(that) {\n            var dx = this.x - that.x, dy = this.y - that.y;\n            return Math.sqrt(dx * dx + dy * dy);\n        },\n        midPointFrom: function(that) {\n            return this.lerp(that);\n        },\n        min: function(that) {\n            return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n        },\n        max: function(that) {\n            return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n        },\n        toString: function() {\n            return this.x + \",\" + this.y;\n        },\n        setXY: function(x, y) {\n            this.x = x;\n            this.y = y;\n            return this;\n        },\n        setX: function(x) {\n            this.x = x;\n            return this;\n        },\n        setY: function(y) {\n            this.y = y;\n            return this;\n        },\n        setFromPoint: function(that) {\n            this.x = that.x;\n            this.y = that.y;\n            return this;\n        },\n        swap: function(that) {\n            var x = this.x, y = this.y;\n            this.x = that.x;\n            this.y = that.y;\n            that.x = x;\n            that.y = y;\n        },\n        clone: function() {\n            return new Point(this.x, this.y);\n        }\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Intersection) {\n        fabric.warn(\"fabric.Intersection is already defined\");\n        return;\n    }\n    function Intersection(status) {\n        this.status = status;\n        this.points = [];\n    }\n    fabric.Intersection = Intersection;\n    fabric.Intersection.prototype = {\n        constructor: Intersection,\n        appendPoint: function(point) {\n            this.points.push(point);\n            return this;\n        },\n        appendPoints: function(points) {\n            this.points = this.points.concat(points);\n            return this;\n        }\n    };\n    fabric.Intersection.intersectLineLine = function(a1, a2, b1, b2) {\n        var result, uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x), uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n        if (uB !== 0) {\n            var ua = uaT / uB, ub = ubT / uB;\n            if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n                result = new Intersection(\"Intersection\");\n                result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n            } else {\n                result = new Intersection();\n            }\n        } else {\n            if (uaT === 0 || ubT === 0) {\n                result = new Intersection(\"Coincident\");\n            } else {\n                result = new Intersection(\"Parallel\");\n            }\n        }\n        return result;\n    };\n    fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n        var result = new Intersection(), length = points.length, b1, b2, inter, i;\n        for (i = 0; i < length; i++) {\n            b1 = points[i];\n            b2 = points[(i + 1) % length];\n            inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n            result.appendPoints(inter.points);\n        }\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n    fabric.Intersection.intersectPolygonPolygon = function(points1, points2) {\n        var result = new Intersection(), length = points1.length, i;\n        for (i = 0; i < length; i++) {\n            var a1 = points1[i], a2 = points1[(i + 1) % length], inter = Intersection.intersectLinePolygon(a1, a2, points2);\n            result.appendPoints(inter.points);\n        }\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n    fabric.Intersection.intersectPolygonRectangle = function(points, r1, r2) {\n        var min = r1.min(r2), max = r1.max(r2), topRight = new fabric.Point(max.x, min.y), bottomLeft = new fabric.Point(min.x, max.y), inter1 = Intersection.intersectLinePolygon(min, topRight, points), inter2 = Intersection.intersectLinePolygon(topRight, max, points), inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points), inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points), result = new Intersection();\n        result.appendPoints(inter1.points);\n        result.appendPoints(inter2.points);\n        result.appendPoints(inter3.points);\n        result.appendPoints(inter4.points);\n        if (result.points.length > 0) {\n            result.status = \"Intersection\";\n        }\n        return result;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Color) {\n        fabric.warn(\"fabric.Color is already defined.\");\n        return;\n    }\n    function Color(color) {\n        if (!color) {\n            this.setSource([ 0, 0, 0, 1 ]);\n        } else {\n            this._tryParsingColor(color);\n        }\n    }\n    fabric.Color = Color;\n    fabric.Color.prototype = {\n        _tryParsingColor: function(color) {\n            var source;\n            if (color in Color.colorNameMap) {\n                color = Color.colorNameMap[color];\n            }\n            if (color === \"transparent\") {\n                source = [ 255, 255, 255, 0 ];\n            }\n            if (!source) {\n                source = Color.sourceFromHex(color);\n            }\n            if (!source) {\n                source = Color.sourceFromRgb(color);\n            }\n            if (!source) {\n                source = Color.sourceFromHsl(color);\n            }\n            if (!source) {\n                source = [ 0, 0, 0, 1 ];\n            }\n            if (source) {\n                this.setSource(source);\n            }\n        },\n        _rgbToHsl: function(r, g, b) {\n            r /= 255;\n            g /= 255;\n            b /= 255;\n            var h, s, l, max = fabric.util.array.max([ r, g, b ]), min = fabric.util.array.min([ r, g, b ]);\n            l = (max + min) / 2;\n            if (max === min) {\n                h = s = 0;\n            } else {\n                var d = max - min;\n                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n                switch (max) {\n                  case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n\n                  case g:\n                    h = (b - r) / d + 2;\n                    break;\n\n                  case b:\n                    h = (r - g) / d + 4;\n                    break;\n                }\n                h /= 6;\n            }\n            return [ Math.round(h * 360), Math.round(s * 100), Math.round(l * 100) ];\n        },\n        getSource: function() {\n            return this._source;\n        },\n        setSource: function(source) {\n            this._source = source;\n        },\n        toRgb: function() {\n            var source = this.getSource();\n            return \"rgb(\" + source[0] + \",\" + source[1] + \",\" + source[2] + \")\";\n        },\n        toRgba: function() {\n            var source = this.getSource();\n            return \"rgba(\" + source[0] + \",\" + source[1] + \",\" + source[2] + \",\" + source[3] + \")\";\n        },\n        toHsl: function() {\n            var source = this.getSource(), hsl = this._rgbToHsl(source[0], source[1], source[2]);\n            return \"hsl(\" + hsl[0] + \",\" + hsl[1] + \"%,\" + hsl[2] + \"%)\";\n        },\n        toHsla: function() {\n            var source = this.getSource(), hsl = this._rgbToHsl(source[0], source[1], source[2]);\n            return \"hsla(\" + hsl[0] + \",\" + hsl[1] + \"%,\" + hsl[2] + \"%,\" + source[3] + \")\";\n        },\n        toHex: function() {\n            var source = this.getSource(), r, g, b;\n            r = source[0].toString(16);\n            r = r.length === 1 ? \"0\" + r : r;\n            g = source[1].toString(16);\n            g = g.length === 1 ? \"0\" + g : g;\n            b = source[2].toString(16);\n            b = b.length === 1 ? \"0\" + b : b;\n            return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n        },\n        toHexa: function() {\n            var source = this.getSource(), a;\n            a = Math.round(source[3] * 255);\n            a = a.toString(16);\n            a = a.length === 1 ? \"0\" + a : a;\n            return this.toHex() + a.toUpperCase();\n        },\n        getAlpha: function() {\n            return this.getSource()[3];\n        },\n        setAlpha: function(alpha) {\n            var source = this.getSource();\n            source[3] = alpha;\n            this.setSource(source);\n            return this;\n        },\n        toGrayscale: function() {\n            var source = this.getSource(), average = parseInt((source[0] * .3 + source[1] * .59 + source[2] * .11).toFixed(0), 10), currentAlpha = source[3];\n            this.setSource([ average, average, average, currentAlpha ]);\n            return this;\n        },\n        toBlackWhite: function(threshold) {\n            var source = this.getSource(), average = (source[0] * .3 + source[1] * .59 + source[2] * .11).toFixed(0), currentAlpha = source[3];\n            threshold = threshold || 127;\n            average = Number(average) < Number(threshold) ? 0 : 255;\n            this.setSource([ average, average, average, currentAlpha ]);\n            return this;\n        },\n        overlayWith: function(otherColor) {\n            if (!(otherColor instanceof Color)) {\n                otherColor = new Color(otherColor);\n            }\n            var result = [], alpha = this.getAlpha(), otherAlpha = .5, source = this.getSource(), otherSource = otherColor.getSource(), i;\n            for (i = 0; i < 3; i++) {\n                result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n            }\n            result[3] = alpha;\n            this.setSource(result);\n            return this;\n        }\n    };\n    fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/;\n    fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n    fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n    fabric.Color.colorNameMap = {\n        aliceblue: \"#F0F8FF\",\n        antiquewhite: \"#FAEBD7\",\n        aqua: \"#00FFFF\",\n        aquamarine: \"#7FFFD4\",\n        azure: \"#F0FFFF\",\n        beige: \"#F5F5DC\",\n        bisque: \"#FFE4C4\",\n        black: \"#000000\",\n        blanchedalmond: \"#FFEBCD\",\n        blue: \"#0000FF\",\n        blueviolet: \"#8A2BE2\",\n        brown: \"#A52A2A\",\n        burlywood: \"#DEB887\",\n        cadetblue: \"#5F9EA0\",\n        chartreuse: \"#7FFF00\",\n        chocolate: \"#D2691E\",\n        coral: \"#FF7F50\",\n        cornflowerblue: \"#6495ED\",\n        cornsilk: \"#FFF8DC\",\n        crimson: \"#DC143C\",\n        cyan: \"#00FFFF\",\n        darkblue: \"#00008B\",\n        darkcyan: \"#008B8B\",\n        darkgoldenrod: \"#B8860B\",\n        darkgray: \"#A9A9A9\",\n        darkgrey: \"#A9A9A9\",\n        darkgreen: \"#006400\",\n        darkkhaki: \"#BDB76B\",\n        darkmagenta: \"#8B008B\",\n        darkolivegreen: \"#556B2F\",\n        darkorange: \"#FF8C00\",\n        darkorchid: \"#9932CC\",\n        darkred: \"#8B0000\",\n        darksalmon: \"#E9967A\",\n        darkseagreen: \"#8FBC8F\",\n        darkslateblue: \"#483D8B\",\n        darkslategray: \"#2F4F4F\",\n        darkslategrey: \"#2F4F4F\",\n        darkturquoise: \"#00CED1\",\n        darkviolet: \"#9400D3\",\n        deeppink: \"#FF1493\",\n        deepskyblue: \"#00BFFF\",\n        dimgray: \"#696969\",\n        dimgrey: \"#696969\",\n        dodgerblue: \"#1E90FF\",\n        firebrick: \"#B22222\",\n        floralwhite: \"#FFFAF0\",\n        forestgreen: \"#228B22\",\n        fuchsia: \"#FF00FF\",\n        gainsboro: \"#DCDCDC\",\n        ghostwhite: \"#F8F8FF\",\n        gold: \"#FFD700\",\n        goldenrod: \"#DAA520\",\n        gray: \"#808080\",\n        grey: \"#808080\",\n        green: \"#008000\",\n        greenyellow: \"#ADFF2F\",\n        honeydew: \"#F0FFF0\",\n        hotpink: \"#FF69B4\",\n        indianred: \"#CD5C5C\",\n        indigo: \"#4B0082\",\n        ivory: \"#FFFFF0\",\n        khaki: \"#F0E68C\",\n        lavender: \"#E6E6FA\",\n        lavenderblush: \"#FFF0F5\",\n        lawngreen: \"#7CFC00\",\n        lemonchiffon: \"#FFFACD\",\n        lightblue: \"#ADD8E6\",\n        lightcoral: \"#F08080\",\n        lightcyan: \"#E0FFFF\",\n        lightgoldenrodyellow: \"#FAFAD2\",\n        lightgray: \"#D3D3D3\",\n        lightgrey: \"#D3D3D3\",\n        lightgreen: \"#90EE90\",\n        lightpink: \"#FFB6C1\",\n        lightsalmon: \"#FFA07A\",\n        lightseagreen: \"#20B2AA\",\n        lightskyblue: \"#87CEFA\",\n        lightslategray: \"#778899\",\n        lightslategrey: \"#778899\",\n        lightsteelblue: \"#B0C4DE\",\n        lightyellow: \"#FFFFE0\",\n        lime: \"#00FF00\",\n        limegreen: \"#32CD32\",\n        linen: \"#FAF0E6\",\n        magenta: \"#FF00FF\",\n        maroon: \"#800000\",\n        mediumaquamarine: \"#66CDAA\",\n        mediumblue: \"#0000CD\",\n        mediumorchid: \"#BA55D3\",\n        mediumpurple: \"#9370DB\",\n        mediumseagreen: \"#3CB371\",\n        mediumslateblue: \"#7B68EE\",\n        mediumspringgreen: \"#00FA9A\",\n        mediumturquoise: \"#48D1CC\",\n        mediumvioletred: \"#C71585\",\n        midnightblue: \"#191970\",\n        mintcream: \"#F5FFFA\",\n        mistyrose: \"#FFE4E1\",\n        moccasin: \"#FFE4B5\",\n        navajowhite: \"#FFDEAD\",\n        navy: \"#000080\",\n        oldlace: \"#FDF5E6\",\n        olive: \"#808000\",\n        olivedrab: \"#6B8E23\",\n        orange: \"#FFA500\",\n        orangered: \"#FF4500\",\n        orchid: \"#DA70D6\",\n        palegoldenrod: \"#EEE8AA\",\n        palegreen: \"#98FB98\",\n        paleturquoise: \"#AFEEEE\",\n        palevioletred: \"#DB7093\",\n        papayawhip: \"#FFEFD5\",\n        peachpuff: \"#FFDAB9\",\n        peru: \"#CD853F\",\n        pink: \"#FFC0CB\",\n        plum: \"#DDA0DD\",\n        powderblue: \"#B0E0E6\",\n        purple: \"#800080\",\n        rebeccapurple: \"#663399\",\n        red: \"#FF0000\",\n        rosybrown: \"#BC8F8F\",\n        royalblue: \"#4169E1\",\n        saddlebrown: \"#8B4513\",\n        salmon: \"#FA8072\",\n        sandybrown: \"#F4A460\",\n        seagreen: \"#2E8B57\",\n        seashell: \"#FFF5EE\",\n        sienna: \"#A0522D\",\n        silver: \"#C0C0C0\",\n        skyblue: \"#87CEEB\",\n        slateblue: \"#6A5ACD\",\n        slategray: \"#708090\",\n        slategrey: \"#708090\",\n        snow: \"#FFFAFA\",\n        springgreen: \"#00FF7F\",\n        steelblue: \"#4682B4\",\n        tan: \"#D2B48C\",\n        teal: \"#008080\",\n        thistle: \"#D8BFD8\",\n        tomato: \"#FF6347\",\n        turquoise: \"#40E0D0\",\n        violet: \"#EE82EE\",\n        wheat: \"#F5DEB3\",\n        white: \"#FFFFFF\",\n        whitesmoke: \"#F5F5F5\",\n        yellow: \"#FFFF00\",\n        yellowgreen: \"#9ACD32\"\n    };\n    function hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    fabric.Color.fromRgb = function(color) {\n        return Color.fromSource(Color.sourceFromRgb(color));\n    };\n    fabric.Color.sourceFromRgb = function(color) {\n        var match = color.match(Color.reRGBa);\n        if (match) {\n            var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1), g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1), b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n            return [ parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1 ];\n        }\n    };\n    fabric.Color.fromRgba = Color.fromRgb;\n    fabric.Color.fromHsl = function(color) {\n        return Color.fromSource(Color.sourceFromHsl(color));\n    };\n    fabric.Color.sourceFromHsl = function(color) {\n        var match = color.match(Color.reHSLa);\n        if (!match) {\n            return;\n        }\n        var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360, s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1), l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1), r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        } else {\n            var q = l <= .5 ? l * (s + 1) : l + s - l * s, p = l * 2 - q;\n            r = hue2rgb(p, q, h + 1 / 3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1 / 3);\n        }\n        return [ Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1 ];\n    };\n    fabric.Color.fromHsla = Color.fromHsl;\n    fabric.Color.fromHex = function(color) {\n        return Color.fromSource(Color.sourceFromHex(color));\n    };\n    fabric.Color.sourceFromHex = function(color) {\n        if (color.match(Color.reHex)) {\n            var value = color.slice(color.indexOf(\"#\") + 1), isShortNotation = value.length === 3 || value.length === 4, isRGBa = value.length === 8 || value.length === 4, r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2), g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4), b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6), a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : \"FF\";\n            return [ parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2)) ];\n        }\n    };\n    fabric.Color.fromSource = function(source) {\n        var oColor = new Color();\n        oColor.setSource(source);\n        return oColor;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    function getColorStop(el) {\n        var style = el.getAttribute(\"style\"), offset = el.getAttribute(\"offset\") || 0, color, colorAlpha, opacity, i;\n        offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n        offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n        if (style) {\n            var keyValuePairs = style.split(/\\s*;\\s*/);\n            if (keyValuePairs[keyValuePairs.length - 1] === \"\") {\n                keyValuePairs.pop();\n            }\n            for (i = keyValuePairs.length; i--; ) {\n                var split = keyValuePairs[i].split(/\\s*:\\s*/), key = split[0].trim(), value = split[1].trim();\n                if (key === \"stop-color\") {\n                    color = value;\n                } else if (key === \"stop-opacity\") {\n                    opacity = value;\n                }\n            }\n        }\n        if (!color) {\n            color = el.getAttribute(\"stop-color\") || \"rgb(0,0,0)\";\n        }\n        if (!opacity) {\n            opacity = el.getAttribute(\"stop-opacity\");\n        }\n        color = new fabric.Color(color);\n        colorAlpha = color.getAlpha();\n        opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n        opacity *= colorAlpha;\n        return {\n            offset: offset,\n            color: color.toRgb(),\n            opacity: opacity\n        };\n    }\n    function getLinearCoords(el) {\n        return {\n            x1: el.getAttribute(\"x1\") || 0,\n            y1: el.getAttribute(\"y1\") || 0,\n            x2: el.getAttribute(\"x2\") || \"100%\",\n            y2: el.getAttribute(\"y2\") || 0\n        };\n    }\n    function getRadialCoords(el) {\n        return {\n            x1: el.getAttribute(\"fx\") || el.getAttribute(\"cx\") || \"50%\",\n            y1: el.getAttribute(\"fy\") || el.getAttribute(\"cy\") || \"50%\",\n            r1: 0,\n            x2: el.getAttribute(\"cx\") || \"50%\",\n            y2: el.getAttribute(\"cy\") || \"50%\",\n            r2: el.getAttribute(\"r\") || \"50%\"\n        };\n    }\n    var clone = fabric.util.object.clone;\n    fabric.Gradient = fabric.util.createClass({\n        offsetX: 0,\n        offsetY: 0,\n        initialize: function(options) {\n            options || (options = {});\n            var coords = {};\n            this.id = fabric.Object.__uid++;\n            this.type = options.type || \"linear\";\n            coords = {\n                x1: options.coords.x1 || 0,\n                y1: options.coords.y1 || 0,\n                x2: options.coords.x2 || 0,\n                y2: options.coords.y2 || 0\n            };\n            if (this.type === \"radial\") {\n                coords.r1 = options.coords.r1 || 0;\n                coords.r2 = options.coords.r2 || 0;\n            }\n            this.coords = coords;\n            this.colorStops = options.colorStops.slice();\n            if (options.gradientTransform) {\n                this.gradientTransform = options.gradientTransform;\n            }\n            this.offsetX = options.offsetX || this.offsetX;\n            this.offsetY = options.offsetY || this.offsetY;\n        },\n        addColorStop: function(colorStops) {\n            for (var position in colorStops) {\n                var color = new fabric.Color(colorStops[position]);\n                this.colorStops.push({\n                    offset: parseFloat(position),\n                    color: color.toRgb(),\n                    opacity: color.getAlpha()\n                });\n            }\n            return this;\n        },\n        toObject: function(propertiesToInclude) {\n            var object = {\n                type: this.type,\n                coords: this.coords,\n                colorStops: this.colorStops,\n                offsetX: this.offsetX,\n                offsetY: this.offsetY,\n                gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            return object;\n        },\n        toSVG: function(object) {\n            var coords = clone(this.coords, true), i, len, markup, commonAttributes, colorStops = clone(this.colorStops, true), needsSwap = coords.r1 > coords.r2, offsetX = object.width / 2, offsetY = object.height / 2;\n            colorStops.sort(function(a, b) {\n                return a.offset - b.offset;\n            });\n            if (object.type === \"path\") {\n                offsetX -= object.pathOffset.x;\n                offsetY -= object.pathOffset.y;\n            }\n            for (var prop in coords) {\n                if (prop === \"x1\" || prop === \"x2\") {\n                    coords[prop] += this.offsetX - offsetX;\n                } else if (prop === \"y1\" || prop === \"y2\") {\n                    coords[prop] += this.offsetY - offsetY;\n                }\n            }\n            commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"userSpaceOnUse\"';\n            if (this.gradientTransform) {\n                commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(\" \") + ')\" ';\n            }\n            if (this.type === \"linear\") {\n                markup = [ \"<linearGradient \", commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n' ];\n            } else if (this.type === \"radial\") {\n                markup = [ \"<radialGradient \", commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n' ];\n            }\n            if (this.type === \"radial\") {\n                if (needsSwap) {\n                    colorStops = colorStops.concat();\n                    colorStops.reverse();\n                    for (i = 0, len = colorStops.length; i < len; i++) {\n                        colorStops[i].offset = 1 - colorStops[i].offset;\n                    }\n                }\n                var minRadius = Math.min(coords.r1, coords.r2);\n                if (minRadius > 0) {\n                    var maxRadius = Math.max(coords.r1, coords.r2), percentageShift = minRadius / maxRadius;\n                    for (i = 0, len = colorStops.length; i < len; i++) {\n                        colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n                    }\n                }\n            }\n            for (i = 0, len = colorStops.length; i < len; i++) {\n                var colorStop = colorStops[i];\n                markup.push(\"<stop \", 'offset=\"', colorStop.offset * 100 + \"%\", '\" style=\"stop-color:', colorStop.color, colorStop.opacity !== null ? \";stop-opacity: \" + colorStop.opacity : \";\", '\"/>\\n');\n            }\n            markup.push(this.type === \"linear\" ? \"</linearGradient>\\n\" : \"</radialGradient>\\n\");\n            return markup.join(\"\");\n        },\n        toLive: function(ctx) {\n            var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n            if (!this.type) {\n                return;\n            }\n            if (this.type === \"linear\") {\n                gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n            } else if (this.type === \"radial\") {\n                gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n            }\n            for (i = 0, len = this.colorStops.length; i < len; i++) {\n                var color = this.colorStops[i].color, opacity = this.colorStops[i].opacity, offset = this.colorStops[i].offset;\n                if (typeof opacity !== \"undefined\") {\n                    color = new fabric.Color(color).setAlpha(opacity).toRgba();\n                }\n                gradient.addColorStop(offset, color);\n            }\n            return gradient;\n        }\n    });\n    fabric.util.object.extend(fabric.Gradient, {\n        fromElement: function(el, instance) {\n            var colorStopEls = el.getElementsByTagName(\"stop\"), type, gradientUnits = el.getAttribute(\"gradientUnits\") || \"objectBoundingBox\", gradientTransform = el.getAttribute(\"gradientTransform\"), colorStops = [], coords, ellipseMatrix, i;\n            if (el.nodeName === \"linearGradient\" || el.nodeName === \"LINEARGRADIENT\") {\n                type = \"linear\";\n            } else {\n                type = \"radial\";\n            }\n            if (type === \"linear\") {\n                coords = getLinearCoords(el);\n            } else if (type === \"radial\") {\n                coords = getRadialCoords(el);\n            }\n            for (i = colorStopEls.length; i--; ) {\n                colorStops.push(getColorStop(colorStopEls[i]));\n            }\n            ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n            var gradient = new fabric.Gradient({\n                type: type,\n                coords: coords,\n                colorStops: colorStops,\n                offsetX: -instance.left,\n                offsetY: -instance.top\n            });\n            if (gradientTransform || ellipseMatrix !== \"\") {\n                gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || \"\") + ellipseMatrix);\n            }\n            return gradient;\n        },\n        forObject: function(obj, options) {\n            options || (options = {});\n            _convertPercentUnitsToValues(obj, options.coords, \"userSpaceOnUse\");\n            return new fabric.Gradient(options);\n        }\n    });\n    function _convertPercentUnitsToValues(object, options, gradientUnits) {\n        var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = \"\";\n        for (var prop in options) {\n            if (options[prop] === \"Infinity\") {\n                options[prop] = 1;\n            } else if (options[prop] === \"-Infinity\") {\n                options[prop] = 0;\n            }\n            propValue = parseFloat(options[prop], 10);\n            if (typeof options[prop] === \"string\" && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n                multFactor = .01;\n            } else {\n                multFactor = 1;\n            }\n            if (prop === \"x1\" || prop === \"x2\" || prop === \"r2\") {\n                multFactor *= gradientUnits === \"objectBoundingBox\" ? object.width : 1;\n                addFactor = gradientUnits === \"objectBoundingBox\" ? object.left || 0 : 0;\n            } else if (prop === \"y1\" || prop === \"y2\") {\n                multFactor *= gradientUnits === \"objectBoundingBox\" ? object.height : 1;\n                addFactor = gradientUnits === \"objectBoundingBox\" ? object.top || 0 : 0;\n            }\n            options[prop] = propValue * multFactor + addFactor;\n        }\n        if (object.type === \"ellipse\" && options.r2 !== null && gradientUnits === \"objectBoundingBox\" && object.rx !== object.ry) {\n            var scaleFactor = object.ry / object.rx;\n            ellipseMatrix = \" scale(1, \" + scaleFactor + \")\";\n            if (options.y1) {\n                options.y1 /= scaleFactor;\n            }\n            if (options.y2) {\n                options.y2 /= scaleFactor;\n            }\n        }\n        return ellipseMatrix;\n    }\n})();\n\n(function() {\n    \"use strict\";\n    var toFixed = fabric.util.toFixed;\n    fabric.Pattern = fabric.util.createClass({\n        repeat: \"repeat\",\n        offsetX: 0,\n        offsetY: 0,\n        crossOrigin: \"\",\n        patternTransform: null,\n        initialize: function(options, callback) {\n            options || (options = {});\n            this.id = fabric.Object.__uid++;\n            this.setOptions(options);\n            if (!options.source || options.source && typeof options.source !== \"string\") {\n                callback && callback(this);\n                return;\n            }\n            if (typeof fabric.util.getFunctionBody(options.source) !== \"undefined\") {\n                this.source = new Function(fabric.util.getFunctionBody(options.source));\n                callback && callback(this);\n            } else {\n                var _this = this;\n                this.source = fabric.util.createImage();\n                fabric.util.loadImage(options.source, function(img) {\n                    _this.source = img;\n                    callback && callback(_this);\n                }, null, this.crossOrigin);\n            }\n        },\n        toObject: function(propertiesToInclude) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, source, object;\n            if (typeof this.source === \"function\") {\n                source = String(this.source);\n            } else if (typeof this.source.src === \"string\") {\n                source = this.source.src;\n            } else if (typeof this.source === \"object\" && this.source.toDataURL) {\n                source = this.source.toDataURL();\n            }\n            object = {\n                type: \"pattern\",\n                source: source,\n                repeat: this.repeat,\n                crossOrigin: this.crossOrigin,\n                offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n                offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n                patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            return object;\n        },\n        toSVG: function(object) {\n            var patternSource = typeof this.source === \"function\" ? this.source() : this.source, patternWidth = patternSource.width / object.width, patternHeight = patternSource.height / object.height, patternOffsetX = this.offsetX / object.width, patternOffsetY = this.offsetY / object.height, patternImgSrc = \"\";\n            if (this.repeat === \"repeat-x\" || this.repeat === \"no-repeat\") {\n                patternHeight = 1;\n            }\n            if (this.repeat === \"repeat-y\" || this.repeat === \"no-repeat\") {\n                patternWidth = 1;\n            }\n            if (patternSource.src) {\n                patternImgSrc = patternSource.src;\n            } else if (patternSource.toDataURL) {\n                patternImgSrc = patternSource.toDataURL();\n            }\n            return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + \"</pattern>\\n\";\n        },\n        setOptions: function(options) {\n            for (var prop in options) {\n                this[prop] = options[prop];\n            }\n        },\n        toLive: function(ctx) {\n            var source = typeof this.source === \"function\" ? this.source() : this.source;\n            if (!source) {\n                return \"\";\n            }\n            if (typeof source.src !== \"undefined\") {\n                if (!source.complete) {\n                    return \"\";\n                }\n                if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n                    return \"\";\n                }\n            }\n            return ctx.createPattern(source, this.repeat);\n        }\n    });\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), toFixed = fabric.util.toFixed;\n    if (fabric.Shadow) {\n        fabric.warn(\"fabric.Shadow is already defined.\");\n        return;\n    }\n    fabric.Shadow = fabric.util.createClass({\n        color: \"rgb(0,0,0)\",\n        blur: 0,\n        offsetX: 0,\n        offsetY: 0,\n        affectStroke: false,\n        includeDefaultValues: true,\n        initialize: function(options) {\n            if (typeof options === \"string\") {\n                options = this._parseShadow(options);\n            }\n            for (var prop in options) {\n                this[prop] = options[prop];\n            }\n            this.id = fabric.Object.__uid++;\n        },\n        _parseShadow: function(shadow) {\n            var shadowStr = shadow.trim(), offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [], color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, \"\") || \"rgb(0,0,0)\";\n            return {\n                color: color.trim(),\n                offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n                offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n                blur: parseInt(offsetsAndBlur[3], 10) || 0\n            };\n        },\n        toString: function() {\n            return [ this.offsetX, this.offsetY, this.blur, this.color ].join(\"px \");\n        },\n        toSVG: function(object) {\n            var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, offset = fabric.util.rotateVector({\n                x: this.offsetX,\n                y: this.offsetY\n            }, fabric.util.degreesToRadians(-object.angle)), BLUR_BOX = 20;\n            if (object.width && object.height) {\n                fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n                fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n            }\n            if (object.flipX) {\n                offset.x *= -1;\n            }\n            if (object.flipY) {\n                offset.y *= -1;\n            }\n            return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + \">\\n\" + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + \"\\t<feMerge>\\n\" + \"\\t\\t<feMergeNode></feMergeNode>\\n\" + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + \"\\t</feMerge>\\n\" + \"</filter>\\n\";\n        },\n        toObject: function() {\n            if (this.includeDefaultValues) {\n                return {\n                    color: this.color,\n                    blur: this.blur,\n                    offsetX: this.offsetX,\n                    offsetY: this.offsetY,\n                    affectStroke: this.affectStroke\n                };\n            }\n            var obj = {}, proto = fabric.Shadow.prototype;\n            [ \"color\", \"blur\", \"offsetX\", \"offsetY\", \"affectStroke\" ].forEach(function(prop) {\n                if (this[prop] !== proto[prop]) {\n                    obj[prop] = this[prop];\n                }\n            }, this);\n            return obj;\n        }\n    });\n    fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    \"use strict\";\n    if (fabric.StaticCanvas) {\n        fabric.warn(\"fabric.StaticCanvas is already defined.\");\n        return;\n    }\n    var extend = fabric.util.object.extend, getElementOffset = fabric.util.getElementOffset, removeFromArray = fabric.util.removeFromArray, toFixed = fabric.util.toFixed, transformPoint = fabric.util.transformPoint, invertTransform = fabric.util.invertTransform, CANVAS_INIT_ERROR = new Error(\"Could not initialize `canvas` element\");\n    fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, {\n        initialize: function(el, options) {\n            options || (options = {});\n            this.renderAndResetBound = this.renderAndReset.bind(this);\n            this.requestRenderAllBound = this.requestRenderAll.bind(this);\n            this._initStatic(el, options);\n        },\n        backgroundColor: \"\",\n        backgroundImage: null,\n        overlayColor: \"\",\n        overlayImage: null,\n        includeDefaultValues: true,\n        stateful: false,\n        renderOnAddRemove: true,\n        clipTo: null,\n        controlsAboveOverlay: false,\n        allowTouchScrolling: false,\n        imageSmoothingEnabled: true,\n        viewportTransform: fabric.iMatrix.concat(),\n        backgroundVpt: true,\n        overlayVpt: true,\n        onBeforeScaleRotate: function() {},\n        enableRetinaScaling: true,\n        vptCoords: {},\n        skipOffscreen: true,\n        _initStatic: function(el, options) {\n            var cb = this.requestRenderAllBound;\n            this._objects = [];\n            this._createLowerCanvas(el);\n            this._initOptions(options);\n            this._setImageSmoothing();\n            if (!this.interactive) {\n                this._initRetinaScaling();\n            }\n            if (options.overlayImage) {\n                this.setOverlayImage(options.overlayImage, cb);\n            }\n            if (options.backgroundImage) {\n                this.setBackgroundImage(options.backgroundImage, cb);\n            }\n            if (options.backgroundColor) {\n                this.setBackgroundColor(options.backgroundColor, cb);\n            }\n            if (options.overlayColor) {\n                this.setOverlayColor(options.overlayColor, cb);\n            }\n            this.calcOffset();\n        },\n        _isRetinaScaling: function() {\n            return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n        },\n        getRetinaScaling: function() {\n            return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n        },\n        _initRetinaScaling: function() {\n            if (!this._isRetinaScaling()) {\n                return;\n            }\n            this.lowerCanvasEl.setAttribute(\"width\", this.width * fabric.devicePixelRatio);\n            this.lowerCanvasEl.setAttribute(\"height\", this.height * fabric.devicePixelRatio);\n            this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n        },\n        calcOffset: function() {\n            this._offset = getElementOffset(this.lowerCanvasEl);\n            return this;\n        },\n        setOverlayImage: function(image, callback, options) {\n            return this.__setBgOverlayImage(\"overlayImage\", image, callback, options);\n        },\n        setBackgroundImage: function(image, callback, options) {\n            return this.__setBgOverlayImage(\"backgroundImage\", image, callback, options);\n        },\n        setOverlayColor: function(overlayColor, callback) {\n            return this.__setBgOverlayColor(\"overlayColor\", overlayColor, callback);\n        },\n        setBackgroundColor: function(backgroundColor, callback) {\n            return this.__setBgOverlayColor(\"backgroundColor\", backgroundColor, callback);\n        },\n        _setImageSmoothing: function() {\n            var ctx = this.getContext();\n            ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n            ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n        },\n        __setBgOverlayImage: function(property, image, callback, options) {\n            if (typeof image === \"string\") {\n                fabric.util.loadImage(image, function(img) {\n                    img && (this[property] = new fabric.Image(img, options));\n                    callback && callback(img);\n                }, this, options && options.crossOrigin);\n            } else {\n                options && image.setOptions(options);\n                this[property] = image;\n                callback && callback(image);\n            }\n            return this;\n        },\n        __setBgOverlayColor: function(property, color, callback) {\n            this[property] = color;\n            this._initGradient(color, property);\n            this._initPattern(color, property, callback);\n            return this;\n        },\n        _createCanvasElement: function() {\n            var element = fabric.util.createCanvasElement();\n            if (!element) {\n                throw CANVAS_INIT_ERROR;\n            }\n            if (!element.style) {\n                element.style = {};\n            }\n            if (typeof element.getContext === \"undefined\") {\n                throw CANVAS_INIT_ERROR;\n            }\n            return element;\n        },\n        _initOptions: function(options) {\n            this._setOptions(options);\n            this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n            this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n            if (!this.lowerCanvasEl.style) {\n                return;\n            }\n            this.lowerCanvasEl.width = this.width;\n            this.lowerCanvasEl.height = this.height;\n            this.lowerCanvasEl.style.width = this.width + \"px\";\n            this.lowerCanvasEl.style.height = this.height + \"px\";\n            this.viewportTransform = this.viewportTransform.slice();\n        },\n        _createLowerCanvas: function(canvasEl) {\n            if (canvasEl && canvasEl.getContext) {\n                this.lowerCanvasEl = canvasEl;\n            } else {\n                this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n            }\n            fabric.util.addClass(this.lowerCanvasEl, \"lower-canvas\");\n            if (this.interactive) {\n                this._applyCanvasStyle(this.lowerCanvasEl);\n            }\n            this.contextContainer = this.lowerCanvasEl.getContext(\"2d\");\n        },\n        getWidth: function() {\n            return this.width;\n        },\n        getHeight: function() {\n            return this.height;\n        },\n        setWidth: function(value, options) {\n            return this.setDimensions({\n                width: value\n            }, options);\n        },\n        setHeight: function(value, options) {\n            return this.setDimensions({\n                height: value\n            }, options);\n        },\n        setDimensions: function(dimensions, options) {\n            var cssValue;\n            options = options || {};\n            for (var prop in dimensions) {\n                cssValue = dimensions[prop];\n                if (!options.cssOnly) {\n                    this._setBackstoreDimension(prop, dimensions[prop]);\n                    cssValue += \"px\";\n                }\n                if (!options.backstoreOnly) {\n                    this._setCssDimension(prop, cssValue);\n                }\n            }\n            if (this._isCurrentlyDrawing) {\n                this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n            }\n            this._initRetinaScaling();\n            this._setImageSmoothing();\n            this.calcOffset();\n            if (!options.cssOnly) {\n                this.requestRenderAll();\n            }\n            return this;\n        },\n        _setBackstoreDimension: function(prop, value) {\n            this.lowerCanvasEl[prop] = value;\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl[prop] = value;\n            }\n            if (this.cacheCanvasEl) {\n                this.cacheCanvasEl[prop] = value;\n            }\n            this[prop] = value;\n            return this;\n        },\n        _setCssDimension: function(prop, value) {\n            this.lowerCanvasEl.style[prop] = value;\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl.style[prop] = value;\n            }\n            if (this.wrapperEl) {\n                this.wrapperEl.style[prop] = value;\n            }\n            return this;\n        },\n        getZoom: function() {\n            return this.viewportTransform[0];\n        },\n        setViewportTransform: function(vpt) {\n            var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n            this.viewportTransform = vpt;\n            for (i = 0, len = this._objects.length; i < len; i++) {\n                object = this._objects[i];\n                object.group || object.setCoords(ignoreVpt, skipAbsolute);\n            }\n            if (activeObject && activeObject.type === \"activeSelection\") {\n                activeObject.setCoords(ignoreVpt, skipAbsolute);\n            }\n            this.calcViewportBoundaries();\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        zoomToPoint: function(point, value) {\n            var before = point, vpt = this.viewportTransform.slice(0);\n            point = transformPoint(point, invertTransform(this.viewportTransform));\n            vpt[0] = value;\n            vpt[3] = value;\n            var after = transformPoint(point, vpt);\n            vpt[4] += before.x - after.x;\n            vpt[5] += before.y - after.y;\n            return this.setViewportTransform(vpt);\n        },\n        setZoom: function(value) {\n            this.zoomToPoint(new fabric.Point(0, 0), value);\n            return this;\n        },\n        absolutePan: function(point) {\n            var vpt = this.viewportTransform.slice(0);\n            vpt[4] = -point.x;\n            vpt[5] = -point.y;\n            return this.setViewportTransform(vpt);\n        },\n        relativePan: function(point) {\n            return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n        },\n        getElement: function() {\n            return this.lowerCanvasEl;\n        },\n        _onObjectAdded: function(obj) {\n            this.stateful && obj.setupState();\n            obj._set(\"canvas\", this);\n            obj.setCoords();\n            this.fire(\"object:added\", {\n                target: obj\n            });\n            obj.fire(\"added\");\n        },\n        _onObjectRemoved: function(obj) {\n            this.fire(\"object:removed\", {\n                target: obj\n            });\n            obj.fire(\"removed\");\n            delete obj.canvas;\n        },\n        clearContext: function(ctx) {\n            ctx.clearRect(0, 0, this.width, this.height);\n            return this;\n        },\n        getContext: function() {\n            return this.contextContainer;\n        },\n        clear: function() {\n            this._objects.length = 0;\n            this.backgroundImage = null;\n            this.overlayImage = null;\n            this.backgroundColor = \"\";\n            this.overlayColor = \"\";\n            if (this._hasITextHandlers) {\n                this.off(\"mouse:up\", this._mouseUpITextHandler);\n                this._iTextInstances = null;\n                this._hasITextHandlers = false;\n            }\n            this.clearContext(this.contextContainer);\n            this.fire(\"canvas:cleared\");\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        renderAll: function() {\n            var canvasToDrawOn = this.contextContainer;\n            this.renderCanvas(canvasToDrawOn, this._objects);\n            return this;\n        },\n        renderAndReset: function() {\n            this.isRendering = 0;\n            this.renderAll();\n        },\n        requestRenderAll: function() {\n            if (!this.isRendering) {\n                this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n            }\n            return this;\n        },\n        calcViewportBoundaries: function() {\n            var points = {}, width = this.width, height = this.height, iVpt = invertTransform(this.viewportTransform);\n            points.tl = transformPoint({\n                x: 0,\n                y: 0\n            }, iVpt);\n            points.br = transformPoint({\n                x: width,\n                y: height\n            }, iVpt);\n            points.tr = new fabric.Point(points.br.x, points.tl.y);\n            points.bl = new fabric.Point(points.tl.x, points.br.y);\n            this.vptCoords = points;\n            return points;\n        },\n        renderCanvas: function(ctx, objects) {\n            var v = this.viewportTransform;\n            if (this.isRendering) {\n                fabric.util.cancelAnimFrame(this.isRendering);\n                this.isRendering = 0;\n            }\n            this.calcViewportBoundaries();\n            this.clearContext(ctx);\n            this.fire(\"before:render\");\n            if (this.clipTo) {\n                fabric.util.clipContext(this, ctx);\n            }\n            this._renderBackground(ctx);\n            ctx.save();\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n            this._renderObjects(ctx, objects);\n            ctx.restore();\n            if (!this.controlsAboveOverlay && this.interactive) {\n                this.drawControls(ctx);\n            }\n            if (this.clipTo) {\n                ctx.restore();\n            }\n            this._renderOverlay(ctx);\n            if (this.controlsAboveOverlay && this.interactive) {\n                this.drawControls(ctx);\n            }\n            this.fire(\"after:render\");\n        },\n        _renderObjects: function(ctx, objects) {\n            var i, len;\n            for (i = 0, len = objects.length; i < len; ++i) {\n                objects[i] && objects[i].render(ctx);\n            }\n        },\n        _renderBackgroundOrOverlay: function(ctx, property) {\n            var object = this[property + \"Color\"], v;\n            if (object) {\n                ctx.fillStyle = object.toLive ? object.toLive(ctx, this) : object;\n                ctx.fillRect(object.offsetX || 0, object.offsetY || 0, this.width, this.height);\n            }\n            object = this[property + \"Image\"];\n            if (object) {\n                if (this[property + \"Vpt\"]) {\n                    v = this.viewportTransform;\n                    ctx.save();\n                    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n                }\n                object.render(ctx);\n                this[property + \"Vpt\"] && ctx.restore();\n            }\n        },\n        _renderBackground: function(ctx) {\n            this._renderBackgroundOrOverlay(ctx, \"background\");\n        },\n        _renderOverlay: function(ctx) {\n            this._renderBackgroundOrOverlay(ctx, \"overlay\");\n        },\n        getCenter: function() {\n            return {\n                top: this.height / 2,\n                left: this.width / 2\n            };\n        },\n        centerObjectH: function(object) {\n            return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n        },\n        centerObjectV: function(object) {\n            return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n        },\n        centerObject: function(object) {\n            var center = this.getCenter();\n            return this._centerObject(object, new fabric.Point(center.left, center.top));\n        },\n        viewportCenterObject: function(object) {\n            var vpCenter = this.getVpCenter();\n            return this._centerObject(object, vpCenter);\n        },\n        viewportCenterObjectH: function(object) {\n            var vpCenter = this.getVpCenter();\n            this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n            return this;\n        },\n        viewportCenterObjectV: function(object) {\n            var vpCenter = this.getVpCenter();\n            return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n        },\n        getVpCenter: function() {\n            var center = this.getCenter(), iVpt = invertTransform(this.viewportTransform);\n            return transformPoint({\n                x: center.left,\n                y: center.top\n            }, iVpt);\n        },\n        _centerObject: function(object, center) {\n            object.setPositionByOrigin(center, \"center\", \"center\");\n            object.setCoords();\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        toDatalessJSON: function(propertiesToInclude) {\n            return this.toDatalessObject(propertiesToInclude);\n        },\n        toObject: function(propertiesToInclude) {\n            return this._toObjectMethod(\"toObject\", propertiesToInclude);\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            return this._toObjectMethod(\"toDatalessObject\", propertiesToInclude);\n        },\n        _toObjectMethod: function(methodName, propertiesToInclude) {\n            var data = {\n                version: fabric.version,\n                objects: this._toObjects(methodName, propertiesToInclude)\n            };\n            extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n            fabric.util.populateWithProperties(this, data, propertiesToInclude);\n            return data;\n        },\n        _toObjects: function(methodName, propertiesToInclude) {\n            return this.getObjects().filter(function(object) {\n                return !object.excludeFromExport;\n            }).map(function(instance) {\n                return this._toObject(instance, methodName, propertiesToInclude);\n            }, this);\n        },\n        _toObject: function(instance, methodName, propertiesToInclude) {\n            var originalValue;\n            if (!this.includeDefaultValues) {\n                originalValue = instance.includeDefaultValues;\n                instance.includeDefaultValues = false;\n            }\n            var object = instance[methodName](propertiesToInclude);\n            if (!this.includeDefaultValues) {\n                instance.includeDefaultValues = originalValue;\n            }\n            return object;\n        },\n        __serializeBgOverlay: function(methodName, propertiesToInclude) {\n            var data = {}, bgImage = this.backgroundImage, overlay = this.overlayImage;\n            if (this.backgroundColor) {\n                data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n            }\n            if (this.overlayColor) {\n                data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n            }\n            if (bgImage && !bgImage.excludeFromExport) {\n                data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n            }\n            if (overlay && !overlay.excludeFromExport) {\n                data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n            }\n            return data;\n        },\n        svgViewportTransformation: true,\n        toSVG: function(options, reviver) {\n            options || (options = {});\n            var markup = [];\n            this._setSVGPreamble(markup, options);\n            this._setSVGHeader(markup, options);\n            this._setSVGBgOverlayColor(markup, \"backgroundColor\");\n            this._setSVGBgOverlayImage(markup, \"backgroundImage\", reviver);\n            this._setSVGObjects(markup, reviver);\n            this._setSVGBgOverlayColor(markup, \"overlayColor\");\n            this._setSVGBgOverlayImage(markup, \"overlayImage\", reviver);\n            markup.push(\"</svg>\");\n            return markup.join(\"\");\n        },\n        _setSVGPreamble: function(markup, options) {\n            if (options.suppressPreamble) {\n                return;\n            }\n            markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || \"UTF-8\", '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n        },\n        _setSVGHeader: function(markup, options) {\n            var width = options.width || this.width, height = options.height || this.height, vpt, viewBox = 'viewBox=\"0 0 ' + this.width + \" \" + this.height + '\" ', NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            if (options.viewBox) {\n                viewBox = 'viewBox=\"' + options.viewBox.x + \" \" + options.viewBox.y + \" \" + options.viewBox.width + \" \" + options.viewBox.height + '\" ';\n            } else {\n                if (this.svgViewportTransformation) {\n                    vpt = this.viewportTransform;\n                    viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + \" \" + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + \" \" + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + \" \" + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n                }\n            }\n            markup.push(\"<svg \", 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', \"<desc>Created with Fabric.js \", fabric.version, \"</desc>\\n\", \"<defs>\\n\", this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), \"</defs>\\n\");\n        },\n        createSVGRefElementsMarkup: function() {\n            var _this = this, markup = [ \"backgroundColor\", \"overlayColor\" ].map(function(prop) {\n                var fill = _this[prop];\n                if (fill && fill.toLive) {\n                    return fill.toSVG(_this, false);\n                }\n            });\n            return markup.join(\"\");\n        },\n        createSVGFontFacesMarkup: function() {\n            var markup = \"\", fontList = {}, obj, fontFamily, style, row, rowIndex, _char, charIndex, i, len, fontPaths = fabric.fontPaths, objects = this.getObjects();\n            for (i = 0, len = objects.length; i < len; i++) {\n                obj = objects[i];\n                fontFamily = obj.fontFamily;\n                if (obj.type.indexOf(\"text\") === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n                    continue;\n                }\n                fontList[fontFamily] = true;\n                if (!obj.styles) {\n                    continue;\n                }\n                style = obj.styles;\n                for (rowIndex in style) {\n                    row = style[rowIndex];\n                    for (charIndex in row) {\n                        _char = row[charIndex];\n                        fontFamily = _char.fontFamily;\n                        if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n                            fontList[fontFamily] = true;\n                        }\n                    }\n                }\n            }\n            for (var j in fontList) {\n                markup += [ \"\\t\\t@font-face {\\n\", \"\\t\\t\\tfont-family: '\", j, \"';\\n\", \"\\t\\t\\tsrc: url('\", fontPaths[j], \"');\\n\", \"\\t\\t}\\n\" ].join(\"\");\n            }\n            if (markup) {\n                markup = [ '\\t<style type=\"text/css\">', \"<![CDATA[\\n\", markup, \"]]>\", \"</style>\\n\" ].join(\"\");\n            }\n            return markup;\n        },\n        _setSVGObjects: function(markup, reviver) {\n            var instance, i, len, objects = this.getObjects();\n            for (i = 0, len = objects.length; i < len; i++) {\n                instance = objects[i];\n                if (instance.excludeFromExport) {\n                    continue;\n                }\n                this._setSVGObject(markup, instance, reviver);\n            }\n        },\n        _setSVGObject: function(markup, instance, reviver) {\n            markup.push(instance.toSVG(reviver));\n        },\n        _setSVGBgOverlayImage: function(markup, property, reviver) {\n            if (this[property] && this[property].toSVG) {\n                markup.push(this[property].toSVG(reviver));\n            }\n        },\n        _setSVGBgOverlayColor: function(markup, property) {\n            var filler = this[property];\n            if (!filler) {\n                return;\n            }\n            if (filler.toLive) {\n                var repeat = filler.repeat;\n                markup.push('<rect transform=\"translate(', this.width / 2, \",\", this.height / 2, ')\"', ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ', 'width=\"', repeat === \"repeat-y\" || repeat === \"no-repeat\" ? filler.source.width : this.width, '\" height=\"', repeat === \"repeat-x\" || repeat === \"no-repeat\" ? filler.source.height : this.height, '\" fill=\"url(#SVGID_' + filler.id + ')\"', \"></rect>\\n\");\n            } else {\n                markup.push('<rect x=\"0\" y=\"0\" ', 'width=\"', this.width, '\" height=\"', this.height, '\" fill=\"', this[property], '\"', \"></rect>\\n\");\n            }\n        },\n        sendToBack: function(object) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, objs;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = objs.length; i--; ) {\n                    obj = objs[i];\n                    removeFromArray(this._objects, obj);\n                    this._objects.unshift(obj);\n                }\n            } else {\n                removeFromArray(this._objects, object);\n                this._objects.unshift(object);\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        bringToFront: function(object) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, objs;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = 0; i < objs.length; i++) {\n                    obj = objs[i];\n                    removeFromArray(this._objects, obj);\n                    this._objects.push(obj);\n                }\n            } else {\n                removeFromArray(this._objects, object);\n                this._objects.push(object);\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        sendBackwards: function(object, intersecting) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, idx, newIdx, objs, objsMoved = 0;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = 0; i < objs.length; i++) {\n                    obj = objs[i];\n                    idx = this._objects.indexOf(obj);\n                    if (idx > 0 + objsMoved) {\n                        newIdx = idx - 1;\n                        removeFromArray(this._objects, obj);\n                        this._objects.splice(newIdx, 0, obj);\n                    }\n                    objsMoved++;\n                }\n            } else {\n                idx = this._objects.indexOf(object);\n                if (idx !== 0) {\n                    newIdx = this._findNewLowerIndex(object, idx, intersecting);\n                    removeFromArray(this._objects, object);\n                    this._objects.splice(newIdx, 0, object);\n                }\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        _findNewLowerIndex: function(object, idx, intersecting) {\n            var newIdx, i;\n            if (intersecting) {\n                newIdx = idx;\n                for (i = idx - 1; i >= 0; --i) {\n                    var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n                    if (isIntersecting) {\n                        newIdx = i;\n                        break;\n                    }\n                }\n            } else {\n                newIdx = idx - 1;\n            }\n            return newIdx;\n        },\n        bringForward: function(object, intersecting) {\n            if (!object) {\n                return this;\n            }\n            var activeSelection = this._activeObject, i, obj, idx, newIdx, objs, objsMoved = 0;\n            if (object === activeSelection && object.type === \"activeSelection\") {\n                objs = activeSelection._objects;\n                for (i = objs.length; i--; ) {\n                    obj = objs[i];\n                    idx = this._objects.indexOf(obj);\n                    if (idx < this._objects.length - 1 - objsMoved) {\n                        newIdx = idx + 1;\n                        removeFromArray(this._objects, obj);\n                        this._objects.splice(newIdx, 0, obj);\n                    }\n                    objsMoved++;\n                }\n            } else {\n                idx = this._objects.indexOf(object);\n                if (idx !== this._objects.length - 1) {\n                    newIdx = this._findNewUpperIndex(object, idx, intersecting);\n                    removeFromArray(this._objects, object);\n                    this._objects.splice(newIdx, 0, object);\n                }\n            }\n            this.renderOnAddRemove && this.requestRenderAll();\n            return this;\n        },\n        _findNewUpperIndex: function(object, idx, intersecting) {\n            var newIdx, i, len;\n            if (intersecting) {\n                newIdx = idx;\n                for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n                    var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n                    if (isIntersecting) {\n                        newIdx = i;\n                        break;\n                    }\n                }\n            } else {\n                newIdx = idx + 1;\n            }\n            return newIdx;\n        },\n        moveTo: function(object, index) {\n            removeFromArray(this._objects, object);\n            this._objects.splice(index, 0, object);\n            return this.renderOnAddRemove && this.requestRenderAll();\n        },\n        dispose: function() {\n            this.forEachObject(function(object) {\n                object.dispose && object.dispose();\n            });\n            this._objects = [];\n            this.backgroundImage = null;\n            this.overlayImage = null;\n            this._iTextInstances = null;\n            this.lowerCanvasEl = null;\n            this.cacheCanvasEl = null;\n            return this;\n        },\n        toString: function() {\n            return \"#<fabric.Canvas (\" + this.complexity() + \"): \" + \"{ objects: \" + this.getObjects().length + \" }>\";\n        }\n    });\n    extend(fabric.StaticCanvas.prototype, fabric.Observable);\n    extend(fabric.StaticCanvas.prototype, fabric.Collection);\n    extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n    extend(fabric.StaticCanvas, {\n        EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n        supports: function(methodName) {\n            var el = fabric.util.createCanvasElement();\n            if (!el || !el.getContext) {\n                return null;\n            }\n            var ctx = el.getContext(\"2d\");\n            if (!ctx) {\n                return null;\n            }\n            switch (methodName) {\n              case \"getImageData\":\n                return typeof ctx.getImageData !== \"undefined\";\n\n              case \"setLineDash\":\n                return typeof ctx.setLineDash !== \"undefined\";\n\n              case \"toDataURL\":\n                return typeof el.toDataURL !== \"undefined\";\n\n              case \"toDataURLWithQuality\":\n                try {\n                    el.toDataURL(\"image/jpeg\", 0);\n                    return true;\n                } catch (e) {}\n                return false;\n\n              default:\n                return null;\n            }\n        }\n    });\n    fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n    if (fabric.isLikelyNode) {\n        fabric.StaticCanvas.prototype.createPNGStream = function() {\n            var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n            return impl && impl.createPNGStream();\n        };\n        fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n            var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n            return impl && impl.createJPEGStream(opts);\n        };\n    }\n})();\n\nfabric.BaseBrush = fabric.util.createClass({\n    color: \"rgb(0, 0, 0)\",\n    width: 1,\n    shadow: null,\n    strokeLineCap: \"round\",\n    strokeLineJoin: \"round\",\n    strokeMiterLimit: 10,\n    strokeDashArray: null,\n    setShadow: function(options) {\n        this.shadow = new fabric.Shadow(options);\n        return this;\n    },\n    _setBrushStyles: function() {\n        var ctx = this.canvas.contextTop;\n        ctx.strokeStyle = this.color;\n        ctx.lineWidth = this.width;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.lineJoin = this.strokeLineJoin;\n        if (this.strokeDashArray && fabric.StaticCanvas.supports(\"setLineDash\")) {\n            ctx.setLineDash(this.strokeDashArray);\n        }\n    },\n    _saveAndTransform: function(ctx) {\n        var v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    },\n    _setShadow: function() {\n        if (!this.shadow) {\n            return;\n        }\n        var ctx = this.canvas.contextTop, zoom = this.canvas.getZoom();\n        ctx.shadowColor = this.shadow.color;\n        ctx.shadowBlur = this.shadow.blur * zoom;\n        ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n        ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n    },\n    _resetShadow: function() {\n        var ctx = this.canvas.contextTop;\n        ctx.shadowColor = \"\";\n        ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    }\n});\n\n(function() {\n    fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, {\n        initialize: function(canvas) {\n            this.canvas = canvas;\n            this._points = [];\n        },\n        _drawSegment: function(ctx, p1, p2) {\n            var midPoint = p1.midPointFrom(p2);\n            ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n            return midPoint;\n        },\n        onMouseDown: function(pointer) {\n            this._prepareForDrawing(pointer);\n            this._captureDrawingPath(pointer);\n            this._render();\n        },\n        onMouseMove: function(pointer) {\n            if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n                var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n                this._saveAndTransform(ctx);\n                if (this.oldEnd) {\n                    ctx.beginPath();\n                    ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n                }\n                this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n                ctx.stroke();\n                ctx.restore();\n            }\n        },\n        onMouseUp: function() {\n            this.oldEnd = undefined;\n            this._finalizeAndAddPath();\n        },\n        _prepareForDrawing: function(pointer) {\n            var p = new fabric.Point(pointer.x, pointer.y);\n            this._reset();\n            this._addPoint(p);\n            this.canvas.contextTop.moveTo(p.x, p.y);\n        },\n        _addPoint: function(point) {\n            if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n                return false;\n            }\n            this._points.push(point);\n            return true;\n        },\n        _reset: function() {\n            this._points.length = 0;\n            this._setBrushStyles();\n            this._setShadow();\n        },\n        _captureDrawingPath: function(pointer) {\n            var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n            return this._addPoint(pointerPoint);\n        },\n        _render: function() {\n            var ctx = this.canvas.contextTop, i, len, p1 = this._points[0], p2 = this._points[1];\n            this._saveAndTransform(ctx);\n            ctx.beginPath();\n            if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n                var width = this.width / 1e3;\n                p1 = new fabric.Point(p1.x, p1.y);\n                p2 = new fabric.Point(p2.x, p2.y);\n                p1.x -= width;\n                p2.x += width;\n            }\n            ctx.moveTo(p1.x, p1.y);\n            for (i = 1, len = this._points.length; i < len; i++) {\n                this._drawSegment(ctx, p1, p2);\n                p1 = this._points[i];\n                p2 = this._points[i + 1];\n            }\n            ctx.lineTo(p1.x, p1.y);\n            ctx.stroke();\n            ctx.restore();\n        },\n        convertPointsToSVGPath: function(points) {\n            var path = [], i, width = this.width / 1e3, p1 = new fabric.Point(points[0].x, points[0].y), p2 = new fabric.Point(points[1].x, points[1].y), len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n            if (manyPoints) {\n                multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n                multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n            }\n            path.push(\"M \", p1.x - multSignX * width, \" \", p1.y - multSignY * width, \" \");\n            for (i = 1; i < len; i++) {\n                if (!p1.eq(p2)) {\n                    var midPoint = p1.midPointFrom(p2);\n                    path.push(\"Q \", p1.x, \" \", p1.y, \" \", midPoint.x, \" \", midPoint.y, \" \");\n                }\n                p1 = points[i];\n                if (i + 1 < points.length) {\n                    p2 = points[i + 1];\n                }\n            }\n            if (manyPoints) {\n                multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n                multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n            }\n            path.push(\"L \", p1.x + multSignX * width, \" \", p1.y + multSignY * width);\n            return path;\n        },\n        createPath: function(pathData) {\n            var path = new fabric.Path(pathData, {\n                fill: null,\n                stroke: this.color,\n                strokeWidth: this.width,\n                strokeLineCap: this.strokeLineCap,\n                strokeMiterLimit: this.strokeMiterLimit,\n                strokeLineJoin: this.strokeLineJoin,\n                strokeDashArray: this.strokeDashArray\n            });\n            var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n            position = path.translateToGivenOrigin(position, \"center\", \"center\", path.originX, path.originY);\n            path.top = position.y;\n            path.left = position.x;\n            if (this.shadow) {\n                this.shadow.affectStroke = true;\n                path.setShadow(this.shadow);\n            }\n            return path;\n        },\n        _finalizeAndAddPath: function() {\n            var ctx = this.canvas.contextTop;\n            ctx.closePath();\n            var pathData = this.convertPointsToSVGPath(this._points).join(\"\");\n            if (pathData === \"M 0 0 Q 0 0 0 0 L 0 0\") {\n                this.canvas.requestRenderAll();\n                return;\n            }\n            var path = this.createPath(pathData);\n            this.canvas.clearContext(this.canvas.contextTop);\n            this.canvas.add(path);\n            this.canvas.renderAll();\n            path.setCoords();\n            this._resetShadow();\n            this.canvas.fire(\"path:created\", {\n                path: path\n            });\n        }\n    });\n})();\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, {\n    width: 10,\n    initialize: function(canvas) {\n        this.canvas = canvas;\n        this.points = [];\n    },\n    drawDot: function(pointer) {\n        var point = this.addPoint(pointer), ctx = this.canvas.contextTop;\n        this._saveAndTransform(ctx);\n        ctx.fillStyle = point.fill;\n        ctx.beginPath();\n        ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n        ctx.closePath();\n        ctx.fill();\n        ctx.restore();\n    },\n    onMouseDown: function(pointer) {\n        this.points.length = 0;\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._setShadow();\n        this.drawDot(pointer);\n    },\n    _render: function() {\n        var ctx = this.canvas.contextTop, i, len, points = this.points, point;\n        this._saveAndTransform(ctx);\n        for (i = 0, len = points.length; i < len; i++) {\n            point = points[i];\n            ctx.fillStyle = point.fill;\n            ctx.beginPath();\n            ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.restore();\n    },\n    onMouseMove: function(pointer) {\n        this.drawDot(pointer);\n    },\n    onMouseUp: function() {\n        var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n        this.canvas.renderOnAddRemove = false;\n        var circles = [];\n        for (i = 0, len = this.points.length; i < len; i++) {\n            var point = this.points[i], circle = new fabric.Circle({\n                radius: point.radius,\n                left: point.x,\n                top: point.y,\n                originX: \"center\",\n                originY: \"center\",\n                fill: point.fill\n            });\n            this.shadow && circle.setShadow(this.shadow);\n            circles.push(circle);\n        }\n        var group = new fabric.Group(circles, {\n            originX: \"center\",\n            originY: \"center\"\n        });\n        group.canvas = this.canvas;\n        this.canvas.add(group);\n        this.canvas.fire(\"path:created\", {\n            path: group\n        });\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._resetShadow();\n        this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n        this.canvas.requestRenderAll();\n    },\n    addPoint: function(pointer) {\n        var pointerPoint = new fabric.Point(pointer.x, pointer.y), circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2, circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n        pointerPoint.radius = circleRadius;\n        pointerPoint.fill = circleColor;\n        this.points.push(pointerPoint);\n        return pointerPoint;\n    }\n});\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, {\n    width: 10,\n    density: 20,\n    dotWidth: 1,\n    dotWidthVariance: 1,\n    randomOpacity: false,\n    optimizeOverlapping: true,\n    initialize: function(canvas) {\n        this.canvas = canvas;\n        this.sprayChunks = [];\n    },\n    onMouseDown: function(pointer) {\n        this.sprayChunks.length = 0;\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._setShadow();\n        this.addSprayChunk(pointer);\n        this.render(this.sprayChunkPoints);\n    },\n    onMouseMove: function(pointer) {\n        this.addSprayChunk(pointer);\n        this.render(this.sprayChunkPoints);\n    },\n    onMouseUp: function() {\n        var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n        this.canvas.renderOnAddRemove = false;\n        var rects = [];\n        for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n            var sprayChunk = this.sprayChunks[i];\n            for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n                var rect = new fabric.Rect({\n                    width: sprayChunk[j].width,\n                    height: sprayChunk[j].width,\n                    left: sprayChunk[j].x + 1,\n                    top: sprayChunk[j].y + 1,\n                    originX: \"center\",\n                    originY: \"center\",\n                    fill: this.color\n                });\n                rects.push(rect);\n            }\n        }\n        if (this.optimizeOverlapping) {\n            rects = this._getOptimizedRects(rects);\n        }\n        var group = new fabric.Group(rects, {\n            originX: \"center\",\n            originY: \"center\"\n        });\n        this.shadow && group.setShadow(this.shadow);\n        this.canvas.add(group);\n        this.canvas.fire(\"path:created\", {\n            path: group\n        });\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._resetShadow();\n        this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n        this.canvas.requestRenderAll();\n    },\n    _getOptimizedRects: function(rects) {\n        var uniqueRects = {}, key, i, len;\n        for (i = 0, len = rects.length; i < len; i++) {\n            key = rects[i].left + \"\" + rects[i].top;\n            if (!uniqueRects[key]) {\n                uniqueRects[key] = rects[i];\n            }\n        }\n        var uniqueRectsArray = [];\n        for (key in uniqueRects) {\n            uniqueRectsArray.push(uniqueRects[key]);\n        }\n        return uniqueRectsArray;\n    },\n    render: function(sprayChunk) {\n        var ctx = this.canvas.contextTop, i, len;\n        ctx.fillStyle = this.color;\n        this._saveAndTransform(ctx);\n        for (i = 0, len = sprayChunk.length; i < len; i++) {\n            var point = sprayChunk[i];\n            if (typeof point.opacity !== \"undefined\") {\n                ctx.globalAlpha = point.opacity;\n            }\n            ctx.fillRect(point.x, point.y, point.width, point.width);\n        }\n        ctx.restore();\n    },\n    _render: function() {\n        var ctx = this.canvas.contextTop, i, ilen;\n        ctx.fillStyle = this.color;\n        this._saveAndTransform(ctx);\n        for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n            this.render(this.sprayChunks[i]);\n        }\n        ctx.restore();\n    },\n    addSprayChunk: function(pointer) {\n        this.sprayChunkPoints = [];\n        var x, y, width, radius = this.width / 2, i;\n        for (i = 0; i < this.density; i++) {\n            x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n            y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n            if (this.dotWidthVariance) {\n                width = fabric.util.getRandomInt(Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n            } else {\n                width = this.dotWidth;\n            }\n            var point = new fabric.Point(x, y);\n            point.width = width;\n            if (this.randomOpacity) {\n                point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n            }\n            this.sprayChunkPoints.push(point);\n        }\n        this.sprayChunks.push(this.sprayChunkPoints);\n    }\n});\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, {\n    getPatternSrc: function() {\n        var dotWidth = 20, dotDistance = 5, patternCanvas = fabric.document.createElement(\"canvas\"), patternCtx = patternCanvas.getContext(\"2d\");\n        patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n        patternCtx.fillStyle = this.color;\n        patternCtx.beginPath();\n        patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n        patternCtx.closePath();\n        patternCtx.fill();\n        return patternCanvas;\n    },\n    getPatternSrcFunction: function() {\n        return String(this.getPatternSrc).replace(\"this.color\", '\"' + this.color + '\"');\n    },\n    getPattern: function() {\n        return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), \"repeat\");\n    },\n    _setBrushStyles: function() {\n        this.callSuper(\"_setBrushStyles\");\n        this.canvas.contextTop.strokeStyle = this.getPattern();\n    },\n    createPath: function(pathData) {\n        var path = this.callSuper(\"createPath\", pathData), topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n        path.stroke = new fabric.Pattern({\n            source: this.source || this.getPatternSrcFunction(),\n            offsetX: -topLeft.x,\n            offsetY: -topLeft.y\n        });\n        return path;\n    }\n});\n\n(function() {\n    var getPointer = fabric.util.getPointer, degreesToRadians = fabric.util.degreesToRadians, radiansToDegrees = fabric.util.radiansToDegrees, atan2 = Math.atan2, abs = Math.abs, supportLineDash = fabric.StaticCanvas.supports(\"setLineDash\"), STROKE_OFFSET = .5;\n    fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {\n        initialize: function(el, options) {\n            options || (options = {});\n            this.renderAndResetBound = this.renderAndReset.bind(this);\n            this._initStatic(el, options);\n            this._initInteractive();\n            this._createCacheCanvas();\n        },\n        uniScaleTransform: false,\n        uniScaleKey: \"shiftKey\",\n        centeredScaling: false,\n        centeredRotation: false,\n        centeredKey: \"altKey\",\n        altActionKey: \"shiftKey\",\n        interactive: true,\n        selection: true,\n        selectionKey: \"shiftKey\",\n        altSelectionKey: null,\n        selectionColor: \"rgba(100, 100, 255, 0.3)\",\n        selectionDashArray: [],\n        selectionBorderColor: \"rgba(255, 255, 255, 0.3)\",\n        selectionLineWidth: 1,\n        selectionFullyContained: false,\n        hoverCursor: \"move\",\n        moveCursor: \"move\",\n        defaultCursor: \"default\",\n        freeDrawingCursor: \"crosshair\",\n        rotationCursor: \"crosshair\",\n        notAllowedCursor: \"not-allowed\",\n        containerClass: \"canvas-container\",\n        perPixelTargetFind: false,\n        targetFindTolerance: 0,\n        skipTargetFind: false,\n        isDrawingMode: false,\n        preserveObjectStacking: false,\n        snapAngle: 0,\n        snapThreshold: null,\n        stopContextMenu: false,\n        fireRightClick: false,\n        fireMiddleClick: false,\n        _initInteractive: function() {\n            this._currentTransform = null;\n            this._groupSelector = null;\n            this._initWrapperElement();\n            this._createUpperCanvas();\n            this._initEventListeners();\n            this._initRetinaScaling();\n            this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n            this.calcOffset();\n        },\n        _chooseObjectsToRender: function() {\n            var activeObjects = this.getActiveObjects(), object, objsToRender, activeGroupObjects;\n            if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n                objsToRender = [];\n                activeGroupObjects = [];\n                for (var i = 0, length = this._objects.length; i < length; i++) {\n                    object = this._objects[i];\n                    if (activeObjects.indexOf(object) === -1) {\n                        objsToRender.push(object);\n                    } else {\n                        activeGroupObjects.push(object);\n                    }\n                }\n                if (activeObjects.length > 1) {\n                    this._activeObject._objects = activeGroupObjects;\n                }\n                objsToRender.push.apply(objsToRender, activeGroupObjects);\n            } else {\n                objsToRender = this._objects;\n            }\n            return objsToRender;\n        },\n        renderAll: function() {\n            if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n                this.clearContext(this.contextTop);\n                this.contextTopDirty = false;\n            }\n            if (this.isDrawingMode && this._isCurrentlyDrawing) {\n                this.freeDrawingBrush && this.freeDrawingBrush._render();\n            }\n            var canvasToDrawOn = this.contextContainer;\n            this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n            return this;\n        },\n        renderTop: function() {\n            var ctx = this.contextTop;\n            this.clearContext(ctx);\n            if (this.selection && this._groupSelector) {\n                this._drawSelection(ctx);\n            }\n            this.fire(\"after:render\");\n            this.contextTopDirty = true;\n            return this;\n        },\n        _resetCurrentTransform: function() {\n            var t = this._currentTransform;\n            t.target.set({\n                scaleX: t.original.scaleX,\n                scaleY: t.original.scaleY,\n                skewX: t.original.skewX,\n                skewY: t.original.skewY,\n                left: t.original.left,\n                top: t.original.top\n            });\n            if (this._shouldCenterTransform(t.target)) {\n                if (t.action === \"rotate\") {\n                    this._setOriginToCenter(t.target);\n                } else {\n                    if (t.originX !== \"center\") {\n                        if (t.originX === \"right\") {\n                            t.mouseXSign = -1;\n                        } else {\n                            t.mouseXSign = 1;\n                        }\n                    }\n                    if (t.originY !== \"center\") {\n                        if (t.originY === \"bottom\") {\n                            t.mouseYSign = -1;\n                        } else {\n                            t.mouseYSign = 1;\n                        }\n                    }\n                    t.originX = \"center\";\n                    t.originY = \"center\";\n                }\n            } else {\n                t.originX = t.original.originX;\n                t.originY = t.original.originY;\n            }\n        },\n        containsPoint: function(e, target, point) {\n            var ignoreZoom = true, pointer = point || this.getPointer(e, ignoreZoom), xy;\n            if (target.group && target.group === this._activeObject && target.group.type === \"activeSelection\") {\n                xy = this._normalizePointer(target.group, pointer);\n            } else {\n                xy = {\n                    x: pointer.x,\n                    y: pointer.y\n                };\n            }\n            return target.containsPoint(xy) || target._findTargetCorner(pointer);\n        },\n        _normalizePointer: function(object, pointer) {\n            var m = object.calcTransformMatrix(), invertedM = fabric.util.invertTransform(m), vptPointer = this.restorePointerVpt(pointer);\n            return fabric.util.transformPoint(vptPointer, invertedM);\n        },\n        isTargetTransparent: function(target, x, y) {\n            var ctx = this.contextCache, originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n            target.selectionBackgroundColor = \"\";\n            this.clearContext(ctx);\n            ctx.save();\n            ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n            target.render(ctx);\n            ctx.restore();\n            target === this._activeObject && target._renderControls(ctx, {\n                hasBorders: false,\n                transparentCorners: false\n            }, {\n                hasBorders: false\n            });\n            target.selectionBackgroundColor = originalColor;\n            var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n            return isTransparent;\n        },\n        _isSelectionKeyPressed: function(e) {\n            var selectionKeyPressed = false;\n            if (Object.prototype.toString.call(this.selectionKey) === \"[object Array]\") {\n                selectionKeyPressed = !!this.selectionKey.find(function(key) {\n                    return e[key] === true;\n                });\n            } else {\n                selectionKeyPressed = e[this.selectionKey];\n            }\n            return selectionKeyPressed;\n        },\n        _shouldClearSelection: function(e, target) {\n            var activeObjects = this.getActiveObjects(), activeObject = this._activeObject;\n            return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n        },\n        _shouldCenterTransform: function(target) {\n            if (!target) {\n                return;\n            }\n            var t = this._currentTransform, centerTransform;\n            if (t.action === \"scale\" || t.action === \"scaleX\" || t.action === \"scaleY\") {\n                centerTransform = this.centeredScaling || target.centeredScaling;\n            } else if (t.action === \"rotate\") {\n                centerTransform = this.centeredRotation || target.centeredRotation;\n            }\n            return centerTransform ? !t.altKey : t.altKey;\n        },\n        _getOriginFromCorner: function(target, corner) {\n            var origin = {\n                x: target.originX,\n                y: target.originY\n            };\n            if (corner === \"ml\" || corner === \"tl\" || corner === \"bl\") {\n                origin.x = \"right\";\n            } else if (corner === \"mr\" || corner === \"tr\" || corner === \"br\") {\n                origin.x = \"left\";\n            }\n            if (corner === \"tl\" || corner === \"mt\" || corner === \"tr\") {\n                origin.y = \"bottom\";\n            } else if (corner === \"bl\" || corner === \"mb\" || corner === \"br\") {\n                origin.y = \"top\";\n            }\n            return origin;\n        },\n        _getActionFromCorner: function(target, corner, e) {\n            if (!corner) {\n                return \"drag\";\n            }\n            switch (corner) {\n              case \"mtr\":\n                return \"rotate\";\n\n              case \"ml\":\n              case \"mr\":\n                return e[this.altActionKey] ? \"skewY\" : \"scaleX\";\n\n              case \"mt\":\n              case \"mb\":\n                return e[this.altActionKey] ? \"skewX\" : \"scaleY\";\n\n              default:\n                return \"scale\";\n            }\n        },\n        _setupCurrentTransform: function(e, target) {\n            if (!target) {\n                return;\n            }\n            var pointer = this.getPointer(e), corner = target._findTargetCorner(this.getPointer(e, true)), action = this._getActionFromCorner(target, corner, e), origin = this._getOriginFromCorner(target, corner);\n            this._currentTransform = {\n                target: target,\n                action: action,\n                corner: corner,\n                scaleX: target.scaleX,\n                scaleY: target.scaleY,\n                skewX: target.skewX,\n                skewY: target.skewY,\n                offsetX: pointer.x - target.left,\n                offsetY: pointer.y - target.top,\n                originX: origin.x,\n                originY: origin.y,\n                ex: pointer.x,\n                ey: pointer.y,\n                lastX: pointer.x,\n                lastY: pointer.y,\n                left: target.left,\n                top: target.top,\n                theta: degreesToRadians(target.angle),\n                width: target.width * target.scaleX,\n                mouseXSign: 1,\n                mouseYSign: 1,\n                shiftKey: e.shiftKey,\n                altKey: e[this.centeredKey]\n            };\n            this._currentTransform.original = {\n                left: target.left,\n                top: target.top,\n                scaleX: target.scaleX,\n                scaleY: target.scaleY,\n                skewX: target.skewX,\n                skewY: target.skewY,\n                originX: origin.x,\n                originY: origin.y\n            };\n            this._resetCurrentTransform();\n        },\n        _translateObject: function(x, y) {\n            var transform = this._currentTransform, target = transform.target, newLeft = x - transform.offsetX, newTop = y - transform.offsetY, moveX = !target.get(\"lockMovementX\") && target.left !== newLeft, moveY = !target.get(\"lockMovementY\") && target.top !== newTop;\n            moveX && target.set(\"left\", newLeft);\n            moveY && target.set(\"top\", newTop);\n            return moveX || moveY;\n        },\n        _changeSkewTransformOrigin: function(mouseMove, t, by) {\n            var property = \"originX\", origins = {\n                0: \"center\"\n            }, skew = t.target.skewX, originA = \"left\", originB = \"right\", corner = t.corner === \"mt\" || t.corner === \"ml\" ? 1 : -1, flipSign = 1;\n            mouseMove = mouseMove > 0 ? 1 : -1;\n            if (by === \"y\") {\n                skew = t.target.skewY;\n                originA = \"top\";\n                originB = \"bottom\";\n                property = \"originY\";\n            }\n            origins[-1] = originA;\n            origins[1] = originB;\n            t.target.flipX && (flipSign *= -1);\n            t.target.flipY && (flipSign *= -1);\n            if (skew === 0) {\n                t.skewSign = -corner * mouseMove * flipSign;\n                t[property] = origins[-mouseMove];\n            } else {\n                skew = skew > 0 ? 1 : -1;\n                t.skewSign = skew;\n                t[property] = origins[skew * corner * flipSign];\n            }\n        },\n        _skewObject: function(x, y, by) {\n            var t = this._currentTransform, target = t.target, skewed = false, lockSkewingX = target.get(\"lockSkewingX\"), lockSkewingY = target.get(\"lockSkewingY\");\n            if (lockSkewingX && by === \"x\" || lockSkewingY && by === \"y\") {\n                return false;\n            }\n            var center = target.getCenterPoint(), actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), \"center\", \"center\")[by], lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), \"center\", \"center\")[by], actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n            this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n            actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n            constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n            skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n            t.lastX = x;\n            t.lastY = y;\n            target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n            return skewed;\n        },\n        _setObjectSkew: function(localMouse, transform, by, _dim) {\n            var target = transform.target, newValue, skewed = false, skewSign = transform.skewSign, newDim, dimNoSkew, otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n            if (by === \"x\") {\n                otherBy = \"y\";\n                _otherBy = \"Y\";\n                _by = \"X\";\n                skewX = 0;\n                skewY = target.skewY;\n            } else {\n                otherBy = \"x\";\n                _otherBy = \"X\";\n                _by = \"Y\";\n                skewX = target.skewX;\n                skewY = 0;\n            }\n            dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n            newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n            if (newDimMouse <= 2) {\n                newValue = 0;\n            } else {\n                newValue = skewSign * Math.atan(newDimMouse / target[\"scale\" + _by] / (dimNoSkew[otherBy] / target[\"scale\" + _otherBy]));\n                newValue = fabric.util.radiansToDegrees(newValue);\n            }\n            skewed = target[\"skew\" + _by] !== newValue;\n            target.set(\"skew\" + _by, newValue);\n            if (target[\"skew\" + _otherBy] !== 0) {\n                newDim = target._getTransformedDimensions();\n                newValue = _dim[otherBy] / newDim[otherBy] * target[\"scale\" + _otherBy];\n                target.set(\"scale\" + _otherBy, newValue);\n            }\n            return skewed;\n        },\n        _scaleObject: function(x, y, by) {\n            var t = this._currentTransform, target = t.target, lockScalingX = target.get(\"lockScalingX\"), lockScalingY = target.get(\"lockScalingY\"), lockScalingFlip = target.get(\"lockScalingFlip\");\n            if (lockScalingX && lockScalingY) {\n                return false;\n            }\n            var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY), localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY), dim = target._getTransformedDimensions(), scaled = false;\n            this._setLocalMouse(localMouse, t);\n            scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n            target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n            return scaled;\n        },\n        _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n            var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false, changeX, changeY, scaleX, scaleY;\n            scaleX = localMouse.x * target.scaleX / _dim.x;\n            scaleY = localMouse.y * target.scaleY / _dim.y;\n            changeX = target.scaleX !== scaleX;\n            changeY = target.scaleY !== scaleY;\n            if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n                forbidScalingX = true;\n                localMouse.x = 0;\n            }\n            if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n                forbidScalingY = true;\n                localMouse.y = 0;\n            }\n            if (by === \"equally\" && !lockScalingX && !lockScalingY) {\n                scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n            } else if (!by) {\n                forbidScalingX || lockScalingX || target.set(\"scaleX\", scaleX) && (scaled = scaled || changeX);\n                forbidScalingY || lockScalingY || target.set(\"scaleY\", scaleY) && (scaled = scaled || changeY);\n            } else if (by === \"x\" && !target.get(\"lockUniScaling\")) {\n                forbidScalingX || lockScalingX || target.set(\"scaleX\", scaleX) && (scaled = scaled || changeX);\n            } else if (by === \"y\" && !target.get(\"lockUniScaling\")) {\n                forbidScalingY || lockScalingY || target.set(\"scaleY\", scaleY) && (scaled = scaled || changeY);\n            }\n            transform.newScaleX = scaleX;\n            transform.newScaleY = scaleY;\n            forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n            return scaled;\n        },\n        _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n            var dist = localMouse.y + localMouse.x, lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX, scaled, signX = localMouse.x < 0 ? -1 : 1, signY = localMouse.y < 0 ? -1 : 1;\n            transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n            transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n            scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n            target.set(\"scaleX\", transform.newScaleX);\n            target.set(\"scaleY\", transform.newScaleY);\n            return scaled;\n        },\n        _flipObject: function(transform, by) {\n            if (transform.newScaleX < 0 && by !== \"y\") {\n                if (transform.originX === \"left\") {\n                    transform.originX = \"right\";\n                } else if (transform.originX === \"right\") {\n                    transform.originX = \"left\";\n                }\n            }\n            if (transform.newScaleY < 0 && by !== \"x\") {\n                if (transform.originY === \"top\") {\n                    transform.originY = \"bottom\";\n                } else if (transform.originY === \"bottom\") {\n                    transform.originY = \"top\";\n                }\n            }\n        },\n        _setLocalMouse: function(localMouse, t) {\n            var target = t.target, zoom = this.getZoom(), padding = target.padding / zoom;\n            if (t.originX === \"right\") {\n                localMouse.x *= -1;\n            } else if (t.originX === \"center\") {\n                localMouse.x *= t.mouseXSign * 2;\n                if (localMouse.x < 0) {\n                    t.mouseXSign = -t.mouseXSign;\n                }\n            }\n            if (t.originY === \"bottom\") {\n                localMouse.y *= -1;\n            } else if (t.originY === \"center\") {\n                localMouse.y *= t.mouseYSign * 2;\n                if (localMouse.y < 0) {\n                    t.mouseYSign = -t.mouseYSign;\n                }\n            }\n            if (abs(localMouse.x) > padding) {\n                if (localMouse.x < 0) {\n                    localMouse.x += padding;\n                } else {\n                    localMouse.x -= padding;\n                }\n            } else {\n                localMouse.x = 0;\n            }\n            if (abs(localMouse.y) > padding) {\n                if (localMouse.y < 0) {\n                    localMouse.y += padding;\n                } else {\n                    localMouse.y -= padding;\n                }\n            } else {\n                localMouse.y = 0;\n            }\n        },\n        _rotateObject: function(x, y) {\n            var t = this._currentTransform;\n            if (t.target.get(\"lockRotation\")) {\n                return false;\n            }\n            var lastAngle = atan2(t.ey - t.top, t.ex - t.left), curAngle = atan2(y - t.top, x - t.left), angle = radiansToDegrees(curAngle - lastAngle + t.theta), hasRotated = true;\n            if (t.target.snapAngle > 0) {\n                var snapAngle = t.target.snapAngle, snapThreshold = t.target.snapThreshold || snapAngle, rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle, leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n                if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n                    angle = leftAngleLocked;\n                } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n                    angle = rightAngleLocked;\n                }\n            }\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            angle %= 360;\n            if (t.target.angle === angle) {\n                hasRotated = false;\n            } else {\n                t.target.angle = angle;\n            }\n            return hasRotated;\n        },\n        setCursor: function(value) {\n            this.upperCanvasEl.style.cursor = value;\n        },\n        _resetObjectTransform: function(target) {\n            target.scaleX = 1;\n            target.scaleY = 1;\n            target.skewX = 0;\n            target.skewY = 0;\n            target.rotate(0);\n        },\n        _drawSelection: function(ctx) {\n            var groupSelector = this._groupSelector, left = groupSelector.left, top = groupSelector.top, aleft = abs(left), atop = abs(top);\n            if (this.selectionColor) {\n                ctx.fillStyle = this.selectionColor;\n                ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n            }\n            if (!this.selectionLineWidth || !this.selectionBorderColor) {\n                return;\n            }\n            ctx.lineWidth = this.selectionLineWidth;\n            ctx.strokeStyle = this.selectionBorderColor;\n            if (this.selectionDashArray.length > 1 && !supportLineDash) {\n                var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n                ctx.beginPath();\n                fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n                fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n                ctx.closePath();\n                ctx.stroke();\n            } else {\n                fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n                ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n            }\n        },\n        findTarget: function(e, skipGroup) {\n            if (this.skipTargetFind) {\n                return;\n            }\n            var ignoreZoom = true, pointer = this.getPointer(e, ignoreZoom), activeObject = this._activeObject, aObjects = this.getActiveObjects(), activeTarget, activeTargetSubs;\n            this.targets = [];\n            if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([ activeObject ], pointer)) {\n                return activeObject;\n            }\n            if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n                return activeObject;\n            }\n            if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([ activeObject ], pointer)) {\n                if (!this.preserveObjectStacking) {\n                    return activeObject;\n                } else {\n                    activeTarget = activeObject;\n                    activeTargetSubs = this.targets;\n                    this.targets = [];\n                }\n            }\n            var target = this._searchPossibleTargets(this._objects, pointer);\n            if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n                target = activeTarget;\n                this.targets = activeTargetSubs;\n            }\n            return target;\n        },\n        _checkTarget: function(pointer, obj) {\n            if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n                if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n                    var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n                    if (!isTransparent) {\n                        return true;\n                    }\n                } else {\n                    return true;\n                }\n            }\n        },\n        _searchPossibleTargets: function(objects, pointer) {\n            var target, i = objects.length, normalizedPointer, subTarget;\n            while (i--) {\n                if (this._checkTarget(pointer, objects[i])) {\n                    target = objects[i];\n                    if (target.subTargetCheck && target instanceof fabric.Group) {\n                        normalizedPointer = this._normalizePointer(target, pointer);\n                        subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n                        subTarget && this.targets.push(subTarget);\n                    }\n                    break;\n                }\n            }\n            return target;\n        },\n        restorePointerVpt: function(pointer) {\n            return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n        },\n        getPointer: function(e, ignoreZoom, upperCanvasEl) {\n            if (!upperCanvasEl) {\n                upperCanvasEl = this.upperCanvasEl;\n            }\n            var pointer = getPointer(e), bounds = upperCanvasEl.getBoundingClientRect(), boundsWidth = bounds.width || 0, boundsHeight = bounds.height || 0, cssScale;\n            if (!boundsWidth || !boundsHeight) {\n                if (\"top\" in bounds && \"bottom\" in bounds) {\n                    boundsHeight = Math.abs(bounds.top - bounds.bottom);\n                }\n                if (\"right\" in bounds && \"left\" in bounds) {\n                    boundsWidth = Math.abs(bounds.right - bounds.left);\n                }\n            }\n            this.calcOffset();\n            pointer.x = pointer.x - this._offset.left;\n            pointer.y = pointer.y - this._offset.top;\n            if (!ignoreZoom) {\n                pointer = this.restorePointerVpt(pointer);\n            }\n            if (boundsWidth === 0 || boundsHeight === 0) {\n                cssScale = {\n                    width: 1,\n                    height: 1\n                };\n            } else {\n                cssScale = {\n                    width: upperCanvasEl.width / boundsWidth,\n                    height: upperCanvasEl.height / boundsHeight\n                };\n            }\n            return {\n                x: pointer.x * cssScale.width,\n                y: pointer.y * cssScale.height\n            };\n        },\n        _createUpperCanvas: function() {\n            var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, \"\");\n            if (this.upperCanvasEl) {\n                this.upperCanvasEl.className = \"\";\n            } else {\n                this.upperCanvasEl = this._createCanvasElement();\n            }\n            fabric.util.addClass(this.upperCanvasEl, \"upper-canvas \" + lowerCanvasClass);\n            this.wrapperEl.appendChild(this.upperCanvasEl);\n            this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n            this._applyCanvasStyle(this.upperCanvasEl);\n            this.contextTop = this.upperCanvasEl.getContext(\"2d\");\n        },\n        _createCacheCanvas: function() {\n            this.cacheCanvasEl = this._createCanvasElement();\n            this.cacheCanvasEl.setAttribute(\"width\", this.width);\n            this.cacheCanvasEl.setAttribute(\"height\", this.height);\n            this.contextCache = this.cacheCanvasEl.getContext(\"2d\");\n        },\n        _initWrapperElement: function() {\n            this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, \"div\", {\n                class: this.containerClass\n            });\n            fabric.util.setStyle(this.wrapperEl, {\n                width: this.width + \"px\",\n                height: this.height + \"px\",\n                position: \"relative\"\n            });\n            fabric.util.makeElementUnselectable(this.wrapperEl);\n        },\n        _applyCanvasStyle: function(element) {\n            var width = this.width || element.width, height = this.height || element.height;\n            fabric.util.setStyle(element, {\n                position: \"absolute\",\n                width: width + \"px\",\n                height: height + \"px\",\n                left: 0,\n                top: 0,\n                \"touch-action\": \"none\"\n            });\n            element.width = width;\n            element.height = height;\n            fabric.util.makeElementUnselectable(element);\n        },\n        _copyCanvasStyle: function(fromEl, toEl) {\n            toEl.style.cssText = fromEl.style.cssText;\n        },\n        getSelectionContext: function() {\n            return this.contextTop;\n        },\n        getSelectionElement: function() {\n            return this.upperCanvasEl;\n        },\n        getActiveObject: function() {\n            return this._activeObject;\n        },\n        getActiveObjects: function() {\n            var active = this._activeObject;\n            if (active) {\n                if (active.type === \"activeSelection\" && active._objects) {\n                    return active._objects.slice(0);\n                } else {\n                    return [ active ];\n                }\n            }\n            return [];\n        },\n        _onObjectRemoved: function(obj) {\n            if (obj === this._activeObject) {\n                this.fire(\"before:selection:cleared\", {\n                    target: obj\n                });\n                this._discardActiveObject();\n                this.fire(\"selection:cleared\", {\n                    target: obj\n                });\n                obj.fire(\"deselected\");\n            }\n            if (this._hoveredTarget === obj) {\n                this._hoveredTarget = null;\n            }\n            this.callSuper(\"_onObjectRemoved\", obj);\n        },\n        _fireSelectionEvents: function(oldObjects, e) {\n            var somethingChanged = false, objects = this.getActiveObjects(), added = [], removed = [], opt = {\n                e: e\n            };\n            oldObjects.forEach(function(oldObject) {\n                if (objects.indexOf(oldObject) === -1) {\n                    somethingChanged = true;\n                    oldObject.fire(\"deselected\", opt);\n                    removed.push(oldObject);\n                }\n            });\n            objects.forEach(function(object) {\n                if (oldObjects.indexOf(object) === -1) {\n                    somethingChanged = true;\n                    object.fire(\"selected\", opt);\n                    added.push(object);\n                }\n            });\n            if (oldObjects.length > 0 && objects.length > 0) {\n                opt.selected = added;\n                opt.deselected = removed;\n                opt.updated = added[0] || removed[0];\n                opt.target = this._activeObject;\n                somethingChanged && this.fire(\"selection:updated\", opt);\n            } else if (objects.length > 0) {\n                if (objects.length === 1) {\n                    opt.target = added[0];\n                    this.fire(\"object:selected\", opt);\n                }\n                opt.selected = added;\n                opt.target = this._activeObject;\n                this.fire(\"selection:created\", opt);\n            } else if (oldObjects.length > 0) {\n                opt.deselected = removed;\n                this.fire(\"selection:cleared\", opt);\n            }\n        },\n        setActiveObject: function(object, e) {\n            var currentActives = this.getActiveObjects();\n            this._setActiveObject(object, e);\n            this._fireSelectionEvents(currentActives, e);\n            return this;\n        },\n        _setActiveObject: function(object, e) {\n            if (this._activeObject === object) {\n                return false;\n            }\n            if (!this._discardActiveObject(e, object)) {\n                return false;\n            }\n            if (object.onSelect({\n                e: e\n            })) {\n                return false;\n            }\n            this._activeObject = object;\n            return true;\n        },\n        _discardActiveObject: function(e, object) {\n            var obj = this._activeObject;\n            if (obj) {\n                if (obj.onDeselect({\n                    e: e,\n                    object: object\n                })) {\n                    return false;\n                }\n                this._activeObject = null;\n            }\n            return true;\n        },\n        discardActiveObject: function(e) {\n            var currentActives = this.getActiveObjects();\n            if (currentActives.length) {\n                this.fire(\"before:selection:cleared\", {\n                    target: currentActives[0],\n                    e: e\n                });\n            }\n            this._discardActiveObject(e);\n            this._fireSelectionEvents(currentActives, e);\n            return this;\n        },\n        dispose: function() {\n            var wrapper = this.wrapperEl;\n            this.removeListeners();\n            wrapper.removeChild(this.upperCanvasEl);\n            wrapper.removeChild(this.lowerCanvasEl);\n            delete this.upperCanvasEl;\n            if (wrapper.parentNode) {\n                wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n            }\n            delete this.wrapperEl;\n            fabric.StaticCanvas.prototype.dispose.call(this);\n            return this;\n        },\n        clear: function() {\n            this.discardActiveObject();\n            this.clearContext(this.contextTop);\n            return this.callSuper(\"clear\");\n        },\n        drawControls: function(ctx) {\n            var activeObject = this._activeObject;\n            if (activeObject) {\n                activeObject._renderControls(ctx);\n            }\n        },\n        _toObject: function(instance, methodName, propertiesToInclude) {\n            var originalProperties = this._realizeGroupTransformOnObject(instance), object = this.callSuper(\"_toObject\", instance, methodName, propertiesToInclude);\n            this._unwindGroupTransformOnObject(instance, originalProperties);\n            return object;\n        },\n        _realizeGroupTransformOnObject: function(instance) {\n            if (instance.group && instance.group.type === \"activeSelection\" && this._activeObject === instance.group) {\n                var layoutProps = [ \"angle\", \"flipX\", \"flipY\", \"left\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"top\" ];\n                var originalValues = {};\n                layoutProps.forEach(function(prop) {\n                    originalValues[prop] = instance[prop];\n                });\n                this._activeObject.realizeTransform(instance);\n                return originalValues;\n            } else {\n                return null;\n            }\n        },\n        _unwindGroupTransformOnObject: function(instance, originalValues) {\n            if (originalValues) {\n                instance.set(originalValues);\n            }\n        },\n        _setSVGObject: function(markup, instance, reviver) {\n            var originalProperties = this._realizeGroupTransformOnObject(instance);\n            this.callSuper(\"_setSVGObject\", markup, instance, reviver);\n            this._unwindGroupTransformOnObject(instance, originalProperties);\n        }\n    });\n    for (var prop in fabric.StaticCanvas) {\n        if (prop !== \"prototype\") {\n            fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n        }\n    }\n    if (fabric.isTouchSupported) {\n        fabric.Canvas.prototype._setCursorFromEvent = function() {};\n    }\n})();\n\n(function() {\n    var cursorOffset = {\n        mt: 0,\n        tr: 1,\n        mr: 2,\n        br: 3,\n        mb: 4,\n        bl: 5,\n        ml: 6,\n        tl: 7\n    }, addListener = fabric.util.addListener, removeListener = fabric.util.removeListener, RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1;\n    function checkClick(e, value) {\n        return \"which\" in e ? e.which === value : e.button === value - 1;\n    }\n    fabric.util.object.extend(fabric.Canvas.prototype, {\n        cursorMap: [ \"n-resize\", \"ne-resize\", \"e-resize\", \"se-resize\", \"s-resize\", \"sw-resize\", \"w-resize\", \"nw-resize\" ],\n        _initEventListeners: function() {\n            this.removeListeners();\n            this._bindEvents();\n            addListener(fabric.window, \"resize\", this._onResize);\n            addListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            addListener(this.upperCanvasEl, \"dblclick\", this._onDoubleClick);\n            addListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            addListener(this.upperCanvasEl, \"mouseout\", this._onMouseOut);\n            addListener(this.upperCanvasEl, \"mouseenter\", this._onMouseEnter);\n            addListener(this.upperCanvasEl, \"wheel\", this._onMouseWheel);\n            addListener(this.upperCanvasEl, \"contextmenu\", this._onContextMenu);\n            addListener(this.upperCanvasEl, \"dragover\", this._onDragOver);\n            addListener(this.upperCanvasEl, \"dragenter\", this._onDragEnter);\n            addListener(this.upperCanvasEl, \"dragleave\", this._onDragLeave);\n            addListener(this.upperCanvasEl, \"drop\", this._onDrop);\n            addListener(this.upperCanvasEl, \"touchstart\", this._onMouseDown, {\n                passive: false\n            });\n            addListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove, {\n                passive: false\n            });\n            if (typeof eventjs !== \"undefined\" && \"add\" in eventjs) {\n                eventjs.add(this.upperCanvasEl, \"gesture\", this._onGesture);\n                eventjs.add(this.upperCanvasEl, \"drag\", this._onDrag);\n                eventjs.add(this.upperCanvasEl, \"orientation\", this._onOrientationChange);\n                eventjs.add(this.upperCanvasEl, \"shake\", this._onShake);\n                eventjs.add(this.upperCanvasEl, \"longpress\", this._onLongPress);\n            }\n        },\n        _bindEvents: function() {\n            if (this.eventsBound) {\n                return;\n            }\n            this._onMouseDown = this._onMouseDown.bind(this);\n            this._onMouseMove = this._onMouseMove.bind(this);\n            this._onMouseUp = this._onMouseUp.bind(this);\n            this._onResize = this._onResize.bind(this);\n            this._onGesture = this._onGesture.bind(this);\n            this._onDrag = this._onDrag.bind(this);\n            this._onShake = this._onShake.bind(this);\n            this._onLongPress = this._onLongPress.bind(this);\n            this._onOrientationChange = this._onOrientationChange.bind(this);\n            this._onMouseWheel = this._onMouseWheel.bind(this);\n            this._onMouseOut = this._onMouseOut.bind(this);\n            this._onMouseEnter = this._onMouseEnter.bind(this);\n            this._onContextMenu = this._onContextMenu.bind(this);\n            this._onDoubleClick = this._onDoubleClick.bind(this);\n            this._onDragOver = this._onDragOver.bind(this);\n            this._onDragEnter = this._simpleEventHandler.bind(this, \"dragenter\");\n            this._onDragLeave = this._simpleEventHandler.bind(this, \"dragleave\");\n            this._onDrop = this._simpleEventHandler.bind(this, \"drop\");\n            this.eventsBound = true;\n        },\n        removeListeners: function() {\n            removeListener(fabric.window, \"resize\", this._onResize);\n            removeListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            removeListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"mouseout\", this._onMouseOut);\n            removeListener(this.upperCanvasEl, \"mouseenter\", this._onMouseEnter);\n            removeListener(this.upperCanvasEl, \"wheel\", this._onMouseWheel);\n            removeListener(this.upperCanvasEl, \"contextmenu\", this._onContextMenu);\n            removeListener(this.upperCanvasEl, \"doubleclick\", this._onDoubleClick);\n            removeListener(this.upperCanvasEl, \"touchstart\", this._onMouseDown);\n            removeListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"dragover\", this._onDragOver);\n            removeListener(this.upperCanvasEl, \"dragenter\", this._onDragEnter);\n            removeListener(this.upperCanvasEl, \"dragleave\", this._onDragLeave);\n            removeListener(this.upperCanvasEl, \"drop\", this._onDrop);\n            if (typeof eventjs !== \"undefined\" && \"remove\" in eventjs) {\n                eventjs.remove(this.upperCanvasEl, \"gesture\", this._onGesture);\n                eventjs.remove(this.upperCanvasEl, \"drag\", this._onDrag);\n                eventjs.remove(this.upperCanvasEl, \"orientation\", this._onOrientationChange);\n                eventjs.remove(this.upperCanvasEl, \"shake\", this._onShake);\n                eventjs.remove(this.upperCanvasEl, \"longpress\", this._onLongPress);\n            }\n        },\n        _onGesture: function(e, self) {\n            this.__onTransformGesture && this.__onTransformGesture(e, self);\n        },\n        _onDrag: function(e, self) {\n            this.__onDrag && this.__onDrag(e, self);\n        },\n        _onMouseWheel: function(e) {\n            this.__onMouseWheel(e);\n        },\n        _onMouseOut: function(e) {\n            var target = this._hoveredTarget;\n            this.fire(\"mouse:out\", {\n                target: target,\n                e: e\n            });\n            this._hoveredTarget = null;\n            target && target.fire(\"mouseout\", {\n                e: e\n            });\n            if (this._iTextInstances) {\n                this._iTextInstances.forEach(function(obj) {\n                    if (obj.isEditing) {\n                        obj.hiddenTextarea.focus();\n                    }\n                });\n            }\n        },\n        _onMouseEnter: function(e) {\n            if (!this.findTarget(e)) {\n                this.fire(\"mouse:over\", {\n                    target: null,\n                    e: e\n                });\n                this._hoveredTarget = null;\n            }\n        },\n        _onOrientationChange: function(e, self) {\n            this.__onOrientationChange && this.__onOrientationChange(e, self);\n        },\n        _onShake: function(e, self) {\n            this.__onShake && this.__onShake(e, self);\n        },\n        _onLongPress: function(e, self) {\n            this.__onLongPress && this.__onLongPress(e, self);\n        },\n        _onDragOver: function(e) {\n            e.preventDefault();\n            var target = this._simpleEventHandler(\"dragover\", e);\n            this._fireEnterLeaveEvents(target, e);\n        },\n        _onContextMenu: function(e) {\n            if (this.stopContextMenu) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            return false;\n        },\n        _onDoubleClick: function(e) {\n            this._handleEvent(e, \"dblclick\");\n        },\n        _onMouseDown: function(e) {\n            this.__onMouseDown(e);\n            addListener(fabric.document, \"touchend\", this._onMouseUp, {\n                passive: false\n            });\n            addListener(fabric.document, \"touchmove\", this._onMouseMove, {\n                passive: false\n            });\n            removeListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            removeListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove);\n            if (e.type === \"touchstart\") {\n                removeListener(this.upperCanvasEl, \"mousedown\", this._onMouseDown);\n            } else {\n                addListener(fabric.document, \"mouseup\", this._onMouseUp);\n                addListener(fabric.document, \"mousemove\", this._onMouseMove);\n            }\n        },\n        _onMouseUp: function(e) {\n            this.__onMouseUp(e);\n            removeListener(fabric.document, \"mouseup\", this._onMouseUp);\n            removeListener(fabric.document, \"touchend\", this._onMouseUp);\n            removeListener(fabric.document, \"mousemove\", this._onMouseMove);\n            removeListener(fabric.document, \"touchmove\", this._onMouseMove);\n            addListener(this.upperCanvasEl, \"mousemove\", this._onMouseMove);\n            addListener(this.upperCanvasEl, \"touchmove\", this._onMouseMove, {\n                passive: false\n            });\n            if (e.type === \"touchend\") {\n                var _this = this;\n                setTimeout(function() {\n                    addListener(_this.upperCanvasEl, \"mousedown\", _this._onMouseDown);\n                }, 400);\n            }\n        },\n        _onMouseMove: function(e) {\n            !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n            this.__onMouseMove(e);\n        },\n        _onResize: function() {\n            this.calcOffset();\n        },\n        _shouldRender: function(target, pointer) {\n            var activeObject = this._activeObject;\n            if (activeObject && activeObject.isEditing && target === activeObject) {\n                return false;\n            }\n            return !!(target && (target.isMoving || target !== activeObject) || !target && !!activeObject || !target && !activeObject && !this._groupSelector || pointer && this._previousPointer && this.selection && (pointer.x !== this._previousPointer.x || pointer.y !== this._previousPointer.y));\n        },\n        __onMouseUp: function(e) {\n            var target, searchTarget = true, transform = this._currentTransform, groupSelector = this._groupSelector, isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n            if (checkClick(e, RIGHT_CLICK)) {\n                if (this.fireRightClick) {\n                    this._handleEvent(e, \"up\", target, RIGHT_CLICK, isClick);\n                }\n                return;\n            }\n            if (checkClick(e, MIDDLE_CLICK)) {\n                if (this.fireMiddleClick) {\n                    this._handleEvent(e, \"up\", target, MIDDLE_CLICK, isClick);\n                }\n                return;\n            }\n            if (this.isDrawingMode && this._isCurrentlyDrawing) {\n                this._onMouseUpInDrawingMode(e);\n                return;\n            }\n            if (transform) {\n                this._finalizeCurrentTransform(e);\n                searchTarget = !transform.actionPerformed;\n            }\n            target = searchTarget ? this.findTarget(e, true) : transform.target;\n            var shouldRender = this._shouldRender(target, this.getPointer(e));\n            if (target || !isClick) {\n                this._maybeGroupObjects(e);\n            } else {\n                this._groupSelector = null;\n                this._currentTransform = null;\n            }\n            if (target) {\n                target.isMoving = false;\n            }\n            this._setCursorFromEvent(e, target);\n            this._handleEvent(e, \"up\", target ? target : null, LEFT_CLICK, isClick);\n            target && (target.__corner = 0);\n            shouldRender && this.requestRenderAll();\n        },\n        _simpleEventHandler: function(eventType, e) {\n            var target = this.findTarget(e), targets = this.targets, options = {\n                e: e,\n                target: target,\n                subTargets: targets\n            };\n            this.fire(eventType, options);\n            target && target.fire(eventType, options);\n            if (!targets) {\n                return target;\n            }\n            for (var i = 0; i < targets.length; i++) {\n                targets[i].fire(eventType, options);\n            }\n            return target;\n        },\n        _handleEvent: function(e, eventType, targetObj, button, isClick) {\n            var target = typeof targetObj === \"undefined\" ? this.findTarget(e) : targetObj, targets = this.targets || [], options = {\n                e: e,\n                target: target,\n                subTargets: targets,\n                button: button || LEFT_CLICK,\n                isClick: isClick || false\n            };\n            this.fire(\"mouse:\" + eventType, options);\n            target && target.fire(\"mouse\" + eventType, options);\n            for (var i = 0; i < targets.length; i++) {\n                targets[i].fire(\"mouse\" + eventType, options);\n            }\n        },\n        _finalizeCurrentTransform: function(e) {\n            var transform = this._currentTransform, target = transform.target;\n            if (target._scaling) {\n                target._scaling = false;\n            }\n            target.setCoords();\n            this._restoreOriginXY(target);\n            if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n                this.fire(\"object:modified\", {\n                    target: target,\n                    e: e\n                });\n                target.fire(\"modified\", {\n                    e: e\n                });\n            }\n        },\n        _restoreOriginXY: function(target) {\n            if (this._previousOriginX && this._previousOriginY) {\n                var originPoint = target.translateToOriginPoint(target.getCenterPoint(), this._previousOriginX, this._previousOriginY);\n                target.originX = this._previousOriginX;\n                target.originY = this._previousOriginY;\n                target.left = originPoint.x;\n                target.top = originPoint.y;\n                this._previousOriginX = null;\n                this._previousOriginY = null;\n            }\n        },\n        _onMouseDownInDrawingMode: function(e) {\n            this._isCurrentlyDrawing = true;\n            if (this.getActiveObject()) {\n                this.discardActiveObject(e).requestRenderAll();\n            }\n            if (this.clipTo) {\n                fabric.util.clipContext(this, this.contextTop);\n            }\n            var pointer = this.getPointer(e);\n            this.freeDrawingBrush.onMouseDown(pointer);\n            this._handleEvent(e, \"down\");\n        },\n        _onMouseMoveInDrawingMode: function(e) {\n            if (this._isCurrentlyDrawing) {\n                var pointer = this.getPointer(e);\n                this.freeDrawingBrush.onMouseMove(pointer);\n            }\n            this.setCursor(this.freeDrawingCursor);\n            this._handleEvent(e, \"move\");\n        },\n        _onMouseUpInDrawingMode: function(e) {\n            this._isCurrentlyDrawing = false;\n            if (this.clipTo) {\n                this.contextTop.restore();\n            }\n            this.freeDrawingBrush.onMouseUp();\n            this._handleEvent(e, \"up\");\n        },\n        __onMouseDown: function(e) {\n            var target = this.findTarget(e) || null;\n            if (checkClick(e, RIGHT_CLICK)) {\n                if (this.fireRightClick) {\n                    this._handleEvent(e, \"down\", target, RIGHT_CLICK);\n                }\n                return;\n            }\n            if (checkClick(e, MIDDLE_CLICK)) {\n                if (this.fireMiddleClick) {\n                    this._handleEvent(e, \"down\", target, MIDDLE_CLICK);\n                }\n                return;\n            }\n            if (this.isDrawingMode) {\n                this._onMouseDownInDrawingMode(e);\n                return;\n            }\n            if (this._currentTransform) {\n                return;\n            }\n            var pointer = this.getPointer(e, true);\n            this._previousPointer = pointer;\n            var shouldRender = this._shouldRender(target, pointer), shouldGroup = this._shouldGroup(e, target);\n            if (this._shouldClearSelection(e, target)) {\n                this.discardActiveObject(e);\n            } else if (shouldGroup) {\n                this._handleGrouping(e, target);\n                target = this._activeObject;\n            }\n            if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n                this._groupSelector = {\n                    ex: pointer.x,\n                    ey: pointer.y,\n                    top: 0,\n                    left: 0\n                };\n            }\n            if (target) {\n                if (target.selectable) {\n                    this.setActiveObject(target, e);\n                }\n                if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n                    this._beforeTransform(e, target);\n                    this._setupCurrentTransform(e, target);\n                }\n            }\n            this._handleEvent(e, \"down\", target);\n            shouldRender && this.requestRenderAll();\n        },\n        _beforeTransform: function(e, target) {\n            this.stateful && target.saveState();\n            if (target._findTargetCorner(this.getPointer(e, true))) {\n                this.onBeforeScaleRotate(target);\n            }\n        },\n        _setOriginToCenter: function(target) {\n            this._previousOriginX = this._currentTransform.target.originX;\n            this._previousOriginY = this._currentTransform.target.originY;\n            var center = target.getCenterPoint();\n            target.originX = \"center\";\n            target.originY = \"center\";\n            target.left = center.x;\n            target.top = center.y;\n            this._currentTransform.left = target.left;\n            this._currentTransform.top = target.top;\n        },\n        _setCenterToOrigin: function(target) {\n            var originPoint = target.translateToOriginPoint(target.getCenterPoint(), this._previousOriginX, this._previousOriginY);\n            target.originX = this._previousOriginX;\n            target.originY = this._previousOriginY;\n            target.left = originPoint.x;\n            target.top = originPoint.y;\n            this._previousOriginX = null;\n            this._previousOriginY = null;\n        },\n        __onMouseMove: function(e) {\n            var target, pointer;\n            if (this.isDrawingMode) {\n                this._onMouseMoveInDrawingMode(e);\n                return;\n            }\n            if (typeof e.touches !== \"undefined\" && e.touches.length > 1) {\n                return;\n            }\n            var groupSelector = this._groupSelector;\n            if (groupSelector) {\n                pointer = this.getPointer(e, true);\n                groupSelector.left = pointer.x - groupSelector.ex;\n                groupSelector.top = pointer.y - groupSelector.ey;\n                this.renderTop();\n            } else if (!this._currentTransform) {\n                target = this.findTarget(e) || null;\n                this._setCursorFromEvent(e, target);\n                this._fireOverOutEvents(target, e);\n            } else {\n                this._transformObject(e);\n            }\n            this._handleEvent(e, \"move\", this._currentTransform ? null : target);\n        },\n        _fireOverOutEvents: function(target, e) {\n            this.fireSynteticInOutEvents(target, e, {\n                targetName: \"_hoveredTarget\",\n                canvasEvtOut: \"mouse:out\",\n                evtOut: \"mouseout\",\n                canvasEvtIn: \"mouse:over\",\n                evtIn: \"mouseover\"\n            });\n        },\n        _fireEnterLeaveEvents: function(target, e) {\n            this.fireSynteticInOutEvents(target, e, {\n                targetName: \"_draggedoverTarget\",\n                evtOut: \"dragleave\",\n                evtIn: \"dragenter\"\n            });\n        },\n        fireSynteticInOutEvents: function(target, e, config) {\n            var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires, targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n            if (targetChanged) {\n                inOpt = {\n                    e: e,\n                    target: target,\n                    previousTarget: oldTarget\n                };\n                outOpt = {\n                    e: e,\n                    target: oldTarget,\n                    nextTarget: target\n                };\n                this[config.targetName] = target;\n            }\n            inFires = target && targetChanged;\n            outFires = oldTarget && targetChanged;\n            if (outFires) {\n                canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n                oldTarget.fire(config.evtOut, outOpt);\n            }\n            if (inFires) {\n                canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n                target.fire(config.evtIn, inOpt);\n            }\n        },\n        __onMouseWheel: function(e) {\n            this._handleEvent(e, \"wheel\");\n        },\n        _transformObject: function(e) {\n            var pointer = this.getPointer(e), transform = this._currentTransform;\n            transform.reset = false;\n            transform.target.isMoving = true;\n            transform.shiftKey = e.shiftKey;\n            transform.altKey = e[this.centeredKey];\n            this._beforeScaleTransform(e, transform);\n            this._performTransformAction(e, transform, pointer);\n            transform.actionPerformed && this.requestRenderAll();\n        },\n        _performTransformAction: function(e, transform, pointer) {\n            var x = pointer.x, y = pointer.y, target = transform.target, action = transform.action, actionPerformed = false;\n            if (action === \"rotate\") {\n                (actionPerformed = this._rotateObject(x, y)) && this._fire(\"rotating\", target, e);\n            } else if (action === \"scale\") {\n                (actionPerformed = this._onScale(e, transform, x, y)) && this._fire(\"scaling\", target, e);\n            } else if (action === \"scaleX\") {\n                (actionPerformed = this._scaleObject(x, y, \"x\")) && this._fire(\"scaling\", target, e);\n            } else if (action === \"scaleY\") {\n                (actionPerformed = this._scaleObject(x, y, \"y\")) && this._fire(\"scaling\", target, e);\n            } else if (action === \"skewX\") {\n                (actionPerformed = this._skewObject(x, y, \"x\")) && this._fire(\"skewing\", target, e);\n            } else if (action === \"skewY\") {\n                (actionPerformed = this._skewObject(x, y, \"y\")) && this._fire(\"skewing\", target, e);\n            } else {\n                actionPerformed = this._translateObject(x, y);\n                if (actionPerformed) {\n                    this._fire(\"moving\", target, e);\n                    this.setCursor(target.moveCursor || this.moveCursor);\n                }\n            }\n            transform.actionPerformed = transform.actionPerformed || actionPerformed;\n        },\n        _fire: function(eventName, target, e) {\n            this.fire(\"object:\" + eventName, {\n                target: target,\n                e: e\n            });\n            target.fire(eventName, {\n                e: e\n            });\n        },\n        _beforeScaleTransform: function(e, transform) {\n            if (transform.action === \"scale\" || transform.action === \"scaleX\" || transform.action === \"scaleY\") {\n                var centerTransform = this._shouldCenterTransform(transform.target);\n                if (centerTransform && (transform.originX !== \"center\" || transform.originY !== \"center\") || !centerTransform && transform.originX === \"center\" && transform.originY === \"center\") {\n                    this._resetCurrentTransform();\n                    transform.reset = true;\n                }\n            }\n        },\n        _onScale: function(e, transform, x, y) {\n            if (this._isUniscalePossible(e, transform.target)) {\n                transform.currentAction = \"scale\";\n                return this._scaleObject(x, y);\n            } else {\n                if (!transform.reset && transform.currentAction === \"scale\") {\n                    this._resetCurrentTransform();\n                }\n                transform.currentAction = \"scaleEqually\";\n                return this._scaleObject(x, y, \"equally\");\n            }\n        },\n        _isUniscalePossible: function(e, target) {\n            return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get(\"lockUniScaling\");\n        },\n        _setCursorFromEvent: function(e, target) {\n            if (!target) {\n                this.setCursor(this.defaultCursor);\n                return false;\n            }\n            var hoverCursor = target.hoverCursor || this.hoverCursor, activeSelection = this._activeObject && this._activeObject.type === \"activeSelection\" ? this._activeObject : null, corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n            if (!corner) {\n                this.setCursor(hoverCursor);\n            } else {\n                this.setCursor(this.getCornerCursor(corner, target, e));\n            }\n        },\n        getCornerCursor: function(corner, target, e) {\n            if (this.actionIsDisabled(corner, target, e)) {\n                return this.notAllowedCursor;\n            } else if (corner in cursorOffset) {\n                return this._getRotatedCornerCursor(corner, target, e);\n            } else if (corner === \"mtr\" && target.hasRotatingPoint) {\n                return this.rotationCursor;\n            } else {\n                return this.defaultCursor;\n            }\n        },\n        actionIsDisabled: function(corner, target, e) {\n            if (corner === \"mt\" || corner === \"mb\") {\n                return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n            } else if (corner === \"ml\" || corner === \"mr\") {\n                return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n            } else if (corner === \"mtr\") {\n                return target.lockRotation;\n            } else {\n                return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n            }\n        },\n        _getRotatedCornerCursor: function(corner, target, e) {\n            var n = Math.round(target.angle % 360 / 45);\n            if (n < 0) {\n                n += 8;\n            }\n            n += cursorOffset[corner];\n            if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n                n += 2;\n            }\n            n %= 8;\n            return this.cursorMap[n];\n        }\n    });\n})();\n\n(function() {\n    var min = Math.min, max = Math.max;\n    fabric.util.object.extend(fabric.Canvas.prototype, {\n        _shouldGroup: function(e, target) {\n            var activeObject = this._activeObject;\n            return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === \"activeSelection\");\n        },\n        _handleGrouping: function(e, target) {\n            var activeObject = this._activeObject;\n            if (activeObject.__corner) {\n                return;\n            }\n            if (target === activeObject) {\n                target = this.findTarget(e, true);\n                if (!target) {\n                    return;\n                }\n            }\n            if (activeObject && activeObject.type === \"activeSelection\") {\n                this._updateActiveSelection(target, e);\n            } else {\n                this._createActiveSelection(target, e);\n            }\n        },\n        _updateActiveSelection: function(target, e) {\n            var activeSelection = this._activeObject, currentActiveObjects = activeSelection._objects.slice(0);\n            if (activeSelection.contains(target)) {\n                activeSelection.removeWithUpdate(target);\n                this._hoveredTarget = target;\n                if (activeSelection.size() === 1) {\n                    this._setActiveObject(activeSelection.item(0), e);\n                }\n            } else {\n                activeSelection.addWithUpdate(target);\n                this._hoveredTarget = activeSelection;\n            }\n            this._fireSelectionEvents(currentActiveObjects, e);\n        },\n        _createActiveSelection: function(target, e) {\n            var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n            this._hoveredTarget = group;\n            this._setActiveObject(group, e);\n            this._fireSelectionEvents(currentActives, e);\n        },\n        _createGroup: function(target) {\n            var objects = this.getObjects(), isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target), groupObjects = isActiveLower ? [ this._activeObject, target ] : [ target, this._activeObject ];\n            this._activeObject.isEditing && this._activeObject.exitEditing();\n            return new fabric.ActiveSelection(groupObjects, {\n                canvas: this\n            });\n        },\n        _groupSelectedObjects: function(e) {\n            var group = this._collectObjects(), aGroup;\n            if (group.length === 1) {\n                this.setActiveObject(group[0], e);\n            } else if (group.length > 1) {\n                aGroup = new fabric.ActiveSelection(group.reverse(), {\n                    canvas: this\n                });\n                this.setActiveObject(aGroup, e);\n            }\n        },\n        _collectObjects: function() {\n            var group = [], currentObject, x1 = this._groupSelector.ex, y1 = this._groupSelector.ey, x2 = x1 + this._groupSelector.left, y2 = y1 + this._groupSelector.top, selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)), selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)), allowIntersect = !this.selectionFullyContained, isClick = x1 === x2 && y1 === y2;\n            for (var i = this._objects.length; i--; ) {\n                currentObject = this._objects[i];\n                if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n                    continue;\n                }\n                if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n                    group.push(currentObject);\n                    if (isClick) {\n                        break;\n                    }\n                }\n            }\n            return group;\n        },\n        _maybeGroupObjects: function(e) {\n            if (this.selection && this._groupSelector) {\n                this._groupSelectedObjects(e);\n            }\n            this.setCursor(this.defaultCursor);\n            this._groupSelector = null;\n            this._currentTransform = null;\n        }\n    });\n})();\n\n(function() {\n    var supportQuality = fabric.StaticCanvas.supports(\"toDataURLWithQuality\");\n    fabric.util.object.extend(fabric.StaticCanvas.prototype, {\n        toDataURL: function(options) {\n            options || (options = {});\n            var format = options.format || \"png\", quality = options.quality || 1, multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()), cropping = {\n                left: options.left || 0,\n                top: options.top || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n            return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n        },\n        __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n            var origWidth = this.width, origHeight = this.height, scaledWidth = (cropping.width || this.width) * multiplier, scaledHeight = (cropping.height || this.height) * multiplier, zoom = this.getZoom(), newZoom = zoom * multiplier, vp = this.viewportTransform, translateX = (vp[4] - cropping.left) * multiplier, translateY = (vp[5] - cropping.top) * multiplier, newVp = [ newZoom, 0, 0, newZoom, translateX, translateY ], originalInteractive = this.interactive, originalSkipOffScreen = this.skipOffscreen, needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n            this.viewportTransform = newVp;\n            this.skipOffscreen = false;\n            this.interactive = false;\n            if (needsResize) {\n                this.setDimensions({\n                    width: scaledWidth,\n                    height: scaledHeight\n                }, {\n                    backstoreOnly: true\n                });\n            }\n            this.renderAll();\n            var data = this.__toDataURL(format, quality, cropping);\n            this.interactive = originalInteractive;\n            this.skipOffscreen = originalSkipOffScreen;\n            this.viewportTransform = vp;\n            if (needsResize) {\n                this.setDimensions({\n                    width: origWidth,\n                    height: origHeight\n                }, {\n                    backstoreOnly: true\n                });\n            }\n            this.renderAll();\n            return data;\n        },\n        __toDataURL: function(format, quality) {\n            var canvasEl = this.contextContainer.canvas;\n            if (format === \"jpg\") {\n                format = \"jpeg\";\n            }\n            var data = supportQuality ? canvasEl.toDataURL(\"image/\" + format, quality) : canvasEl.toDataURL(\"image/\" + format);\n            return data;\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    loadFromDatalessJSON: function(json, callback, reviver) {\n        return this.loadFromJSON(json, callback, reviver);\n    },\n    loadFromJSON: function(json, callback, reviver) {\n        if (!json) {\n            return;\n        }\n        var serialized = typeof json === \"string\" ? JSON.parse(json) : fabric.util.object.clone(json);\n        var _this = this, renderOnAddRemove = this.renderOnAddRemove;\n        this.renderOnAddRemove = false;\n        this._enlivenObjects(serialized.objects, function(enlivenedObjects) {\n            _this.clear();\n            _this._setBgOverlay(serialized, function() {\n                enlivenedObjects.forEach(function(obj, index) {\n                    _this.insertAt(obj, index);\n                });\n                _this.renderOnAddRemove = renderOnAddRemove;\n                delete serialized.objects;\n                delete serialized.backgroundImage;\n                delete serialized.overlayImage;\n                delete serialized.background;\n                delete serialized.overlay;\n                _this._setOptions(serialized);\n                _this.renderAll();\n                callback && callback();\n            });\n        }, reviver);\n        return this;\n    },\n    _setBgOverlay: function(serialized, callback) {\n        var loaded = {\n            backgroundColor: false,\n            overlayColor: false,\n            backgroundImage: false,\n            overlayImage: false\n        };\n        if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n            callback && callback();\n            return;\n        }\n        var cbIfLoaded = function() {\n            if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n                callback && callback();\n            }\n        };\n        this.__setBgOverlay(\"backgroundImage\", serialized.backgroundImage, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"overlayImage\", serialized.overlayImage, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"backgroundColor\", serialized.background, loaded, cbIfLoaded);\n        this.__setBgOverlay(\"overlayColor\", serialized.overlay, loaded, cbIfLoaded);\n    },\n    __setBgOverlay: function(property, value, loaded, callback) {\n        var _this = this;\n        if (!value) {\n            loaded[property] = true;\n            callback && callback();\n            return;\n        }\n        if (property === \"backgroundImage\" || property === \"overlayImage\") {\n            fabric.util.enlivenObjects([ value ], function(enlivedObject) {\n                _this[property] = enlivedObject[0];\n                loaded[property] = true;\n                callback && callback();\n            });\n        } else {\n            this[\"set\" + fabric.util.string.capitalize(property, true)](value, function() {\n                loaded[property] = true;\n                callback && callback();\n            });\n        }\n    },\n    _enlivenObjects: function(objects, callback, reviver) {\n        if (!objects || objects.length === 0) {\n            callback && callback([]);\n            return;\n        }\n        fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n            callback && callback(enlivenedObjects);\n        }, null, reviver);\n    },\n    _toDataURL: function(format, callback) {\n        this.clone(function(clone) {\n            callback(clone.toDataURL(format));\n        });\n    },\n    _toDataURLWithMultiplier: function(format, multiplier, callback) {\n        this.clone(function(clone) {\n            callback(clone.toDataURLWithMultiplier(format, multiplier));\n        });\n    },\n    clone: function(callback, properties) {\n        var data = JSON.stringify(this.toJSON(properties));\n        this.cloneWithoutData(function(clone) {\n            clone.loadFromJSON(data, function() {\n                callback && callback(clone);\n            });\n        });\n    },\n    cloneWithoutData: function(callback) {\n        var el = fabric.document.createElement(\"canvas\");\n        el.width = this.width;\n        el.height = this.height;\n        var clone = new fabric.Canvas(el);\n        clone.clipTo = this.clipTo;\n        if (this.backgroundImage) {\n            clone.setBackgroundImage(this.backgroundImage.src, function() {\n                clone.renderAll();\n                callback && callback(clone);\n            });\n            clone.backgroundImageOpacity = this.backgroundImageOpacity;\n            clone.backgroundImageStretch = this.backgroundImageStretch;\n        } else {\n            callback && callback(clone);\n        }\n    }\n});\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, toFixed = fabric.util.toFixed, capitalize = fabric.util.string.capitalize, degreesToRadians = fabric.util.degreesToRadians, supportsLineDash = fabric.StaticCanvas.supports(\"setLineDash\"), objectCaching = !fabric.isLikelyNode, ALIASING_LIMIT = 2;\n    if (fabric.Object) {\n        return;\n    }\n    fabric.Object = fabric.util.createClass(fabric.CommonMethods, {\n        type: \"object\",\n        originX: \"left\",\n        originY: \"top\",\n        top: 0,\n        left: 0,\n        width: 0,\n        height: 0,\n        scaleX: 1,\n        scaleY: 1,\n        flipX: false,\n        flipY: false,\n        opacity: 1,\n        angle: 0,\n        skewX: 0,\n        skewY: 0,\n        cornerSize: 13,\n        transparentCorners: true,\n        hoverCursor: null,\n        moveCursor: null,\n        padding: 0,\n        borderColor: \"rgba(102,153,255,0.75)\",\n        borderDashArray: null,\n        cornerColor: \"rgba(102,153,255,0.5)\",\n        cornerStrokeColor: null,\n        cornerStyle: \"rect\",\n        cornerDashArray: null,\n        centeredScaling: false,\n        centeredRotation: true,\n        fill: \"rgb(0,0,0)\",\n        fillRule: \"nonzero\",\n        globalCompositeOperation: \"source-over\",\n        backgroundColor: \"\",\n        selectionBackgroundColor: \"\",\n        stroke: null,\n        strokeWidth: 1,\n        strokeDashArray: null,\n        strokeLineCap: \"butt\",\n        strokeLineJoin: \"miter\",\n        strokeMiterLimit: 10,\n        shadow: null,\n        borderOpacityWhenMoving: .4,\n        borderScaleFactor: 1,\n        transformMatrix: null,\n        minScaleLimit: 0,\n        selectable: true,\n        evented: true,\n        visible: true,\n        hasControls: true,\n        hasBorders: true,\n        hasRotatingPoint: true,\n        rotatingPointOffset: 40,\n        perPixelTargetFind: false,\n        includeDefaultValues: true,\n        clipTo: null,\n        lockMovementX: false,\n        lockMovementY: false,\n        lockRotation: false,\n        lockScalingX: false,\n        lockScalingY: false,\n        lockUniScaling: false,\n        lockSkewingX: false,\n        lockSkewingY: false,\n        lockScalingFlip: false,\n        excludeFromExport: false,\n        objectCaching: objectCaching,\n        statefullCache: false,\n        noScaleCache: true,\n        dirty: true,\n        __corner: 0,\n        paintFirst: \"fill\",\n        stateProperties: (\"top left width height scaleX scaleY flipX flipY originX originY transformMatrix \" + \"stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit \" + \"angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor \" + \"skewX skewY fillRule paintFirst\").split(\" \"),\n        cacheProperties: (\"fill stroke strokeWidth strokeDashArray width height paintFirst\" + \" strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor\").split(\" \"),\n        initialize: function(options) {\n            if (options) {\n                this.setOptions(options);\n            }\n        },\n        _createCacheCanvas: function() {\n            this._cacheProperties = {};\n            this._cacheCanvas = fabric.document.createElement(\"canvas\");\n            this._cacheContext = this._cacheCanvas.getContext(\"2d\");\n            this._updateCacheCanvas();\n        },\n        _limitCacheSize: function(dims) {\n            var perfLimitSizeTotal = fabric.perfLimitSizeTotal, width = dims.width, height = dims.height, max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n            if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n                if (width < min) {\n                    dims.width = min;\n                }\n                if (height < min) {\n                    dims.height = min;\n                }\n                return dims;\n            }\n            var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal), capValue = fabric.util.capValue, x = capValue(min, limitedDims.x, max), y = capValue(min, limitedDims.y, max);\n            if (width > x) {\n                dims.zoomX /= width / x;\n                dims.width = x;\n                dims.capped = true;\n            }\n            if (height > y) {\n                dims.zoomY /= height / y;\n                dims.height = y;\n                dims.capped = true;\n            }\n            return dims;\n        },\n        _getCacheCanvasDimensions: function() {\n            var zoom = this.canvas && this.canvas.getZoom() || 1, objectScale = this.getObjectScaling(), retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1, dim = this._getNonTransformedDimensions(), zoomX = objectScale.scaleX * zoom * retina, zoomY = objectScale.scaleY * zoom * retina, width = dim.x * zoomX, height = dim.y * zoomY;\n            return {\n                width: width + ALIASING_LIMIT,\n                height: height + ALIASING_LIMIT,\n                zoomX: zoomX,\n                zoomY: zoomY,\n                x: dim.x,\n                y: dim.y\n            };\n        },\n        _updateCacheCanvas: function() {\n            if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n                var target = this.canvas._currentTransform.target, action = this.canvas._currentTransform.action;\n                if (this === target && action.slice && action.slice(0, 5) === \"scale\") {\n                    return false;\n                }\n            }\n            var canvas = this._cacheCanvas, dims = this._limitCacheSize(this._getCacheCanvasDimensions()), minCacheSize = fabric.minCacheSideLimit, width = dims.width, height = dims.height, drawingWidth, drawingHeight, zoomX = dims.zoomX, zoomY = dims.zoomY, dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight, zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY, shouldRedraw = dimensionsChanged || zoomChanged, additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n            if (dimensionsChanged) {\n                var canvasWidth = this._cacheCanvas.width, canvasHeight = this._cacheCanvas.height, sizeGrowing = width > canvasWidth || height > canvasHeight, sizeShrinking = (width < canvasWidth * .9 || height < canvasHeight * .9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n                shouldResizeCanvas = sizeGrowing || sizeShrinking;\n                if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n                    additionalWidth = width * .1;\n                    additionalHeight = height * .1;\n                }\n            }\n            if (shouldRedraw) {\n                if (shouldResizeCanvas) {\n                    canvas.width = Math.ceil(width + additionalWidth);\n                    canvas.height = Math.ceil(height + additionalHeight);\n                } else {\n                    this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n                    this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n                }\n                drawingWidth = dims.x * zoomX / 2;\n                drawingHeight = dims.y * zoomY / 2;\n                this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n                this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n                this.cacheWidth = width;\n                this.cacheHeight = height;\n                this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n                this._cacheContext.scale(zoomX, zoomY);\n                this.zoomX = zoomX;\n                this.zoomY = zoomY;\n                return true;\n            }\n            return false;\n        },\n        setOptions: function(options) {\n            this._setOptions(options);\n            this._initGradient(options.fill, \"fill\");\n            this._initGradient(options.stroke, \"stroke\");\n            this._initClipping(options);\n            this._initPattern(options.fill, \"fill\");\n            this._initPattern(options.stroke, \"stroke\");\n        },\n        transform: function(ctx) {\n            var m;\n            if (this.group && !this.group._transformDone) {\n                m = this.calcTransformMatrix();\n            } else {\n                m = this.calcOwnMatrix();\n            }\n            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        },\n        toObject: function(propertiesToInclude) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, object = {\n                type: this.type,\n                version: fabric.version,\n                originX: this.originX,\n                originY: this.originY,\n                left: toFixed(this.left, NUM_FRACTION_DIGITS),\n                top: toFixed(this.top, NUM_FRACTION_DIGITS),\n                width: toFixed(this.width, NUM_FRACTION_DIGITS),\n                height: toFixed(this.height, NUM_FRACTION_DIGITS),\n                fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n                stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n                strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n                strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n                strokeLineCap: this.strokeLineCap,\n                strokeLineJoin: this.strokeLineJoin,\n                strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n                scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n                scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n                angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n                flipX: this.flipX,\n                flipY: this.flipY,\n                opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n                shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n                visible: this.visible,\n                clipTo: this.clipTo && String(this.clipTo),\n                backgroundColor: this.backgroundColor,\n                fillRule: this.fillRule,\n                paintFirst: this.paintFirst,\n                globalCompositeOperation: this.globalCompositeOperation,\n                transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n                skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n                skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n            };\n            fabric.util.populateWithProperties(this, object, propertiesToInclude);\n            if (!this.includeDefaultValues) {\n                object = this._removeDefaultValues(object);\n            }\n            return object;\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            return this.toObject(propertiesToInclude);\n        },\n        _removeDefaultValues: function(object) {\n            var prototype = fabric.util.getKlass(object.type).prototype, stateProperties = prototype.stateProperties;\n            stateProperties.forEach(function(prop) {\n                if (object[prop] === prototype[prop]) {\n                    delete object[prop];\n                }\n                var isArray = Object.prototype.toString.call(object[prop]) === \"[object Array]\" && Object.prototype.toString.call(prototype[prop]) === \"[object Array]\";\n                if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n                    delete object[prop];\n                }\n            });\n            return object;\n        },\n        toString: function() {\n            return \"#<fabric.\" + capitalize(this.type) + \">\";\n        },\n        getObjectScaling: function() {\n            var scaleX = this.scaleX, scaleY = this.scaleY;\n            if (this.group) {\n                var scaling = this.group.getObjectScaling();\n                scaleX *= scaling.scaleX;\n                scaleY *= scaling.scaleY;\n            }\n            return {\n                scaleX: scaleX,\n                scaleY: scaleY\n            };\n        },\n        getObjectOpacity: function() {\n            var opacity = this.opacity;\n            if (this.group) {\n                opacity *= this.group.getObjectOpacity();\n            }\n            return opacity;\n        },\n        _set: function(key, value) {\n            var shouldConstrainValue = key === \"scaleX\" || key === \"scaleY\", isChanged = this[key] !== value, groupNeedsUpdate = false;\n            if (shouldConstrainValue) {\n                value = this._constrainScale(value);\n            }\n            if (key === \"scaleX\" && value < 0) {\n                this.flipX = !this.flipX;\n                value *= -1;\n            } else if (key === \"scaleY\" && value < 0) {\n                this.flipY = !this.flipY;\n                value *= -1;\n            } else if (key === \"shadow\" && value && !(value instanceof fabric.Shadow)) {\n                value = new fabric.Shadow(value);\n            } else if (key === \"dirty\" && this.group) {\n                this.group.set(\"dirty\", value);\n            }\n            this[key] = value;\n            if (isChanged) {\n                groupNeedsUpdate = this.group && this.group.isOnACache();\n                if (this.cacheProperties.indexOf(key) > -1) {\n                    this.dirty = true;\n                    groupNeedsUpdate && this.group.set(\"dirty\", true);\n                } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n                    this.group.set(\"dirty\", true);\n                }\n            }\n            return this;\n        },\n        setOnGroup: function() {},\n        getViewportTransform: function() {\n            if (this.canvas && this.canvas.viewportTransform) {\n                return this.canvas.viewportTransform;\n            }\n            return fabric.iMatrix.concat();\n        },\n        isNotVisible: function() {\n            return this.opacity === 0 || this.width === 0 && this.height === 0 || !this.visible;\n        },\n        render: function(ctx) {\n            if (this.isNotVisible()) {\n                return;\n            }\n            if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n                return;\n            }\n            ctx.save();\n            this._setupCompositeOperation(ctx);\n            this.drawSelectionBackground(ctx);\n            this.transform(ctx);\n            this._setOpacity(ctx);\n            this._setShadow(ctx, this);\n            if (this.transformMatrix) {\n                ctx.transform.apply(ctx, this.transformMatrix);\n            }\n            this.clipTo && fabric.util.clipContext(this, ctx);\n            if (this.shouldCache()) {\n                if (!this._cacheCanvas) {\n                    this._createCacheCanvas();\n                }\n                if (this.isCacheDirty()) {\n                    this.statefullCache && this.saveState({\n                        propertySet: \"cacheProperties\"\n                    });\n                    this.drawObject(this._cacheContext);\n                    this.dirty = false;\n                }\n                this.drawCacheOnCanvas(ctx);\n            } else {\n                this._removeCacheCanvas();\n                this.dirty = false;\n                this.drawObject(ctx);\n                if (this.objectCaching && this.statefullCache) {\n                    this.saveState({\n                        propertySet: \"cacheProperties\"\n                    });\n                }\n            }\n            this.clipTo && ctx.restore();\n            ctx.restore();\n        },\n        _removeCacheCanvas: function() {\n            this._cacheCanvas = null;\n            this.cacheWidth = 0;\n            this.cacheHeight = 0;\n        },\n        needsItsOwnCache: function() {\n            if (this.paintFirst === \"stroke\" && typeof this.shadow === \"object\") {\n                return true;\n            }\n            return false;\n        },\n        shouldCache: function() {\n            this.ownCaching = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n            return this.ownCaching;\n        },\n        willDrawShadow: function() {\n            return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n        },\n        drawObject: function(ctx) {\n            this._renderBackground(ctx);\n            this._setStrokeStyles(ctx, this);\n            this._setFillStyles(ctx, this);\n            this._render(ctx);\n        },\n        drawCacheOnCanvas: function(ctx) {\n            ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n            ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n        },\n        isCacheDirty: function(skipCanvas) {\n            if (this.isNotVisible()) {\n                return false;\n            }\n            if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n                return true;\n            } else {\n                if (this.dirty || this.statefullCache && this.hasStateChanged(\"cacheProperties\")) {\n                    if (this._cacheCanvas && !skipCanvas) {\n                        var width = this.cacheWidth / this.zoomX;\n                        var height = this.cacheHeight / this.zoomY;\n                        this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        },\n        _renderBackground: function(ctx) {\n            if (!this.backgroundColor) {\n                return;\n            }\n            var dim = this._getNonTransformedDimensions();\n            ctx.fillStyle = this.backgroundColor;\n            ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n            this._removeShadow(ctx);\n        },\n        _setOpacity: function(ctx) {\n            if (this.group && !this.group._transformDone) {\n                ctx.globalAlpha = this.getObjectOpacity();\n            } else {\n                ctx.globalAlpha *= this.opacity;\n            }\n        },\n        _setStrokeStyles: function(ctx, decl) {\n            if (decl.stroke) {\n                ctx.lineWidth = decl.strokeWidth;\n                ctx.lineCap = decl.strokeLineCap;\n                ctx.lineJoin = decl.strokeLineJoin;\n                ctx.miterLimit = decl.strokeMiterLimit;\n                ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n            }\n        },\n        _setFillStyles: function(ctx, decl) {\n            if (decl.fill) {\n                ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n            }\n        },\n        _setLineDash: function(ctx, dashArray, alternative) {\n            if (!dashArray) {\n                return;\n            }\n            if (1 & dashArray.length) {\n                dashArray.push.apply(dashArray, dashArray);\n            }\n            if (supportsLineDash) {\n                ctx.setLineDash(dashArray);\n            } else {\n                alternative && alternative(ctx);\n            }\n        },\n        _renderControls: function(ctx, styleOverride) {\n            var vpt = this.getViewportTransform(), matrix = this.calcTransformMatrix(), options, drawBorders, drawControls;\n            styleOverride = styleOverride || {};\n            drawBorders = typeof styleOverride.hasBorders !== \"undefined\" ? styleOverride.hasBorders : this.hasBorders;\n            drawControls = typeof styleOverride.hasControls !== \"undefined\" ? styleOverride.hasControls : this.hasControls;\n            matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n            options = fabric.util.qrDecompose(matrix);\n            ctx.save();\n            ctx.translate(options.translateX, options.translateY);\n            ctx.lineWidth = 1 * this.borderScaleFactor;\n            if (!this.group) {\n                ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n            }\n            if (styleOverride.forActiveSelection) {\n                ctx.rotate(degreesToRadians(options.angle));\n                drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n            } else {\n                ctx.rotate(degreesToRadians(this.angle));\n                drawBorders && this.drawBorders(ctx, styleOverride);\n            }\n            drawControls && this.drawControls(ctx, styleOverride);\n            ctx.restore();\n        },\n        _setShadow: function(ctx) {\n            if (!this.shadow) {\n                return;\n            }\n            var multX = this.canvas && this.canvas.viewportTransform[0] || 1, multY = this.canvas && this.canvas.viewportTransform[3] || 1, scaling = this.getObjectScaling();\n            if (this.canvas && this.canvas._isRetinaScaling()) {\n                multX *= fabric.devicePixelRatio;\n                multY *= fabric.devicePixelRatio;\n            }\n            ctx.shadowColor = this.shadow.color;\n            ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n            ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n            ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n        },\n        _removeShadow: function(ctx) {\n            if (!this.shadow) {\n                return;\n            }\n            ctx.shadowColor = \"\";\n            ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n        },\n        _applyPatternGradientTransform: function(ctx, filler) {\n            if (!filler || !filler.toLive) {\n                return {\n                    offsetX: 0,\n                    offsetY: 0\n                };\n            }\n            var t = filler.gradientTransform || filler.patternTransform;\n            var offsetX = -this.width / 2 + filler.offsetX || 0, offsetY = -this.height / 2 + filler.offsetY || 0;\n            ctx.translate(offsetX, offsetY);\n            if (t) {\n                ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n            }\n            return {\n                offsetX: offsetX,\n                offsetY: offsetY\n            };\n        },\n        _renderPaintInOrder: function(ctx) {\n            if (this.paintFirst === \"stroke\") {\n                this._renderStroke(ctx);\n                this._renderFill(ctx);\n            } else {\n                this._renderFill(ctx);\n                this._renderStroke(ctx);\n            }\n        },\n        _renderFill: function(ctx) {\n            if (!this.fill) {\n                return;\n            }\n            ctx.save();\n            this._applyPatternGradientTransform(ctx, this.fill);\n            if (this.fillRule === \"evenodd\") {\n                ctx.fill(\"evenodd\");\n            } else {\n                ctx.fill();\n            }\n            ctx.restore();\n        },\n        _renderStroke: function(ctx) {\n            if (!this.stroke || this.strokeWidth === 0) {\n                return;\n            }\n            if (this.shadow && !this.shadow.affectStroke) {\n                this._removeShadow(ctx);\n            }\n            ctx.save();\n            this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n            this._applyPatternGradientTransform(ctx, this.stroke);\n            ctx.stroke();\n            ctx.restore();\n        },\n        _findCenterFromElement: function() {\n            return {\n                x: this.left + this.width / 2,\n                y: this.top + this.height / 2\n            };\n        },\n        _assignTransformMatrixProps: function() {\n            if (this.transformMatrix) {\n                var options = fabric.util.qrDecompose(this.transformMatrix);\n                this.flipX = false;\n                this.flipY = false;\n                this.set(\"scaleX\", options.scaleX);\n                this.set(\"scaleY\", options.scaleY);\n                this.angle = options.angle;\n                this.skewX = options.skewX;\n                this.skewY = 0;\n            }\n        },\n        _removeTransformMatrix: function(preserveAspectRatioOptions) {\n            var center = this._findCenterFromElement();\n            if (this.transformMatrix) {\n                this._assignTransformMatrixProps();\n                center = fabric.util.transformPoint(center, this.transformMatrix);\n            }\n            this.transformMatrix = null;\n            if (preserveAspectRatioOptions) {\n                this.scaleX *= preserveAspectRatioOptions.scaleX;\n                this.scaleY *= preserveAspectRatioOptions.scaleY;\n                this.cropX = preserveAspectRatioOptions.cropX;\n                this.cropY = preserveAspectRatioOptions.cropY;\n                center.x += preserveAspectRatioOptions.offsetLeft;\n                center.y += preserveAspectRatioOptions.offsetTop;\n                this.width = preserveAspectRatioOptions.width;\n                this.height = preserveAspectRatioOptions.height;\n            }\n            this.setPositionByOrigin(center, \"center\", \"center\");\n        },\n        clone: function(callback, propertiesToInclude) {\n            var objectForm = this.toObject(propertiesToInclude);\n            if (this.constructor.fromObject) {\n                this.constructor.fromObject(objectForm, callback);\n            } else {\n                fabric.Object._fromObject(\"Object\", objectForm, callback);\n            }\n        },\n        cloneAsImage: function(callback, options) {\n            var dataUrl = this.toDataURL(options);\n            fabric.util.loadImage(dataUrl, function(img) {\n                if (callback) {\n                    callback(new fabric.Image(img));\n                }\n            });\n            return this;\n        },\n        toDataURL: function(options) {\n            options || (options = {});\n            var el = fabric.util.createCanvasElement(), boundingRect = this.getBoundingRect();\n            el.width = boundingRect.width;\n            el.height = boundingRect.height;\n            fabric.util.wrapElement(el, \"div\");\n            var canvas = new fabric.StaticCanvas(el, {\n                enableRetinaScaling: options.enableRetinaScaling,\n                renderOnAddRemove: false,\n                skipOffscreen: false\n            });\n            if (options.format === \"jpg\") {\n                options.format = \"jpeg\";\n            }\n            if (options.format === \"jpeg\") {\n                canvas.backgroundColor = \"#fff\";\n            }\n            var origParams = {\n                left: this.left,\n                top: this.top\n            };\n            this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), \"center\", \"center\");\n            var originalCanvas = this.canvas;\n            canvas.add(this);\n            var data = canvas.toDataURL(options);\n            this.set(origParams).setCoords();\n            this.canvas = originalCanvas;\n            canvas._objects = [];\n            canvas.dispose();\n            canvas = null;\n            return data;\n        },\n        isType: function(type) {\n            return this.type === type;\n        },\n        complexity: function() {\n            return 1;\n        },\n        toJSON: function(propertiesToInclude) {\n            return this.toObject(propertiesToInclude);\n        },\n        setGradient: function(property, options) {\n            options || (options = {});\n            var gradient = {\n                colorStops: []\n            };\n            gradient.type = options.type || (options.r1 || options.r2 ? \"radial\" : \"linear\");\n            gradient.coords = {\n                x1: options.x1,\n                y1: options.y1,\n                x2: options.x2,\n                y2: options.y2\n            };\n            if (options.r1 || options.r2) {\n                gradient.coords.r1 = options.r1;\n                gradient.coords.r2 = options.r2;\n            }\n            gradient.gradientTransform = options.gradientTransform;\n            fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n            return this.set(property, fabric.Gradient.forObject(this, gradient));\n        },\n        setPatternFill: function(options) {\n            return this.set(\"fill\", new fabric.Pattern(options));\n        },\n        setShadow: function(options) {\n            return this.set(\"shadow\", options ? new fabric.Shadow(options) : null);\n        },\n        setColor: function(color) {\n            this.set(\"fill\", color);\n            return this;\n        },\n        rotate: function(angle) {\n            var shouldCenterOrigin = (this.originX !== \"center\" || this.originY !== \"center\") && this.centeredRotation;\n            if (shouldCenterOrigin) {\n                this._setOriginToCenter();\n            }\n            this.set(\"angle\", angle);\n            if (shouldCenterOrigin) {\n                this._resetOrigin();\n            }\n            return this;\n        },\n        centerH: function() {\n            this.canvas && this.canvas.centerObjectH(this);\n            return this;\n        },\n        viewportCenterH: function() {\n            this.canvas && this.canvas.viewportCenterObjectH(this);\n            return this;\n        },\n        centerV: function() {\n            this.canvas && this.canvas.centerObjectV(this);\n            return this;\n        },\n        viewportCenterV: function() {\n            this.canvas && this.canvas.viewportCenterObjectV(this);\n            return this;\n        },\n        center: function() {\n            this.canvas && this.canvas.centerObject(this);\n            return this;\n        },\n        viewportCenter: function() {\n            this.canvas && this.canvas.viewportCenterObject(this);\n            return this;\n        },\n        getLocalPointer: function(e, pointer) {\n            pointer = pointer || this.canvas.getPointer(e);\n            var pClicked = new fabric.Point(pointer.x, pointer.y), objectLeftTop = this._getLeftTopCoords();\n            if (this.angle) {\n                pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n            }\n            return {\n                x: pClicked.x - objectLeftTop.x,\n                y: pClicked.y - objectLeftTop.y\n            };\n        },\n        _setupCompositeOperation: function(ctx) {\n            if (this.globalCompositeOperation) {\n                ctx.globalCompositeOperation = this.globalCompositeOperation;\n            }\n        }\n    });\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n    extend(fabric.Object.prototype, fabric.Observable);\n    fabric.Object.NUM_FRACTION_DIGITS = 2;\n    fabric.Object._fromObject = function(className, object, callback, extraParam) {\n        var klass = fabric[className];\n        object = clone(object, true);\n        fabric.util.enlivenPatterns([ object.fill, object.stroke ], function(patterns) {\n            if (typeof patterns[0] !== \"undefined\") {\n                object.fill = patterns[0];\n            }\n            if (typeof patterns[1] !== \"undefined\") {\n                object.stroke = patterns[1];\n            }\n            var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n            callback && callback(instance);\n        });\n    };\n    fabric.Object.__uid = 0;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var degreesToRadians = fabric.util.degreesToRadians, originXOffset = {\n        left: -.5,\n        center: 0,\n        right: .5\n    }, originYOffset = {\n        top: -.5,\n        center: 0,\n        bottom: .5\n    };\n    fabric.util.object.extend(fabric.Object.prototype, {\n        translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n            var x = point.x, y = point.y, offsetX, offsetY, dim;\n            if (typeof fromOriginX === \"string\") {\n                fromOriginX = originXOffset[fromOriginX];\n            } else {\n                fromOriginX -= .5;\n            }\n            if (typeof toOriginX === \"string\") {\n                toOriginX = originXOffset[toOriginX];\n            } else {\n                toOriginX -= .5;\n            }\n            offsetX = toOriginX - fromOriginX;\n            if (typeof fromOriginY === \"string\") {\n                fromOriginY = originYOffset[fromOriginY];\n            } else {\n                fromOriginY -= .5;\n            }\n            if (typeof toOriginY === \"string\") {\n                toOriginY = originYOffset[toOriginY];\n            } else {\n                toOriginY -= .5;\n            }\n            offsetY = toOriginY - fromOriginY;\n            if (offsetX || offsetY) {\n                dim = this._getTransformedDimensions();\n                x = point.x + offsetX * dim.x;\n                y = point.y + offsetY * dim.y;\n            }\n            return new fabric.Point(x, y);\n        },\n        translateToCenterPoint: function(point, originX, originY) {\n            var p = this.translateToGivenOrigin(point, originX, originY, \"center\", \"center\");\n            if (this.angle) {\n                return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n            }\n            return p;\n        },\n        translateToOriginPoint: function(center, originX, originY) {\n            var p = this.translateToGivenOrigin(center, \"center\", \"center\", originX, originY);\n            if (this.angle) {\n                return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n            }\n            return p;\n        },\n        getCenterPoint: function() {\n            var leftTop = new fabric.Point(this.left, this.top);\n            return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n        },\n        getPointByOrigin: function(originX, originY) {\n            var center = this.getCenterPoint();\n            return this.translateToOriginPoint(center, originX, originY);\n        },\n        toLocalPoint: function(point, originX, originY) {\n            var center = this.getCenterPoint(), p, p2;\n            if (typeof originX !== \"undefined\" && typeof originY !== \"undefined\") {\n                p = this.translateToGivenOrigin(center, \"center\", \"center\", originX, originY);\n            } else {\n                p = new fabric.Point(this.left, this.top);\n            }\n            p2 = new fabric.Point(point.x, point.y);\n            if (this.angle) {\n                p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n            }\n            return p2.subtractEquals(p);\n        },\n        setPositionByOrigin: function(pos, originX, originY) {\n            var center = this.translateToCenterPoint(pos, originX, originY), position = this.translateToOriginPoint(center, this.originX, this.originY);\n            this.set(\"left\", position.x);\n            this.set(\"top\", position.y);\n        },\n        adjustPosition: function(to) {\n            var angle = degreesToRadians(this.angle), hypotFull = this.getScaledWidth(), xFull = fabric.util.cos(angle) * hypotFull, yFull = fabric.util.sin(angle) * hypotFull, offsetFrom, offsetTo;\n            if (typeof this.originX === \"string\") {\n                offsetFrom = originXOffset[this.originX];\n            } else {\n                offsetFrom = this.originX - .5;\n            }\n            if (typeof to === \"string\") {\n                offsetTo = originXOffset[to];\n            } else {\n                offsetTo = to - .5;\n            }\n            this.left += xFull * (offsetTo - offsetFrom);\n            this.top += yFull * (offsetTo - offsetFrom);\n            this.setCoords();\n            this.originX = to;\n        },\n        _setOriginToCenter: function() {\n            this._originalOriginX = this.originX;\n            this._originalOriginY = this.originY;\n            var center = this.getCenterPoint();\n            this.originX = \"center\";\n            this.originY = \"center\";\n            this.left = center.x;\n            this.top = center.y;\n        },\n        _resetOrigin: function() {\n            var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n            this.originX = this._originalOriginX;\n            this.originY = this._originalOriginY;\n            this.left = originPoint.x;\n            this.top = originPoint.y;\n            this._originalOriginX = null;\n            this._originalOriginY = null;\n        },\n        _getLeftTopCoords: function() {\n            return this.translateToOriginPoint(this.getCenterPoint(), \"left\", \"top\");\n        },\n        onDeselect: function() {}\n    });\n})();\n\n(function() {\n    function getCoords(coords) {\n        return [ new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y) ];\n    }\n    var degreesToRadians = fabric.util.degreesToRadians, multiplyMatrices = fabric.util.multiplyTransformMatrices, transformPoint = fabric.util.transformPoint;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        oCoords: null,\n        aCoords: null,\n        ownMatrixCache: null,\n        matrixCache: null,\n        getCoords: function(absolute, calculate) {\n            if (!this.oCoords) {\n                this.setCoords();\n            }\n            var coords = absolute ? this.aCoords : this.oCoords;\n            return getCoords(calculate ? this.calcCoords(absolute) : coords);\n        },\n        intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n            var coords = this.getCoords(absolute, calculate), intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n            return intersection.status === \"Intersection\";\n        },\n        intersectsWithObject: function(other, absolute, calculate) {\n            var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n            return intersection.status === \"Intersection\" || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n        },\n        isContainedWithinObject: function(other, absolute, calculate) {\n            var points = this.getCoords(absolute, calculate), i = 0, lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n            for (;i < 4; i++) {\n                if (!other.containsPoint(points[i], lines)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n            var boundingRect = this.getBoundingRect(absolute, calculate);\n            return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n        },\n        containsPoint: function(point, lines, absolute, calculate) {\n            var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords), xPoints = this._findCrossPoints(point, lines);\n            return xPoints !== 0 && xPoints % 2 === 1;\n        },\n        isOnScreen: function(calculate) {\n            if (!this.canvas) {\n                return false;\n            }\n            var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n            var points = this.getCoords(true, calculate), point;\n            for (var i = 0; i < 4; i++) {\n                point = points[i];\n                if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n                    return true;\n                }\n            }\n            if (this.intersectsWithRect(pointTL, pointBR, true)) {\n                return true;\n            }\n            var centerPoint = {\n                x: (pointTL.x + pointBR.x) / 2,\n                y: (pointTL.y + pointBR.y) / 2\n            };\n            if (this.containsPoint(centerPoint, null, true)) {\n                return true;\n            }\n            return false;\n        },\n        _getImageLines: function(oCoords) {\n            return {\n                topline: {\n                    o: oCoords.tl,\n                    d: oCoords.tr\n                },\n                rightline: {\n                    o: oCoords.tr,\n                    d: oCoords.br\n                },\n                bottomline: {\n                    o: oCoords.br,\n                    d: oCoords.bl\n                },\n                leftline: {\n                    o: oCoords.bl,\n                    d: oCoords.tl\n                }\n            };\n        },\n        _findCrossPoints: function(point, lines) {\n            var b1, b2, a1, a2, xi, xcount = 0, iLine;\n            for (var lineKey in lines) {\n                iLine = lines[lineKey];\n                if (iLine.o.y < point.y && iLine.d.y < point.y) {\n                    continue;\n                }\n                if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n                    continue;\n                }\n                if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n                    xi = iLine.o.x;\n                } else {\n                    b1 = 0;\n                    b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n                    a1 = point.y - b1 * point.x;\n                    a2 = iLine.o.y - b2 * iLine.o.x;\n                    xi = -(a1 - a2) / (b1 - b2);\n                }\n                if (xi >= point.x) {\n                    xcount += 1;\n                }\n                if (xcount === 2) {\n                    break;\n                }\n            }\n            return xcount;\n        },\n        getBoundingRect: function(absolute, calculate) {\n            var coords = this.getCoords(absolute, calculate);\n            return fabric.util.makeBoundingBoxFromPoints(coords);\n        },\n        getScaledWidth: function() {\n            return this._getTransformedDimensions().x;\n        },\n        getScaledHeight: function() {\n            return this._getTransformedDimensions().y;\n        },\n        _constrainScale: function(value) {\n            if (Math.abs(value) < this.minScaleLimit) {\n                if (value < 0) {\n                    return -this.minScaleLimit;\n                } else {\n                    return this.minScaleLimit;\n                }\n            } else if (value === 0) {\n                return 1e-4;\n            }\n            return value;\n        },\n        scale: function(value) {\n            this._set(\"scaleX\", value);\n            this._set(\"scaleY\", value);\n            return this.setCoords();\n        },\n        scaleToWidth: function(value, absolute) {\n            var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n            return this.scale(value / this.width / boundingRectFactor);\n        },\n        scaleToHeight: function(value, absolute) {\n            var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n            return this.scale(value / this.height / boundingRectFactor);\n        },\n        calcCoords: function(absolute) {\n            var rotateMatrix = this._calcRotateMatrix(), translateMatrix = this._calcTranslateMatrix(), startMatrix = multiplyMatrices(translateMatrix, rotateMatrix), vpt = this.getViewportTransform(), finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix), dim = this._getTransformedDimensions(), w = dim.x / 2, h = dim.y / 2, tl = transformPoint({\n                x: -w,\n                y: -h\n            }, finalMatrix), tr = transformPoint({\n                x: w,\n                y: -h\n            }, finalMatrix), bl = transformPoint({\n                x: -w,\n                y: h\n            }, finalMatrix), br = transformPoint({\n                x: w,\n                y: h\n            }, finalMatrix);\n            if (!absolute) {\n                var padding = this.padding, angle = degreesToRadians(this.angle), cos = fabric.util.cos(angle), sin = fabric.util.sin(angle), cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP, cosPMinusSinP = cosP - sinP;\n                if (padding) {\n                    tl.x -= cosPMinusSinP;\n                    tl.y -= cosPSinP;\n                    tr.x += cosPSinP;\n                    tr.y -= cosPMinusSinP;\n                    bl.x -= cosPSinP;\n                    bl.y += cosPMinusSinP;\n                    br.x += cosPMinusSinP;\n                    br.y += cosPSinP;\n                }\n                var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2), mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2), mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2), mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2), mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n            }\n            var coords = {\n                tl: tl,\n                tr: tr,\n                br: br,\n                bl: bl\n            };\n            if (!absolute) {\n                coords.ml = ml;\n                coords.mt = mt;\n                coords.mr = mr;\n                coords.mb = mb;\n                coords.mtr = mtr;\n            }\n            return coords;\n        },\n        setCoords: function(ignoreZoom, skipAbsolute) {\n            this.oCoords = this.calcCoords(ignoreZoom);\n            if (!skipAbsolute) {\n                this.aCoords = this.calcCoords(true);\n            }\n            ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n            return this;\n        },\n        _calcRotateMatrix: function() {\n            if (this.angle) {\n                var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n                return [ cos, sin, -sin, cos, 0, 0 ];\n            }\n            return fabric.iMatrix.concat();\n        },\n        _calcTranslateMatrix: function() {\n            var center = this.getCenterPoint();\n            return [ 1, 0, 0, 1, center.x, center.y ];\n        },\n        transformMatrixKey: function(skipGroup) {\n            var sep = \"_\", prefix = \"\";\n            if (!skipGroup && this.group) {\n                prefix = this.group.transformMatrixKey(skipGroup) + sep;\n            }\n            return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n        },\n        calcTransformMatrix: function(skipGroup) {\n            if (skipGroup) {\n                return this.calcOwnMatrix();\n            }\n            var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n            if (cache.key === key) {\n                return cache.value;\n            }\n            var matrix = this.calcOwnMatrix();\n            if (this.group) {\n                matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n            }\n            cache.key = key;\n            cache.value = matrix;\n            return matrix;\n        },\n        calcOwnMatrix: function() {\n            var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n            if (cache.key === key) {\n                return cache.value;\n            }\n            var matrix = this._calcTranslateMatrix(), rotateMatrix, dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n            if (this.angle) {\n                rotateMatrix = this._calcRotateMatrix();\n                matrix = multiplyMatrices(matrix, rotateMatrix);\n            }\n            matrix = multiplyMatrices(matrix, dimensionMatrix);\n            cache.key = key;\n            cache.value = matrix;\n            return matrix;\n        },\n        _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n            var skewMatrix, scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1), scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1), scaleMatrix = [ scaleX, 0, 0, scaleY, 0, 0 ];\n            if (skewX) {\n                skewMatrix = [ 1, 0, Math.tan(degreesToRadians(skewX)), 1 ];\n                scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n            }\n            if (skewY) {\n                skewMatrix = [ 1, Math.tan(degreesToRadians(skewY)), 0, 1 ];\n                scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n            }\n            return scaleMatrix;\n        },\n        _getNonTransformedDimensions: function() {\n            var strokeWidth = this.strokeWidth, w = this.width + strokeWidth, h = this.height + strokeWidth;\n            return {\n                x: w,\n                y: h\n            };\n        },\n        _getTransformedDimensions: function(skewX, skewY) {\n            if (typeof skewX === \"undefined\") {\n                skewX = this.skewX;\n            }\n            if (typeof skewY === \"undefined\") {\n                skewY = this.skewY;\n            }\n            var dimensions = this._getNonTransformedDimensions();\n            if (skewX === 0 && skewY === 0) {\n                return {\n                    x: dimensions.x * this.scaleX,\n                    y: dimensions.y * this.scaleY\n                };\n            }\n            var dimX = dimensions.x / 2, dimY = dimensions.y / 2, points = [ {\n                x: -dimX,\n                y: -dimY\n            }, {\n                x: dimX,\n                y: -dimY\n            }, {\n                x: -dimX,\n                y: dimY\n            }, {\n                x: dimX,\n                y: dimY\n            } ], i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false), bbox;\n            for (i = 0; i < points.length; i++) {\n                points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n            }\n            bbox = fabric.util.makeBoundingBoxFromPoints(points);\n            return {\n                x: bbox.width,\n                y: bbox.height\n            };\n        },\n        _calculateCurrentDimensions: function() {\n            var vpt = this.getViewportTransform(), dim = this._getTransformedDimensions(), p = fabric.util.transformPoint(dim, vpt, true);\n            return p.scalarAdd(2 * this.padding);\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    sendToBack: function() {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n        } else {\n            this.canvas.sendToBack(this);\n        }\n        return this;\n    },\n    bringToFront: function() {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n        } else {\n            this.canvas.bringToFront(this);\n        }\n        return this;\n    },\n    sendBackwards: function(intersecting) {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n        } else {\n            this.canvas.sendBackwards(this, intersecting);\n        }\n        return this;\n    },\n    bringForward: function(intersecting) {\n        if (this.group) {\n            fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n        } else {\n            this.canvas.bringForward(this, intersecting);\n        }\n        return this;\n    },\n    moveTo: function(index) {\n        if (this.group && this.group.type !== \"activeSelection\") {\n            fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n        } else {\n            this.canvas.moveTo(this, index);\n        }\n        return this;\n    }\n});\n\n(function() {\n    function getSvgColorString(prop, value) {\n        if (!value) {\n            return prop + \": none; \";\n        } else if (value.toLive) {\n            return prop + \": url(#SVGID_\" + value.id + \"); \";\n        } else {\n            var color = new fabric.Color(value), str = prop + \": \" + color.toRgb() + \"; \", opacity = color.getAlpha();\n            if (opacity !== 1) {\n                str += prop + \"-opacity: \" + opacity.toString() + \"; \";\n            }\n            return str;\n        }\n    }\n    var toFixed = fabric.util.toFixed;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        getSvgStyles: function(skipShadow) {\n            var fillRule = this.fillRule, strokeWidth = this.strokeWidth ? this.strokeWidth : \"0\", strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(\" \") : \"none\", strokeLineCap = this.strokeLineCap ? this.strokeLineCap : \"butt\", strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : \"miter\", strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : \"4\", opacity = typeof this.opacity !== \"undefined\" ? this.opacity : \"1\", visibility = this.visible ? \"\" : \" visibility: hidden;\", filter = skipShadow ? \"\" : this.getSvgFilter(), fill = getSvgColorString(\"fill\", this.fill), stroke = getSvgColorString(\"stroke\", this.stroke);\n            return [ stroke, \"stroke-width: \", strokeWidth, \"; \", \"stroke-dasharray: \", strokeDashArray, \"; \", \"stroke-linecap: \", strokeLineCap, \"; \", \"stroke-linejoin: \", strokeLineJoin, \"; \", \"stroke-miterlimit: \", strokeMiterLimit, \"; \", fill, \"fill-rule: \", fillRule, \"; \", \"opacity: \", opacity, \";\", filter, visibility ].join(\"\");\n        },\n        getSvgSpanStyles: function(style, useWhiteSpace) {\n            var term = \"; \", strokeWidth = style.strokeWidth ? \"stroke-width: \" + style.strokeWidth + term : \"\", fontFamily = style.fontFamily ? \"font-family: \" + style.fontFamily.replace(/\"/g, \"'\") + term : \"\", fontSize = style.fontSize ? \"font-size: \" + style.fontSize + \"px\" + term : \"\", fontStyle = style.fontStyle ? \"font-style: \" + style.fontStyle + term : \"\", fontWeight = style.fontWeight ? \"font-weight: \" + style.fontWeight + term : \"\", fill = style.fill ? getSvgColorString(\"fill\", style.fill) : \"\", stroke = style.stroke ? getSvgColorString(\"stroke\", style.stroke) : \"\", textDecoration = this.getSvgTextDecoration(style);\n            if (textDecoration) {\n                textDecoration = \"text-decoration: \" + textDecoration + term;\n            }\n            return [ stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, useWhiteSpace ? \"white-space: pre; \" : \"\" ].join(\"\");\n        },\n        getSvgTextDecoration: function(style) {\n            if (\"overline\" in style || \"underline\" in style || \"linethrough\" in style) {\n                return (style.overline ? \"overline \" : \"\") + (style.underline ? \"underline \" : \"\") + (style.linethrough ? \"line-through \" : \"\");\n            }\n            return \"\";\n        },\n        getSvgFilter: function() {\n            return this.shadow ? \"filter: url(#SVGID_\" + this.shadow.id + \");\" : \"\";\n        },\n        getSvgId: function() {\n            return this.id ? 'id=\"' + this.id + '\" ' : \"\";\n        },\n        getSvgTransform: function() {\n            var angle = this.angle, skewX = this.skewX % 360, skewY = this.skewY % 360, center = this.getCenterPoint(), NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS, translatePart = \"translate(\" + toFixed(center.x, NUM_FRACTION_DIGITS) + \" \" + toFixed(center.y, NUM_FRACTION_DIGITS) + \")\", anglePart = angle !== 0 ? \" rotate(\" + toFixed(angle, NUM_FRACTION_DIGITS) + \")\" : \"\", scalePart = this.scaleX === 1 && this.scaleY === 1 ? \"\" : \" scale(\" + toFixed(this.scaleX, NUM_FRACTION_DIGITS) + \" \" + toFixed(this.scaleY, NUM_FRACTION_DIGITS) + \")\", skewXPart = skewX !== 0 ? \" skewX(\" + toFixed(skewX, NUM_FRACTION_DIGITS) + \")\" : \"\", skewYPart = skewY !== 0 ? \" skewY(\" + toFixed(skewY, NUM_FRACTION_DIGITS) + \")\" : \"\", flipXPart = this.flipX ? \" matrix(-1 0 0 1 0 0) \" : \"\", flipYPart = this.flipY ? \" matrix(1 0 0 -1 0 0)\" : \"\";\n            return [ translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart ].join(\"\");\n        },\n        getSvgTransformMatrix: function() {\n            return this.transformMatrix ? \" matrix(\" + this.transformMatrix.join(\" \") + \") \" : \"\";\n        },\n        _setSVGBg: function(textBgRects) {\n            if (this.backgroundColor) {\n                var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n                textBgRects.push(\"\\t\\t<rect \", this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n            }\n        },\n        _createBaseSVGMarkup: function() {\n            var markup = [];\n            if (this.fill && this.fill.toLive) {\n                markup.push(this.fill.toSVG(this, false));\n            }\n            if (this.stroke && this.stroke.toLive) {\n                markup.push(this.stroke.toSVG(this, false));\n            }\n            if (this.shadow) {\n                markup.push(this.shadow.toSVG(this));\n            }\n            return markup;\n        },\n        addPaintOrder: function() {\n            return this.paintFirst !== \"fill\" ? ' paint-order=\"' + this.paintFirst + '\" ' : \"\";\n        }\n    });\n})();\n\n(function() {\n    var extend = fabric.util.object.extend, originalSet = \"stateProperties\";\n    function saveProps(origin, destination, props) {\n        var tmpObj = {}, deep = true;\n        props.forEach(function(prop) {\n            tmpObj[prop] = origin[prop];\n        });\n        extend(origin[destination], tmpObj, deep);\n    }\n    function _isEqual(origValue, currentValue, firstPass) {\n        if (origValue === currentValue) {\n            return true;\n        } else if (Array.isArray(origValue)) {\n            if (origValue.length !== currentValue.length) {\n                return false;\n            }\n            for (var i = 0, len = origValue.length; i < len; i++) {\n                if (!_isEqual(origValue[i], currentValue[i])) {\n                    return false;\n                }\n            }\n            return true;\n        } else if (origValue && typeof origValue === \"object\") {\n            var keys = Object.keys(origValue), key;\n            if (!firstPass && keys.length !== Object.keys(currentValue).length) {\n                return false;\n            }\n            for (var i = 0, len = keys.length; i < len; i++) {\n                key = keys[i];\n                if (!_isEqual(origValue[key], currentValue[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    fabric.util.object.extend(fabric.Object.prototype, {\n        hasStateChanged: function(propertySet) {\n            propertySet = propertySet || originalSet;\n            var dashedPropertySet = \"_\" + propertySet;\n            if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n                return true;\n            }\n            return !_isEqual(this[dashedPropertySet], this, true);\n        },\n        saveState: function(options) {\n            var propertySet = options && options.propertySet || originalSet, destination = \"_\" + propertySet;\n            if (!this[destination]) {\n                return this.setupState(options);\n            }\n            saveProps(this, destination, this[propertySet]);\n            if (options && options.stateProperties) {\n                saveProps(this, destination, options.stateProperties);\n            }\n            return this;\n        },\n        setupState: function(options) {\n            options = options || {};\n            var propertySet = options.propertySet || originalSet;\n            options.propertySet = propertySet;\n            this[\"_\" + propertySet] = {};\n            this.saveState(options);\n            return this;\n        }\n    });\n})();\n\n(function() {\n    var degreesToRadians = fabric.util.degreesToRadians;\n    fabric.util.object.extend(fabric.Object.prototype, {\n        _controlsVisibility: null,\n        _findTargetCorner: function(pointer) {\n            if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n                return false;\n            }\n            var ex = pointer.x, ey = pointer.y, xPoints, lines;\n            this.__corner = 0;\n            for (var i in this.oCoords) {\n                if (!this.isControlVisible(i)) {\n                    continue;\n                }\n                if (i === \"mtr\" && !this.hasRotatingPoint) {\n                    continue;\n                }\n                if (this.get(\"lockUniScaling\") && (i === \"mt\" || i === \"mr\" || i === \"mb\" || i === \"ml\")) {\n                    continue;\n                }\n                lines = this._getImageLines(this.oCoords[i].corner);\n                xPoints = this._findCrossPoints({\n                    x: ex,\n                    y: ey\n                }, lines);\n                if (xPoints !== 0 && xPoints % 2 === 1) {\n                    this.__corner = i;\n                    return i;\n                }\n            }\n            return false;\n        },\n        _setCornerCoords: function() {\n            var coords = this.oCoords, newTheta = degreesToRadians(45 - this.angle), cornerHypotenuse = this.cornerSize * .707106, cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta), sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta), x, y;\n            for (var point in coords) {\n                x = coords[point].x;\n                y = coords[point].y;\n                coords[point].corner = {\n                    tl: {\n                        x: x - sinHalfOffset,\n                        y: y - cosHalfOffset\n                    },\n                    tr: {\n                        x: x + cosHalfOffset,\n                        y: y - sinHalfOffset\n                    },\n                    bl: {\n                        x: x - cosHalfOffset,\n                        y: y + sinHalfOffset\n                    },\n                    br: {\n                        x: x + sinHalfOffset,\n                        y: y + cosHalfOffset\n                    }\n                };\n            }\n        },\n        drawSelectionBackground: function(ctx) {\n            if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n                return this;\n            }\n            ctx.save();\n            var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(), vpt = this.canvas.viewportTransform;\n            ctx.translate(center.x, center.y);\n            ctx.scale(1 / vpt[0], 1 / vpt[3]);\n            ctx.rotate(degreesToRadians(this.angle));\n            ctx.fillStyle = this.selectionBackgroundColor;\n            ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n            ctx.restore();\n            return this;\n        },\n        drawBorders: function(ctx, styleOverride) {\n            styleOverride = styleOverride || {};\n            var wh = this._calculateCurrentDimensions(), strokeWidth = 1 / this.borderScaleFactor, width = wh.x + strokeWidth, height = wh.y + strokeWidth, drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== \"undefined\" ? styleOverride.hasRotatingPoint : this.hasRotatingPoint, hasControls = typeof styleOverride.hasControls !== \"undefined\" ? styleOverride.hasControls : this.hasControls, rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== \"undefined\" ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n            ctx.save();\n            ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n            this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n            ctx.strokeRect(-width / 2, -height / 2, width, height);\n            if (drawRotatingPoint && this.isControlVisible(\"mtr\") && hasControls) {\n                var rotateHeight = -height / 2;\n                ctx.beginPath();\n                ctx.moveTo(0, rotateHeight);\n                ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n                ctx.stroke();\n            }\n            ctx.restore();\n            return this;\n        },\n        drawBordersInGroup: function(ctx, options, styleOverride) {\n            styleOverride = styleOverride || {};\n            var p = this._getNonTransformedDimensions(), matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX), wh = fabric.util.transformPoint(p, matrix), strokeWidth = 1 / this.borderScaleFactor, width = wh.x + strokeWidth, height = wh.y + strokeWidth;\n            ctx.save();\n            this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n            ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n            ctx.strokeRect(-width / 2, -height / 2, width, height);\n            ctx.restore();\n            return this;\n        },\n        drawControls: function(ctx, styleOverride) {\n            styleOverride = styleOverride || {};\n            var wh = this._calculateCurrentDimensions(), width = wh.x, height = wh.y, scaleOffset = styleOverride.cornerSize || this.cornerSize, left = -(width + scaleOffset) / 2, top = -(height + scaleOffset) / 2, transparentCorners = typeof styleOverride.transparentCorners !== \"undefined\" ? styleOverride.transparentCorners : this.transparentCorners, hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== \"undefined\" ? styleOverride.hasRotatingPoint : this.hasRotatingPoint, methodName = transparentCorners ? \"stroke\" : \"fill\";\n            ctx.save();\n            ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n            if (!this.transparentCorners) {\n                ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n            }\n            this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n            this._drawControl(\"tl\", ctx, methodName, left, top, styleOverride);\n            this._drawControl(\"tr\", ctx, methodName, left + width, top, styleOverride);\n            this._drawControl(\"bl\", ctx, methodName, left, top + height, styleOverride);\n            this._drawControl(\"br\", ctx, methodName, left + width, top + height, styleOverride);\n            if (!this.get(\"lockUniScaling\")) {\n                this._drawControl(\"mt\", ctx, methodName, left + width / 2, top, styleOverride);\n                this._drawControl(\"mb\", ctx, methodName, left + width / 2, top + height, styleOverride);\n                this._drawControl(\"mr\", ctx, methodName, left + width, top + height / 2, styleOverride);\n                this._drawControl(\"ml\", ctx, methodName, left, top + height / 2, styleOverride);\n            }\n            if (hasRotatingPoint) {\n                this._drawControl(\"mtr\", ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n            }\n            ctx.restore();\n            return this;\n        },\n        _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n            styleOverride = styleOverride || {};\n            if (!this.isControlVisible(control)) {\n                return;\n            }\n            var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n            switch (styleOverride.cornerStyle || this.cornerStyle) {\n              case \"circle\":\n                ctx.beginPath();\n                ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n                ctx[methodName]();\n                if (stroke) {\n                    ctx.stroke();\n                }\n                break;\n\n              default:\n                this.transparentCorners || ctx.clearRect(left, top, size, size);\n                ctx[methodName + \"Rect\"](left, top, size, size);\n                if (stroke) {\n                    ctx.strokeRect(left, top, size, size);\n                }\n            }\n        },\n        isControlVisible: function(controlName) {\n            return this._getControlsVisibility()[controlName];\n        },\n        setControlVisible: function(controlName, visible) {\n            this._getControlsVisibility()[controlName] = visible;\n            return this;\n        },\n        setControlsVisibility: function(options) {\n            options || (options = {});\n            for (var p in options) {\n                this.setControlVisible(p, options[p]);\n            }\n            return this;\n        },\n        _getControlsVisibility: function() {\n            if (!this._controlsVisibility) {\n                this._controlsVisibility = {\n                    tl: true,\n                    tr: true,\n                    br: true,\n                    bl: true,\n                    ml: true,\n                    mt: true,\n                    mr: true,\n                    mb: true,\n                    mtr: true\n                };\n            }\n            return this._controlsVisibility;\n        },\n        onDeselect: function() {},\n        onSelect: function() {}\n    });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    FX_DURATION: 500,\n    fxCenterObjectH: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.left,\n            endValue: this.getCenter().left,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"left\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                object.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    },\n    fxCenterObjectV: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.top,\n            endValue: this.getCenter().top,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"top\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                object.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    },\n    fxRemove: function(object, callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: object.opacity,\n            endValue: 0,\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                object.set(\"opacity\", value);\n                _this.requestRenderAll();\n                onChange();\n            },\n            onComplete: function() {\n                _this.remove(object);\n                onComplete();\n            }\n        });\n        return this;\n    }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    animate: function() {\n        if (arguments[0] && typeof arguments[0] === \"object\") {\n            var propsToAnimate = [], prop, skipCallbacks;\n            for (prop in arguments[0]) {\n                propsToAnimate.push(prop);\n            }\n            for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n                prop = propsToAnimate[i];\n                skipCallbacks = i !== len - 1;\n                this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n            }\n        } else {\n            this._animate.apply(this, arguments);\n        }\n        return this;\n    },\n    _animate: function(property, to, options, skipCallbacks) {\n        var _this = this, propPair;\n        to = to.toString();\n        if (!options) {\n            options = {};\n        } else {\n            options = fabric.util.object.clone(options);\n        }\n        if (~property.indexOf(\".\")) {\n            propPair = property.split(\".\");\n        }\n        var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n        if (!(\"from\" in options)) {\n            options.from = currentValue;\n        }\n        if (~to.indexOf(\"=\")) {\n            to = currentValue + parseFloat(to.replace(\"=\", \"\"));\n        } else {\n            to = parseFloat(to);\n        }\n        fabric.util.animate({\n            startValue: options.from,\n            endValue: to,\n            byValue: options.by,\n            easing: options.easing,\n            duration: options.duration,\n            abort: options.abort && function() {\n                return options.abort.call(_this);\n            },\n            onChange: function(value, valueProgress, timeProgress) {\n                if (propPair) {\n                    _this[propPair[0]][propPair[1]] = value;\n                } else {\n                    _this.set(property, value);\n                }\n                if (skipCallbacks) {\n                    return;\n                }\n                options.onChange && options.onChange(value, valueProgress, timeProgress);\n            },\n            onComplete: function(value, valueProgress, timeProgress) {\n                if (skipCallbacks) {\n                    return;\n                }\n                _this.setCoords();\n                options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n            }\n        });\n    }\n});\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, clone = fabric.util.object.clone, coordProps = {\n        x1: 1,\n        x2: 1,\n        y1: 1,\n        y2: 1\n    }, supportsLineDash = fabric.StaticCanvas.supports(\"setLineDash\");\n    if (fabric.Line) {\n        fabric.warn(\"fabric.Line is already defined\");\n        return;\n    }\n    fabric.Line = fabric.util.createClass(fabric.Object, {\n        type: \"line\",\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"x1\", \"x2\", \"y1\", \"y2\"),\n        initialize: function(points, options) {\n            if (!points) {\n                points = [ 0, 0, 0, 0 ];\n            }\n            this.callSuper(\"initialize\", options);\n            this.set(\"x1\", points[0]);\n            this.set(\"y1\", points[1]);\n            this.set(\"x2\", points[2]);\n            this.set(\"y2\", points[3]);\n            this._setWidthHeight(options);\n        },\n        _setWidthHeight: function(options) {\n            options || (options = {});\n            this.width = Math.abs(this.x2 - this.x1);\n            this.height = Math.abs(this.y2 - this.y1);\n            this.left = \"left\" in options ? options.left : this._getLeftToOriginX();\n            this.top = \"top\" in options ? options.top : this._getTopToOriginY();\n        },\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            if (typeof coordProps[key] !== \"undefined\") {\n                this._setWidthHeight();\n            }\n            return this;\n        },\n        _getLeftToOriginX: makeEdgeToOriginGetter({\n            origin: \"originX\",\n            axis1: \"x1\",\n            axis2: \"x2\",\n            dimension: \"width\"\n        }, {\n            nearest: \"left\",\n            center: \"center\",\n            farthest: \"right\"\n        }),\n        _getTopToOriginY: makeEdgeToOriginGetter({\n            origin: \"originY\",\n            axis1: \"y1\",\n            axis2: \"y2\",\n            dimension: \"height\"\n        }, {\n            nearest: \"top\",\n            center: \"center\",\n            farthest: \"bottom\"\n        }),\n        _render: function(ctx) {\n            ctx.beginPath();\n            if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n                var p = this.calcLinePoints();\n                ctx.moveTo(p.x1, p.y1);\n                ctx.lineTo(p.x2, p.y2);\n            }\n            ctx.lineWidth = this.strokeWidth;\n            var origStrokeStyle = ctx.strokeStyle;\n            ctx.strokeStyle = this.stroke || ctx.fillStyle;\n            this.stroke && this._renderStroke(ctx);\n            ctx.strokeStyle = origStrokeStyle;\n        },\n        _renderDashedStroke: function(ctx) {\n            var p = this.calcLinePoints();\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n            ctx.closePath();\n        },\n        _findCenterFromElement: function() {\n            return {\n                x: (this.x1 + this.x2) / 2,\n                y: (this.y1 + this.y2) / 2\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), this.calcLinePoints());\n        },\n        _getNonTransformedDimensions: function() {\n            var dim = this.callSuper(\"_getNonTransformedDimensions\");\n            if (this.strokeLineCap === \"butt\") {\n                if (this.width === 0) {\n                    dim.y -= this.strokeWidth;\n                }\n                if (this.height === 0) {\n                    dim.x -= this.strokeWidth;\n                }\n            }\n            return dim;\n        },\n        calcLinePoints: function() {\n            var xMult = this.x1 <= this.x2 ? -1 : 1, yMult = this.y1 <= this.y2 ? -1 : 1, x1 = xMult * this.width * .5, y1 = yMult * this.height * .5, x2 = xMult * this.width * -.5, y2 = yMult * this.height * -.5;\n            return {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), p = this.calcLinePoints();\n            markup.push(\"<line \", this.getSvgId(), 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"/>\\n');\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x1 y1 x2 y2\".split(\" \"));\n    fabric.Line.fromElement = function(element, callback, options) {\n        options = options || {};\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES), points = [ parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0 ];\n        callback(new fabric.Line(points, extend(parsedAttributes, options)));\n    };\n    fabric.Line.fromObject = function(object, callback) {\n        function _callback(instance) {\n            delete instance.points;\n            callback && callback(instance);\n        }\n        var options = clone(object, true);\n        options.points = [ object.x1, object.y1, object.x2, object.y2 ];\n        fabric.Object._fromObject(\"Line\", options, _callback, \"points\");\n    };\n    function makeEdgeToOriginGetter(propertyNames, originValues) {\n        var origin = propertyNames.origin, axis1 = propertyNames.axis1, axis2 = propertyNames.axis2, dimension = propertyNames.dimension, nearest = originValues.nearest, center = originValues.center, farthest = originValues.farthest;\n        return function() {\n            switch (this.get(origin)) {\n              case nearest:\n                return Math.min(this.get(axis1), this.get(axis2));\n\n              case center:\n                return Math.min(this.get(axis1), this.get(axis2)) + .5 * this.get(dimension);\n\n              case farthest:\n                return Math.max(this.get(axis1), this.get(axis2));\n            }\n        };\n    }\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), pi = Math.PI;\n    if (fabric.Circle) {\n        fabric.warn(\"fabric.Circle is already defined.\");\n        return;\n    }\n    fabric.Circle = fabric.util.createClass(fabric.Object, {\n        type: \"circle\",\n        radius: 0,\n        startAngle: 0,\n        endAngle: pi * 2,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"radius\"),\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            if (key === \"radius\") {\n                this.setRadius(value);\n            }\n            return this;\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"radius\", \"startAngle\", \"endAngle\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = 0, y = 0, angle = (this.endAngle - this.startAngle) % (2 * pi);\n            if (angle === 0) {\n                markup.push(\"<circle \", this.getSvgId(), 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            } else {\n                var startX = fabric.util.cos(this.startAngle) * this.radius, startY = fabric.util.sin(this.startAngle) * this.radius, endX = fabric.util.cos(this.endAngle) * this.radius, endY = fabric.util.sin(this.endAngle) * this.radius, largeFlag = angle > pi ? \"1\" : \"0\";\n                markup.push('<path d=\"M ' + startX + \" \" + startY, \" A \" + this.radius + \" \" + this.radius, \" 0 \", +largeFlag + \" 1\", \" \" + endX + \" \" + endY, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), '\"/>\\n');\n            }\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _render: function(ctx) {\n            ctx.beginPath();\n            ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n            this._renderPaintInOrder(ctx);\n        },\n        getRadiusX: function() {\n            return this.get(\"radius\") * this.get(\"scaleX\");\n        },\n        getRadiusY: function() {\n            return this.get(\"radius\") * this.get(\"scaleY\");\n        },\n        setRadius: function(value) {\n            this.radius = value;\n            return this.set(\"width\", value * 2).set(\"height\", value * 2);\n        }\n    });\n    fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"cx cy r\".split(\" \"));\n    fabric.Circle.fromElement = function(element, callback) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n        if (!isValidRadius(parsedAttributes)) {\n            throw new Error(\"value of `r` attribute is required and can not be negative\");\n        }\n        parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n        parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n        callback(new fabric.Circle(parsedAttributes));\n    };\n    function isValidRadius(attributes) {\n        return \"radius\" in attributes && attributes.radius >= 0;\n    }\n    fabric.Circle.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Circle\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.Triangle) {\n        fabric.warn(\"fabric.Triangle is already defined\");\n        return;\n    }\n    fabric.Triangle = fabric.util.createClass(fabric.Object, {\n        type: \"triangle\",\n        width: 100,\n        height: 100,\n        _render: function(ctx) {\n            var widthBy2 = this.width / 2, heightBy2 = this.height / 2;\n            ctx.beginPath();\n            ctx.moveTo(-widthBy2, heightBy2);\n            ctx.lineTo(0, -heightBy2);\n            ctx.lineTo(widthBy2, heightBy2);\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var widthBy2 = this.width / 2, heightBy2 = this.height / 2;\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n            ctx.closePath();\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), widthBy2 = this.width / 2, heightBy2 = this.height / 2, points = [ -widthBy2 + \" \" + heightBy2, \"0 \" + -heightBy2, widthBy2 + \" \" + heightBy2 ].join(\",\");\n            markup.push(\"<polygon \", this.getSvgId(), 'points=\"', points, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), '\"', this.addPaintOrder(), \"/>\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Triangle.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Triangle\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), piBy2 = Math.PI * 2;\n    if (fabric.Ellipse) {\n        fabric.warn(\"fabric.Ellipse is already defined.\");\n        return;\n    }\n    fabric.Ellipse = fabric.util.createClass(fabric.Object, {\n        type: \"ellipse\",\n        rx: 0,\n        ry: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"rx\", \"ry\"),\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.set(\"rx\", options && options.rx || 0);\n            this.set(\"ry\", options && options.ry || 0);\n        },\n        _set: function(key, value) {\n            this.callSuper(\"_set\", key, value);\n            switch (key) {\n              case \"rx\":\n                this.rx = value;\n                this.set(\"width\", value * 2);\n                break;\n\n              case \"ry\":\n                this.ry = value;\n                this.set(\"height\", value * 2);\n                break;\n            }\n            return this;\n        },\n        getRx: function() {\n            return this.get(\"rx\") * this.get(\"scaleX\");\n        },\n        getRy: function() {\n            return this.get(\"ry\") * this.get(\"scaleY\");\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"rx\", \"ry\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup();\n            markup.push(\"<ellipse \", this.getSvgId(), 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _render: function(ctx) {\n            ctx.beginPath();\n            ctx.save();\n            ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n            ctx.arc(0, 0, this.rx, 0, piBy2, false);\n            ctx.restore();\n            this._renderPaintInOrder(ctx);\n        }\n    });\n    fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"cx cy rx ry\".split(\" \"));\n    fabric.Ellipse.fromElement = function(element, callback) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n        parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n        parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n        callback(new fabric.Ellipse(parsedAttributes));\n    };\n    fabric.Ellipse.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Ellipse\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend;\n    if (fabric.Rect) {\n        fabric.warn(\"fabric.Rect is already defined\");\n        return;\n    }\n    fabric.Rect = fabric.util.createClass(fabric.Object, {\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"rx\", \"ry\"),\n        type: \"rect\",\n        rx: 0,\n        ry: 0,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"rx\", \"ry\"),\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this._initRxRy();\n        },\n        _initRxRy: function() {\n            if (this.rx && !this.ry) {\n                this.ry = this.rx;\n            } else if (this.ry && !this.rx) {\n                this.rx = this.ry;\n            }\n        },\n        _render: function(ctx) {\n            if (this.width === 1 && this.height === 1) {\n                ctx.fillRect(-.5, -.5, 1, 1);\n                return;\n            }\n            var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0, ry = this.ry ? Math.min(this.ry, this.height / 2) : 0, w = this.width, h = this.height, x = -this.width / 2, y = -this.height / 2, isRounded = rx !== 0 || ry !== 0, k = 1 - .5522847498;\n            ctx.beginPath();\n            ctx.moveTo(x + rx, y);\n            ctx.lineTo(x + w - rx, y);\n            isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n            ctx.lineTo(x + w, y + h - ry);\n            isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n            ctx.lineTo(x + rx, y + h);\n            isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n            ctx.lineTo(x, y + ry);\n            isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var x = -this.width / 2, y = -this.height / 2, w = this.width, h = this.height;\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n            ctx.closePath();\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"rx\", \"ry\" ].concat(propertiesToInclude));\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n            markup.push(\"<rect \", this.getSvgId(), 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.get(\"rx\"), '\" ry=\"', this.get(\"ry\"), '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y rx ry width height\".split(\" \"));\n    fabric.Rect.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options = options || {};\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n        parsedAttributes.left = parsedAttributes.left || 0;\n        parsedAttributes.top = parsedAttributes.top || 0;\n        var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n        rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n        callback(rect);\n    };\n    fabric.Rect.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Rect\", object, callback);\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, min = fabric.util.array.min, max = fabric.util.array.max, toFixed = fabric.util.toFixed;\n    if (fabric.Polyline) {\n        fabric.warn(\"fabric.Polyline is already defined\");\n        return;\n    }\n    fabric.Polyline = fabric.util.createClass(fabric.Object, {\n        type: \"polyline\",\n        points: null,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"points\"),\n        initialize: function(points, options) {\n            options = options || {};\n            this.points = points || [];\n            this.callSuper(\"initialize\", options);\n            var calcDim = this._calcDimensions();\n            if (typeof options.left === \"undefined\") {\n                this.left = calcDim.left;\n            }\n            if (typeof options.top === \"undefined\") {\n                this.top = calcDim.top;\n            }\n            this.width = calcDim.width;\n            this.height = calcDim.height;\n            this.pathOffset = {\n                x: calcDim.left + this.width / 2,\n                y: calcDim.top + this.height / 2\n            };\n        },\n        _calcDimensions: function() {\n            var points = this.points, minX = min(points, \"x\") || 0, minY = min(points, \"y\") || 0, maxX = max(points, \"x\") || 0, maxY = max(points, \"y\") || 0, width = maxX - minX, height = maxY - minY;\n            return {\n                left: minX,\n                top: minY,\n                width: width,\n                height: height\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                points: this.points.concat()\n            });\n        },\n        toSVG: function(reviver) {\n            var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y, markup = this._createBaseSVGMarkup(), NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            for (var i = 0, len = this.points.length; i < len; i++) {\n                points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), \",\", toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), \" \");\n            }\n            markup.push(\"<\", this.type, \" \", this.getSvgId(), 'points=\"', points.join(\"\"), '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), \" \", this.getSvgTransformMatrix(), '\"', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        commonRender: function(ctx) {\n            var point, len = this.points.length, x = this.pathOffset.x, y = this.pathOffset.y;\n            if (!len || isNaN(this.points[len - 1].y)) {\n                return false;\n            }\n            ctx.beginPath();\n            ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n            for (var i = 0; i < len; i++) {\n                point = this.points[i];\n                ctx.lineTo(point.x - x, point.y - y);\n            }\n            return true;\n        },\n        _render: function(ctx) {\n            if (!this.commonRender(ctx)) {\n                return;\n            }\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            var p1, p2;\n            ctx.beginPath();\n            for (var i = 0, len = this.points.length; i < len; i++) {\n                p1 = this.points[i];\n                p2 = this.points[i + 1] || p1;\n                fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n            }\n        },\n        complexity: function() {\n            return this.get(\"points\").length;\n        }\n    });\n    fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n    fabric.Polyline.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options || (options = {});\n        var points = fabric.parsePointsAttribute(element.getAttribute(\"points\")), parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n        callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n    };\n    fabric.Polyline.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Polyline\", object, callback, \"points\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend;\n    if (fabric.Polygon) {\n        fabric.warn(\"fabric.Polygon is already defined\");\n        return;\n    }\n    fabric.Polygon = fabric.util.createClass(fabric.Polyline, {\n        type: \"polygon\",\n        _render: function(ctx) {\n            if (!this.commonRender(ctx)) {\n                return;\n            }\n            ctx.closePath();\n            this._renderPaintInOrder(ctx);\n        },\n        _renderDashedStroke: function(ctx) {\n            this.callSuper(\"_renderDashedStroke\", ctx);\n            ctx.closePath();\n        }\n    });\n    fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n    fabric.Polygon.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        options || (options = {});\n        var points = fabric.parsePointsAttribute(element.getAttribute(\"points\")), parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n        callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n    };\n    fabric.Polygon.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Polygon\", object, callback, \"points\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), min = fabric.util.array.min, max = fabric.util.array.max, extend = fabric.util.object.extend, _toString = Object.prototype.toString, drawArc = fabric.util.drawArc, commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n    }, repeatedCommands = {\n        m: \"l\",\n        M: \"L\"\n    };\n    if (fabric.Path) {\n        fabric.warn(\"fabric.Path is already defined\");\n        return;\n    }\n    fabric.Path = fabric.util.createClass(fabric.Object, {\n        type: \"path\",\n        path: null,\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"path\", \"fillRule\"),\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"path\"),\n        initialize: function(path, options) {\n            options = options || {};\n            this.callSuper(\"initialize\", options);\n            if (!path) {\n                path = [];\n            }\n            var fromArray = _toString.call(path) === \"[object Array]\";\n            this.path = fromArray ? path : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n            if (!this.path) {\n                return;\n            }\n            if (!fromArray) {\n                this.path = this._parsePath();\n            }\n            this._setPositionDimensions(options);\n        },\n        _setPositionDimensions: function(options) {\n            var calcDim = this._parseDimensions();\n            this.width = calcDim.width;\n            this.height = calcDim.height;\n            if (typeof options.left === \"undefined\") {\n                this.left = calcDim.left;\n            }\n            if (typeof options.top === \"undefined\") {\n                this.top = calcDim.top;\n            }\n            this.pathOffset = this.pathOffset || {\n                x: calcDim.left + this.width / 2,\n                y: calcDim.top + this.height / 2\n            };\n        },\n        _renderPathCommands: function(ctx) {\n            var current, previous = null, subpathStartX = 0, subpathStartY = 0, x = 0, y = 0, controlX = 0, controlY = 0, tempX, tempY, l = -this.pathOffset.x, t = -this.pathOffset.y;\n            ctx.beginPath();\n            for (var i = 0, len = this.path.length; i < len; ++i) {\n                current = this.path[i];\n                switch (current[0]) {\n                  case \"l\":\n                    x += current[1];\n                    y += current[2];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"L\":\n                    x = current[1];\n                    y = current[2];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"h\":\n                    x += current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"H\":\n                    x = current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"v\":\n                    y += current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"V\":\n                    y = current[1];\n                    ctx.lineTo(x + l, y + t);\n                    break;\n\n                  case \"m\":\n                    x += current[1];\n                    y += current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    ctx.moveTo(x + l, y + t);\n                    break;\n\n                  case \"M\":\n                    x = current[1];\n                    y = current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    ctx.moveTo(x + l, y + t);\n                    break;\n\n                  case \"c\":\n                    tempX = x + current[5];\n                    tempY = y + current[6];\n                    controlX = x + current[3];\n                    controlY = y + current[4];\n                    ctx.bezierCurveTo(x + current[1] + l, y + current[2] + t, controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"C\":\n                    x = current[5];\n                    y = current[6];\n                    controlX = current[3];\n                    controlY = current[4];\n                    ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n                    break;\n\n                  case \"s\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t);\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"S\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"q\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"Q\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"t\":\n                    tempX = x + current[1];\n                    tempY = y + current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"T\":\n                    tempX = current[1];\n                    tempY = current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"a\":\n                    drawArc(ctx, x + l, y + t, [ current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t ]);\n                    x += current[6];\n                    y += current[7];\n                    break;\n\n                  case \"A\":\n                    drawArc(ctx, x + l, y + t, [ current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t ]);\n                    x = current[6];\n                    y = current[7];\n                    break;\n\n                  case \"z\":\n                  case \"Z\":\n                    x = subpathStartX;\n                    y = subpathStartY;\n                    ctx.closePath();\n                    break;\n                }\n                previous = current;\n            }\n        },\n        _render: function(ctx) {\n            this._renderPathCommands(ctx);\n            this._renderPaintInOrder(ctx);\n        },\n        toString: function() {\n            return \"#<fabric.Path (\" + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + \" }>\";\n        },\n        toObject: function(propertiesToInclude) {\n            var o = extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                path: this.path.map(function(item) {\n                    return item.slice();\n                }),\n                top: this.top,\n                left: this.left\n            });\n            return o;\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            var o = this.toObject([ \"sourcePath\" ].concat(propertiesToInclude));\n            if (o.sourcePath) {\n                delete o.path;\n            }\n            return o;\n        },\n        toSVG: function(reviver) {\n            var chunks = [], markup = this._createBaseSVGMarkup(), addTransform = \"\";\n            for (var i = 0, len = this.path.length; i < len; i++) {\n                chunks.push(this.path[i].join(\" \"));\n            }\n            var path = chunks.join(\" \");\n            addTransform = \" translate(\" + -this.pathOffset.x + \", \" + -this.pathOffset.y + \") \";\n            markup.push(\"<path \", this.getSvgId(), 'd=\"', path, '\" style=\"', this.getSvgStyles(), '\" transform=\"', this.getSvgTransform(), addTransform, this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ', this.addPaintOrder(), \"/>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        complexity: function() {\n            return this.path.length;\n        },\n        _parsePath: function() {\n            var result = [], coords = [], currentPath, parsed, re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi, match, coordsStr;\n            for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n                currentPath = this.path[i];\n                coordsStr = currentPath.slice(1).trim();\n                coords.length = 0;\n                while (match = re.exec(coordsStr)) {\n                    coords.push(match[0]);\n                }\n                coordsParsed = [ currentPath.charAt(0) ];\n                for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                    parsed = parseFloat(coords[j]);\n                    if (!isNaN(parsed)) {\n                        coordsParsed.push(parsed);\n                    }\n                }\n                var command = coordsParsed[0], commandLength = commandLengths[command.toLowerCase()], repeatedCommand = repeatedCommands[command] || command;\n                if (coordsParsed.length - 1 > commandLength) {\n                    for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n                        result.push([ command ].concat(coordsParsed.slice(k, k + commandLength)));\n                        command = repeatedCommand;\n                    }\n                } else {\n                    result.push(coordsParsed);\n                }\n            }\n            return result;\n        },\n        _parseDimensions: function() {\n            var aX = [], aY = [], current, previous = null, subpathStartX = 0, subpathStartY = 0, x = 0, y = 0, controlX = 0, controlY = 0, tempX, tempY, bounds;\n            for (var i = 0, len = this.path.length; i < len; ++i) {\n                current = this.path[i];\n                switch (current[0]) {\n                  case \"l\":\n                    x += current[1];\n                    y += current[2];\n                    bounds = [];\n                    break;\n\n                  case \"L\":\n                    x = current[1];\n                    y = current[2];\n                    bounds = [];\n                    break;\n\n                  case \"h\":\n                    x += current[1];\n                    bounds = [];\n                    break;\n\n                  case \"H\":\n                    x = current[1];\n                    bounds = [];\n                    break;\n\n                  case \"v\":\n                    y += current[1];\n                    bounds = [];\n                    break;\n\n                  case \"V\":\n                    y = current[1];\n                    bounds = [];\n                    break;\n\n                  case \"m\":\n                    x += current[1];\n                    y += current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    bounds = [];\n                    break;\n\n                  case \"M\":\n                    x = current[1];\n                    y = current[2];\n                    subpathStartX = x;\n                    subpathStartY = y;\n                    bounds = [];\n                    break;\n\n                  case \"c\":\n                    tempX = x + current[5];\n                    tempY = y + current[6];\n                    controlX = x + current[3];\n                    controlY = y + current[4];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], y + current[2], controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"C\":\n                    controlX = current[3];\n                    controlY = current[4];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n                    x = current[5];\n                    y = current[6];\n                    break;\n\n                  case \"s\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY);\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"S\":\n                    tempX = current[3];\n                    tempY = current[4];\n                    if (previous[0].match(/[CcSs]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    controlX = current[1];\n                    controlY = current[2];\n                    break;\n\n                  case \"q\":\n                    tempX = x + current[3];\n                    tempY = y + current[4];\n                    controlX = x + current[1];\n                    controlY = y + current[2];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"Q\":\n                    controlX = current[1];\n                    controlY = current[2];\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n                    x = current[3];\n                    y = current[4];\n                    break;\n\n                  case \"t\":\n                    tempX = x + current[1];\n                    tempY = y + current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"T\":\n                    tempX = current[1];\n                    tempY = current[2];\n                    if (previous[0].match(/[QqTt]/) === null) {\n                        controlX = x;\n                        controlY = y;\n                    } else {\n                        controlX = 2 * x - controlX;\n                        controlY = 2 * y - controlY;\n                    }\n                    bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n                    x = tempX;\n                    y = tempY;\n                    break;\n\n                  case \"a\":\n                    bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n                    x += current[6];\n                    y += current[7];\n                    break;\n\n                  case \"A\":\n                    bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n                    x = current[6];\n                    y = current[7];\n                    break;\n\n                  case \"z\":\n                  case \"Z\":\n                    x = subpathStartX;\n                    y = subpathStartY;\n                    break;\n                }\n                previous = current;\n                bounds.forEach(function(point) {\n                    aX.push(point.x);\n                    aY.push(point.y);\n                });\n                aX.push(x);\n                aY.push(y);\n            }\n            var minX = min(aX) || 0, minY = min(aY) || 0, maxX = max(aX) || 0, maxY = max(aY) || 0, deltaX = maxX - minX, deltaY = maxY - minY, o = {\n                left: minX,\n                top: minY,\n                width: deltaX,\n                height: deltaY\n            };\n            return o;\n        }\n    });\n    fabric.Path.fromObject = function(object, callback) {\n        if (typeof object.sourcePath === \"string\") {\n            var pathUrl = object.sourcePath;\n            fabric.loadSVGFromURL(pathUrl, function(elements) {\n                var path = elements[0];\n                path.setOptions(object);\n                callback && callback(path);\n            });\n        } else {\n            fabric.Object._fromObject(\"Path\", object, callback, \"path\");\n        }\n    };\n    fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat([ \"d\" ]);\n    fabric.Path.fromElement = function(element, callback, options) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n        callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, min = fabric.util.array.min, max = fabric.util.array.max;\n    if (fabric.Group) {\n        return;\n    }\n    fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, {\n        type: \"group\",\n        strokeWidth: 0,\n        subTargetCheck: false,\n        cacheProperties: [],\n        useSetOnGroup: false,\n        initialize: function(objects, options, isAlreadyGrouped) {\n            options = options || {};\n            this._objects = [];\n            isAlreadyGrouped && this.callSuper(\"initialize\", options);\n            this._objects = objects || [];\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].group = this;\n            }\n            if (options.originX) {\n                this.originX = options.originX;\n            }\n            if (options.originY) {\n                this.originY = options.originY;\n            }\n            if (!isAlreadyGrouped) {\n                var center = options && options.centerPoint;\n                center || this._calcBounds();\n                this._updateObjectsCoords(center);\n                delete options.centerPoint;\n                this.callSuper(\"initialize\", options);\n            } else {\n                this._updateObjectsACoords();\n            }\n            this.setCoords();\n        },\n        _updateObjectsACoords: function() {\n            var ignoreZoom = true, skipAbsolute = true;\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n            }\n        },\n        _updateObjectsCoords: function(center) {\n            var center = center || this.getCenterPoint();\n            for (var i = this._objects.length; i--; ) {\n                this._updateObjectCoords(this._objects[i], center);\n            }\n        },\n        _updateObjectCoords: function(object, center) {\n            var objectLeft = object.left, objectTop = object.top, ignoreZoom = true, skipAbsolute = true;\n            object.set({\n                left: objectLeft - center.x,\n                top: objectTop - center.y\n            });\n            object.group = this;\n            object.setCoords(ignoreZoom, skipAbsolute);\n        },\n        toString: function() {\n            return \"#<fabric.Group: (\" + this.complexity() + \")>\";\n        },\n        addWithUpdate: function(object) {\n            this._restoreObjectsState();\n            fabric.util.resetObjectTransform(this);\n            if (object) {\n                this._objects.push(object);\n                object.group = this;\n                object._set(\"canvas\", this.canvas);\n            }\n            this._calcBounds();\n            this._updateObjectsCoords();\n            this.setCoords();\n            this.dirty = true;\n            return this;\n        },\n        removeWithUpdate: function(object) {\n            this._restoreObjectsState();\n            fabric.util.resetObjectTransform(this);\n            this.remove(object);\n            this._calcBounds();\n            this._updateObjectsCoords();\n            this.setCoords();\n            this.dirty = true;\n            return this;\n        },\n        _onObjectAdded: function(object) {\n            this.dirty = true;\n            object.group = this;\n            object._set(\"canvas\", this.canvas);\n        },\n        _onObjectRemoved: function(object) {\n            this.dirty = true;\n            delete object.group;\n        },\n        _set: function(key, value) {\n            var i = this._objects.length;\n            if (this.useSetOnGroup) {\n                while (i--) {\n                    this._objects[i].setOnGroup(key, value);\n                }\n            }\n            if (key === \"canvas\") {\n                i = this._objects.length;\n                while (i--) {\n                    this._objects[i]._set(key, value);\n                }\n            }\n            this.callSuper(\"_set\", key, value);\n        },\n        toObject: function(propertiesToInclude) {\n            var objsToObject = this.getObjects().map(function(obj) {\n                var originalDefaults = obj.includeDefaultValues;\n                obj.includeDefaultValues = obj.group.includeDefaultValues;\n                var _obj = obj.toObject(propertiesToInclude);\n                obj.includeDefaultValues = originalDefaults;\n                return _obj;\n            });\n            return extend(this.callSuper(\"toObject\", propertiesToInclude), {\n                objects: objsToObject\n            });\n        },\n        toDatalessObject: function(propertiesToInclude) {\n            var objsToObject, sourcePath = this.sourcePath;\n            if (sourcePath) {\n                objsToObject = sourcePath;\n            } else {\n                objsToObject = this.getObjects().map(function(obj) {\n                    var originalDefaults = obj.includeDefaultValues;\n                    obj.includeDefaultValues = obj.group.includeDefaultValues;\n                    var _obj = obj.toDatalessObject(propertiesToInclude);\n                    obj.includeDefaultValues = originalDefaults;\n                    return _obj;\n                });\n            }\n            return extend(this.callSuper(\"toDatalessObject\", propertiesToInclude), {\n                objects: objsToObject\n            });\n        },\n        render: function(ctx) {\n            this._transformDone = true;\n            this.callSuper(\"render\", ctx);\n            this._transformDone = false;\n        },\n        shouldCache: function() {\n            var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n            this.ownCaching = ownCache;\n            if (ownCache) {\n                for (var i = 0, len = this._objects.length; i < len; i++) {\n                    if (this._objects[i].willDrawShadow()) {\n                        this.ownCaching = false;\n                        return false;\n                    }\n                }\n            }\n            return ownCache;\n        },\n        willDrawShadow: function() {\n            if (this.shadow) {\n                return this.callSuper(\"willDrawShadow\");\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].willDrawShadow()) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnACache: function() {\n            return this.ownCaching || this.group && this.group.isOnACache();\n        },\n        drawObject: function(ctx) {\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                this._objects[i].render(ctx);\n            }\n        },\n        isCacheDirty: function() {\n            if (this.callSuper(\"isCacheDirty\")) {\n                return true;\n            }\n            if (!this.statefullCache) {\n                return false;\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].isCacheDirty(true)) {\n                    if (this._cacheCanvas) {\n                        var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n                        this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        },\n        _restoreObjectsState: function() {\n            this._objects.forEach(this._restoreObjectState, this);\n            return this;\n        },\n        realizeTransform: function(object) {\n            var matrix = object.calcTransformMatrix(), options = fabric.util.qrDecompose(matrix), center = new fabric.Point(options.translateX, options.translateY);\n            object.flipX = false;\n            object.flipY = false;\n            object.set(\"scaleX\", options.scaleX);\n            object.set(\"scaleY\", options.scaleY);\n            object.skewX = options.skewX;\n            object.skewY = options.skewY;\n            object.angle = options.angle;\n            object.setPositionByOrigin(center, \"center\", \"center\");\n            return object;\n        },\n        _restoreObjectState: function(object) {\n            this.realizeTransform(object);\n            object.setCoords();\n            delete object.group;\n            return this;\n        },\n        destroy: function() {\n            this._objects.forEach(function(object) {\n                object.set(\"dirty\", true);\n            });\n            return this._restoreObjectsState();\n        },\n        toActiveSelection: function() {\n            if (!this.canvas) {\n                return;\n            }\n            var objects = this._objects, canvas = this.canvas;\n            this._objects = [];\n            var options = this.toObject();\n            delete options.objects;\n            var activeSelection = new fabric.ActiveSelection([]);\n            activeSelection.set(options);\n            activeSelection.type = \"activeSelection\";\n            canvas.remove(this);\n            objects.forEach(function(object) {\n                object.group = activeSelection;\n                object.dirty = true;\n                canvas.add(object);\n            });\n            activeSelection.canvas = canvas;\n            activeSelection._objects = objects;\n            canvas._activeObject = activeSelection;\n            activeSelection.setCoords();\n            return activeSelection;\n        },\n        ungroupOnCanvas: function() {\n            return this._restoreObjectsState();\n        },\n        setObjectsCoords: function() {\n            var ignoreZoom = true, skipAbsolute = true;\n            this.forEachObject(function(object) {\n                object.setCoords(ignoreZoom, skipAbsolute);\n            });\n            return this;\n        },\n        _calcBounds: function(onlyWidthHeight) {\n            var aX = [], aY = [], o, prop, props = [ \"tr\", \"br\", \"bl\", \"tl\" ], i = 0, iLen = this._objects.length, j, jLen = props.length, ignoreZoom = true;\n            for (;i < iLen; ++i) {\n                o = this._objects[i];\n                o.setCoords(ignoreZoom);\n                for (j = 0; j < jLen; j++) {\n                    prop = props[j];\n                    aX.push(o.oCoords[prop].x);\n                    aY.push(o.oCoords[prop].y);\n                }\n            }\n            this.set(this._getBounds(aX, aY, onlyWidthHeight));\n        },\n        _getBounds: function(aX, aY, onlyWidthHeight) {\n            var minXY = new fabric.Point(min(aX), min(aY)), maxXY = new fabric.Point(max(aX), max(aY)), obj = {\n                width: maxXY.x - minXY.x || 0,\n                height: maxXY.y - minXY.y || 0\n            };\n            if (!onlyWidthHeight) {\n                obj.left = minXY.x || 0;\n                obj.top = minXY.y || 0;\n                if (this.originX === \"center\") {\n                    obj.left += obj.width / 2;\n                }\n                if (this.originX === \"right\") {\n                    obj.left += obj.width;\n                }\n                if (this.originY === \"center\") {\n                    obj.top += obj.height / 2;\n                }\n                if (this.originY === \"bottom\") {\n                    obj.top += obj.height;\n                }\n            }\n            return obj;\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup();\n            markup.push(\"<g \", this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\" style=\"', this.getSvgFilter(), '\">\\n');\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                markup.push(\"\\t\", this._objects[i].toSVG(reviver));\n            }\n            markup.push(\"</g>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        }\n    });\n    fabric.Group.fromObject = function(object, callback) {\n        fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n            var options = fabric.util.object.clone(object, true);\n            delete options.objects;\n            callback && callback(new fabric.Group(enlivenedObjects, options, true));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    if (fabric.ActiveSelection) {\n        return;\n    }\n    fabric.ActiveSelection = fabric.util.createClass(fabric.Group, {\n        type: \"activeSelection\",\n        initialize: function(objects, options) {\n            options = options || {};\n            this._objects = objects || [];\n            for (var i = this._objects.length; i--; ) {\n                this._objects[i].group = this;\n            }\n            if (options.originX) {\n                this.originX = options.originX;\n            }\n            if (options.originY) {\n                this.originY = options.originY;\n            }\n            this._calcBounds();\n            this._updateObjectsCoords();\n            fabric.Object.prototype.initialize.call(this, options);\n            this.setCoords();\n        },\n        toGroup: function() {\n            var objects = this._objects;\n            this._objects = [];\n            var options = this.toObject();\n            var newGroup = new fabric.Group([]);\n            delete options.objects;\n            newGroup.set(options);\n            newGroup.type = \"group\";\n            objects.forEach(function(object) {\n                object.group = newGroup;\n                object.canvas.remove(object);\n            });\n            newGroup._objects = objects;\n            if (!this.canvas) {\n                return newGroup;\n            }\n            var canvas = this.canvas;\n            canvas.add(newGroup);\n            canvas._activeObject = newGroup;\n            newGroup.setCoords();\n            return newGroup;\n        },\n        onDeselect: function() {\n            this.destroy();\n            return false;\n        },\n        toString: function() {\n            return \"#<fabric.ActiveSelection: (\" + this.complexity() + \")>\";\n        },\n        _set: function(key, value) {\n            var i = this._objects.length;\n            if (key === \"canvas\") {\n                while (i--) {\n                    this._objects[i].set(key, value);\n                }\n            }\n            if (this.useSetOnGroup) {\n                while (i--) {\n                    this._objects[i].setOnGroup(key, value);\n                }\n            }\n            fabric.Object.prototype._set.call(this, key, value);\n        },\n        shouldCache: function() {\n            return false;\n        },\n        willDrawShadow: function() {\n            if (this.shadow) {\n                return this.callSuper(\"willDrawShadow\");\n            }\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                if (this._objects[i].willDrawShadow()) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        isOnACache: function() {\n            return false;\n        },\n        _renderControls: function(ctx, styleOverride, childrenOverride) {\n            ctx.save();\n            ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n            this.callSuper(\"_renderControls\", ctx, styleOverride);\n            childrenOverride = childrenOverride || {};\n            if (typeof childrenOverride.hasControls === \"undefined\") {\n                childrenOverride.hasControls = false;\n            }\n            if (typeof childrenOverride.hasRotatingPoint === \"undefined\") {\n                childrenOverride.hasRotatingPoint = false;\n            }\n            childrenOverride.forActiveSelection = true;\n            for (var i = 0, len = this._objects.length; i < len; i++) {\n                this._objects[i]._renderControls(ctx, childrenOverride);\n            }\n            ctx.restore();\n        }\n    });\n    fabric.ActiveSelection.fromObject = function(object, callback) {\n        fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n            delete object.objects;\n            callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var extend = fabric.util.object.extend;\n    if (!global.fabric) {\n        global.fabric = {};\n    }\n    if (global.fabric.Image) {\n        fabric.warn(\"fabric.Image is already defined.\");\n        return;\n    }\n    fabric.Image = fabric.util.createClass(fabric.Object, {\n        type: \"image\",\n        crossOrigin: \"\",\n        strokeWidth: 0,\n        _lastScaleX: 1,\n        _lastScaleY: 1,\n        _filterScalingX: 1,\n        _filterScalingY: 1,\n        minimumScaleTrigger: .5,\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"cropX\", \"cropY\"),\n        objectCaching: false,\n        cacheKey: \"\",\n        cropX: 0,\n        cropY: 0,\n        initialize: function(element, options) {\n            options || (options = {});\n            this.filters = [];\n            this.cacheKey = \"texture\" + fabric.Object.__uid++;\n            this.callSuper(\"initialize\", options);\n            this._initElement(element, options);\n        },\n        getElement: function() {\n            return this._element;\n        },\n        setElement: function(element, options) {\n            var backend = fabric.filterBackend;\n            if (backend && backend.evictCachesForKey) {\n                backend.evictCachesForKey(this.cacheKey);\n                backend.evictCachesForKey(this.cacheKey + \"_filtered\");\n            }\n            this._element = element;\n            this._originalElement = element;\n            this._initConfig(options);\n            if (this.resizeFilter) {\n                this.applyResizeFilters();\n            }\n            if (this.filters.length !== 0) {\n                this.applyFilters();\n            }\n            return this;\n        },\n        dispose: function() {\n            var backend = fabric.filterBackend;\n            if (backend && backend.evictCachesForKey) {\n                backend.evictCachesForKey(this.cacheKey);\n                backend.evictCachesForKey(this.cacheKey + \"_filtered\");\n            }\n            this._originalElement = undefined;\n            this._element = undefined;\n            this._filteredEl = undefined;\n        },\n        setCrossOrigin: function(value) {\n            this.crossOrigin = value;\n            this._element.crossOrigin = value;\n            return this;\n        },\n        getOriginalSize: function() {\n            var element = this.getElement();\n            return {\n                width: element.width,\n                height: element.height\n            };\n        },\n        _stroke: function(ctx) {\n            if (!this.stroke || this.strokeWidth === 0) {\n                return;\n            }\n            var w = this.width / 2, h = this.height / 2;\n            ctx.beginPath();\n            ctx.moveTo(-w, -h);\n            ctx.lineTo(w, -h);\n            ctx.lineTo(w, h);\n            ctx.lineTo(-w, h);\n            ctx.lineTo(-w, -h);\n            ctx.closePath();\n        },\n        _renderDashedStroke: function(ctx) {\n            var x = -this.width / 2, y = -this.height / 2, w = this.width, h = this.height;\n            ctx.save();\n            this._setStrokeStyles(ctx, this);\n            ctx.beginPath();\n            fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n            fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n            ctx.closePath();\n            ctx.restore();\n        },\n        toObject: function(propertiesToInclude) {\n            var filters = [];\n            this.filters.forEach(function(filterObj) {\n                if (filterObj) {\n                    filters.push(filterObj.toObject());\n                }\n            });\n            var object = extend(this.callSuper(\"toObject\", [ \"crossOrigin\", \"cropX\", \"cropY\" ].concat(propertiesToInclude)), {\n                src: this.getSrc(),\n                filters: filters\n            });\n            if (this.resizeFilter) {\n                object.resizeFilter = this.resizeFilter.toObject();\n            }\n            return object;\n        },\n        hasCrop: function() {\n            return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n        },\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2, clipPath = \"\";\n            if (this.hasCrop()) {\n                var clipPathId = fabric.Object.__uid++;\n                markup.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', \"</clipPath>\\n\");\n                clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n            }\n            markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n            var imageMarkup = [ \"\\t<image \", this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, '\" style=\"', this.getSvgStyles(), '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, \"></image>\\n\" ];\n            if (this.paintFirst === \"fill\") {\n                Array.prototype.push.apply(markup, imageMarkup);\n            }\n            if (this.stroke || this.strokeDashArray) {\n                var origFill = this.fill;\n                this.fill = null;\n                markup.push(\"\\t<rect \", 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n');\n                this.fill = origFill;\n            }\n            if (this.paintFirst !== \"fill\") {\n                Array.prototype.push.apply(markup, imageMarkup);\n            }\n            markup.push(\"</g>\\n\");\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        getSrc: function(filtered) {\n            var element = filtered ? this._element : this._originalElement;\n            if (element) {\n                if (element.toDataURL) {\n                    return element.toDataURL();\n                }\n                return element.src;\n            } else {\n                return this.src || \"\";\n            }\n        },\n        setSrc: function(src, callback, options) {\n            fabric.util.loadImage(src, function(img) {\n                this.setElement(img, options);\n                callback(this);\n            }, this, options && options.crossOrigin);\n            return this;\n        },\n        toString: function() {\n            return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n        },\n        applyResizeFilters: function() {\n            var filter = this.resizeFilter, retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1, minimumScale = this.minimumScaleTrigger, scaleX = this.scaleX * retinaScaling, scaleY = this.scaleY * retinaScaling, elementToFilter = this._filteredEl || this._originalElement;\n            if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n                this._element = elementToFilter;\n                this._filterScalingX = 1;\n                this._filterScalingY = 1;\n                return;\n            }\n            if (!fabric.filterBackend) {\n                fabric.filterBackend = fabric.initFilterBackend();\n            }\n            var canvasEl = fabric.util.createCanvasElement(), cacheKey = this._filteredEl ? this.cacheKey : this.cacheKey + \"_filtered\", sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n            canvasEl.width = sourceWidth;\n            canvasEl.height = sourceHeight;\n            this._element = canvasEl;\n            filter.scaleX = scaleX;\n            filter.scaleY = scaleY;\n            fabric.filterBackend.applyFilters([ filter ], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n            this._filterScalingX = canvasEl.width / this._originalElement.width;\n            this._filterScalingY = canvasEl.height / this._originalElement.height;\n        },\n        applyFilters: function(filters) {\n            filters = filters || this.filters || [];\n            filters = filters.filter(function(filter) {\n                return filter;\n            });\n            if (filters.length === 0) {\n                this._element = this._originalElement;\n                this._filteredEl = null;\n                this._filterScalingX = 1;\n                this._filterScalingY = 1;\n                return this;\n            }\n            var imgElement = this._originalElement, sourceWidth = imgElement.naturalWidth || imgElement.width, sourceHeight = imgElement.naturalHeight || imgElement.height;\n            if (this._element === this._originalElement) {\n                var canvasEl = fabric.util.createCanvasElement();\n                canvasEl.width = sourceWidth;\n                canvasEl.height = sourceHeight;\n                this._element = canvasEl;\n                this._filteredEl = canvasEl;\n            } else {\n                this._element.getContext(\"2d\").clearRect(0, 0, sourceWidth, sourceHeight);\n            }\n            if (!fabric.filterBackend) {\n                fabric.filterBackend = fabric.initFilterBackend();\n            }\n            fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n            if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n                this._filterScalingX = this._element.width / this._originalElement.width;\n                this._filterScalingY = this._element.height / this._originalElement.height;\n            }\n            return this;\n        },\n        _render: function(ctx) {\n            if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n                this._lastScaleX = this.scaleX;\n                this._lastScaleY = this.scaleY;\n                this.applyResizeFilters();\n            }\n            this._stroke(ctx);\n            this._renderPaintInOrder(ctx);\n        },\n        _renderFill: function(ctx) {\n            var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY, x = -w / 2, y = -h / 2, elementToDraw = this._element;\n            elementToDraw && ctx.drawImage(elementToDraw, this.cropX * this._filterScalingX, this.cropY * this._filterScalingY, sW, sH, x, y, w, h);\n        },\n        _needsResize: function() {\n            return this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY;\n        },\n        _resetWidthHeight: function() {\n            var element = this.getElement();\n            this.set(\"width\", element.width);\n            this.set(\"height\", element.height);\n        },\n        _initElement: function(element, options) {\n            this.setElement(fabric.util.getById(element), options);\n            fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n        },\n        _initConfig: function(options) {\n            options || (options = {});\n            this.setOptions(options);\n            this._setWidthHeight(options);\n            if (this._element && this.crossOrigin) {\n                this._element.crossOrigin = this.crossOrigin;\n            }\n        },\n        _initFilters: function(filters, callback) {\n            if (filters && filters.length) {\n                fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n                    callback && callback(enlivenedObjects);\n                }, \"fabric.Image.filters\");\n            } else {\n                callback && callback();\n            }\n        },\n        _setWidthHeight: function(options) {\n            this.width = \"width\" in options ? options.width : this.getElement() ? this.getElement().width || 0 : 0;\n            this.height = \"height\" in options ? options.height : this.getElement() ? this.getElement().height || 0 : 0;\n        },\n        parsePreserveAspectRatioAttribute: function() {\n            var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || \"\"), rWidth = this._element.width, rHeight = this._element.height, scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0, offset, pWidth = this.width, pHeight = this.height, parsedAttributes = {\n                width: pWidth,\n                height: pHeight\n            };\n            if (pAR && (pAR.alignX !== \"none\" || pAR.alignY !== \"none\")) {\n                if (pAR.meetOrSlice === \"meet\") {\n                    scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n                    offset = (pWidth - rWidth * scaleX) / 2;\n                    if (pAR.alignX === \"Min\") {\n                        offsetLeft = -offset;\n                    }\n                    if (pAR.alignX === \"Max\") {\n                        offsetLeft = offset;\n                    }\n                    offset = (pHeight - rHeight * scaleY) / 2;\n                    if (pAR.alignY === \"Min\") {\n                        offsetTop = -offset;\n                    }\n                    if (pAR.alignY === \"Max\") {\n                        offsetTop = offset;\n                    }\n                }\n                if (pAR.meetOrSlice === \"slice\") {\n                    scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n                    offset = rWidth - pWidth / scaleX;\n                    if (pAR.alignX === \"Mid\") {\n                        cropX = offset / 2;\n                    }\n                    if (pAR.alignX === \"Max\") {\n                        cropX = offset;\n                    }\n                    offset = rHeight - pHeight / scaleY;\n                    if (pAR.alignY === \"Mid\") {\n                        cropY = offset / 2;\n                    }\n                    if (pAR.alignY === \"Max\") {\n                        cropY = offset;\n                    }\n                    rWidth = pWidth / scaleX;\n                    rHeight = pHeight / scaleY;\n                }\n            } else {\n                scaleX = pWidth / rWidth;\n                scaleY = pHeight / rHeight;\n            }\n            return {\n                width: rWidth,\n                height: rHeight,\n                scaleX: scaleX,\n                scaleY: scaleY,\n                offsetLeft: offsetLeft,\n                offsetTop: offsetTop,\n                cropX: cropX,\n                cropY: cropY\n            };\n        }\n    });\n    fabric.Image.CSS_CANVAS = \"canvas-img\";\n    fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n    fabric.Image.fromObject = function(_object, callback) {\n        var object = fabric.util.object.clone(_object);\n        fabric.util.loadImage(object.src, function(img, error) {\n            if (error) {\n                callback && callback(null, error);\n                return;\n            }\n            fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n                object.filters = filters || [];\n                fabric.Image.prototype._initFilters.call(object, [ object.resizeFilter ], function(resizeFilters) {\n                    object.resizeFilter = resizeFilters[0];\n                    var image = new fabric.Image(img, object);\n                    callback(image);\n                });\n            });\n        }, null, object.crossOrigin);\n    };\n    fabric.Image.fromURL = function(url, callback, imgOptions) {\n        fabric.util.loadImage(url, function(img) {\n            callback && callback(new fabric.Image(img, imgOptions));\n        }, null, imgOptions && imgOptions.crossOrigin);\n    };\n    fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y width height preserveAspectRatio xlink:href crossOrigin\".split(\" \"));\n    fabric.Image.fromElement = function(element, callback, options) {\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n        fabric.Image.fromURL(parsedAttributes[\"xlink:href\"], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype, {\n    _getAngleValueForStraighten: function() {\n        var angle = this.angle % 360;\n        if (angle > 0) {\n            return Math.round((angle - 1) / 90) * 90;\n        }\n        return Math.round(angle / 90) * 90;\n    },\n    straighten: function() {\n        this.rotate(this._getAngleValueForStraighten());\n        return this;\n    },\n    fxStraighten: function(callbacks) {\n        callbacks = callbacks || {};\n        var empty = function() {}, onComplete = callbacks.onComplete || empty, onChange = callbacks.onChange || empty, _this = this;\n        fabric.util.animate({\n            startValue: this.get(\"angle\"),\n            endValue: this._getAngleValueForStraighten(),\n            duration: this.FX_DURATION,\n            onChange: function(value) {\n                _this.rotate(value);\n                onChange();\n            },\n            onComplete: function() {\n                _this.setCoords();\n                onComplete();\n            }\n        });\n        return this;\n    }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, {\n    straightenObject: function(object) {\n        object.straighten();\n        this.requestRenderAll();\n        return this;\n    },\n    fxStraightenObject: function(object) {\n        object.fxStraighten({\n            onChange: this.requestRenderAllBound\n        });\n        return this;\n    }\n});\n\n(function() {\n    \"use strict\";\n    function testPrecision(gl, precision) {\n        var fragmentSource = \"precision \" + precision + \" float;\\nvoid main(){}\";\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentSource);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            return false;\n        }\n        return true;\n    }\n    fabric.isWebglSupported = function(tileSize) {\n        if (fabric.isLikelyNode) {\n            return false;\n        }\n        tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n        var canvas = document.createElement(\"canvas\");\n        var gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n        var isSupported = false;\n        if (gl) {\n            fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n            isSupported = fabric.maxTextureSize >= tileSize;\n            var precisions = [ \"highp\", \"mediump\", \"lowp\" ];\n            for (var i = 0; i < 3; i++) {\n                if (testPrecision(gl, precisions[i])) {\n                    fabric.webGlPrecision = precisions[i];\n                    break;\n                }\n            }\n        }\n        this.isSupported = isSupported;\n        return isSupported;\n    };\n    fabric.WebglFilterBackend = WebglFilterBackend;\n    function WebglFilterBackend(options) {\n        if (options && options.tileSize) {\n            this.tileSize = options.tileSize;\n        }\n        this.setupGLContext(this.tileSize, this.tileSize);\n        this.captureGPUInfo();\n    }\n    WebglFilterBackend.prototype = {\n        tileSize: 2048,\n        resources: {},\n        setupGLContext: function(width, height) {\n            this.dispose();\n            this.createWebGLCanvas(width, height);\n            this.aPosition = new Float32Array([ 0, 0, 0, 1, 1, 0, 1, 1 ]);\n            this.chooseFastestCopyGLTo2DMethod(width, height);\n        },\n        chooseFastestCopyGLTo2DMethod: function(width, height) {\n            var canMeasurePerf = typeof window.performance !== \"undefined\";\n            var canUseImageData;\n            try {\n                new ImageData(1, 1);\n                canUseImageData = true;\n            } catch (e) {\n                canUseImageData = false;\n            }\n            var canUseArrayBuffer = typeof ArrayBuffer !== \"undefined\";\n            var canUseUint8Clamped = typeof Uint8ClampedArray !== \"undefined\";\n            if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n                return;\n            }\n            var targetCanvas = fabric.util.createCanvasElement();\n            var imageBuffer = new ArrayBuffer(width * height * 4);\n            var testContext = {\n                imageBuffer: imageBuffer,\n                destinationWidth: width,\n                destinationHeight: height,\n                targetCanvas: targetCanvas\n            };\n            var startTime, drawImageTime, putImageDataTime;\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            startTime = window.performance.now();\n            copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n            drawImageTime = window.performance.now() - startTime;\n            startTime = window.performance.now();\n            copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n            putImageDataTime = window.performance.now() - startTime;\n            if (drawImageTime > putImageDataTime) {\n                this.imageBuffer = imageBuffer;\n                this.copyGLTo2D = copyGLTo2DPutImageData;\n            } else {\n                this.copyGLTo2D = copyGLTo2DDrawImage;\n            }\n        },\n        createWebGLCanvas: function(width, height) {\n            var canvas = fabric.util.createCanvasElement();\n            canvas.width = width;\n            canvas.height = height;\n            var glOptions = {\n                premultipliedAlpha: false\n            }, gl = canvas.getContext(\"webgl\", glOptions);\n            if (!gl) {\n                gl = canvas.getContext(\"experimental-webgl\", glOptions);\n            }\n            if (!gl) {\n                return;\n            }\n            gl.clearColor(0, 0, 0, 0);\n            this.canvas = canvas;\n            this.gl = gl;\n        },\n        applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n            var gl = this.gl;\n            var cachedTexture;\n            if (cacheKey) {\n                cachedTexture = this.getCachedTexture(cacheKey, source);\n            }\n            var pipelineState = {\n                originalWidth: source.width || source.originalWidth,\n                originalHeight: source.height || source.originalHeight,\n                sourceWidth: width,\n                sourceHeight: height,\n                destinationWidth: width,\n                destinationHeight: height,\n                context: gl,\n                sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n                targetTexture: this.createTexture(gl, width, height),\n                originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n                passes: filters.length,\n                webgl: true,\n                aPosition: this.aPosition,\n                programCache: this.programCache,\n                pass: 0,\n                filterBackend: this,\n                targetCanvas: targetCanvas\n            };\n            var tempFbo = gl.createFramebuffer();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n            filters.forEach(function(filter) {\n                filter && filter.applyTo(pipelineState);\n            });\n            resizeCanvasIfNeeded(pipelineState);\n            this.copyGLTo2D(gl, pipelineState);\n            gl.bindTexture(gl.TEXTURE_2D, null);\n            gl.deleteTexture(pipelineState.sourceTexture);\n            gl.deleteTexture(pipelineState.targetTexture);\n            gl.deleteFramebuffer(tempFbo);\n            targetCanvas.getContext(\"2d\").setTransform(1, 0, 0, 1, 0, 0);\n            return pipelineState;\n        },\n        applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n            var gl = this.gl;\n            var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n            var glError = gl.getError();\n            if (glError !== gl.NO_ERROR) {\n                var errorString = this.glErrorToString(gl, glError);\n                var error = new Error(\"WebGL Error \" + errorString);\n                error.glErrorCode = glError;\n                throw error;\n            }\n            return ret;\n        },\n        glErrorToString: function(context, errorCode) {\n            if (!context) {\n                return \"Context undefined for error code: \" + errorCode;\n            } else if (typeof errorCode !== \"number\") {\n                return \"Error code is not a number\";\n            }\n            switch (errorCode) {\n              case context.NO_ERROR:\n                return \"NO_ERROR\";\n\n              case context.INVALID_ENUM:\n                return \"INVALID_ENUM\";\n\n              case context.INVALID_VALUE:\n                return \"INVALID_VALUE\";\n\n              case context.INVALID_OPERATION:\n                return \"INVALID_OPERATION\";\n\n              case context.INVALID_FRAMEBUFFER_OPERATION:\n                return \"INVALID_FRAMEBUFFER_OPERATION\";\n\n              case context.OUT_OF_MEMORY:\n                return \"OUT_OF_MEMORY\";\n\n              case context.CONTEXT_LOST_WEBGL:\n                return \"CONTEXT_LOST_WEBGL\";\n\n              default:\n                return \"UNKNOWN_ERROR\";\n            }\n        },\n        dispose: function() {\n            if (this.canvas) {\n                this.canvas = null;\n                this.gl = null;\n            }\n            this.clearWebGLCaches();\n        },\n        clearWebGLCaches: function() {\n            this.programCache = {};\n            this.textureCache = {};\n        },\n        createTexture: function(gl, width, height, textureImageSource) {\n            var texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (textureImageSource) {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n            } else {\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n            }\n            return texture;\n        },\n        getCachedTexture: function(uniqueId, textureImageSource) {\n            if (this.textureCache[uniqueId]) {\n                return this.textureCache[uniqueId];\n            } else {\n                var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n                this.textureCache[uniqueId] = texture;\n                return texture;\n            }\n        },\n        evictCachesForKey: function(cacheKey) {\n            if (this.textureCache[cacheKey]) {\n                this.gl.deleteTexture(this.textureCache[cacheKey]);\n                delete this.textureCache[cacheKey];\n            }\n        },\n        copyGLTo2D: copyGLTo2DDrawImage,\n        captureGPUInfo: function() {\n            if (this.gpuInfo) {\n                return this.gpuInfo;\n            }\n            var gl = this.gl;\n            var ext = gl.getExtension(\"WEBGL_debug_renderer_info\");\n            var gpuInfo = {\n                renderer: \"\",\n                vendor: \"\"\n            };\n            if (ext) {\n                var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n                var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n                if (renderer) {\n                    gpuInfo.renderer = renderer.toLowerCase();\n                }\n                if (vendor) {\n                    gpuInfo.vendor = vendor.toLowerCase();\n                }\n            }\n            this.gpuInfo = gpuInfo;\n            return gpuInfo;\n        }\n    };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n    var targetCanvas = pipelineState.targetCanvas, width = targetCanvas.width, height = targetCanvas.height, dWidth = pipelineState.destinationWidth, dHeight = pipelineState.destinationHeight;\n    if (width !== dWidth || height !== dHeight) {\n        targetCanvas.width = dWidth;\n        targetCanvas.height = dHeight;\n    }\n}\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n    var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext(\"2d\");\n    ctx.translate(0, targetCanvas.height);\n    ctx.scale(1, -1);\n    var sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n    var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext(\"2d\"), dWidth = pipelineState.destinationWidth, dHeight = pipelineState.destinationHeight, numBytes = dWidth * dHeight * 4;\n    var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n}\n\n(function() {\n    \"use strict\";\n    var noop = function() {};\n    fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n    function Canvas2dFilterBackend() {}\n    Canvas2dFilterBackend.prototype = {\n        evictCachesForKey: noop,\n        dispose: noop,\n        clearWebGLCaches: noop,\n        resources: {},\n        applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n            var ctx = targetCanvas.getContext(\"2d\");\n            ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n            var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n            var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n            var pipelineState = {\n                sourceWidth: sourceWidth,\n                sourceHeight: sourceHeight,\n                imageData: imageData,\n                originalEl: sourceElement,\n                originalImageData: originalImageData,\n                canvasEl: targetCanvas,\n                ctx: ctx,\n                filterBackend: this\n            };\n            filters.forEach(function(filter) {\n                filter.applyTo(pipelineState);\n            });\n            if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n                targetCanvas.width = pipelineState.imageData.width;\n                targetCanvas.height = pipelineState.imageData.height;\n            }\n            ctx.putImageData(pipelineState.imageData, 0, 0);\n            return pipelineState;\n        }\n    };\n})();\n\nfabric.Image.filters = fabric.Image.filters || {};\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass({\n    type: \"BaseFilter\",\n    vertexSource: \"attribute vec2 aPosition;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vTexCoord = aPosition;\\n\" + \"gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n\" + \"}\",\n    fragmentSource: \"precision highp float;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"}\",\n    initialize: function(options) {\n        if (options) {\n            this.setOptions(options);\n        }\n    },\n    setOptions: function(options) {\n        for (var prop in options) {\n            this[prop] = options[prop];\n        }\n    },\n    createProgram: function(gl, fragmentSource, vertexSource) {\n        fragmentSource = fragmentSource || this.fragmentSource;\n        vertexSource = vertexSource || this.vertexSource;\n        if (fabric.webGlPrecision !== \"highp\") {\n            fragmentSource = fragmentSource.replace(/precision highp float/g, \"precision \" + fabric.webGlPrecision + \" float\");\n        }\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertexSource);\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(\"Vertex shader compile error for \" + this.type + \": \" + gl.getShaderInfoLog(vertexShader));\n        }\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragmentSource);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            throw new Error(\"Fragment shader compile error for \" + this.type + \": \" + gl.getShaderInfoLog(fragmentShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n        gl.linkProgram(program);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error('Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n        }\n        var attributeLocations = this.getAttributeLocations(gl, program);\n        var uniformLocations = this.getUniformLocations(gl, program) || {};\n        uniformLocations.uStepW = gl.getUniformLocation(program, \"uStepW\");\n        uniformLocations.uStepH = gl.getUniformLocation(program, \"uStepH\");\n        return {\n            program: program,\n            attributeLocations: attributeLocations,\n            uniformLocations: uniformLocations\n        };\n    },\n    getAttributeLocations: function(gl, program) {\n        return {\n            aPosition: gl.getAttribLocation(program, \"aPosition\")\n        };\n    },\n    getUniformLocations: function() {\n        return {};\n    },\n    sendAttributeData: function(gl, attributeLocations, aPositionData) {\n        var attributeLocation = attributeLocations.aPostion;\n        var buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.enableVertexAttribArray(attributeLocation);\n        gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n    },\n    _setupFrameBuffer: function(options) {\n        var gl = options.context, width, height;\n        if (options.passes > 1) {\n            width = options.destinationWidth;\n            height = options.destinationHeight;\n            if (options.sourceWidth !== width || options.sourceHeight !== height) {\n                gl.deleteTexture(options.targetTexture);\n                options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n            }\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.finish();\n        }\n    },\n    _swapTextures: function(options) {\n        options.passes--;\n        options.pass++;\n        var temp = options.targetTexture;\n        options.targetTexture = options.sourceTexture;\n        options.sourceTexture = temp;\n    },\n    isNeutralState: function() {\n        return false;\n    },\n    applyTo: function(options) {\n        if (options.webgl) {\n            if (options.passes > 1 && this.isNeutralState(options)) {\n                return;\n            }\n            this._setupFrameBuffer(options);\n            this.applyToWebGL(options);\n            this._swapTextures(options);\n        } else if (!this.isNeutralState()) {\n            this.applyTo2d(options);\n        }\n    },\n    retrieveShader: function(options) {\n        if (!options.programCache.hasOwnProperty(this.type)) {\n            options.programCache[this.type] = this.createProgram(options.context);\n        }\n        return options.programCache[this.type];\n    },\n    applyToWebGL: function(options) {\n        var gl = options.context;\n        var shader = this.retrieveShader(options);\n        if (options.pass === 0 && options.originalTexture) {\n            gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n        }\n        gl.useProgram(shader.program);\n        this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n        gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n        gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n        this.sendUniformData(gl, shader.uniformLocations);\n        gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    },\n    bindAdditionalTexture: function(gl, texture, textureUnit) {\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.activeTexture(gl.TEXTURE0);\n    },\n    unbindAdditionalTexture: function(gl, textureUnit) {\n        gl.activeTexture(textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.activeTexture(gl.TEXTURE0);\n    },\n    getMainParameter: function() {\n        return this[this.mainParameter];\n    },\n    setMainParameter: function(value) {\n        this[this.mainParameter] = value;\n    },\n    sendUniformData: function() {},\n    createHelpLayer: function(options) {\n        if (!options.helpLayer) {\n            var helpLayer = document.createElement(\"canvas\");\n            helpLayer.width = options.sourceWidth;\n            helpLayer.height = options.sourceHeight;\n            options.helpLayer = helpLayer;\n        }\n    },\n    toObject: function() {\n        var object = {\n            type: this.type\n        }, mainP = this.mainParameter;\n        if (mainP) {\n            object[mainP] = this[mainP];\n        }\n        return object;\n    },\n    toJSON: function() {\n        return this.toObject();\n    }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n    var filter = new fabric.Image.filters[object.type](object);\n    callback && callback(filter);\n    return filter;\n};\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.ColorMatrix = createClass(filters.BaseFilter, {\n        type: \"ColorMatrix\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"uniform mat4 uColorMatrix;\\n\" + \"uniform vec4 uConstants;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color *= uColorMatrix;\\n\" + \"color += uConstants;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        matrix: [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ],\n        mainParameter: \"matrix\",\n        colorsOnly: true,\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.matrix = this.matrix.slice(0);\n        },\n        isNeutralState: function() {\n            var _class = filters.ColorMatrix;\n            for (var i = 20; i--; ) {\n                if (this.matrix[i] !== _class.prototype.matrix[i]) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, iLen = data.length, m = this.matrix, r, g, b, a, i, colorsOnly = this.colorsOnly;\n            for (i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                if (colorsOnly) {\n                    data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n                    data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n                    data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n                } else {\n                    a = data[i + 3];\n                    data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n                    data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n                    data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n                    data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uColorMatrix: gl.getUniformLocation(program, \"uColorMatrix\"),\n                uConstants: gl.getUniformLocation(program, \"uConstants\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var m = this.matrix, matrix = [ m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18] ], constants = [ m[4], m[9], m[14], m[19] ];\n            gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n            gl.uniform4fv(uniformLocations.uConstants, constants);\n        }\n    });\n    fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Brightness = createClass(filters.BaseFilter, {\n        type: \"Brightness\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uBrightness;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb += uBrightness;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        brightness: 0,\n        mainParameter: \"brightness\",\n        applyTo2d: function(options) {\n            if (this.brightness === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, brightness = Math.round(this.brightness * 255);\n            for (i = 0; i < len; i += 4) {\n                data[i] = data[i] + brightness;\n                data[i + 1] = data[i + 1] + brightness;\n                data[i + 2] = data[i + 2] + brightness;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uBrightness: gl.getUniformLocation(program, \"uBrightness\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n        }\n    });\n    fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Convolute = createClass(filters.BaseFilter, {\n        type: \"Convolute\",\n        opaque: false,\n        matrix: [ 0, 0, 0, 0, 1, 0, 0, 0, 0 ],\n        fragmentSource: {\n            Convolute_3_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[9];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 3.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 3.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_3_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[9];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 3.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 3.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_5_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[25];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 5.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 5.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_5_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[25];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 5.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 5.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_7_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[49];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 7.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 7.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_7_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[49];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 7.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 7.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\",\n            Convolute_9_1: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[81];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 0);\\n\" + \"for (float h = 0.0; h < 9.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 9.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n\" + \"color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            Convolute_9_0: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uMatrix[81];\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0, 0, 0, 1);\\n\" + \"for (float h = 0.0; h < 9.0; h+=1.0) {\\n\" + \"for (float w = 0.0; w < 9.0; w+=1.0) {\\n\" + \"vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n\" + \"color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n\" + \"}\\n\" + \"}\\n\" + \"float alpha = texture2D(uTexture, vTexCoord).a;\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.a = alpha;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var size = Math.sqrt(this.matrix.length);\n            var cacheKey = this.type + \"_\" + size + \"_\" + (this.opaque ? 1 : 0);\n            var shaderSource = this.fragmentSource[cacheKey];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, weights = this.matrix, side = Math.round(Math.sqrt(weights.length)), halfSide = Math.floor(side / 2), sw = imageData.width, sh = imageData.height, output = options.ctx.createImageData(sw, sh), dst = output.data, alphaFac = this.opaque ? 1 : 0, r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n            for (y = 0; y < sh; y++) {\n                for (x = 0; x < sw; x++) {\n                    dstOff = (y * sw + x) * 4;\n                    r = 0;\n                    g = 0;\n                    b = 0;\n                    a = 0;\n                    for (cy = 0; cy < side; cy++) {\n                        for (cx = 0; cx < side; cx++) {\n                            scy = y + cy - halfSide;\n                            scx = x + cx - halfSide;\n                            if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                                continue;\n                            }\n                            srcOff = (scy * sw + scx) * 4;\n                            wt = weights[cy * side + cx];\n                            r += data[srcOff] * wt;\n                            g += data[srcOff + 1] * wt;\n                            b += data[srcOff + 2] * wt;\n                            if (!alphaFac) {\n                                a += data[srcOff + 3] * wt;\n                            }\n                        }\n                    }\n                    dst[dstOff] = r;\n                    dst[dstOff + 1] = g;\n                    dst[dstOff + 2] = b;\n                    if (!alphaFac) {\n                        dst[dstOff + 3] = a;\n                    } else {\n                        dst[dstOff + 3] = data[dstOff + 3];\n                    }\n                }\n            }\n            options.imageData = output;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uMatrix: gl.getUniformLocation(program, \"uMatrix\"),\n                uOpaque: gl.getUniformLocation(program, \"uOpaque\"),\n                uHalfSize: gl.getUniformLocation(program, \"uHalfSize\"),\n                uSize: gl.getUniformLocation(program, \"uSize\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                opaque: this.opaque,\n                matrix: this.matrix\n            });\n        }\n    });\n    fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Grayscale = createClass(filters.BaseFilter, {\n        type: \"Grayscale\",\n        fragmentSource: {\n            average: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float average = (color.r + color.b + color.g) / 3.0;\\n\" + \"gl_FragColor = vec4(average, average, average, color.a);\\n\" + \"}\",\n            lightness: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uMode;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 col = texture2D(uTexture, vTexCoord);\\n\" + \"float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n\" + \"gl_FragColor = vec4(average, average, average, col.a);\\n\" + \"}\",\n            luminosity: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uMode;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 col = texture2D(uTexture, vTexCoord);\\n\" + \"float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n\" + \"gl_FragColor = vec4(average, average, average, col.a);\\n\" + \"}\"\n        },\n        mode: \"average\",\n        mainParameter: \"mode\",\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, value, mode = this.mode;\n            for (i = 0; i < len; i += 4) {\n                if (mode === \"average\") {\n                    value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n                } else if (mode === \"lightness\") {\n                    value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n                } else if (mode === \"luminosity\") {\n                    value = .21 * data[i] + .72 * data[i + 1] + .07 * data[i + 2];\n                }\n                data[i] = value;\n                data[i + 1] = value;\n                data[i + 2] = value;\n            }\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                var shaderSource = this.fragmentSource[this.mode];\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uMode: gl.getUniformLocation(program, \"uMode\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var mode = 1;\n            gl.uniform1i(uniformLocations.uMode, mode);\n        }\n    });\n    fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Invert = createClass(filters.BaseFilter, {\n        type: \"Invert\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform int uInvert;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"if (uInvert == 1) {\\n\" + \"gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n\" + \"} else {\\n\" + \"gl_FragColor = color;\\n\" + \"}\\n\" + \"}\",\n        invert: true,\n        mainParameter: \"invert\",\n        applyTo2d: function(options) {\n            if (!this.invert) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length;\n            for (i = 0; i < len; i += 4) {\n                data[i] = 255 - data[i];\n                data[i + 1] = 255 - data[i + 1];\n                data[i + 2] = 255 - data[i + 2];\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uInvert: gl.getUniformLocation(program, \"uInvert\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1i(uniformLocations.uInvert, this.invert);\n        }\n    });\n    fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Noise = createClass(filters.BaseFilter, {\n        type: \"Noise\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uStepH;\\n\" + \"uniform float uNoise;\\n\" + \"uniform float uSeed;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"float rand(vec2 co, float seed, float vScale) {\\n\" + \"return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n\" + \"}\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        mainParameter: \"noise\",\n        noise: 0,\n        applyTo2d: function(options) {\n            if (this.noise === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, i, len = data.length, noise = this.noise, rand;\n            for (i = 0, len = data.length; i < len; i += 4) {\n                rand = (.5 - Math.random()) * noise;\n                data[i] += rand;\n                data[i + 1] += rand;\n                data[i + 2] += rand;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uNoise: gl.getUniformLocation(program, \"uNoise\"),\n                uSeed: gl.getUniformLocation(program, \"uSeed\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n            gl.uniform1f(uniformLocations.uSeed, Math.random());\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                noise: this.noise\n            });\n        }\n    });\n    fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Pixelate = createClass(filters.BaseFilter, {\n        type: \"Pixelate\",\n        blocksize: 4,\n        mainParameter: \"blocksize\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uBlocksize;\\n\" + \"uniform float uStepW;\\n\" + \"uniform float uStepH;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"float blockW = uBlocksize * uStepW;\\n\" + \"float blockH = uBlocksize * uStepW;\\n\" + \"int posX = int(vTexCoord.x / blockW);\\n\" + \"int posY = int(vTexCoord.y / blockH);\\n\" + \"float fposX = float(posX);\\n\" + \"float fposY = float(posY);\\n\" + \"vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n\" + \"vec4 color = texture2D(uTexture, squareCoords);\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        applyTo2d: function(options) {\n            if (this.blocksize === 1) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, iLen = imageData.height, jLen = imageData.width, index, i, j, r, g, b, a, _i, _j, _iLen, _jLen;\n            for (i = 0; i < iLen; i += this.blocksize) {\n                for (j = 0; j < jLen; j += this.blocksize) {\n                    index = i * 4 * jLen + j * 4;\n                    r = data[index];\n                    g = data[index + 1];\n                    b = data[index + 2];\n                    a = data[index + 3];\n                    _iLen = Math.min(i + this.blocksize, iLen);\n                    _jLen = Math.min(j + this.blocksize, jLen);\n                    for (_i = i; _i < _iLen; _i++) {\n                        for (_j = j; _j < _jLen; _j++) {\n                            index = _i * 4 * jLen + _j * 4;\n                            data[index] = r;\n                            data[index + 1] = g;\n                            data[index + 2] = b;\n                            data[index + 3] = a;\n                        }\n                    }\n                }\n            }\n        },\n        isNeutralState: function() {\n            return this.blocksize === 1;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uBlocksize: gl.getUniformLocation(program, \"uBlocksize\"),\n                uStepW: gl.getUniformLocation(program, \"uStepW\"),\n                uStepH: gl.getUniformLocation(program, \"uStepH\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n        }\n    });\n    fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), extend = fabric.util.object.extend, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.RemoveColor = createClass(filters.BaseFilter, {\n        type: \"RemoveColor\",\n        color: \"#FFFFFF\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uLow;\\n\" + \"uniform vec4 uHigh;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n\" + \"gl_FragColor.a = 0.0;\\n\" + \"}\\n\" + \"}\",\n        distance: .02,\n        useAlpha: false,\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, i, distance = this.distance * 255, r, g, b, source = new fabric.Color(this.color).getSource(), lowC = [ source[0] - distance, source[1] - distance, source[2] - distance ], highC = [ source[0] + distance, source[1] + distance, source[2] + distance ];\n            for (i = 0; i < data.length; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n                    data[i + 3] = 0;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uLow: gl.getUniformLocation(program, \"uLow\"),\n                uHigh: gl.getUniformLocation(program, \"uHigh\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var source = new fabric.Color(this.color).getSource(), distance = parseFloat(this.distance), lowC = [ 0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1 ], highC = [ source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1 ];\n            gl.uniform4fv(uniformLocations.uLow, lowC);\n            gl.uniform4fv(uniformLocations.uHigh, highC);\n        },\n        toObject: function() {\n            return extend(this.callSuper(\"toObject\"), {\n                color: this.color,\n                distance: this.distance\n            });\n        }\n    });\n    fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    var matrices = {\n        Brownie: [ .5997, .34553, -.27082, 0, .186, -.0377, .86095, .15059, 0, -.1449, .24113, -.07441, .44972, 0, -.02965, 0, 0, 0, 1, 0 ],\n        Vintage: [ .62793, .32021, -.03965, 0, .03784, .02578, .64411, .03259, 0, .02926, .0466, -.08512, .52416, 0, .02023, 0, 0, 0, 1, 0 ],\n        Kodachrome: [ 1.12855, -.39673, -.03992, 0, .24991, -.16404, 1.08352, -.05498, 0, .09698, -.16786, -.56034, 1.60148, 0, .13972, 0, 0, 0, 1, 0 ],\n        Technicolor: [ 1.91252, -.85453, -.09155, 0, .04624, -.30878, 1.76589, -.10601, 0, -.27589, -.2311, -.75018, 1.84759, 0, .12137, 0, 0, 0, 1, 0 ],\n        Polaroid: [ 1.438, -.062, -.062, 0, 0, -.122, 1.378, -.122, 0, 0, -.016, -.016, 1.483, 0, 0, 0, 0, 0, 1, 0 ],\n        Sepia: [ .393, .769, .189, 0, 0, .349, .686, .168, 0, 0, .272, .534, .131, 0, 0, 0, 0, 0, 1, 0 ],\n        BlackWhite: [ 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0 ]\n    };\n    for (var key in matrices) {\n        filters[key] = createClass(filters.ColorMatrix, {\n            type: key,\n            matrix: matrices[key],\n            mainParameter: false,\n            colorsOnly: true\n        });\n        fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n    }\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.BlendColor = createClass(filters.BaseFilter, {\n        type: \"BlendColor\",\n        color: \"#F95C63\",\n        mode: \"multiply\",\n        alpha: 1,\n        fragmentSource: {\n            multiply: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb *= uColor.rgb;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            screen: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"color.rgb = 1.0 - (1.0 - color.rgb) * (1.0 - uColor.rgb);\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            add: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb += uColor.rgb;\\n\" + \"}\",\n            diff: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n\" + \"}\",\n            subtract: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb -= uColor.rgb;\\n\" + \"}\",\n            lighten: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n\" + \"}\",\n            darken: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n\" + \"}\",\n            exclusion: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n\" + \"}\",\n            overlay: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"if (uColor.r < 0.5) {\\n\" + \"gl_FragColor.r *= 2.0 * uColor.r;\\n\" + \"} else {\\n\" + \"gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n\" + \"}\\n\" + \"if (uColor.g < 0.5) {\\n\" + \"gl_FragColor.g *= 2.0 * uColor.g;\\n\" + \"} else {\\n\" + \"gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n\" + \"}\\n\" + \"if (uColor.b < 0.5) {\\n\" + \"gl_FragColor.b *= 2.0 * uColor.b;\\n\" + \"} else {\\n\" + \"gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n\" + \"}\\n\" + \"}\",\n            tint: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"gl_FragColor = texture2D(uTexture, vTexCoord);\\n\" + \"gl_FragColor.rgb *= (1.0 - uColor.a);\\n\" + \"gl_FragColor.rgb += uColor.rgb;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            var shaderSource = this.fragmentSource[this.mode];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, iLen = data.length, tr, tg, tb, r, g, b, source, alpha1 = 1 - this.alpha;\n            source = new fabric.Color(this.color).getSource();\n            tr = source[0] * this.alpha;\n            tg = source[1] * this.alpha;\n            tb = source[2] * this.alpha;\n            for (var i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                switch (this.mode) {\n                  case \"multiply\":\n                    data[i] = r * tr / 255;\n                    data[i + 1] = g * tg / 255;\n                    data[i + 2] = b * tb / 255;\n                    break;\n\n                  case \"screen\":\n                    data[i] = 255 - (255 - r) * (255 - tr) / 255;\n                    data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n                    data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n                    break;\n\n                  case \"add\":\n                    data[i] = r + tr;\n                    data[i + 1] = g + tg;\n                    data[i + 2] = b + tb;\n                    break;\n\n                  case \"diff\":\n                  case \"difference\":\n                    data[i] = Math.abs(r - tr);\n                    data[i + 1] = Math.abs(g - tg);\n                    data[i + 2] = Math.abs(b - tb);\n                    break;\n\n                  case \"subtract\":\n                    data[i] = r - tr;\n                    data[i + 1] = g - tg;\n                    data[i + 2] = b - tb;\n                    break;\n\n                  case \"darken\":\n                    data[i] = Math.min(r, tr);\n                    data[i + 1] = Math.min(g, tg);\n                    data[i + 2] = Math.min(b, tb);\n                    break;\n\n                  case \"lighten\":\n                    data[i] = Math.max(r, tr);\n                    data[i + 1] = Math.max(g, tg);\n                    data[i + 2] = Math.max(b, tb);\n                    break;\n\n                  case \"overlay\":\n                    data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n                    data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n                    data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n                    break;\n\n                  case \"exclusion\":\n                    data[i] = tr + r - 2 * tr * r / 255;\n                    data[i + 1] = tg + g - 2 * tg * g / 255;\n                    data[i + 2] = tb + b - 2 * tb * b / 255;\n                    break;\n\n                  case \"tint\":\n                    data[i] = tr + r * alpha1;\n                    data[i + 1] = tg + g * alpha1;\n                    data[i + 2] = tb + b * alpha1;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uColor: gl.getUniformLocation(program, \"uColor\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var source = new fabric.Color(this.color).getSource();\n            source[0] = this.alpha * source[0] / 255;\n            source[1] = this.alpha * source[1] / 255;\n            source[2] = this.alpha * source[2] / 255;\n            source[3] = this.alpha;\n            gl.uniform4fv(uniformLocations.uColor, source);\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                color: this.color,\n                mode: this.mode,\n                alpha: this.alpha\n            };\n        }\n    });\n    fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.BlendImage = createClass(filters.BaseFilter, {\n        type: \"BlendImage\",\n        image: null,\n        mode: \"multiply\",\n        alpha: 1,\n        vertexSource: \"attribute vec2 aPosition;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"uniform mat3 uTransformMatrix;\\n\" + \"void main() {\\n\" + \"vTexCoord = aPosition;\\n\" + \"vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n\" + \"gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n\" + \"}\",\n        fragmentSource: {\n            multiply: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform sampler2D uImage;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec4 color2 = texture2D(uImage, vTexCoord2);\\n\" + \"color.rgba *= color2.rgba;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n            mask: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform sampler2D uImage;\\n\" + \"uniform vec4 uColor;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"varying vec2 vTexCoord2;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec4 color2 = texture2D(uImage, vTexCoord2);\\n\" + \"color.a = color2.a;\\n\" + \"gl_FragColor = color;\\n\" + \"}\"\n        },\n        retrieveShader: function(options) {\n            var cacheKey = this.type + \"_\" + this.mode;\n            var shaderSource = this.fragmentSource[this.mode];\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n            }\n            return options.programCache[cacheKey];\n        },\n        applyToWebGL: function(options) {\n            var gl = options.context, texture = this.createTexture(options.filterBackend, this.image);\n            this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n            this.callSuper(\"applyToWebGL\", options);\n            this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n        },\n        createTexture: function(backend, image) {\n            return backend.getCachedTexture(image.cacheKey, image._element);\n        },\n        calculateMatrix: function() {\n            var image = this.image, width = image._element.width, height = image._element.height;\n            return [ 1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1 ];\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, resources = options.filterBackend.resources, data = imageData.data, iLen = data.length, width = options.imageData.width, height = options.imageData.height, tr, tg, tb, ta, r, g, b, a, canvas1, context, image = this.image, blendData;\n            if (!resources.blendImage) {\n                resources.blendImage = document.createElement(\"canvas\");\n            }\n            canvas1 = resources.blendImage;\n            if (canvas1.width !== width || canvas1.height !== height) {\n                canvas1.width = width;\n                canvas1.height = height;\n            }\n            context = canvas1.getContext(\"2d\");\n            context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n            context.drawImage(image._element, 0, 0, width, height);\n            blendData = context.getImageData(0, 0, width, height).data;\n            for (var i = 0; i < iLen; i += 4) {\n                r = data[i];\n                g = data[i + 1];\n                b = data[i + 2];\n                a = data[i + 3];\n                tr = blendData[i];\n                tg = blendData[i + 1];\n                tb = blendData[i + 2];\n                ta = blendData[i + 3];\n                switch (this.mode) {\n                  case \"multiply\":\n                    data[i] = r * tr / 255;\n                    data[i + 1] = g * tg / 255;\n                    data[i + 2] = b * tb / 255;\n                    data[i + 3] = a * ta / 255;\n                    break;\n\n                  case \"mask\":\n                    data[i + 3] = ta;\n                    break;\n                }\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uTransformMatrix: gl.getUniformLocation(program, \"uTransformMatrix\"),\n                uImage: gl.getUniformLocation(program, \"uImage\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var matrix = this.calculateMatrix();\n            gl.uniform1i(uniformLocations.uImage, 1);\n            gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                image: this.image && this.image.toObject(),\n                mode: this.mode,\n                alpha: this.alpha\n            };\n        }\n    });\n    fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n        fabric.Image.fromObject(object.image, function(image) {\n            var options = fabric.util.object.clone(object);\n            options.image = image;\n            callback(new fabric.Image.filters.BlendImage(options));\n        });\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), pow = Math.pow, floor = Math.floor, sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin, ceil = Math.ceil, filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Resize = createClass(filters.BaseFilter, {\n        type: \"Resize\",\n        resizeType: \"hermite\",\n        scaleX: 0,\n        scaleY: 0,\n        lanczosLobes: 3,\n        getUniformLocations: function(gl, program) {\n            return {\n                uDelta: gl.getUniformLocation(program, \"uDelta\"),\n                uTaps: gl.getUniformLocation(program, \"uTaps\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [ 1 / this.width, 0 ] : [ 0, 1 / this.height ]);\n            gl.uniform1fv(uniformLocations.uTaps, this.taps);\n        },\n        retrieveShader: function(options) {\n            var filterWindow = this.getFilterWindow(), cacheKey = this.type + \"_\" + filterWindow;\n            if (!options.programCache.hasOwnProperty(cacheKey)) {\n                var fragmentShader = this.generateShader(filterWindow);\n                options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n            }\n            return options.programCache[cacheKey];\n        },\n        getFilterWindow: function() {\n            var scale = this.tempScale;\n            return Math.ceil(this.lanczosLobes / scale);\n        },\n        getTaps: function() {\n            var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale, filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n            for (var i = 1; i <= filterWindow; i++) {\n                taps[i - 1] = lobeFunction(i * scale);\n            }\n            return taps;\n        },\n        generateShader: function(filterWindow) {\n            var offsets = new Array(filterWindow), fragmentShader = this.fragmentSourceTOP, filterWindow;\n            for (var i = 1; i <= filterWindow; i++) {\n                offsets[i - 1] = i + \".0 * uDelta\";\n            }\n            fragmentShader += \"uniform float uTaps[\" + filterWindow + \"];\\n\";\n            fragmentShader += \"void main() {\\n\";\n            fragmentShader += \"  vec4 color = texture2D(uTexture, vTexCoord);\\n\";\n            fragmentShader += \"  float sum = 1.0;\\n\";\n            offsets.forEach(function(offset, i) {\n                fragmentShader += \"  color += texture2D(uTexture, vTexCoord + \" + offset + \") * uTaps[\" + i + \"];\\n\";\n                fragmentShader += \"  color += texture2D(uTexture, vTexCoord - \" + offset + \") * uTaps[\" + i + \"];\\n\";\n                fragmentShader += \"  sum += 2.0 * uTaps[\" + i + \"];\\n\";\n            });\n            fragmentShader += \"  gl_FragColor = color / sum;\\n\";\n            fragmentShader += \"}\";\n            return fragmentShader;\n        },\n        fragmentSourceTOP: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec2 uDelta;\\n\" + \"varying vec2 vTexCoord;\\n\",\n        applyTo: function(options) {\n            if (options.webgl) {\n                if (options.passes > 1 && this.isNeutralState(options)) {\n                    return;\n                }\n                options.passes++;\n                this.width = options.sourceWidth;\n                this.horizontal = true;\n                this.dW = Math.round(this.width * this.scaleX);\n                this.dH = options.sourceHeight;\n                this.tempScale = this.dW / this.width;\n                this.taps = this.getTaps();\n                options.destinationWidth = this.dW;\n                this._setupFrameBuffer(options);\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                options.sourceWidth = options.destinationWidth;\n                this.height = options.sourceHeight;\n                this.horizontal = false;\n                this.dH = Math.round(this.height * this.scaleY);\n                this.tempScale = this.dH / this.height;\n                this.taps = this.getTaps();\n                options.destinationHeight = this.dH;\n                this._setupFrameBuffer(options);\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                options.sourceHeight = options.destinationHeight;\n            } else if (!this.isNeutralState(options)) {\n                this.applyTo2d(options);\n            }\n        },\n        isNeutralState: function(options) {\n            var scaleX = options.scaleX || this.scaleX, scaleY = options.scaleY || this.scaleY;\n            return scaleX === 1 && scaleY === 1;\n        },\n        lanczosCreate: function(lobes) {\n            return function(x) {\n                if (x >= lobes || x <= -lobes) {\n                    return 0;\n                }\n                if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n                    return 1;\n                }\n                x *= Math.PI;\n                var xx = x / lobes;\n                return sin(x) / x * sin(xx) / xx;\n            };\n        },\n        applyTo2d: function(options) {\n            var imageData = options.imageData, scaleX = this.scaleX, scaleY = this.scaleY;\n            this.rcpScaleX = 1 / scaleX;\n            this.rcpScaleY = 1 / scaleY;\n            var oW = imageData.width, oH = imageData.height, dW = round(oW * scaleX), dH = round(oH * scaleY), newData;\n            if (this.resizeType === \"sliceHack\") {\n                newData = this.sliceByTwo(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"hermite\") {\n                newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"bilinear\") {\n                newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n            } else if (this.resizeType === \"lanczos\") {\n                newData = this.lanczosResize(options, oW, oH, dW, dH);\n            }\n            options.imageData = newData;\n        },\n        sliceByTwo: function(options, oW, oH, dW, dH) {\n            var imageData = options.imageData, mult = .5, doneW = false, doneH = false, stepW = oW * mult, stepH = oH * mult, resources = fabric.filterBackend.resources, tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n            if (!resources.sliceByTwo) {\n                resources.sliceByTwo = document.createElement(\"canvas\");\n            }\n            tmpCanvas = resources.sliceByTwo;\n            if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n                tmpCanvas.width = oW * 1.5;\n                tmpCanvas.height = oH;\n            }\n            ctx = tmpCanvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, oW * 1.5, oH);\n            ctx.putImageData(imageData, 0, 0);\n            dW = floor(dW);\n            dH = floor(dH);\n            while (!doneW || !doneH) {\n                oW = stepW;\n                oH = stepH;\n                if (dW < floor(stepW * mult)) {\n                    stepW = floor(stepW * mult);\n                } else {\n                    stepW = dW;\n                    doneW = true;\n                }\n                if (dH < floor(stepH * mult)) {\n                    stepH = floor(stepH * mult);\n                } else {\n                    stepH = dH;\n                    doneH = true;\n                }\n                ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n                sX = dX;\n                sY = dY;\n                dY += stepH;\n            }\n            return ctx.getImageData(sX, sY, dW, dH);\n        },\n        lanczosResize: function(options, oW, oH, dW, dH) {\n            function process(u) {\n                var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n                center.x = (u + .5) * ratioX;\n                icenter.x = floor(center.x);\n                for (v = 0; v < dH; v++) {\n                    center.y = (v + .5) * ratioY;\n                    icenter.y = floor(center.y);\n                    a = 0;\n                    red = 0;\n                    green = 0;\n                    blue = 0;\n                    alpha = 0;\n                    for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n                        if (i < 0 || i >= oW) {\n                            continue;\n                        }\n                        fX = floor(1e3 * abs(i - center.x));\n                        if (!cacheLanc[fX]) {\n                            cacheLanc[fX] = {};\n                        }\n                        for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n                            if (j < 0 || j >= oH) {\n                                continue;\n                            }\n                            fY = floor(1e3 * abs(j - center.y));\n                            if (!cacheLanc[fX][fY]) {\n                                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1e3);\n                            }\n                            weight = cacheLanc[fX][fY];\n                            if (weight > 0) {\n                                idx = (j * oW + i) * 4;\n                                a += weight;\n                                red += weight * srcData[idx];\n                                green += weight * srcData[idx + 1];\n                                blue += weight * srcData[idx + 2];\n                                alpha += weight * srcData[idx + 3];\n                            }\n                        }\n                    }\n                    idx = (v * dW + u) * 4;\n                    destData[idx] = red / a;\n                    destData[idx + 1] = green / a;\n                    destData[idx + 2] = blue / a;\n                    destData[idx + 3] = alpha / a;\n                }\n                if (++u < dW) {\n                    return process(u);\n                } else {\n                    return destImg;\n                }\n            }\n            var srcData = options.imageData.data, destImg = options.ctx.createImageData(dW, dH), destData = destImg.data, lanczos = this.lanczosCreate(this.lanczosLobes), ratioX = this.rcpScaleX, ratioY = this.rcpScaleY, rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY, range2X = ceil(ratioX * this.lanczosLobes / 2), range2Y = ceil(ratioY * this.lanczosLobes / 2), cacheLanc = {}, center = {}, icenter = {};\n            return process(0);\n        },\n        bilinearFiltering: function(options, oW, oH, dW, dH) {\n            var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl, color, offset = 0, origPix, ratioX = this.rcpScaleX, ratioY = this.rcpScaleY, w4 = 4 * (oW - 1), img = options.imageData, pixels = img.data, destImage = options.ctx.createImageData(dW, dH), destPixels = destImage.data;\n            for (i = 0; i < dH; i++) {\n                for (j = 0; j < dW; j++) {\n                    x = floor(ratioX * j);\n                    y = floor(ratioY * i);\n                    xDiff = ratioX * j - x;\n                    yDiff = ratioY * i - y;\n                    origPix = 4 * (y * oW + x);\n                    for (chnl = 0; chnl < 4; chnl++) {\n                        a = pixels[origPix + chnl];\n                        b = pixels[origPix + 4 + chnl];\n                        c = pixels[origPix + w4 + chnl];\n                        d = pixels[origPix + w4 + 4 + chnl];\n                        color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n                        destPixels[offset++] = color;\n                    }\n                }\n            }\n            return destImage;\n        },\n        hermiteFastResize: function(options, oW, oH, dW, dH) {\n            var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY, ratioWHalf = ceil(ratioW / 2), ratioHHalf = ceil(ratioH / 2), img = options.imageData, data = img.data, img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n            for (var j = 0; j < dH; j++) {\n                for (var i = 0; i < dW; i++) {\n                    var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0, gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + .5) * ratioH;\n                    for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n                        var dy = abs(centerY - (yy + .5)) / ratioHHalf, centerX = (i + .5) * ratioW, w0 = dy * dy;\n                        for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n                            var dx = abs(centerX - (xx + .5)) / ratioWHalf, w = sqrt(w0 + dx * dx);\n                            if (w > 1 && w < -1) {\n                                continue;\n                            }\n                            weight = 2 * w * w * w - 3 * w * w + 1;\n                            if (weight > 0) {\n                                dx = 4 * (xx + yy * oW);\n                                gxA += weight * data[dx + 3];\n                                weightsAlpha += weight;\n                                if (data[dx + 3] < 255) {\n                                    weight = weight * data[dx + 3] / 250;\n                                }\n                                gxR += weight * data[dx];\n                                gxG += weight * data[dx + 1];\n                                gxB += weight * data[dx + 2];\n                                weights += weight;\n                            }\n                        }\n                    }\n                    data2[x2] = gxR / weights;\n                    data2[x2 + 1] = gxG / weights;\n                    data2[x2 + 2] = gxB / weights;\n                    data2[x2 + 3] = gxA / weightsAlpha;\n                }\n            }\n            return img2;\n        },\n        toObject: function() {\n            return {\n                type: this.type,\n                scaleX: this.scaleX,\n                scaleY: this.scaleY,\n                resizeType: this.resizeType,\n                lanczosLobes: this.lanczosLobes\n            };\n        }\n    });\n    fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Contrast = createClass(filters.BaseFilter, {\n        type: \"Contrast\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uContrast;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n\" + \"color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        contrast: 0,\n        mainParameter: \"contrast\",\n        applyTo2d: function(options) {\n            if (this.contrast === 0) {\n                return;\n            }\n            var imageData = options.imageData, i, len, data = imageData.data, len = data.length, contrast = Math.floor(this.contrast * 255), contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n            for (i = 0; i < len; i += 4) {\n                data[i] = contrastF * (data[i] - 128) + 128;\n                data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n                data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uContrast: gl.getUniformLocation(program, \"uContrast\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uContrast, this.contrast);\n        }\n    });\n    fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Saturation = createClass(filters.BaseFilter, {\n        type: \"Saturation\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform float uSaturation;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"float rgMax = max(color.r, color.g);\\n\" + \"float rgbMax = max(rgMax, color.b);\\n\" + \"color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n\" + \"color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n\" + \"color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n\" + \"gl_FragColor = color;\\n\" + \"}\",\n        saturation: 0,\n        mainParameter: \"saturation\",\n        applyTo2d: function(options) {\n            if (this.saturation === 0) {\n                return;\n            }\n            var imageData = options.imageData, data = imageData.data, len = data.length, adjust = -this.saturation, i, max;\n            for (i = 0; i < len; i += 4) {\n                max = Math.max(data[i], data[i + 1], data[i + 2]);\n                data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n                data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n                data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uSaturation: gl.getUniformLocation(program, \"uSaturation\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n        }\n    });\n    fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Blur = createClass(filters.BaseFilter, {\n        type: \"Blur\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec2 uDelta;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"const float nSamples = 15.0;\\n\" + \"vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n\" + \"float random(vec3 scale) {\\n\" + \"return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n\" + \"}\\n\" + \"void main() {\\n\" + \"vec4 color = vec4(0.0);\\n\" + \"float total = 0.0;\\n\" + \"float offset = random(v3offset);\\n\" + \"for (float t = -nSamples; t <= nSamples; t++) {\\n\" + \"float percent = (t + offset - 0.5) / nSamples;\\n\" + \"float weight = 1.0 - abs(percent);\\n\" + \"color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n\" + \"total += weight;\\n\" + \"}\\n\" + \"gl_FragColor = color / total;\\n\" + \"}\",\n        blur: 0,\n        mainParameter: \"blur\",\n        applyTo: function(options) {\n            if (options.webgl) {\n                this.aspectRatio = options.sourceWidth / options.sourceHeight;\n                options.passes++;\n                this._setupFrameBuffer(options);\n                this.horizontal = true;\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n                this._setupFrameBuffer(options);\n                this.horizontal = false;\n                this.applyToWebGL(options);\n                this._swapTextures(options);\n            } else {\n                this.applyTo2d(options);\n            }\n        },\n        applyTo2d: function(options) {\n            options.imageData = this.simpleBlur(options);\n        },\n        simpleBlur: function(options) {\n            var resources = options.filterBackend.resources, canvas1, canvas2, width = options.imageData.width, height = options.imageData.height;\n            if (!resources.blurLayer1) {\n                resources.blurLayer1 = document.createElement(\"canvas\");\n                resources.blurLayer2 = document.createElement(\"canvas\");\n            }\n            canvas1 = resources.blurLayer1;\n            canvas2 = resources.blurLayer2;\n            if (canvas1.width !== width || canvas1.height !== height) {\n                canvas2.width = canvas1.width = width;\n                canvas2.height = canvas1.height = height;\n            }\n            var ctx1 = canvas1.getContext(\"2d\"), ctx2 = canvas2.getContext(\"2d\"), nSamples = 15, random, percent, j, i, blur = this.blur * .06 * .5;\n            ctx1.putImageData(options.imageData, 0, 0);\n            ctx2.clearRect(0, 0, width, height);\n            for (i = -nSamples; i <= nSamples; i++) {\n                random = (Math.random() - .5) / 4;\n                percent = i / nSamples;\n                j = blur * percent * width + random;\n                ctx2.globalAlpha = 1 - Math.abs(percent);\n                ctx2.drawImage(canvas1, j, random);\n                ctx1.drawImage(canvas2, 0, 0);\n                ctx2.globalAlpha = 1;\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n            }\n            for (i = -nSamples; i <= nSamples; i++) {\n                random = (Math.random() - .5) / 4;\n                percent = i / nSamples;\n                j = blur * percent * height + random;\n                ctx2.globalAlpha = 1 - Math.abs(percent);\n                ctx2.drawImage(canvas1, random, j);\n                ctx1.drawImage(canvas2, 0, 0);\n                ctx2.globalAlpha = 1;\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n            }\n            options.ctx.drawImage(canvas1, 0, 0);\n            var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n            ctx1.globalAlpha = 1;\n            ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n            return newImageData;\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                delta: gl.getUniformLocation(program, \"uDelta\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            var delta = this.chooseRightDelta();\n            gl.uniform2fv(uniformLocations.delta, delta);\n        },\n        chooseRightDelta: function() {\n            var blurScale = 1, delta = [ 0, 0 ], blur;\n            if (this.horizontal) {\n                if (this.aspectRatio > 1) {\n                    blurScale = 1 / this.aspectRatio;\n                }\n            } else {\n                if (this.aspectRatio < 1) {\n                    blurScale = this.aspectRatio;\n                }\n            }\n            blur = blurScale * this.blur * .12;\n            if (this.horizontal) {\n                delta[0] = blur;\n            } else {\n                delta[1] = blur;\n            }\n            return delta;\n        }\n    });\n    filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Gamma = createClass(filters.BaseFilter, {\n        type: \"Gamma\",\n        fragmentSource: \"precision highp float;\\n\" + \"uniform sampler2D uTexture;\\n\" + \"uniform vec3 uGamma;\\n\" + \"varying vec2 vTexCoord;\\n\" + \"void main() {\\n\" + \"vec4 color = texture2D(uTexture, vTexCoord);\\n\" + \"vec3 correction = (1.0 / uGamma);\\n\" + \"color.r = pow(color.r, correction.r);\\n\" + \"color.g = pow(color.g, correction.g);\\n\" + \"color.b = pow(color.b, correction.b);\\n\" + \"gl_FragColor = color;\\n\" + \"gl_FragColor.rgb *= color.a;\\n\" + \"}\",\n        gamma: [ 1, 1, 1 ],\n        mainParameter: \"gamma\",\n        applyTo2d: function(options) {\n            var imageData = options.imageData, data = imageData.data, gamma = this.gamma, len = data.length, rInv = 1 / gamma[0], gInv = 1 / gamma[1], bInv = 1 / gamma[2], i;\n            if (!this.rVals) {\n                this.rVals = new Uint8Array(256);\n                this.gVals = new Uint8Array(256);\n                this.bVals = new Uint8Array(256);\n            }\n            for (i = 0, len = 256; i < len; i++) {\n                this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n                this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n                this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n            }\n            for (i = 0, len = data.length; i < len; i += 4) {\n                data[i] = this.rVals[data[i]];\n                data[i + 1] = this.gVals[data[i + 1]];\n                data[i + 2] = this.bVals[data[i + 2]];\n            }\n        },\n        getUniformLocations: function(gl, program) {\n            return {\n                uGamma: gl.getUniformLocation(program, \"uGamma\")\n            };\n        },\n        sendUniformData: function(gl, uniformLocations) {\n            gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n        }\n    });\n    fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.Composed = createClass(filters.BaseFilter, {\n        type: \"Composed\",\n        subFilters: [],\n        initialize: function(options) {\n            this.callSuper(\"initialize\", options);\n            this.subFilters = this.subFilters.slice(0);\n        },\n        applyTo: function(options) {\n            options.passes += this.subFilters.length - 1;\n            this.subFilters.forEach(function(filter) {\n                filter.applyTo(options);\n            });\n        },\n        toObject: function() {\n            return fabric.util.object.extend(this.callSuper(\"toObject\"), {\n                subFilters: this.subFilters.map(function(filter) {\n                    return filter.toObject();\n                })\n            });\n        }\n    });\n    fabric.Image.filters.Composed.fromObject = function(object, callback) {\n        var filters = object.subFilters || [], subFilters = filters.map(function(filter) {\n            return new fabric.Image.filters[filter.type](filter);\n        }), instance = new fabric.Image.filters.Composed({\n            subFilters: subFilters\n        });\n        callback && callback(instance);\n        return instance;\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), filters = fabric.Image.filters, createClass = fabric.util.createClass;\n    filters.HueRotation = createClass(filters.ColorMatrix, {\n        type: \"HueRotation\",\n        rotation: 0,\n        mainParameter: \"rotation\",\n        calculateMatrix: function() {\n            var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad), aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n            this.matrix = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ];\n            this.matrix[0] = cos + OneMinusCos / 3;\n            this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[6] = cos + aThird * OneMinusCos;\n            this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n            this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n            this.matrix[12] = cos + aThird * OneMinusCos;\n        },\n        applyTo: function(options) {\n            this.calculateMatrix();\n            fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n        }\n    });\n    fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {}), clone = fabric.util.object.clone, MIN_TEXT_WIDTH = 2, CACHE_FONT_SIZE = 200;\n    if (fabric.Text) {\n        fabric.warn(\"fabric.Text is already defined\");\n        return;\n    }\n    fabric.Text = fabric.util.createClass(fabric.Object, {\n        _dimensionAffectingProps: [ \"fontSize\", \"fontWeight\", \"fontFamily\", \"fontStyle\", \"lineHeight\", \"text\", \"charSpacing\", \"textAlign\", \"styles\" ],\n        _reNewline: /\\r?\\n/,\n        _reSpacesAndTabs: /[ \\t\\r]/g,\n        _reSpaceAndTab: /[ \\t\\r]/,\n        _reWords: /\\S+/g,\n        type: \"text\",\n        fontSize: 40,\n        fontWeight: \"normal\",\n        fontFamily: \"Times New Roman\",\n        underline: false,\n        overline: false,\n        linethrough: false,\n        textAlign: \"left\",\n        fontStyle: \"normal\",\n        lineHeight: 1.16,\n        textBackgroundColor: \"\",\n        stateProperties: fabric.Object.prototype.stateProperties.concat(\"fontFamily\", \"fontWeight\", \"fontSize\", \"text\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"fontStyle\", \"lineHeight\", \"textBackgroundColor\", \"charSpacing\", \"styles\"),\n        cacheProperties: fabric.Object.prototype.cacheProperties.concat(\"fontFamily\", \"fontWeight\", \"fontSize\", \"text\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"fontStyle\", \"lineHeight\", \"textBackgroundColor\", \"charSpacing\", \"styles\"),\n        stroke: null,\n        shadow: null,\n        _fontSizeFraction: .222,\n        offsets: {\n            underline: .1,\n            linethrough: -.315,\n            overline: -.88\n        },\n        _fontSizeMult: 1.13,\n        charSpacing: 0,\n        styles: null,\n        _measuringContext: null,\n        _styleProperties: [ \"stroke\", \"strokeWidth\", \"fill\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"underline\", \"overline\", \"linethrough\", \"textBackgroundColor\" ],\n        __charBounds: [],\n        initialize: function(text, options) {\n            this.styles = options ? options.styles || {} : {};\n            this.text = text;\n            this.__skipDimension = true;\n            this.callSuper(\"initialize\", options);\n            this.__skipDimension = false;\n            this.initDimensions();\n            this.setCoords();\n            this.setupState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        getMeasuringContext: function() {\n            if (!fabric._measuringContext) {\n                fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext(\"2d\");\n            }\n            return fabric._measuringContext;\n        },\n        _splitText: function() {\n            var newLines = this._splitTextIntoLines(this.text);\n            this.textLines = newLines.lines;\n            this._textLines = newLines.graphemeLines;\n            this._unwrappedTextLines = newLines._unwrappedLines;\n            this._text = newLines.graphemeText;\n            return newLines;\n        },\n        initDimensions: function() {\n            if (this.__skipDimension) {\n                return;\n            }\n            this._splitText();\n            this._clearCache();\n            this.width = this.calcTextWidth() || this.cursorWidth || MIN_TEXT_WIDTH;\n            if (this.textAlign.indexOf(\"justify\") !== -1) {\n                this.enlargeSpaces();\n            }\n            this.height = this.calcTextHeight();\n            this.saveState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        enlargeSpaces: function() {\n            var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                if (this.textAlign !== \"justify\" && (i === len - 1 || this.isEndOfWrapping(i))) {\n                    continue;\n                }\n                accumulatedSpace = 0;\n                line = this._textLines[i];\n                currentLineWidth = this.getLineWidth(i);\n                if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n                    numberOfSpaces = spaces.length;\n                    diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n                    for (var j = 0, jlen = line.length; j <= jlen; j++) {\n                        charBound = this.__charBounds[i][j];\n                        if (this._reSpaceAndTab.test(line[j])) {\n                            charBound.width += diffSpace;\n                            charBound.kernedWidth += diffSpace;\n                            charBound.left += accumulatedSpace;\n                            accumulatedSpace += diffSpace;\n                        } else {\n                            charBound.left += accumulatedSpace;\n                        }\n                    }\n                }\n            }\n        },\n        isEndOfWrapping: function(lineIndex) {\n            return lineIndex === this._textLines.length - 1;\n        },\n        toString: function() {\n            return \"#<fabric.Text (\" + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n        },\n        _getCacheCanvasDimensions: function() {\n            var dims = this.callSuper(\"_getCacheCanvasDimensions\");\n            var fontSize = this.fontSize;\n            dims.width += fontSize * dims.zoomX;\n            dims.height += fontSize * dims.zoomY;\n            return dims;\n        },\n        _render: function(ctx) {\n            this._setTextStyles(ctx);\n            this._renderTextLinesBackground(ctx);\n            this._renderTextDecoration(ctx, \"underline\");\n            this._renderText(ctx);\n            this._renderTextDecoration(ctx, \"overline\");\n            this._renderTextDecoration(ctx, \"linethrough\");\n        },\n        _renderText: function(ctx) {\n            if (this.paintFirst === \"stroke\") {\n                this._renderTextStroke(ctx);\n                this._renderTextFill(ctx);\n            } else {\n                this._renderTextFill(ctx);\n                this._renderTextStroke(ctx);\n            }\n        },\n        _setTextStyles: function(ctx, charStyle, forMeasuring) {\n            ctx.textBaseline = \"alphabetic\";\n            ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n        },\n        calcTextWidth: function() {\n            var maxWidth = this.getLineWidth(0);\n            for (var i = 1, len = this._textLines.length; i < len; i++) {\n                var currentLineWidth = this.getLineWidth(i);\n                if (currentLineWidth > maxWidth) {\n                    maxWidth = currentLineWidth;\n                }\n            }\n            return maxWidth;\n        },\n        _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n            this._renderChars(method, ctx, line, left, top, lineIndex);\n        },\n        _renderTextLinesBackground: function(ctx) {\n            if (!this.textBackgroundColor && !this.styleHas(\"textBackgroundColor\")) {\n                return;\n            }\n            var lineTopOffset = 0, heightOfLine, lineLeftOffset, originalFill = ctx.fillStyle, line, lastColor, leftOffset = this._getLeftOffset(), topOffset = this._getTopOffset(), boxStart = 0, boxWidth = 0, charBox, currentColor;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                heightOfLine = this.getHeightOfLine(i);\n                if (!this.textBackgroundColor && !this.styleHas(\"textBackgroundColor\", i)) {\n                    lineTopOffset += heightOfLine;\n                    continue;\n                }\n                line = this._textLines[i];\n                lineLeftOffset = this._getLineLeftOffset(i);\n                boxWidth = 0;\n                boxStart = 0;\n                lastColor = this.getValueOfPropertyAt(i, 0, \"textBackgroundColor\");\n                for (var j = 0, jlen = line.length; j < jlen; j++) {\n                    charBox = this.__charBounds[i][j];\n                    currentColor = this.getValueOfPropertyAt(i, j, \"textBackgroundColor\");\n                    if (currentColor !== lastColor) {\n                        ctx.fillStyle = lastColor;\n                        lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n                        boxStart = charBox.left;\n                        boxWidth = charBox.width;\n                        lastColor = currentColor;\n                    } else {\n                        boxWidth += charBox.kernedWidth;\n                    }\n                }\n                if (currentColor) {\n                    ctx.fillStyle = currentColor;\n                    ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n                }\n                lineTopOffset += heightOfLine;\n            }\n            ctx.fillStyle = originalFill;\n            this._removeShadow(ctx);\n        },\n        getFontCache: function(decl) {\n            var fontFamily = decl.fontFamily.toLowerCase();\n            if (!fabric.charWidthsCache[fontFamily]) {\n                fabric.charWidthsCache[fontFamily] = {};\n            }\n            var cache = fabric.charWidthsCache[fontFamily], cacheProp = decl.fontStyle.toLowerCase() + \"_\" + (decl.fontWeight + \"\").toLowerCase();\n            if (!cache[cacheProp]) {\n                cache[cacheProp] = {};\n            }\n            return cache[cacheProp];\n        },\n        _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n            this._setFillStyles(ctx, styleDeclaration);\n            this._setStrokeStyles(ctx, styleDeclaration);\n            ctx.font = this._getFontDeclaration(styleDeclaration);\n        },\n        _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n            var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle), previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char, stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth, fontMultiplier = charStyle.fontSize / CACHE_FONT_SIZE, kernedWidth;\n            if (previousChar && fontCache[previousChar]) {\n                previousWidth = fontCache[previousChar];\n            }\n            if (fontCache[_char]) {\n                kernedWidth = width = fontCache[_char];\n            }\n            if (stylesAreEqual && fontCache[couple]) {\n                coupleWidth = fontCache[couple];\n                kernedWidth = coupleWidth - previousWidth;\n            }\n            if (!width || !previousWidth || !coupleWidth) {\n                var ctx = this.getMeasuringContext();\n                this._setTextStyles(ctx, charStyle, true);\n            }\n            if (!width) {\n                kernedWidth = width = ctx.measureText(_char).width;\n                fontCache[_char] = width;\n            }\n            if (!previousWidth && stylesAreEqual && previousChar) {\n                previousWidth = ctx.measureText(previousChar).width;\n                fontCache[previousChar] = previousWidth;\n            }\n            if (stylesAreEqual && !coupleWidth) {\n                coupleWidth = ctx.measureText(couple).width;\n                fontCache[couple] = coupleWidth;\n                kernedWidth = coupleWidth - previousWidth;\n                if (kernedWidth > width) {\n                    var diff = kernedWidth - width;\n                    fontCache[_char] = kernedWidth;\n                    fontCache[couple] += diff;\n                    width = kernedWidth;\n                }\n            }\n            return {\n                width: width * fontMultiplier,\n                kernedWidth: kernedWidth * fontMultiplier\n            };\n        },\n        getHeightOfChar: function(l, c) {\n            return this.getValueOfPropertyAt(l, c, \"fontSize\");\n        },\n        measureLine: function(lineIndex) {\n            var lineInfo = this._measureLine(lineIndex);\n            if (this.charSpacing !== 0) {\n                lineInfo.width -= this._getWidthOfCharSpacing();\n            }\n            if (lineInfo.width < 0) {\n                lineInfo.width = 0;\n            }\n            return lineInfo;\n        },\n        _measureLine: function(lineIndex) {\n            var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme, graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n            this.__charBounds[lineIndex] = lineBounds;\n            for (i = 0; i < line.length; i++) {\n                grapheme = line[i];\n                graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n                lineBounds[i] = graphemeInfo;\n                width += graphemeInfo.kernedWidth;\n                prevGrapheme = grapheme;\n            }\n            lineBounds[i] = {\n                left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n                width: 0,\n                kernedWidth: 0,\n                height: this.fontSize\n            };\n            return {\n                width: width,\n                numOfSpaces: numOfSpaces\n            };\n        },\n        _getGraphemeBox: function(grapheme, lineIndex, charIndex, previousGrapheme, skipLeft) {\n            var charStyle = this.getCompleteStyleDeclaration(lineIndex, charIndex), prevCharStyle = previousGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {}, info = this._measureChar(grapheme, charStyle, previousGrapheme, prevCharStyle), kernedWidth = info.kernedWidth, width = info.width;\n            if (this.charSpacing !== 0) {\n                width += this._getWidthOfCharSpacing();\n                kernedWidth += this._getWidthOfCharSpacing();\n            }\n            var box = {\n                width: width,\n                left: 0,\n                height: charStyle.fontSize,\n                kernedWidth: kernedWidth\n            };\n            if (charIndex > 0 && !skipLeft) {\n                var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n                box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n            }\n            return box;\n        },\n        getHeightOfLine: function(lineIndex) {\n            if (this.__lineHeights[lineIndex]) {\n                return this.__lineHeights[lineIndex];\n            }\n            var line = this._textLines[lineIndex], maxHeight = this.getHeightOfChar(lineIndex, 0);\n            for (var i = 1, len = line.length; i < len; i++) {\n                var currentCharHeight = this.getHeightOfChar(lineIndex, i);\n                if (currentCharHeight > maxHeight) {\n                    maxHeight = currentCharHeight;\n                }\n            }\n            this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n            return this.__lineHeights[lineIndex];\n        },\n        calcTextHeight: function() {\n            var lineHeight, height = 0;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                lineHeight = this.getHeightOfLine(i);\n                height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n            }\n            return height;\n        },\n        _getLeftOffset: function() {\n            return -this.width / 2;\n        },\n        _getTopOffset: function() {\n            return -this.height / 2;\n        },\n        _renderTextCommon: function(ctx, method) {\n            ctx.save();\n            var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(), offsets = this._applyPatternGradientTransform(ctx, method === \"fillText\" ? this.fill : this.stroke);\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                var heightOfLine = this.getHeightOfLine(i), maxHeight = heightOfLine / this.lineHeight, leftOffset = this._getLineLeftOffset(i);\n                this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n                lineHeights += heightOfLine;\n            }\n            ctx.restore();\n        },\n        _renderTextFill: function(ctx) {\n            if (!this.fill && !this.styleHas(\"fill\")) {\n                return;\n            }\n            this._renderTextCommon(ctx, \"fillText\");\n        },\n        _renderTextStroke: function(ctx) {\n            if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n                return;\n            }\n            if (this.shadow && !this.shadow.affectStroke) {\n                this._removeShadow(ctx);\n            }\n            ctx.save();\n            this._setLineDash(ctx, this.strokeDashArray);\n            ctx.beginPath();\n            this._renderTextCommon(ctx, \"strokeText\");\n            ctx.closePath();\n            ctx.restore();\n        },\n        _renderChars: function(method, ctx, line, left, top, lineIndex) {\n            var lineHeight = this.getHeightOfLine(lineIndex), isJustify = this.textAlign.indexOf(\"justify\") !== -1, actualStyle, nextStyle, charsToRender = \"\", charBox, boxWidth = 0, timeToRender, shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n            ctx.save();\n            top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n            if (shortCut) {\n                this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n                ctx.restore();\n                return;\n            }\n            for (var i = 0, len = line.length - 1; i <= len; i++) {\n                timeToRender = i === len || this.charSpacing;\n                charsToRender += line[i];\n                charBox = this.__charBounds[lineIndex][i];\n                if (boxWidth === 0) {\n                    left += charBox.kernedWidth - charBox.width;\n                    boxWidth += charBox.width;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n                if (isJustify && !timeToRender) {\n                    if (this._reSpaceAndTab.test(line[i])) {\n                        timeToRender = true;\n                    }\n                }\n                if (!timeToRender) {\n                    actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n                    nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n                    timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n                }\n                if (timeToRender) {\n                    this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n                    charsToRender = \"\";\n                    actualStyle = nextStyle;\n                    left += boxWidth;\n                    boxWidth = 0;\n                }\n            }\n            ctx.restore();\n        },\n        _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n            var decl = this._getStyleDeclaration(lineIndex, charIndex), fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex), shouldFill = method === \"fillText\" && fullDecl.fill, shouldStroke = method === \"strokeText\" && fullDecl.stroke && fullDecl.strokeWidth;\n            if (!shouldStroke && !shouldFill) {\n                return;\n            }\n            decl && ctx.save();\n            this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n            if (decl && decl.textBackgroundColor) {\n                this._removeShadow(ctx);\n            }\n            shouldFill && ctx.fillText(_char, left, top);\n            shouldStroke && ctx.strokeText(_char, left, top);\n            decl && ctx.restore();\n        },\n        _hasStyleChanged: function(prevStyle, thisStyle) {\n            return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle;\n        },\n        _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n            return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n        },\n        _getLineLeftOffset: function(lineIndex) {\n            var lineWidth = this.getLineWidth(lineIndex);\n            if (this.textAlign === \"center\") {\n                return (this.width - lineWidth) / 2;\n            }\n            if (this.textAlign === \"right\") {\n                return this.width - lineWidth;\n            }\n            if (this.textAlign === \"justify-center\" && this.isEndOfWrapping(lineIndex)) {\n                return (this.width - lineWidth) / 2;\n            }\n            if (this.textAlign === \"justify-right\" && this.isEndOfWrapping(lineIndex)) {\n                return this.width - lineWidth;\n            }\n            return 0;\n        },\n        _clearCache: function() {\n            this.__lineWidths = [];\n            this.__lineHeights = [];\n            this.__charBounds = [];\n        },\n        _shouldClearDimensionCache: function() {\n            var shouldClear = this._forceClearCache;\n            shouldClear || (shouldClear = this.hasStateChanged(\"_dimensionAffectingProps\"));\n            if (shouldClear) {\n                this.dirty = true;\n                this._forceClearCache = false;\n            }\n            return shouldClear;\n        },\n        getLineWidth: function(lineIndex) {\n            if (this.__lineWidths[lineIndex]) {\n                return this.__lineWidths[lineIndex];\n            }\n            var width, line = this._textLines[lineIndex], lineInfo;\n            if (line === \"\") {\n                width = 0;\n            } else {\n                lineInfo = this.measureLine(lineIndex);\n                width = lineInfo.width;\n            }\n            this.__lineWidths[lineIndex] = width;\n            return width;\n        },\n        _getWidthOfCharSpacing: function() {\n            if (this.charSpacing !== 0) {\n                return this.fontSize * this.charSpacing / 1e3;\n            }\n            return 0;\n        },\n        getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n            var charStyle = this._getStyleDeclaration(lineIndex, charIndex), styleDecoration = charStyle && typeof charStyle[property] !== \"undefined\";\n            return styleDecoration ? charStyle[property] : this[property];\n        },\n        _renderTextDecoration: function(ctx, type) {\n            if (!this[type] && !this.styleHas(type)) {\n                return;\n            }\n            var heightOfLine, lineLeftOffset, line, lastDecoration, leftOffset = this._getLeftOffset(), topOffset = this._getTopOffset(), boxStart, boxWidth, charBox, currentDecoration, maxHeight, currentFill, lastFill;\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                heightOfLine = this.getHeightOfLine(i);\n                if (!this[type] && !this.styleHas(type, i)) {\n                    topOffset += heightOfLine;\n                    continue;\n                }\n                line = this._textLines[i];\n                maxHeight = heightOfLine / this.lineHeight;\n                lineLeftOffset = this._getLineLeftOffset(i);\n                boxStart = 0;\n                boxWidth = 0;\n                lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n                lastFill = this.getValueOfPropertyAt(i, 0, \"fill\");\n                for (var j = 0, jlen = line.length; j < jlen; j++) {\n                    charBox = this.__charBounds[i][j];\n                    currentDecoration = this.getValueOfPropertyAt(i, j, type);\n                    currentFill = this.getValueOfPropertyAt(i, j, \"fill\");\n                    if ((currentDecoration !== lastDecoration || currentFill !== lastFill) && boxWidth > 0) {\n                        ctx.fillStyle = lastFill;\n                        lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize, boxWidth, this.fontSize / 15);\n                        boxStart = charBox.left;\n                        boxWidth = charBox.width;\n                        lastDecoration = currentDecoration;\n                        lastFill = currentFill;\n                    } else {\n                        boxWidth += charBox.kernedWidth;\n                    }\n                }\n                ctx.fillStyle = currentFill;\n                currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + maxHeight * (1 - this._fontSizeFraction) + this.offsets[type] * this.fontSize, boxWidth, this.fontSize / 15);\n                topOffset += heightOfLine;\n            }\n            this._removeShadow(ctx);\n        },\n        _getFontDeclaration: function(styleObject, forMeasuring) {\n            var style = styleObject || this;\n            return [ fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? CACHE_FONT_SIZE + \"px\" : style.fontSize + \"px\", fabric.isLikelyNode ? '\"' + style.fontFamily + '\"' : style.fontFamily ].join(\" \");\n        },\n        render: function(ctx) {\n            if (!this.visible) {\n                return;\n            }\n            if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n                return;\n            }\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n            }\n            this.callSuper(\"render\", ctx);\n        },\n        _splitTextIntoLines: function(text) {\n            var lines = text.split(this._reNewline), newLines = new Array(lines.length), newLine = [ \"\\n\" ], newText = [];\n            for (var i = 0; i < lines.length; i++) {\n                newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n                newText = newText.concat(newLines[i], newLine);\n            }\n            newText.pop();\n            return {\n                _unwrappedLines: newLines,\n                lines: lines,\n                graphemeText: newText,\n                graphemeLines: newLines\n            };\n        },\n        toObject: function(propertiesToInclude) {\n            var additionalProperties = [ \"text\", \"fontSize\", \"fontWeight\", \"fontFamily\", \"fontStyle\", \"lineHeight\", \"underline\", \"overline\", \"linethrough\", \"textAlign\", \"textBackgroundColor\", \"charSpacing\" ].concat(propertiesToInclude);\n            var obj = this.callSuper(\"toObject\", additionalProperties);\n            obj.styles = clone(this.styles, true);\n            return obj;\n        },\n        set: function(key, value) {\n            this.callSuper(\"set\", key, value);\n            var needsDims = false;\n            if (typeof key === \"object\") {\n                for (var _key in key) {\n                    needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n                }\n            } else {\n                needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n            }\n            if (needsDims) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            return this;\n        },\n        complexity: function() {\n            return 1;\n        }\n    });\n    fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\"x y dx dy font-family font-style font-weight font-size text-decoration text-anchor\".split(\" \"));\n    fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n    fabric.Text.fromElement = function(element, callback, options) {\n        if (!element) {\n            return callback(null);\n        }\n        var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES), parsedAnchor = parsedAttributes.textAnchor || \"left\";\n        options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n        options.top = options.top || 0;\n        options.left = options.left || 0;\n        if (parsedAttributes.textDecoration) {\n            var textDecoration = parsedAttributes.textDecoration;\n            if (textDecoration.indexOf(\"underline\") !== -1) {\n                options.underline = true;\n            }\n            if (textDecoration.indexOf(\"overline\") !== -1) {\n                options.overline = true;\n            }\n            if (textDecoration.indexOf(\"line-through\") !== -1) {\n                options.linethrough = true;\n            }\n            delete options.textDecoration;\n        }\n        if (\"dx\" in parsedAttributes) {\n            options.left += parsedAttributes.dx;\n        }\n        if (\"dy\" in parsedAttributes) {\n            options.top += parsedAttributes.dy;\n        }\n        if (!(\"fontSize\" in options)) {\n            options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n        }\n        var textContent = \"\";\n        if (!(\"textContent\" in element)) {\n            if (\"firstChild\" in element && element.firstChild !== null) {\n                if (\"data\" in element.firstChild && element.firstChild.data !== null) {\n                    textContent = element.firstChild.data;\n                }\n            }\n        } else {\n            textContent = element.textContent;\n        }\n        textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, \"\").replace(/\\s+/g, \" \");\n        var text = new fabric.Text(textContent, options), textHeightScaleFactor = text.getScaledHeight() / text.height, lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height, scaledDiff = lineHeightDiff * textHeightScaleFactor, textHeight = text.getScaledHeight() + scaledDiff, offX = 0;\n        if (parsedAnchor === \"center\") {\n            offX = text.getScaledWidth() / 2;\n        }\n        if (parsedAnchor === \"right\") {\n            offX = text.getScaledWidth();\n        }\n        text.set({\n            left: text.left - offX,\n            top: text.top - (textHeight - text.fontSize * (.18 + text._fontSizeFraction)) / text.lineHeight\n        });\n        callback(text);\n    };\n    fabric.Text.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Text\", object, callback, \"text\");\n    };\n    fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    fabric.util.object.extend(fabric.Text.prototype, {\n        isEmptyStyles: function(lineIndex) {\n            if (!this.styles) {\n                return true;\n            }\n            if (typeof lineIndex !== \"undefined\" && !this.styles[lineIndex]) {\n                return true;\n            }\n            var obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    for (var p3 in obj[p1][p2]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n        styleHas: function(property, lineIndex) {\n            if (!this.styles || !property || property === \"\") {\n                return false;\n            }\n            if (typeof lineIndex !== \"undefined\" && !this.styles[lineIndex]) {\n                return false;\n            }\n            var obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    if (typeof obj[p1][p2][property] !== \"undefined\") {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        cleanStyle: function(property) {\n            if (!this.styles || !property || property === \"\") {\n                return false;\n            }\n            var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue, allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n            for (var p1 in obj) {\n                letterCount = 0;\n                for (var p2 in obj[p1]) {\n                    var styleObject = obj[p1][p2], stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n                    stylesCount++;\n                    if (stylePropertyHasBeenSet) {\n                        if (!stylePropertyValue) {\n                            stylePropertyValue = styleObject[property];\n                        } else if (styleObject[property] !== stylePropertyValue) {\n                            allStyleObjectPropertiesMatch = false;\n                        }\n                        if (styleObject[property] === this[property]) {\n                            delete styleObject[property];\n                        }\n                    } else {\n                        allStyleObjectPropertiesMatch = false;\n                    }\n                    if (Object.keys(styleObject).length !== 0) {\n                        letterCount++;\n                    } else {\n                        delete obj[p1][p2];\n                    }\n                }\n                if (letterCount === 0) {\n                    delete obj[p1];\n                }\n            }\n            for (var i = 0; i < this._textLines.length; i++) {\n                graphemeCount += this._textLines[i].length;\n            }\n            if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n                this[property] = stylePropertyValue;\n                this.removeStyle(property);\n            }\n        },\n        removeStyle: function(property) {\n            if (!this.styles || !property || property === \"\") {\n                return;\n            }\n            var obj = this.styles, line, lineNum, charNum;\n            for (lineNum in obj) {\n                line = obj[lineNum];\n                for (charNum in line) {\n                    delete line[charNum][property];\n                    if (Object.keys(line[charNum]).length === 0) {\n                        delete line[charNum];\n                    }\n                }\n                if (Object.keys(line).length === 0) {\n                    delete obj[lineNum];\n                }\n            }\n        },\n        _extendStyles: function(index, styles) {\n            var loc = this.get2DCursorLocation(index);\n            if (!this._getLineStyle(loc.lineIndex)) {\n                this._setLineStyle(loc.lineIndex, {});\n            }\n            if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n                this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n            }\n            fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n        },\n        get2DCursorLocation: function(selectionStart, skipWrapping) {\n            if (typeof selectionStart === \"undefined\") {\n                selectionStart = this.selectionStart;\n            }\n            var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n            var len = lines.length;\n            for (var i = 0; i < len; i++) {\n                if (selectionStart <= lines[i].length) {\n                    return {\n                        lineIndex: i,\n                        charIndex: selectionStart\n                    };\n                }\n                selectionStart -= lines[i].length + 1;\n            }\n            return {\n                lineIndex: i - 1,\n                charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n            };\n        },\n        getSelectionStyles: function(startIndex, endIndex, complete) {\n            if (typeof startIndex === \"undefined\") {\n                startIndex = this.selectionStart || 0;\n            }\n            if (typeof endIndex === \"undefined\") {\n                endIndex = this.selectionEnd || startIndex;\n            }\n            var styles = [];\n            for (var i = startIndex; i < endIndex; i++) {\n                styles.push(this.getStyleAtPosition(i, complete));\n            }\n            return styles;\n        },\n        getStyleAtPosition: function(position, complete) {\n            var loc = this.get2DCursorLocation(position), style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n            return style || {};\n        },\n        setSelectionStyles: function(styles, startIndex, endIndex) {\n            if (typeof startIndex === \"undefined\") {\n                startIndex = this.selectionStart || 0;\n            }\n            if (typeof endIndex === \"undefined\") {\n                endIndex = this.selectionEnd || startIndex;\n            }\n            for (var i = startIndex; i < endIndex; i++) {\n                this._extendStyles(i, styles);\n            }\n            this._forceClearCache = true;\n            return this;\n        },\n        _getStyleDeclaration: function(lineIndex, charIndex) {\n            var lineStyle = this.styles && this.styles[lineIndex];\n            if (!lineStyle) {\n                return null;\n            }\n            return lineStyle[charIndex];\n        },\n        getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n            var style = this._getStyleDeclaration(lineIndex, charIndex) || {}, styleObject = {}, prop;\n            for (var i = 0; i < this._styleProperties.length; i++) {\n                prop = this._styleProperties[i];\n                styleObject[prop] = typeof style[prop] === \"undefined\" ? this[prop] : style[prop];\n            }\n            return styleObject;\n        },\n        _setStyleDeclaration: function(lineIndex, charIndex, style) {\n            this.styles[lineIndex][charIndex] = style;\n        },\n        _deleteStyleDeclaration: function(lineIndex, charIndex) {\n            delete this.styles[lineIndex][charIndex];\n        },\n        _getLineStyle: function(lineIndex) {\n            return this.styles[lineIndex];\n        },\n        _setLineStyle: function(lineIndex, style) {\n            this.styles[lineIndex] = style;\n        },\n        _deleteLineStyle: function(lineIndex) {\n            delete this.styles[lineIndex];\n        }\n    });\n})();\n\n(function() {\n    function parseDecoration(object) {\n        if (object.textDecoration) {\n            object.textDecoration.indexOf(\"underline\") > -1 && (object.underline = true);\n            object.textDecoration.indexOf(\"line-through\") > -1 && (object.linethrough = true);\n            object.textDecoration.indexOf(\"overline\") > -1 && (object.overline = true);\n            delete object.textDecoration;\n        }\n    }\n    fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, {\n        type: \"i-text\",\n        selectionStart: 0,\n        selectionEnd: 0,\n        selectionColor: \"rgba(17,119,255,0.3)\",\n        isEditing: false,\n        editable: true,\n        editingBorderColor: \"rgba(102,153,255,0.25)\",\n        cursorWidth: 2,\n        cursorColor: \"#333\",\n        cursorDelay: 1e3,\n        cursorDuration: 600,\n        caching: true,\n        _reSpace: /\\s|\\n/,\n        _currentCursorOpacity: 0,\n        _selectionDirection: null,\n        _abortCursorAnimation: false,\n        __widthOfSpace: [],\n        inCompositionMode: false,\n        initialize: function(text, options) {\n            this.callSuper(\"initialize\", text, options);\n            this.initBehavior();\n        },\n        setSelectionStart: function(index) {\n            index = Math.max(index, 0);\n            this._updateAndFire(\"selectionStart\", index);\n        },\n        setSelectionEnd: function(index) {\n            index = Math.min(index, this.text.length);\n            this._updateAndFire(\"selectionEnd\", index);\n        },\n        _updateAndFire: function(property, index) {\n            if (this[property] !== index) {\n                this._fireSelectionChanged();\n                this[property] = index;\n            }\n            this._updateTextarea();\n        },\n        _fireSelectionChanged: function() {\n            this.fire(\"selection:changed\");\n            this.canvas && this.canvas.fire(\"text:selection:changed\", {\n                target: this\n            });\n        },\n        initDimensions: function() {\n            this.isEditing && this.initDelayedCursor();\n            this.clearContextTop();\n            this.callSuper(\"initDimensions\");\n        },\n        render: function(ctx) {\n            this.clearContextTop();\n            this.callSuper(\"render\", ctx);\n            this.cursorOffsetCache = {};\n            this.renderCursorOrSelection();\n        },\n        _render: function(ctx) {\n            this.callSuper(\"_render\", ctx);\n        },\n        clearContextTop: function(skipRestore) {\n            if (!this.isEditing) {\n                return;\n            }\n            if (this.canvas && this.canvas.contextTop) {\n                var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n                ctx.save();\n                ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n                this.transform(ctx);\n                this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n                this._clearTextArea(ctx);\n                skipRestore || ctx.restore();\n            }\n        },\n        renderCursorOrSelection: function() {\n            if (!this.isEditing || !this.canvas) {\n                return;\n            }\n            var boundaries = this._getCursorBoundaries(), ctx;\n            if (this.canvas && this.canvas.contextTop) {\n                ctx = this.canvas.contextTop;\n                this.clearContextTop(true);\n            } else {\n                ctx = this.canvas.contextContainer;\n                ctx.save();\n            }\n            if (this.selectionStart === this.selectionEnd) {\n                this.renderCursor(boundaries, ctx);\n            } else {\n                this.renderSelection(boundaries, ctx);\n            }\n            ctx.restore();\n        },\n        _clearTextArea: function(ctx) {\n            var width = this.width + 4, height = this.height + 4;\n            ctx.clearRect(-width / 2, -height / 2, width, height);\n        },\n        _getCursorBoundaries: function(position) {\n            if (typeof position === \"undefined\") {\n                position = this.selectionStart;\n            }\n            var left = this._getLeftOffset(), top = this._getTopOffset(), offsets = this._getCursorBoundariesOffsets(position);\n            return {\n                left: left,\n                top: top,\n                leftOffset: offsets.left,\n                topOffset: offsets.top\n            };\n        },\n        _getCursorBoundariesOffsets: function(position) {\n            if (this.cursorOffsetCache && \"top\" in this.cursorOffsetCache) {\n                return this.cursorOffsetCache;\n            }\n            var lineLeftOffset, lineIndex = 0, charIndex = 0, topOffset = 0, leftOffset = 0, boundaries, cursorPosition = this.get2DCursorLocation(position);\n            for (var i = 0; i < cursorPosition.lineIndex; i++) {\n                topOffset += this.getHeightOfLine(i);\n            }\n            lineLeftOffset = this._getLineLeftOffset(cursorPosition.lineIndex);\n            var bound = this.__charBounds[cursorPosition.lineIndex][cursorPosition.charIndex];\n            bound && (leftOffset = bound.left);\n            if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n                leftOffset -= this._getWidthOfCharSpacing();\n            }\n            boundaries = {\n                top: topOffset,\n                left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n            };\n            this.cursorOffsetCache = boundaries;\n            return this.cursorOffsetCache;\n        },\n        renderCursor: function(boundaries, ctx) {\n            var cursorLocation = this.get2DCursorLocation(), lineIndex = cursorLocation.lineIndex, charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0, charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, \"fontSize\"), multiplier = this.scaleX * this.canvas.getZoom(), cursorWidth = this.cursorWidth / multiplier, topOffset = boundaries.topOffset;\n            topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n            if (this.inCompositionMode) {\n                this.renderSelection(boundaries, ctx);\n            }\n            ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, \"fill\");\n            ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n            ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top, cursorWidth, charHeight);\n        },\n        renderSelection: function(boundaries, ctx) {\n            var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart, selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd, isJustify = this.textAlign.indexOf(\"justify\") !== -1, start = this.get2DCursorLocation(selectionStart), end = this.get2DCursorLocation(selectionEnd), startLine = start.lineIndex, endLine = end.lineIndex, startChar = start.charIndex < 0 ? 0 : start.charIndex, endChar = end.charIndex < 0 ? 0 : end.charIndex;\n            for (var i = startLine; i <= endLine; i++) {\n                var lineOffset = this._getLineLeftOffset(i) || 0, lineHeight = this.getHeightOfLine(i), realLineHeight = 0, boxStart = 0, boxEnd = 0;\n                if (i === startLine) {\n                    boxStart = this.__charBounds[startLine][startChar].left;\n                }\n                if (i >= startLine && i < endLine) {\n                    boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5;\n                } else if (i === endLine) {\n                    if (endChar === 0) {\n                        boxEnd = this.__charBounds[endLine][endChar].left;\n                    } else {\n                        boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width;\n                    }\n                }\n                realLineHeight = lineHeight;\n                if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n                    lineHeight /= this.lineHeight;\n                }\n                if (this.inCompositionMode) {\n                    ctx.fillStyle = this.compositionColor || \"black\";\n                    ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n                } else {\n                    ctx.fillStyle = this.selectionColor;\n                    ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n                }\n                boundaries.topOffset += realLineHeight;\n            }\n        },\n        getCurrentCharFontSize: function() {\n            var cp = this._getCurrentCharIndex();\n            return this.getValueOfPropertyAt(cp.l, cp.c, \"fontSize\");\n        },\n        getCurrentCharColor: function() {\n            var cp = this._getCurrentCharIndex();\n            return this.getValueOfPropertyAt(cp.l, cp.c, \"fill\");\n        },\n        _getCurrentCharIndex: function() {\n            var cursorPosition = this.get2DCursorLocation(this.selectionStart, true), charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n            return {\n                l: cursorPosition.lineIndex,\n                c: charIndex\n            };\n        }\n    });\n    fabric.IText.fromObject = function(object, callback) {\n        parseDecoration(object);\n        if (object.styles) {\n            for (var i in object.styles) {\n                for (var j in object.styles[i]) {\n                    parseDecoration(object.styles[i][j]);\n                }\n            }\n        }\n        fabric.Object._fromObject(\"IText\", object, callback, \"text\");\n    };\n})();\n\n(function() {\n    var clone = fabric.util.object.clone;\n    fabric.util.object.extend(fabric.IText.prototype, {\n        initBehavior: function() {\n            this.initAddedHandler();\n            this.initRemovedHandler();\n            this.initCursorSelectionHandlers();\n            this.initDoubleClickSimulation();\n            this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n        },\n        onDeselect: function(options) {\n            this.isEditing && this.exitEditing();\n            this.selected = false;\n            fabric.Object.prototype.onDeselect.call(this, options);\n        },\n        initAddedHandler: function() {\n            var _this = this;\n            this.on(\"added\", function() {\n                var canvas = _this.canvas;\n                if (canvas) {\n                    if (!canvas._hasITextHandlers) {\n                        canvas._hasITextHandlers = true;\n                        _this._initCanvasHandlers(canvas);\n                    }\n                    canvas._iTextInstances = canvas._iTextInstances || [];\n                    canvas._iTextInstances.push(_this);\n                }\n            });\n        },\n        initRemovedHandler: function() {\n            var _this = this;\n            this.on(\"removed\", function() {\n                var canvas = _this.canvas;\n                if (canvas) {\n                    canvas._iTextInstances = canvas._iTextInstances || [];\n                    fabric.util.removeFromArray(canvas._iTextInstances, _this);\n                    if (canvas._iTextInstances.length === 0) {\n                        canvas._hasITextHandlers = false;\n                        _this._removeCanvasHandlers(canvas);\n                    }\n                }\n            });\n        },\n        _initCanvasHandlers: function(canvas) {\n            canvas._mouseUpITextHandler = function() {\n                if (canvas._iTextInstances) {\n                    canvas._iTextInstances.forEach(function(obj) {\n                        obj.__isMousedown = false;\n                    });\n                }\n            }.bind(this);\n            canvas.on(\"mouse:up\", canvas._mouseUpITextHandler);\n        },\n        _removeCanvasHandlers: function(canvas) {\n            canvas.off(\"mouse:up\", canvas._mouseUpITextHandler);\n        },\n        _tick: function() {\n            this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, \"_onTickComplete\");\n        },\n        _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n            var tickState;\n            tickState = {\n                isAborted: false,\n                abort: function() {\n                    this.isAborted = true;\n                }\n            };\n            obj.animate(\"_currentCursorOpacity\", targetOpacity, {\n                duration: duration,\n                onComplete: function() {\n                    if (!tickState.isAborted) {\n                        obj[completeMethod]();\n                    }\n                },\n                onChange: function() {\n                    if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n                        obj.renderCursorOrSelection();\n                    }\n                },\n                abort: function() {\n                    return tickState.isAborted;\n                }\n            });\n            return tickState;\n        },\n        _onTickComplete: function() {\n            var _this = this;\n            if (this._cursorTimeout1) {\n                clearTimeout(this._cursorTimeout1);\n            }\n            this._cursorTimeout1 = setTimeout(function() {\n                _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, \"_tick\");\n            }, 100);\n        },\n        initDelayedCursor: function(restart) {\n            var _this = this, delay = restart ? 0 : this.cursorDelay;\n            this.abortCursorAnimation();\n            this._currentCursorOpacity = 1;\n            this._cursorTimeout2 = setTimeout(function() {\n                _this._tick();\n            }, delay);\n        },\n        abortCursorAnimation: function() {\n            var shouldClear = this._currentTickState || this._currentTickCompleteState, canvas = this.canvas;\n            this._currentTickState && this._currentTickState.abort();\n            this._currentTickCompleteState && this._currentTickCompleteState.abort();\n            clearTimeout(this._cursorTimeout1);\n            clearTimeout(this._cursorTimeout2);\n            this._currentCursorOpacity = 0;\n            if (shouldClear && canvas) {\n                canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n            }\n        },\n        selectAll: function() {\n            this.selectionStart = 0;\n            this.selectionEnd = this._text.length;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            return this;\n        },\n        getSelectedText: function() {\n            return this._text.slice(this.selectionStart, this.selectionEnd).join(\"\");\n        },\n        findWordBoundaryLeft: function(startFrom) {\n            var offset = 0, index = startFrom - 1;\n            if (this._reSpace.test(this._text[index])) {\n                while (this._reSpace.test(this._text[index])) {\n                    offset++;\n                    index--;\n                }\n            }\n            while (/\\S/.test(this._text[index]) && index > -1) {\n                offset++;\n                index--;\n            }\n            return startFrom - offset;\n        },\n        findWordBoundaryRight: function(startFrom) {\n            var offset = 0, index = startFrom;\n            if (this._reSpace.test(this._text[index])) {\n                while (this._reSpace.test(this._text[index])) {\n                    offset++;\n                    index++;\n                }\n            }\n            while (/\\S/.test(this._text[index]) && index < this.text.length) {\n                offset++;\n                index++;\n            }\n            return startFrom + offset;\n        },\n        findLineBoundaryLeft: function(startFrom) {\n            var offset = 0, index = startFrom - 1;\n            while (!/\\n/.test(this._text[index]) && index > -1) {\n                offset++;\n                index--;\n            }\n            return startFrom - offset;\n        },\n        findLineBoundaryRight: function(startFrom) {\n            var offset = 0, index = startFrom;\n            while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n                offset++;\n                index++;\n            }\n            return startFrom + offset;\n        },\n        searchWordBoundary: function(selectionStart, direction) {\n            var index = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart, _char = this.text.charAt(index), reNonWord = /[ \\n\\.,;!\\?\\-]/;\n            while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n                index += direction;\n                _char = this.text.charAt(index);\n            }\n            if (reNonWord.test(_char) && _char !== \"\\n\") {\n                index += direction === 1 ? 0 : 1;\n            }\n            return index;\n        },\n        selectWord: function(selectionStart) {\n            selectionStart = selectionStart || this.selectionStart;\n            var newSelectionStart = this.searchWordBoundary(selectionStart, -1), newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n            this.selectionStart = newSelectionStart;\n            this.selectionEnd = newSelectionEnd;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            this.renderCursorOrSelection();\n        },\n        selectLine: function(selectionStart) {\n            selectionStart = selectionStart || this.selectionStart;\n            var newSelectionStart = this.findLineBoundaryLeft(selectionStart), newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n            this.selectionStart = newSelectionStart;\n            this.selectionEnd = newSelectionEnd;\n            this._fireSelectionChanged();\n            this._updateTextarea();\n            return this;\n        },\n        enterEditing: function(e) {\n            if (this.isEditing || !this.editable) {\n                return;\n            }\n            if (this.canvas) {\n                this.canvas.calcOffset();\n                this.exitEditingOnOthers(this.canvas);\n            }\n            this.isEditing = true;\n            this.initHiddenTextarea(e);\n            this.hiddenTextarea.focus();\n            this.hiddenTextarea.value = this.text;\n            this._updateTextarea();\n            this._saveEditingProps();\n            this._setEditingProps();\n            this._textBeforeEdit = this.text;\n            this._tick();\n            this.fire(\"editing:entered\");\n            this._fireSelectionChanged();\n            if (!this.canvas) {\n                return this;\n            }\n            this.canvas.fire(\"text:editing:entered\", {\n                target: this\n            });\n            this.initMouseMoveHandler();\n            this.canvas.requestRenderAll();\n            return this;\n        },\n        exitEditingOnOthers: function(canvas) {\n            if (canvas._iTextInstances) {\n                canvas._iTextInstances.forEach(function(obj) {\n                    obj.selected = false;\n                    if (obj.isEditing) {\n                        obj.exitEditing();\n                    }\n                });\n            }\n        },\n        initMouseMoveHandler: function() {\n            this.canvas.on(\"mouse:move\", this.mouseMoveHandler);\n        },\n        mouseMoveHandler: function(options) {\n            if (!this.__isMousedown || !this.isEditing) {\n                return;\n            }\n            var newSelectionStart = this.getSelectionStartFromPointer(options.e), currentStart = this.selectionStart, currentEnd = this.selectionEnd;\n            if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n                return;\n            }\n            if (newSelectionStart > this.__selectionStartOnMouseDown) {\n                this.selectionStart = this.__selectionStartOnMouseDown;\n                this.selectionEnd = newSelectionStart;\n            } else {\n                this.selectionStart = newSelectionStart;\n                this.selectionEnd = this.__selectionStartOnMouseDown;\n            }\n            if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n                this.restartCursorIfNeeded();\n                this._fireSelectionChanged();\n                this._updateTextarea();\n                this.renderCursorOrSelection();\n            }\n        },\n        _setEditingProps: function() {\n            this.hoverCursor = \"text\";\n            if (this.canvas) {\n                this.canvas.defaultCursor = this.canvas.moveCursor = \"text\";\n            }\n            this.borderColor = this.editingBorderColor;\n            this.hasControls = this.selectable = false;\n            this.lockMovementX = this.lockMovementY = true;\n        },\n        fromStringToGraphemeSelection: function(start, end, text) {\n            var smallerTextStart = text.slice(0, start), graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n            if (start === end) {\n                return {\n                    selectionStart: graphemeStart,\n                    selectionEnd: graphemeStart\n                };\n            }\n            var smallerTextEnd = text.slice(start, end), graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n            return {\n                selectionStart: graphemeStart,\n                selectionEnd: graphemeStart + graphemeEnd\n            };\n        },\n        fromGraphemeToStringSelection: function(start, end, _text) {\n            var smallerTextStart = _text.slice(0, start), graphemeStart = smallerTextStart.join(\"\").length;\n            if (start === end) {\n                return {\n                    selectionStart: graphemeStart,\n                    selectionEnd: graphemeStart\n                };\n            }\n            var smallerTextEnd = _text.slice(start, end), graphemeEnd = smallerTextEnd.join(\"\").length;\n            return {\n                selectionStart: graphemeStart,\n                selectionEnd: graphemeStart + graphemeEnd\n            };\n        },\n        _updateTextarea: function() {\n            this.cursorOffsetCache = {};\n            if (!this.hiddenTextarea) {\n                return;\n            }\n            if (!this.inCompositionMode) {\n                var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n                this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n                this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n            }\n            this.updateTextareaPosition();\n        },\n        updateFromTextArea: function() {\n            if (!this.hiddenTextarea) {\n                return;\n            }\n            this.cursorOffsetCache = {};\n            this.text = this.hiddenTextarea.value;\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n            this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n            if (!this.inCompositionMode) {\n                this.selectionStart = newSelection.selectionStart;\n            }\n            this.updateTextareaPosition();\n        },\n        updateTextareaPosition: function() {\n            if (this.selectionStart === this.selectionEnd) {\n                var style = this._calcTextareaPosition();\n                this.hiddenTextarea.style.left = style.left;\n                this.hiddenTextarea.style.top = style.top;\n            }\n        },\n        _calcTextareaPosition: function() {\n            if (!this.canvas) {\n                return {\n                    x: 1,\n                    y: 1\n                };\n            }\n            var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart, boundaries = this._getCursorBoundaries(desiredPostion), cursorLocation = this.get2DCursorLocation(desiredPostion), lineIndex = cursorLocation.lineIndex, charIndex = cursorLocation.charIndex, charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, \"fontSize\") * this.lineHeight, leftOffset = boundaries.leftOffset, m = this.calcTransformMatrix(), p = {\n                x: boundaries.left + leftOffset,\n                y: boundaries.top + boundaries.topOffset + charHeight\n            }, upperCanvas = this.canvas.upperCanvasEl, maxWidth = upperCanvas.width - charHeight, maxHeight = upperCanvas.height - charHeight;\n            p = fabric.util.transformPoint(p, m);\n            p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n            if (p.x < 0) {\n                p.x = 0;\n            }\n            if (p.x > maxWidth) {\n                p.x = maxWidth;\n            }\n            if (p.y < 0) {\n                p.y = 0;\n            }\n            if (p.y > maxHeight) {\n                p.y = maxHeight;\n            }\n            p.x += this.canvas._offset.left;\n            p.y += this.canvas._offset.top;\n            return {\n                left: p.x + \"px\",\n                top: p.y + \"px\",\n                fontSize: charHeight + \"px\",\n                charHeight: charHeight\n            };\n        },\n        _saveEditingProps: function() {\n            this._savedProps = {\n                hasControls: this.hasControls,\n                borderColor: this.borderColor,\n                lockMovementX: this.lockMovementX,\n                lockMovementY: this.lockMovementY,\n                hoverCursor: this.hoverCursor,\n                defaultCursor: this.canvas && this.canvas.defaultCursor,\n                moveCursor: this.canvas && this.canvas.moveCursor\n            };\n        },\n        _restoreEditingProps: function() {\n            if (!this._savedProps) {\n                return;\n            }\n            this.hoverCursor = this._savedProps.hoverCursor;\n            this.hasControls = this._savedProps.hasControls;\n            this.borderColor = this._savedProps.borderColor;\n            this.lockMovementX = this._savedProps.lockMovementX;\n            this.lockMovementY = this._savedProps.lockMovementY;\n            if (this.canvas) {\n                this.canvas.defaultCursor = this._savedProps.defaultCursor;\n                this.canvas.moveCursor = this._savedProps.moveCursor;\n            }\n        },\n        exitEditing: function() {\n            var isTextChanged = this._textBeforeEdit !== this.text;\n            this.selected = false;\n            this.isEditing = false;\n            this.selectable = true;\n            this.selectionEnd = this.selectionStart;\n            if (this.hiddenTextarea) {\n                this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n                this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n                this.hiddenTextarea = null;\n            }\n            this.abortCursorAnimation();\n            this._restoreEditingProps();\n            this._currentCursorOpacity = 0;\n            if (this._shouldClearDimensionCache()) {\n                this.initDimensions();\n                this.setCoords();\n            }\n            this.fire(\"editing:exited\");\n            isTextChanged && this.fire(\"modified\");\n            if (this.canvas) {\n                this.canvas.off(\"mouse:move\", this.mouseMoveHandler);\n                this.canvas.fire(\"text:editing:exited\", {\n                    target: this\n                });\n                isTextChanged && this.canvas.fire(\"object:modified\", {\n                    target: this\n                });\n            }\n            return this;\n        },\n        _removeExtraneousStyles: function() {\n            for (var prop in this.styles) {\n                if (!this._textLines[prop]) {\n                    delete this.styles[prop];\n                }\n            }\n        },\n        removeStyleFromTo: function(start, end) {\n            var cursorStart = this.get2DCursorLocation(start, true), cursorEnd = this.get2DCursorLocation(end, true), lineStart = cursorStart.lineIndex, charStart = cursorStart.charIndex, lineEnd = cursorEnd.lineIndex, charEnd = cursorEnd.charIndex, i, styleObj;\n            if (lineStart !== lineEnd) {\n                if (this.styles[lineStart]) {\n                    for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n                        delete this.styles[lineStart][i];\n                    }\n                }\n                if (this.styles[lineEnd]) {\n                    for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n                        styleObj = this.styles[lineEnd][i];\n                        if (styleObj) {\n                            this.styles[lineStart] || (this.styles[lineStart] = {});\n                            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n                        }\n                    }\n                }\n                for (i = lineStart + 1; i <= lineEnd; i++) {\n                    delete this.styles[i];\n                }\n                this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n            } else {\n                if (this.styles[lineStart]) {\n                    styleObj = this.styles[lineStart];\n                    var diff = charEnd - charStart, numericChar, _char;\n                    for (i = charStart; i < charEnd; i++) {\n                        delete styleObj[i];\n                    }\n                    for (_char in this.styles[lineStart]) {\n                        numericChar = parseInt(_char, 10);\n                        if (numericChar >= charEnd) {\n                            styleObj[numericChar - diff] = styleObj[_char];\n                            delete styleObj[_char];\n                        }\n                    }\n                }\n            }\n        },\n        shiftLineStyles: function(lineIndex, offset) {\n            var clonedStyles = clone(this.styles);\n            for (var line in this.styles) {\n                var numericLine = parseInt(line, 10);\n                if (numericLine > lineIndex) {\n                    this.styles[numericLine + offset] = clonedStyles[numericLine];\n                    if (!clonedStyles[numericLine - offset]) {\n                        delete this.styles[numericLine];\n                    }\n                }\n            }\n        },\n        restartCursorIfNeeded: function() {\n            if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n                this.initDelayedCursor();\n            }\n        },\n        insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n            var currentCharStyle, newLineStyles = {}, somethingAdded = false;\n            qty || (qty = 1);\n            this.shiftLineStyles(lineIndex, qty);\n            if (this.styles[lineIndex]) {\n                currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n            }\n            for (var index in this.styles[lineIndex]) {\n                var numIndex = parseInt(index, 10);\n                if (numIndex >= charIndex) {\n                    somethingAdded = true;\n                    newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n                    delete this.styles[lineIndex][index];\n                }\n            }\n            if (somethingAdded) {\n                this.styles[lineIndex + qty] = newLineStyles;\n            } else {\n                delete this.styles[lineIndex + qty];\n            }\n            while (qty > 1) {\n                qty--;\n                if (copiedStyle && copiedStyle[qty]) {\n                    this.styles[lineIndex + qty] = {\n                        0: clone(copiedStyle[qty])\n                    };\n                } else if (currentCharStyle) {\n                    this.styles[lineIndex + qty] = {\n                        0: clone(currentCharStyle)\n                    };\n                } else {\n                    delete this.styles[lineIndex + qty];\n                }\n            }\n            this._forceClearCache = true;\n        },\n        insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n            if (!this.styles) {\n                this.styles = {};\n            }\n            var currentLineStyles = this.styles[lineIndex], currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n            quantity || (quantity = 1);\n            for (var index in currentLineStylesCloned) {\n                var numericIndex = parseInt(index, 10);\n                if (numericIndex >= charIndex) {\n                    currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n                    if (!currentLineStylesCloned[numericIndex - quantity]) {\n                        delete currentLineStyles[numericIndex];\n                    }\n                }\n            }\n            this._forceClearCache = true;\n            if (copiedStyle) {\n                while (quantity--) {\n                    if (!Object.keys(copiedStyle[quantity]).length) {\n                        continue;\n                    }\n                    if (!this.styles[lineIndex]) {\n                        this.styles[lineIndex] = {};\n                    }\n                    this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n                }\n                return;\n            }\n            if (!currentLineStyles) {\n                return;\n            }\n            var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n            while (newStyle && quantity--) {\n                this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n            }\n        },\n        insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n            var cursorLoc = this.get2DCursorLocation(start, true), addedLines = [ 0 ], linesLenght = 0;\n            for (var i = 0; i < insertedText.length; i++) {\n                if (insertedText[i] === \"\\n\") {\n                    linesLenght++;\n                    addedLines[linesLenght] = 0;\n                } else {\n                    addedLines[linesLenght]++;\n                }\n            }\n            if (addedLines[0] > 0) {\n                this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n                copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n            }\n            linesLenght && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n            for (var i = 1; i < linesLenght; i++) {\n                if (addedLines[i] > 0) {\n                    this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n                } else if (copiedStyle) {\n                    this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n                }\n                copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n            }\n            if (addedLines[i] > 0) {\n                this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n            }\n        },\n        setSelectionStartEndWithShift: function(start, end, newSelection) {\n            if (newSelection <= start) {\n                if (end === start) {\n                    this._selectionDirection = \"left\";\n                } else if (this._selectionDirection === \"right\") {\n                    this._selectionDirection = \"left\";\n                    this.selectionEnd = start;\n                }\n                this.selectionStart = newSelection;\n            } else if (newSelection > start && newSelection < end) {\n                if (this._selectionDirection === \"right\") {\n                    this.selectionEnd = newSelection;\n                } else {\n                    this.selectionStart = newSelection;\n                }\n            } else {\n                if (end === start) {\n                    this._selectionDirection = \"right\";\n                } else if (this._selectionDirection === \"left\") {\n                    this._selectionDirection = \"right\";\n                    this.selectionStart = end;\n                }\n                this.selectionEnd = newSelection;\n            }\n        },\n        setSelectionInBoundaries: function() {\n            var length = this.text.length;\n            if (this.selectionStart > length) {\n                this.selectionStart = length;\n            } else if (this.selectionStart < 0) {\n                this.selectionStart = 0;\n            }\n            if (this.selectionEnd > length) {\n                this.selectionEnd = length;\n            } else if (this.selectionEnd < 0) {\n                this.selectionEnd = 0;\n            }\n        }\n    });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype, {\n    initDoubleClickSimulation: function() {\n        this.__lastClickTime = +new Date();\n        this.__lastLastClickTime = +new Date();\n        this.__lastPointer = {};\n        this.on(\"mousedown\", this.onMouseDown.bind(this));\n    },\n    onMouseDown: function(options) {\n        this.__newClickTime = +new Date();\n        var newPointer = this.canvas.getPointer(options.e);\n        if (this.isTripleClick(newPointer, options.e)) {\n            this.fire(\"tripleclick\", options);\n            this._stopEvent(options.e);\n        }\n        this.__lastLastClickTime = this.__lastClickTime;\n        this.__lastClickTime = this.__newClickTime;\n        this.__lastPointer = newPointer;\n        this.__lastIsEditing = this.isEditing;\n        this.__lastSelected = this.selected;\n    },\n    isTripleClick: function(newPointer) {\n        return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n    },\n    _stopEvent: function(e) {\n        e.preventDefault && e.preventDefault();\n        e.stopPropagation && e.stopPropagation();\n    },\n    initCursorSelectionHandlers: function() {\n        this.initMousedownHandler();\n        this.initMouseupHandler();\n        this.initClicks();\n    },\n    initClicks: function() {\n        this.on(\"mousedblclick\", function(options) {\n            this.selectWord(this.getSelectionStartFromPointer(options.e));\n        });\n        this.on(\"tripleclick\", function(options) {\n            this.selectLine(this.getSelectionStartFromPointer(options.e));\n        });\n    },\n    _mouseDownHandler: function(options) {\n        if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n            return;\n        }\n        var pointer = this.canvas.getPointer(options.e);\n        this.__mousedownX = pointer.x;\n        this.__mousedownY = pointer.y;\n        this.__isMousedown = true;\n        if (this.selected) {\n            this.setCursorByClick(options.e);\n        }\n        if (this.isEditing) {\n            this.__selectionStartOnMouseDown = this.selectionStart;\n            if (this.selectionStart === this.selectionEnd) {\n                this.abortCursorAnimation();\n            }\n            this.renderCursorOrSelection();\n        }\n    },\n    initMousedownHandler: function() {\n        this.on(\"mousedown\", this._mouseDownHandler);\n    },\n    _isObjectMoved: function(e) {\n        var pointer = this.canvas.getPointer(e);\n        return this.__mousedownX !== pointer.x || this.__mousedownY !== pointer.y;\n    },\n    initMouseupHandler: function() {\n        this.on(\"mouseup\", function(options) {\n            this.__isMousedown = false;\n            if (!this.editable || this._isObjectMoved(options.e) || options.e.button && options.e.button !== 1) {\n                return;\n            }\n            if (this.__lastSelected && !this.__corner) {\n                this.enterEditing(options.e);\n                if (this.selectionStart === this.selectionEnd) {\n                    this.initDelayedCursor(true);\n                } else {\n                    this.renderCursorOrSelection();\n                }\n            }\n            this.selected = true;\n        });\n    },\n    setCursorByClick: function(e) {\n        var newSelection = this.getSelectionStartFromPointer(e), start = this.selectionStart, end = this.selectionEnd;\n        if (e.shiftKey) {\n            this.setSelectionStartEndWithShift(start, end, newSelection);\n        } else {\n            this.selectionStart = newSelection;\n            this.selectionEnd = newSelection;\n        }\n        if (this.isEditing) {\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    getSelectionStartFromPointer: function(e) {\n        var mouseOffset = this.getLocalPointer(e), prevWidth = 0, width = 0, height = 0, charIndex = 0, lineIndex = 0, lineLeftOffset, line;\n        for (var i = 0, len = this._textLines.length; i < len; i++) {\n            if (height <= mouseOffset.y) {\n                height += this.getHeightOfLine(i) * this.scaleY;\n                lineIndex = i;\n                if (i > 0) {\n                    charIndex += this._textLines[i - 1].length + 1;\n                }\n            } else {\n                break;\n            }\n        }\n        lineLeftOffset = this._getLineLeftOffset(lineIndex);\n        width = lineLeftOffset * this.scaleX;\n        line = this._textLines[lineIndex];\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n            prevWidth = width;\n            width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n            if (width <= mouseOffset.x) {\n                charIndex++;\n            } else {\n                break;\n            }\n        }\n        return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n    },\n    _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n        var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth, distanceBtwNextCharAndCursor = width - mouseOffset.x, offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1, newSelectionStart = index + offset;\n        if (this.flipX) {\n            newSelectionStart = jlen - newSelectionStart;\n        }\n        if (newSelectionStart > this._text.length) {\n            newSelectionStart = this._text.length;\n        }\n        return newSelectionStart;\n    }\n});\n\nfabric.util.object.extend(fabric.IText.prototype, {\n    initHiddenTextarea: function() {\n        this.hiddenTextarea = fabric.document.createElement(\"textarea\");\n        this.hiddenTextarea.setAttribute(\"autocapitalize\", \"off\");\n        this.hiddenTextarea.setAttribute(\"autocorrect\", \"off\");\n        this.hiddenTextarea.setAttribute(\"autocomplete\", \"off\");\n        this.hiddenTextarea.setAttribute(\"spellcheck\", \"false\");\n        this.hiddenTextarea.setAttribute(\"data-fabric-hiddentextarea\", \"\");\n        this.hiddenTextarea.setAttribute(\"wrap\", \"off\");\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.cssText = \"position: absolute; top: \" + style.top + \"; left: \" + style.left + \"; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;\" + \" line-height: 1px; paddingｰtop: \" + style.fontSize + \";\";\n        fabric.document.body.appendChild(this.hiddenTextarea);\n        fabric.util.addListener(this.hiddenTextarea, \"keydown\", this.onKeyDown.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"keyup\", this.onKeyUp.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"input\", this.onInput.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"copy\", this.copy.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"cut\", this.copy.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"paste\", this.paste.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionstart\", this.onCompositionStart.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionupdate\", this.onCompositionUpdate.bind(this));\n        fabric.util.addListener(this.hiddenTextarea, \"compositionend\", this.onCompositionEnd.bind(this));\n        if (!this._clickHandlerInitialized && this.canvas) {\n            fabric.util.addListener(this.canvas.upperCanvasEl, \"click\", this.onClick.bind(this));\n            this._clickHandlerInitialized = true;\n        }\n    },\n    keysMap: {\n        9: \"exitEditing\",\n        27: \"exitEditing\",\n        33: \"moveCursorUp\",\n        34: \"moveCursorDown\",\n        35: \"moveCursorRight\",\n        36: \"moveCursorLeft\",\n        37: \"moveCursorLeft\",\n        38: \"moveCursorUp\",\n        39: \"moveCursorRight\",\n        40: \"moveCursorDown\"\n    },\n    ctrlKeysMapUp: {\n        67: \"copy\",\n        88: \"cut\"\n    },\n    ctrlKeysMapDown: {\n        65: \"selectAll\"\n    },\n    onClick: function() {\n        this.hiddenTextarea && this.hiddenTextarea.focus();\n    },\n    onKeyDown: function(e) {\n        if (!this.isEditing || this.inCompositionMode) {\n            return;\n        }\n        if (e.keyCode in this.keysMap) {\n            this[this.keysMap[e.keyCode]](e);\n        } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n            this[this.ctrlKeysMapDown[e.keyCode]](e);\n        } else {\n            return;\n        }\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        if (e.keyCode >= 33 && e.keyCode <= 40) {\n            this.clearContextTop();\n            this.renderCursorOrSelection();\n        } else {\n            this.canvas && this.canvas.requestRenderAll();\n        }\n    },\n    onKeyUp: function(e) {\n        if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n            this._copyDone = false;\n            return;\n        }\n        if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n            this[this.ctrlKeysMapUp[e.keyCode]](e);\n        } else {\n            return;\n        }\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        this.canvas && this.canvas.requestRenderAll();\n    },\n    onInput: function(e) {\n        var fromPaste = this.fromPaste;\n        this.fromPaste = false;\n        e && e.stopPropagation();\n        if (!this.isEditing) {\n            return;\n        }\n        var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText, charCount = this._text.length, nextCharCount = nextText.length, removedText, insertedText, charDiff = nextCharCount - charCount;\n        if (this.hiddenTextarea.value === \"\") {\n            this.styles = {};\n            this.updateFromTextArea();\n            this.fire(\"changed\");\n            if (this.canvas) {\n                this.canvas.fire(\"text:changed\", {\n                    target: this\n                });\n                this.canvas.requestRenderAll();\n            }\n            return;\n        }\n        var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n        var backDelete = this.selectionStart > textareaSelection.selectionStart;\n        if (this.selectionStart !== this.selectionEnd) {\n            removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n            charDiff += this.selectionEnd - this.selectionStart;\n        } else if (nextCharCount < charCount) {\n            if (backDelete) {\n                removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n            } else {\n                removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n            }\n        }\n        insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n        if (removedText && removedText.length) {\n            if (this.selectionStart !== this.selectionEnd) {\n                this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n            } else if (backDelete) {\n                this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n            } else {\n                this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n            }\n        }\n        if (insertedText.length) {\n            if (fromPaste && insertedText.join(\"\") === fabric.copiedText) {\n                this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n            } else {\n                this.insertNewStyleBlock(insertedText, this.selectionStart);\n            }\n        }\n        this.updateFromTextArea();\n        this.fire(\"changed\");\n        if (this.canvas) {\n            this.canvas.fire(\"text:changed\", {\n                target: this\n            });\n            this.canvas.requestRenderAll();\n        }\n    },\n    onCompositionStart: function() {\n        this.inCompositionMode = true;\n    },\n    onCompositionEnd: function() {\n        this.inCompositionMode = false;\n    },\n    onCompositionUpdate: function(e) {\n        this.compositionStart = e.target.selectionStart;\n        this.compositionEnd = e.target.selectionEnd;\n        this.updateTextareaPosition();\n    },\n    copy: function() {\n        if (this.selectionStart === this.selectionEnd) {\n            return;\n        }\n        fabric.copiedText = this.getSelectedText();\n        fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n        this._copyDone = true;\n    },\n    paste: function() {\n        this.fromPaste = true;\n    },\n    _getClipboardData: function(e) {\n        return e && e.clipboardData || fabric.window.clipboardData;\n    },\n    _getWidthBeforeCursor: function(lineIndex, charIndex) {\n        var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n        if (charIndex > 0) {\n            bound = this.__charBounds[lineIndex][charIndex - 1];\n            widthBeforeCursor += bound.left + bound.width;\n        }\n        return widthBeforeCursor;\n    },\n    getDownCursorOffset: function(e, isRight) {\n        var selectionProp = this._getSelectionForOffset(e, isRight), cursorLocation = this.get2DCursorLocation(selectionProp), lineIndex = cursorLocation.lineIndex;\n        if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n            return this._text.length - selectionProp;\n        }\n        var charIndex = cursorLocation.charIndex, widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex), indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor), textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n        return textAfterCursor.length + indexOnOtherLine + 2;\n    },\n    _getSelectionForOffset: function(e, isRight) {\n        if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n            return this.selectionEnd;\n        } else {\n            return this.selectionStart;\n        }\n    },\n    getUpCursorOffset: function(e, isRight) {\n        var selectionProp = this._getSelectionForOffset(e, isRight), cursorLocation = this.get2DCursorLocation(selectionProp), lineIndex = cursorLocation.lineIndex;\n        if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n            return -selectionProp;\n        }\n        var charIndex = cursorLocation.charIndex, widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex), indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor), textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n        return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n    },\n    _getIndexOnLine: function(lineIndex, width) {\n        var line = this._textLines[lineIndex], lineLeftOffset = this._getLineLeftOffset(lineIndex), widthOfCharsOnLine = lineLeftOffset, indexOnLine = 0, charWidth, foundMatch;\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n            charWidth = this.__charBounds[lineIndex][j].width;\n            widthOfCharsOnLine += charWidth;\n            if (widthOfCharsOnLine > width) {\n                foundMatch = true;\n                var leftEdge = widthOfCharsOnLine - charWidth, rightEdge = widthOfCharsOnLine, offsetFromLeftEdge = Math.abs(leftEdge - width), offsetFromRightEdge = Math.abs(rightEdge - width);\n                indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n                break;\n            }\n        }\n        if (!foundMatch) {\n            indexOnLine = line.length - 1;\n        }\n        return indexOnLine;\n    },\n    moveCursorDown: function(e) {\n        if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n            return;\n        }\n        this._moveCursorUpOrDown(\"Down\", e);\n    },\n    moveCursorUp: function(e) {\n        if (this.selectionStart === 0 && this.selectionEnd === 0) {\n            return;\n        }\n        this._moveCursorUpOrDown(\"Up\", e);\n    },\n    _moveCursorUpOrDown: function(direction, e) {\n        var action = \"get\" + direction + \"CursorOffset\", offset = this[action](e, this._selectionDirection === \"right\");\n        if (e.shiftKey) {\n            this.moveCursorWithShift(offset);\n        } else {\n            this.moveCursorWithoutShift(offset);\n        }\n        if (offset !== 0) {\n            this.setSelectionInBoundaries();\n            this.abortCursorAnimation();\n            this._currentCursorOpacity = 1;\n            this.initDelayedCursor();\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    moveCursorWithShift: function(offset) {\n        var newSelection = this._selectionDirection === \"left\" ? this.selectionStart + offset : this.selectionEnd + offset;\n        this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n        return offset !== 0;\n    },\n    moveCursorWithoutShift: function(offset) {\n        if (offset < 0) {\n            this.selectionStart += offset;\n            this.selectionEnd = this.selectionStart;\n        } else {\n            this.selectionEnd += offset;\n            this.selectionStart = this.selectionEnd;\n        }\n        return offset !== 0;\n    },\n    moveCursorLeft: function(e) {\n        if (this.selectionStart === 0 && this.selectionEnd === 0) {\n            return;\n        }\n        this._moveCursorLeftOrRight(\"Left\", e);\n    },\n    _move: function(e, prop, direction) {\n        var newValue;\n        if (e.altKey) {\n            newValue = this[\"findWordBoundary\" + direction](this[prop]);\n        } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n            newValue = this[\"findLineBoundary\" + direction](this[prop]);\n        } else {\n            this[prop] += direction === \"Left\" ? -1 : 1;\n            return true;\n        }\n        if (typeof newValue !== undefined && this[prop] !== newValue) {\n            this[prop] = newValue;\n            return true;\n        }\n    },\n    _moveLeft: function(e, prop) {\n        return this._move(e, prop, \"Left\");\n    },\n    _moveRight: function(e, prop) {\n        return this._move(e, prop, \"Right\");\n    },\n    moveCursorLeftWithoutShift: function(e) {\n        var change = true;\n        this._selectionDirection = \"left\";\n        if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n            change = this._moveLeft(e, \"selectionStart\");\n        }\n        this.selectionEnd = this.selectionStart;\n        return change;\n    },\n    moveCursorLeftWithShift: function(e) {\n        if (this._selectionDirection === \"right\" && this.selectionStart !== this.selectionEnd) {\n            return this._moveLeft(e, \"selectionEnd\");\n        } else if (this.selectionStart !== 0) {\n            this._selectionDirection = \"left\";\n            return this._moveLeft(e, \"selectionStart\");\n        }\n    },\n    moveCursorRight: function(e) {\n        if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n            return;\n        }\n        this._moveCursorLeftOrRight(\"Right\", e);\n    },\n    _moveCursorLeftOrRight: function(direction, e) {\n        var actionName = \"moveCursor\" + direction + \"With\";\n        this._currentCursorOpacity = 1;\n        if (e.shiftKey) {\n            actionName += \"Shift\";\n        } else {\n            actionName += \"outShift\";\n        }\n        if (this[actionName](e)) {\n            this.abortCursorAnimation();\n            this.initDelayedCursor();\n            this._fireSelectionChanged();\n            this._updateTextarea();\n        }\n    },\n    moveCursorRightWithShift: function(e) {\n        if (this._selectionDirection === \"left\" && this.selectionStart !== this.selectionEnd) {\n            return this._moveRight(e, \"selectionStart\");\n        } else if (this.selectionEnd !== this._text.length) {\n            this._selectionDirection = \"right\";\n            return this._moveRight(e, \"selectionEnd\");\n        }\n    },\n    moveCursorRightWithoutShift: function(e) {\n        var changed = true;\n        this._selectionDirection = \"right\";\n        if (this.selectionStart === this.selectionEnd) {\n            changed = this._moveRight(e, \"selectionStart\");\n            this.selectionEnd = this.selectionStart;\n        } else {\n            this.selectionStart = this.selectionEnd;\n        }\n        return changed;\n    },\n    removeChars: function(start, end) {\n        if (typeof end === \"undefined\") {\n            end = start + 1;\n        }\n        this.removeStyleFromTo(start, end);\n        this._text.splice(start, end - start);\n        this.text = this._text.join(\"\");\n        this.set(\"dirty\", true);\n        if (this._shouldClearDimensionCache()) {\n            this.initDimensions();\n            this.setCoords();\n        }\n        this._removeExtraneousStyles();\n    },\n    insertChars: function(text, style, start, end) {\n        if (typeof end === \"undefined\") {\n            end = start;\n        }\n        if (end > start) {\n            this.removeStyleFromTo(start, end);\n        }\n        var graphemes = fabric.util.string.graphemeSplit(text);\n        this.insertNewStyleBlock(graphemes, start, style);\n        this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n        this.text = this._text.join(\"\");\n        this.set(\"dirty\", true);\n        if (this._shouldClearDimensionCache()) {\n            this.initDimensions();\n            this.setCoords();\n        }\n        this._removeExtraneousStyles();\n    }\n});\n\n(function() {\n    var toFixed = fabric.util.toFixed;\n    fabric.util.object.extend(fabric.Text.prototype, {\n        toSVG: function(reviver) {\n            var markup = this._createBaseSVGMarkup(), offsets = this._getSVGLeftTopOffsets(), textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n            this._wrapSVGTextAndBg(markup, textAndBg);\n            return reviver ? reviver(markup.join(\"\")) : markup.join(\"\");\n        },\n        _getSVGLeftTopOffsets: function() {\n            return {\n                textLeft: -this.width / 2,\n                textTop: -this.height / 2,\n                lineTop: this.getHeightOfLine(0)\n            };\n        },\n        _wrapSVGTextAndBg: function(markup, textAndBg) {\n            var noShadow = true, filter = this.getSvgFilter(), style = filter === \"\" ? \"\" : ' style=\"' + filter + '\"', textDecoration = this.getSvgTextDecoration(this);\n            markup.push(\"\\t<g \", this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"', style, \">\\n\", textAndBg.textBgRects.join(\"\"), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, \"'\") + '\" ' : \"\", this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : \"\", this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : \"\", this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : \"\", textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : \"\", 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), \" >\", textAndBg.textSpans.join(\"\"), \"</text>\\n\", \"\\t</g>\\n\");\n        },\n        _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n            var textSpans = [], textBgRects = [], height = textTopOffset, lineOffset;\n            this._setSVGBg(textBgRects);\n            for (var i = 0, len = this._textLines.length; i < len; i++) {\n                lineOffset = this._getLineLeftOffset(i);\n                if (this.textBackgroundColor || this.styleHas(\"textBackgroundColor\", i)) {\n                    this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n                }\n                this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n                height += this.getHeightOfLine(i);\n            }\n            return {\n                textSpans: textSpans,\n                textBgRects: textBgRects\n            };\n        },\n        _createTextCharSpan: function(_char, styleDecl, left, top) {\n            var styleProps = this.getSvgSpanStyles(styleDecl, _char !== _char.trim()), fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : \"\", NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            return [ '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', fillStyles, \">\", fabric.util.string.escapeXml(_char), \"</tspan>\" ].join(\"\");\n        },\n        _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n            var lineHeight = this.getHeightOfLine(lineIndex), isJustify = this.textAlign.indexOf(\"justify\") !== -1, actualStyle, nextStyle, charsToRender = \"\", charBox, style, boxWidth = 0, line = this._textLines[lineIndex], timeToRender;\n            textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n            for (var i = 0, len = line.length - 1; i <= len; i++) {\n                timeToRender = i === len || this.charSpacing;\n                charsToRender += line[i];\n                charBox = this.__charBounds[lineIndex][i];\n                if (boxWidth === 0) {\n                    textLeftOffset += charBox.kernedWidth - charBox.width;\n                    boxWidth += charBox.width;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n                if (isJustify && !timeToRender) {\n                    if (this._reSpaceAndTab.test(line[i])) {\n                        timeToRender = true;\n                    }\n                }\n                if (!timeToRender) {\n                    actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n                    nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n                    timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n                }\n                if (timeToRender) {\n                    style = this._getStyleDeclaration(lineIndex, i) || {};\n                    textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n                    charsToRender = \"\";\n                    actualStyle = nextStyle;\n                    textLeftOffset += boxWidth;\n                    boxWidth = 0;\n                }\n            }\n        },\n        _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n            var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n            textBgRects.push(\"\\t\\t<rect \", this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n        },\n        _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n            var line = this._textLines[i], heightOfLine = this.getHeightOfLine(i) / this.lineHeight, boxWidth = 0, boxStart = 0, charBox, currentColor, lastColor = this.getValueOfPropertyAt(i, 0, \"textBackgroundColor\");\n            for (var j = 0, jlen = line.length; j < jlen; j++) {\n                charBox = this.__charBounds[i][j];\n                currentColor = this.getValueOfPropertyAt(i, j, \"textBackgroundColor\");\n                if (currentColor !== lastColor) {\n                    lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n                    boxStart = charBox.left;\n                    boxWidth = charBox.width;\n                    lastColor = currentColor;\n                } else {\n                    boxWidth += charBox.kernedWidth;\n                }\n            }\n            currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n        },\n        _getFillAttributes: function(value) {\n            var fillColor = value && typeof value === \"string\" ? new fabric.Color(value) : \"\";\n            if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n                return 'fill=\"' + value + '\"';\n            }\n            return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n        },\n        _getSVGLineTopOffset: function(lineIndex) {\n            var lineTopOffset = 0, lastHeight = 0;\n            for (var j = 0; j < lineIndex; j++) {\n                lineTopOffset += this.getHeightOfLine(j);\n            }\n            lastHeight = this.getHeightOfLine(j);\n            return {\n                lineTop: lineTopOffset,\n                offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n            };\n        },\n        getSvgStyles: function(skipShadow) {\n            var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n            return svgStyle + \" white-space: pre;\";\n        }\n    });\n})();\n\n(function(global) {\n    \"use strict\";\n    var fabric = global.fabric || (global.fabric = {});\n    fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n        type: \"textbox\",\n        minWidth: 20,\n        dynamicMinWidth: 2,\n        __cachedLines: null,\n        lockScalingFlip: true,\n        noScaleCache: false,\n        _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat(\"width\"),\n        initDimensions: function() {\n            if (this.__skipDimension) {\n                return;\n            }\n            this.isEditing && this.initDelayedCursor();\n            this.clearContextTop();\n            this._clearCache();\n            this.dynamicMinWidth = 0;\n            this._styleMap = this._generateStyleMap(this._splitText());\n            if (this.dynamicMinWidth > this.width) {\n                this._set(\"width\", this.dynamicMinWidth);\n            }\n            if (this.textAlign.indexOf(\"justify\") !== -1) {\n                this.enlargeSpaces();\n            }\n            this.height = this.calcTextHeight();\n            this.saveState({\n                propertySet: \"_dimensionAffectingProps\"\n            });\n        },\n        _generateStyleMap: function(textInfo) {\n            var realLineCount = 0, realLineCharCount = 0, charCount = 0, map = {};\n            for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n                if (textInfo.graphemeText[charCount] === \"\\n\" && i > 0) {\n                    realLineCharCount = 0;\n                    charCount++;\n                    realLineCount++;\n                } else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n                    realLineCharCount++;\n                    charCount++;\n                }\n                map[i] = {\n                    line: realLineCount,\n                    offset: realLineCharCount\n                };\n                charCount += textInfo.graphemeLines[i].length;\n                realLineCharCount += textInfo.graphemeLines[i].length;\n            }\n            return map;\n        },\n        styleHas: function(property, lineIndex) {\n            if (this._styleMap && !this.isWrapping) {\n                var map = this._styleMap[lineIndex];\n                if (map) {\n                    lineIndex = map.line;\n                }\n            }\n            return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n        },\n        isEmptyStyles: function(lineIndex) {\n            var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n            var map = this._styleMap[lineIndex];\n            var mapNextLine = this._styleMap[lineIndex + 1];\n            if (map) {\n                lineIndex = map.line;\n                offset = map.offset;\n            }\n            if (mapNextLine) {\n                nextLineIndex = mapNextLine.line;\n                shouldLimit = nextLineIndex === lineIndex;\n                nextOffset = mapNextLine.offset;\n            }\n            obj = typeof lineIndex === \"undefined\" ? this.styles : {\n                line: this.styles[lineIndex]\n            };\n            for (var p1 in obj) {\n                for (var p2 in obj[p1]) {\n                    if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n                        for (var p3 in obj[p1][p2]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        _getStyleDeclaration: function(lineIndex, charIndex) {\n            if (this._styleMap && !this.isWrapping) {\n                var map = this._styleMap[lineIndex];\n                if (!map) {\n                    return null;\n                }\n                lineIndex = map.line;\n                charIndex = map.offset + charIndex;\n            }\n            return this.callSuper(\"_getStyleDeclaration\", lineIndex, charIndex);\n        },\n        _setStyleDeclaration: function(lineIndex, charIndex, style) {\n            var map = this._styleMap[lineIndex];\n            lineIndex = map.line;\n            charIndex = map.offset + charIndex;\n            this.styles[lineIndex][charIndex] = style;\n        },\n        _deleteStyleDeclaration: function(lineIndex, charIndex) {\n            var map = this._styleMap[lineIndex];\n            lineIndex = map.line;\n            charIndex = map.offset + charIndex;\n            delete this.styles[lineIndex][charIndex];\n        },\n        _getLineStyle: function(lineIndex) {\n            var map = this._styleMap[lineIndex];\n            return this.styles[map.line];\n        },\n        _setLineStyle: function(lineIndex, style) {\n            var map = this._styleMap[lineIndex];\n            this.styles[map.line] = style;\n        },\n        _deleteLineStyle: function(lineIndex) {\n            var map = this._styleMap[lineIndex];\n            delete this.styles[map.line];\n        },\n        _wrapText: function(lines, desiredWidth) {\n            var wrapped = [], i;\n            this.isWrapping = true;\n            for (i = 0; i < lines.length; i++) {\n                wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n            }\n            this.isWrapping = false;\n            return wrapped;\n        },\n        _measureWord: function(word, lineIndex, charOffset) {\n            var width = 0, prevGrapheme, skipLeft = true;\n            charOffset = charOffset || 0;\n            for (var i = 0, len = word.length; i < len; i++) {\n                var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n                width += box.kernedWidth;\n                prevGrapheme = word[i];\n            }\n            return width;\n        },\n        _wrapLine: function(_line, lineIndex, desiredWidth) {\n            var lineWidth = 0, graphemeLines = [], line = [], words = _line.split(this._reSpaceAndTab), word = \"\", offset = 0, infix = \" \", wordWidth = 0, infixWidth = 0, largestWordWidth = 0, lineJustStarted = true, additionalSpace = this._getWidthOfCharSpacing();\n            for (var i = 0; i < words.length; i++) {\n                word = fabric.util.string.graphemeSplit(words[i]);\n                wordWidth = this._measureWord(word, lineIndex, offset);\n                offset += word.length;\n                lineWidth += infixWidth + wordWidth - additionalSpace;\n                if (lineWidth >= desiredWidth && !lineJustStarted) {\n                    graphemeLines.push(line);\n                    line = [];\n                    lineWidth = wordWidth;\n                    lineJustStarted = true;\n                }\n                if (!lineJustStarted) {\n                    line.push(infix);\n                }\n                line = line.concat(word);\n                infixWidth = this._measureWord([ infix ], lineIndex, offset);\n                offset++;\n                lineJustStarted = false;\n                if (wordWidth > largestWordWidth) {\n                    largestWordWidth = wordWidth;\n                }\n            }\n            i && graphemeLines.push(line);\n            if (largestWordWidth > this.dynamicMinWidth) {\n                this.dynamicMinWidth = largestWordWidth - additionalSpace;\n            }\n            return graphemeLines;\n        },\n        isEndOfWrapping: function(lineIndex) {\n            if (!this._styleMap[lineIndex + 1]) {\n                return true;\n            }\n            if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n                return true;\n            }\n            return false;\n        },\n        _splitTextIntoLines: function(text) {\n            var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text), graphemeLines = this._wrapText(newText.lines, this.width), lines = new Array(graphemeLines.length);\n            for (var i = 0; i < graphemeLines.length; i++) {\n                lines[i] = graphemeLines[i].join(\"\");\n            }\n            newText.lines = lines;\n            newText.graphemeLines = graphemeLines;\n            return newText;\n        },\n        getMinWidth: function() {\n            return Math.max(this.minWidth, this.dynamicMinWidth);\n        },\n        toObject: function(propertiesToInclude) {\n            return this.callSuper(\"toObject\", [ \"minWidth\" ].concat(propertiesToInclude));\n        }\n    });\n    fabric.Textbox.fromObject = function(object, callback) {\n        return fabric.Object._fromObject(\"Textbox\", object, callback, \"text\");\n    };\n})(typeof exports !== \"undefined\" ? exports : this);\n\n(function() {\n    var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n    fabric.Canvas.prototype._setObjectScale = function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n        var t = transform.target;\n        if (by === \"x\" && t instanceof fabric.Textbox) {\n            var tw = t._getTransformedDimensions().x;\n            var w = t.width * (localMouse.x / tw);\n            if (w >= t.getMinWidth()) {\n                t.set(\"width\", w);\n                return true;\n            }\n        } else {\n            return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n        }\n    };\n    fabric.util.object.extend(fabric.Textbox.prototype, {\n        _removeExtraneousStyles: function() {\n            for (var prop in this._styleMap) {\n                if (!this._textLines[prop]) {\n                    delete this.styles[this._styleMap[prop].line];\n                }\n            }\n        }\n    });\n})();\n\nif (typeof define === \"function\" && define.amd) {\n    define([], function() {\n        return fabric;\n    });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/fabric/dist/fabric.js\n// module id = 617\n// module chunks = 3","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/buffer/index.js\n// module id = 622\n// module chunks = 2 3","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 623\n// module chunks = 2 3","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/base64-js/index.js\n// module id = 624\n// module chunks = 2 3","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/ieee754/index.js\n// module id = 625\n// module chunks = 2 3","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Pauan/Shared Folders/NixOS/amcharts4dev/node_modules/isarray/index.js\n// module id = 626\n// module chunks = 2 3"],"sourceRoot":""}