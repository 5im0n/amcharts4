{"version":3,"file":"Smoothing.js","sourceRoot":"","sources":["../../../../../src/.internal/core/rendering/Smoothing.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $path from \"./Path\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * PATH FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport interface ISmoothing {\r\n\tsmooth(points: Array<IPoint>): string;\r\n}\r\n\r\n/**\r\n * [sign description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo Move this someplace else\r\n * @param {number} x [description]\r\n */\r\nfunction sign(x: number): -1 | 1 {\r\n\treturn x < 0 ? -1 : 1;\r\n}\r\n\r\n/**\r\n * [slope2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number} x0 [description]\r\n * @param  {number} x1 [description]\r\n * @param  {number} y0 [description]\r\n * @param  {number} y1 [description]\r\n * @param  {number} t  [description]\r\n * @return {number}    [description]\r\n */\r\nfunction slope2(x0: number, x1: number, y0: number, y1: number, t: number): number {\r\n\tconst h = x1 - x0;\r\n\treturn h ? (3 * (y1 - y0) / h - t) / 2 : t;\r\n}\r\n\r\n/**\r\n * [slope3 description]\r\n * \r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number} x0 [description]\r\n * @param  {number} x1 [description]\r\n * @param  {number} y0 [description]\r\n * @param  {number} y1 [description]\r\n * @param  {number} x2 [description]\r\n * @param  {number} y2 [description]\r\n * @return {number}    [description]\r\n */\r\nfunction slope3(x0: number, x1: number, y0: number, y1: number, x2: number, y2: number): number {\r\n\tconst h0 = x1 - x0;\r\n\tconst h1 = x2 - x1;\r\n\tconst s0 = (y1 - y0) / (h0 || h1 < 0 && -0);\r\n\tconst s1 = (y2 - y1) / (h1 || h0 < 0 && -0);\r\n\tconst p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n\treturn (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class Monotone implements ISmoothing {\r\n\r\n\t/**\r\n\t * [_reversed description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _reversed: boolean;\r\n\r\n\t/**\r\n\t * [_closed description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _closed: boolean;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t * \r\n\t * @param {boolean}  reversed  [description]\r\n\t * @param {object}   info      [description]\r\n\t */\r\n\tconstructor(reversed: boolean, info: { closed: boolean }) {\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._closed = info.closed;\r\n\t}\r\n\r\n\t/**\r\n\t * [_curve description]\r\n\t *\r\n\t * According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\r\n\t * \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\r\n\t * with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\r\n\t * \r\n\t * @todo Description\r\n\t * @param  {number} x0 [description]\r\n\t * @param  {number} x1 [description]\r\n\t * @param  {number} y0 [description]\r\n\t * @param  {number} y1 [description]\r\n\t * @param  {number} t0 [description]\r\n\t * @param  {number} t1 [description]\r\n\t * @return {string}    [description]\r\n\t */\r\n\tprivate _curve(x0: number, x1: number, y0: number, y1: number, t0: number, t1: number): string {\r\n\t\tconst dx = (x1 - x0) / 3;\r\n\r\n\t\tif (this._reversed) {\r\n\t\t\treturn $path.cubicCurveTo(\r\n\t\t\t\t{ x: y1, y: x1 },\r\n\t\t\t\t{ x: y0 + dx * t0, y: x0 + dx },\r\n\t\t\t\t{ x: y1 - dx * t1, y: x1 - dx }\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\t\t\treturn $path.cubicCurveTo(\r\n\t\t\t\t{ x: x1, y: y1 },\r\n\t\t\t\t{ x: x0 + dx, y: y0 + dx * t0 },\r\n\t\t\t\t{ x: x1 - dx, y: y1 - dx * t1 }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [smooth description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Array<IPoint>} points [description]\r\n\t * @return {string}               [description]\r\n\t */\r\n\tpublic smooth(points: Array<IPoint>): string {\r\n\t\tlet x0: number = NaN;\r\n\t\tlet x1: number = NaN;\r\n\t\tlet y0: number = NaN;\r\n\t\tlet y1: number = NaN;\r\n\t\tlet t0: number = NaN;\r\n\t\tlet point: number = 0;\r\n\r\n\t\tlet output = \"\";\r\n\r\n\t\t$array.each(points, ({ x, y }) => {\r\n\t\t\tif (this._reversed) {\r\n\t\t\t\tlet temp = x;\r\n\t\t\t\tx = y;\r\n\t\t\t\ty = temp;\r\n\t\t\t}\r\n\r\n\t\t\tlet t1 = NaN;\r\n\r\n\t\t\tif (!(x === x1 && y === y1)) {\r\n\t\t\t\tswitch (point) {\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tpoint = 1;\r\n\r\n\t\t\t\t\t\tif (this._reversed) {\r\n\t\t\t\t\t\t\toutput += $path.lineTo({ x: y, y: x });\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toutput += $path.lineTo({ x, y });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tpoint = 2;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tpoint = 3;\r\n\t\t\t\t\t\toutput += this._curve(x0, x1, y0, y1, slope2(x0, x1, y0, y1, t1 = slope3(x0, x1, y0, y1, x, y)), t1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\toutput += this._curve(x0, x1, y0, y1, t0, t1 = slope3(x0, x1, y0, y1, x, y));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tx0 = x1;\r\n\t\t\t\tx1 = x;\r\n\t\t\t\ty0 = y1;\r\n\t\t\t\ty1 = y;\r\n\t\t\t\tt0 = t1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tswitch (point) {\r\n\t\t\tcase 2:\r\n\t\t\t\tif (this._reversed) {\r\n\t\t\t\t\toutput += $path.lineTo({ x: y1, y: x1 });\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutput += $path.lineTo({ x: x1, y: y1 });\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\toutput += this._curve(x0, x1, y0, y1, t0, slope2(x0, x1, y0, y1, t0));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (this._closed) {\r\n\t\t\toutput += $path.closePath();\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MonotoneX extends Monotone {\r\n\tconstructor(info: { closed: boolean }) {\r\n\t\tsuper(false, info);\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MonotoneY extends Monotone {\r\n\tconstructor(info: { closed: boolean }) {\r\n\t\tsuper(true, info);\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Number}\r\n */\r\nconst epsilon = 1e-12;\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CatmullRom implements ISmoothing {\r\n\r\n\t/**\r\n\t * [_alpha description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprivate _alpha: number;\r\n\r\n\t/**\r\n\t * [_closed description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _closed: boolean;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t * \r\n\t * @param {object} info [description]\r\n\t */\r\n\tconstructor(info: { alpha: number, closed: boolean }) {\r\n\t\tthis._alpha = info.alpha;\r\n\t\tthis._closed = info.closed;\r\n\t}\r\n\r\n\t/**\r\n\t * [smooth description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Array<IPoint>}  points  [description]\r\n\t * @return {string}                 [description]\r\n\t */\r\n\tpublic smooth(points: Array<IPoint>): string {\r\n\t\tlet x0: number = NaN;\r\n\t\tlet x1: number = NaN;\r\n\t\tlet x2: number = NaN;\r\n\t\tlet x3: number = NaN;\r\n\t\tlet x4: number = NaN;\r\n\t\tlet x5: number = NaN;\r\n\t\tlet y0: number = NaN;\r\n\t\tlet y1: number = NaN;\r\n\t\tlet y2: number = NaN;\r\n\t\tlet y3: number = NaN;\r\n\t\tlet y4: number = NaN;\r\n\t\tlet y5: number = NaN;\r\n\t\tlet l01_a: number = 0;\r\n\t\tlet l12_a: number = 0;\r\n\t\tlet l23_a: number = 0;\r\n\t\tlet l01_2a: number = 0;\r\n\t\tlet l12_2a: number = 0;\r\n\t\tlet l23_2a: number = 0;\r\n\t\tlet point: number = 0;\r\n\r\n\t\tlet output = \"\";\r\n\r\n\t\tconst pushPoint = ({ x, y }: IPoint): void => {\r\n\t\t\tif (point) {\r\n\t\t\t\tconst x23 = x2 - x;\r\n\t\t\t\tconst y23 = y2 - y;\r\n\t\t\t\tl23_a = Math.sqrt(l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\r\n\t\t\t}\r\n\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tpoint = 1;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx3 = x;\r\n\t\t\t\t\t\ty3 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput += $path.lineTo({ x, y });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tpoint = 2;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx4 = x;\r\n\t\t\t\t\t\ty4 = y;\r\n\t\t\t\t\t\toutput += $path.moveTo({ x: x4, y: y4 });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tpoint = 3;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx5 = x;\r\n\t\t\t\t\t\ty5 = y;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// fall-through\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet _x1 = x1;\r\n\t\t\t\t\t\tlet _y1 = y1;\r\n\t\t\t\t\t\tlet _x2 = x2;\r\n\t\t\t\t\t\tlet _y2 = y2;\r\n\r\n\t\t\t\t\t\tif (l01_a > epsilon) {\r\n\t\t\t\t\t\t\tconst a = 2 * l01_2a + 3 * l01_a * l12_a + l12_2a;\r\n\t\t\t\t\t\t\tconst n = 3 * l01_a * (l01_a + l12_a);\r\n\t\t\t\t\t\t\t_x1 = (_x1 * a - x0 * l12_2a + x2 * l01_2a) / n;\r\n\t\t\t\t\t\t\t_y1 = (_y1 * a - y0 * l12_2a + y2 * l01_2a) / n;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (l23_a > epsilon) {\r\n\t\t\t\t\t\t\tconst b = 2 * l23_2a + 3 * l23_a * l12_a + l12_2a;\r\n\t\t\t\t\t\t\tconst m = 3 * l23_a * (l23_a + l12_a);\r\n\t\t\t\t\t\t\t_x2 = (_x2 * b + x1 * l23_2a - x * l12_2a) / m;\r\n\t\t\t\t\t\t\t_y2 = (_y2 * b + y1 * l23_2a - y * l12_2a) / m;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toutput += $path.cubicCurveTo(\r\n\t\t\t\t\t\t\t{ x: x2, y: y2 },\r\n\t\t\t\t\t\t\t{ x: _x1, y: _y1 },\r\n\t\t\t\t\t\t\t{ x: _x2, y: _y2 }\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tl01_a = l12_a;\r\n\t\t\tl12_a = l23_a;\r\n\t\t\tl01_2a = l12_2a;\r\n\t\t\tl12_2a = l23_2a;\r\n\t\t\tx0 = x1;\r\n\t\t\tx1 = x2;\r\n\t\t\tx2 = x;\r\n\t\t\ty0 = y1;\r\n\t\t\ty1 = y2;\r\n\t\t\ty2 = y;\r\n\t\t};\r\n\r\n\t\t$array.each(points, pushPoint);\r\n\r\n\t\tif (this._closed) {\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\toutput += $path.moveTo({ x: x3, y: y3 });\r\n\t\t\t\t\toutput += $path.closePath();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\toutput += $path.lineTo({ x: x3, y: y3 });\r\n\t\t\t\t\toutput += $path.closePath();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tpushPoint({ x: x3, y: y3 });\r\n\t\t\t\t\tpushPoint({ x: x4, y: y4 });\r\n\t\t\t\t\tpushPoint({ x: x5, y: y5 });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\toutput += $path.lineTo({ x: x2, y: y2 });\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tpushPoint({ x: x2, y: y2 });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\toutput += $path.closePath();\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class Tension implements ISmoothing {\r\n\r\n\t/**\r\n\t * [_tensionX description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprivate _tensionX: number;\r\n\r\n\t/**\r\n\t * [_tensionY description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {number}\r\n\t */\r\n\tprivate _tensionY: number;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t * \r\n\t * @param {number} tensionX [description]\r\n\t * @param {number} tensionY [description]\r\n\t */\r\n\tconstructor(tensionX: number, tensionY: number) {\r\n\t\tthis._tensionX = tensionX;\r\n\t\tthis._tensionY = tensionY;\r\n\t}\r\n\r\n\t/**\r\n\t * [smooth description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Array<IPoint>}  points  [description]\r\n\t * @return {string}                 [description]\r\n\t */\r\n\tpublic smooth(points: Array<IPoint>): string {\r\n\t\tlet tensionX = this._tensionX;\r\n\t\tlet tensionY = this._tensionY;\r\n\r\n\t\tif (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n\t\t\treturn $path.polyline(points);\r\n\t\t}\r\n\r\n\t\tlet first: IPoint = points[0];\r\n\t\tlet last: IPoint = points[points.length - 1];\r\n\r\n\t\tlet closed: boolean = false;\r\n\r\n\t\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n\t\t\tclosed = true;\r\n\t\t}\r\n\r\n\t\t// Can't moveTo here, as it wont be possible to have fill then.\r\n\t\tlet path: string = \"\";\r\n\r\n\t\tfor (let i: number = 0; i < points.length - 1; i++) {\r\n\t\t\tlet p0: IPoint = points[i - 1];\r\n\r\n\t\t\tlet p1: IPoint = points[i];\r\n\r\n\t\t\tlet p2: IPoint = points[i + 1];\r\n\r\n\t\t\tlet p3: IPoint = points[i + 2];\r\n\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tif (closed) {\r\n\t\t\t\t\tp0 = points[points.length - 2];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tp0 = points[i];\r\n\t\t\t\t}\r\n\t\t\t} else if (i == points.length - 2) {\r\n\t\t\t\tif (closed) {\r\n\t\t\t\t\tp3 = points[1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tp3 = points[i + 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet controlPointA: IPoint = $math.getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY);\r\n\t\t\tlet controlPointB: IPoint = $math.getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY);\r\n\r\n\t\t\tpath += $path.cubicCurveTo(p2, controlPointA, controlPointB);\r\n\t\t}\r\n\r\n\t\treturn path;\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class Basis implements ISmoothing {\r\n\r\n\t/**\r\n\t * [_closed description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprivate _closed: boolean;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t * \r\n\t * @param {object}  info  [description]\r\n\t */\r\n\tconstructor(info: { closed: boolean }) {\r\n\t\tthis._closed = info.closed;\r\n\t}\r\n\r\n\t/**\r\n\t * [smooth description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param  {Array<IPoint>}  points  [description]\r\n\t * @return {string}                 [description]\r\n\t */\r\n\tpublic smooth(points: Array<IPoint>): string {\r\n\t\tlet x0: number = NaN;\r\n\t\tlet x1: number = NaN;\r\n\t\tlet x2: number = NaN;\r\n\t\tlet x3: number = NaN;\r\n\t\tlet x4: number = NaN;\r\n\t\tlet y0: number = NaN;\r\n\t\tlet y1: number = NaN;\r\n\t\tlet y2: number = NaN;\r\n\t\tlet y3: number = NaN;\r\n\t\tlet y4: number = NaN;\r\n\t\tlet point: number = 0;\r\n\r\n\t\tlet output = \"\";\r\n\r\n\t\tconst pushCurve = (x: number, y: number): void => {\r\n\t\t\toutput += $path.cubicCurveTo(\r\n\t\t\t\t{\r\n\t\t\t\t\tx: (x0 + 4 * x1 + x) / 6\r\n\t\t\t\t\t, y: (y0 + 4 * y1 + y) / 6\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tx: (2 * x0 + x1) / 3\r\n\t\t\t\t\t, y: (2 * y0 + y1) / 3\r\n\t\t\t\t},\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tx: (x0 + 2 * x1) / 3\r\n\t\t\t\t\t, y: (y0 + 2 * y1) / 3\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\tconst pushPoint = ({ x, y }: IPoint): void => {\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tpoint = 1;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx2 = x;\r\n\t\t\t\t\t\ty2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput += $path.lineTo({ x, y });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tpoint = 2;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx3 = x;\r\n\t\t\t\t\t\ty3 = y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tpoint = 3;\r\n\r\n\t\t\t\t\tif (this._closed) {\r\n\t\t\t\t\t\tx4 = x;\r\n\t\t\t\t\t\ty4 = y;\r\n\t\t\t\t\t\toutput += $path.moveTo({ x: (x0 + 4 * x1 + x) / 6, y: (y0 + 4 * y1 + y) / 6 });\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutput += $path.lineTo({ x: (5 * x0 + x1) / 6, y: (5 * y0 + y1) / 6 });\r\n\t\t\t\t\t\t// fall-through\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpushCurve(x, y);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tx0 = x1;\r\n\t\t\tx1 = x;\r\n\t\t\ty0 = y1;\r\n\t\t\ty1 = y;\r\n\t\t};\r\n\r\n\t\t$array.each(points, pushPoint);\r\n\r\n\t\tif (this._closed) {\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\toutput += $path.moveTo({ x: x2, y: y2 });\r\n\t\t\t\t\toutput += $path.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\toutput += $path.moveTo({ x: (x2 + 2 * x3) / 3, y: (y2 + 2 * y3) / 3 });\r\n\t\t\t\t\toutput += $path.lineTo({ x: (x3 + 2 * x2) / 3, y: (y3 + 2 * y2) / 3 });\r\n\t\t\t\t\toutput += $path.closePath();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tpushPoint({ x: x2, y: y2 });\r\n\t\t\t\t\tpushPoint({ x: x3, y: y3 });\r\n\t\t\t\t\tpushPoint({ x: x4, y: y4 });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tswitch (point) {\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tpushCurve(x1, y1);\r\n\t\t\t\t// fall-through\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\toutput += $path.lineTo({ x: x1, y: y1 });\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\toutput += $path.closePath();\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n}"]}