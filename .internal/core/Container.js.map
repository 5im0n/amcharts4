{"version":3,"file":"Container.js","sourceRoot":"","sources":["../../../../src/.internal/core/Container.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Container module\r\n * @todo Needs description\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"./Sprite\";\r\nimport { List, IListEvents, ListDisposer, ListGrouper } from \"./utils/List\";\r\nimport { VerticalAlign } from \"./defs/VerticalAlign\";\r\nimport { Align } from \"./defs/Align\";\r\nimport { Group } from \"./rendering/Group\";\r\nimport { IDisposer } from \"./utils/Disposer\";\r\nimport { color } from \"./utils/Color\";\r\nimport { Rectangle } from \"./elements/Rectangle\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport { system } from \"./System\";\r\nimport { Paper } from \"./rendering/Paper\";\r\nimport { Preloader } from \"./elements/Preloader\";\r\nimport { RoundedRectangle } from \"./elements/RoundedRectangle\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { Optional } from \"./utils/Type\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $number from \"./utils/Number\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n// Defined in DataItem.ts\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available [[Container]] layout types\r\n * @type {string}\r\n */\r\nexport type ContainerLayout = \"absolute\" | \"vertical\" | \"horizontal\" | \"grid\";\r\n\r\n/**\r\n * Defines properties for [[Container]]\r\n */\r\nexport interface IContainerProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", or \"grid\".\r\n\t *\r\n\t * @default \"absolute\"\r\n\t * @type {ContainerLayout}\r\n\t */\r\n\tlayout?: ContainerLayout;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for the [[Container]]\r\n */\r\nexport interface IContainerEvents extends ISpriteEvents { };\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IContainerAdapters extends ISpriteAdapters, IContainerProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Container can contain multiple sprites and arrange them in various layouts.\r\n * \r\n * @see {@link IContainerEvents} for a list of available events\r\n * @see {@link IContainerAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @type {IContainerProperties}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _properties: IContainerProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @type {IContainerAdapters}\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _adapter: IContainerAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther..\r\n\t *\r\n\t * @type {SpriteEventDispatcher<AMEvent<Container, IContainerEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<Container, IContainerEvents>>;\r\n\r\n\t/**\r\n\t * Container children. (sorted by layout)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<Sprite>}\r\n\t */\r\n\tprotected _childrenByLayout: Sprite[];\r\n\r\n\t/**\r\n\t * [_zIndexGroups description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {ListGrouper<Sprite>}\r\n\t */\r\n\tprotected _zIndexGroups: ListGrouper<Sprite>;\r\n\r\n\t/**\r\n\t * Available width. (px)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _availableWidth: number;\r\n\r\n\t/**\r\n\t * Available height. (px)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {number}\r\n\t */\r\n\tprotected _availableHeight: number;\r\n\r\n\t/**\r\n\t * [_fixedWidthGrid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tprotected _fixedWidthGrid: boolean;\r\n\r\n\t/**\r\n\t * Container's child elements. (sorded by their `zIndex`)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {List<Sprite>}\r\n\t */\r\n\tprotected _children: List<Sprite>;\r\n\r\n\t/**\r\n\t * Horizontal alignement of Container's items\r\n\t * @ignore Exclude from docs\r\n\t * @type {Align}\r\n\t */\r\n\tprotected _contentAlign: Align;\r\n\r\n\t/**\r\n\t * Vertical alignement of Container's items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {VerticalAlign}\r\n\t */\r\n\tprotected _contentValign: VerticalAlign;\r\n\r\n\t/**\r\n\t * A [[Sprite]] instance to use as Container's background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected\r\n\t * @type {Sprite}\r\n\t */\r\n\tpublic _background: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a [[Preloader]] element to show when Container is building\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {Preloader}\r\n\t */\r\n\tprotected _preloader: Preloader;\r\n\r\n\t/**\r\n\t * Indicates if this container contains any focused elements, including\r\n\t * itself.\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic hasFocused: boolean = false;\r\n\r\n\t/**\r\n\t * Whether children of the container should be cloned when cloning this\r\n\t * Container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic cloneChildren: boolean = false;\r\n\r\n\t/*\r\n\t * @ignore\r\n\t */\r\n\tprotected _containerOverflowX:number = 0;\r\n\t/*\r\n\t * @ignore\r\n\t */\t\r\n\tprotected _containerOverflowY:number = 0;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Container\";\r\n\r\n\t\tthis.element = this.paper.addGroup(\"g\");\r\n\r\n\t\tthis.pixelPerfect = false;\r\n\t\tthis._positionPrecision = 4;\r\n\r\n\t\tthis.group.add(this.element);\r\n\r\n\t\tthis.layout = \"absolute\";\r\n\t\tthis._fixedWidthGrid = false;\r\n\t\tthis.ignoreOverflow = false;\r\n\r\n\t\tthis.verticalCenter = \"top\";\r\n\t\tthis.horizontalCenter = \"left\";\r\n\r\n\t\tthis.children.events.on(\"insert\", this.handleChildAdded, this);\r\n\t\tthis.children.events.on(\"remove\", this.handleChildRemoved, this);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles adding of a new child into `children`. Adding new children might\r\n\t * affect the whole layout so it needs to be revalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<Sprite>[\"insert\"]} event Event object\r\n\t * @todo Throw an exception on adding a disposed object. Of course it's better NOT TO add disposed objects, so that what we should focus on.\r\n\t */\r\n\tpublic handleChildAdded(event: IListEvents<Sprite>[\"insert\"]): void {\r\n\t\tlet child: Sprite = event.newValue;\r\n\r\n\t\t// Do not add disposed objects\r\n\t\tif ((<any>child).isDisposed()) {\r\n\t\t\tconsole.log(\"Added to children a disposed object!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if (this.element) {\r\n\t\t//\tlet group = <Group>this.element;\r\n\t\t//\tgroup.add(child.group);\r\n\t\t//}\r\n\t\tthis.addChildren();\r\n\r\n\t\t// TODO this is hacky\r\n\t\tif (!$type.hasValue((<any>child)._childAddedDisposer)) {\r\n\t\t\t// it's not enough to listen to POSITION_CHANGED only, as some extra redrawals will happen.\r\n\t\t\t(<any>child)._childAddedDisposer = child.events.on(\"transformed\", this.handleChildTransform, this);\r\n\r\n\r\n\t\t\t//@todo: temporary commenting this because of error it causes when I add contents Container in AxisRange constructor. this._disposers.push((<any>child)._childAddedDisposer);\r\n\t\t}\r\n\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child removal. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IListEvents<Sprite>[\"remove\"]} event Event object\r\n\t */\r\n\tpublic handleChildRemoved(event: IListEvents<Sprite>[\"remove\"]): void {\r\n\t\tlet child: Sprite = event.oldValue;\r\n\r\n\t\t// TODO figure out why this is sometimes undefined\r\n\t\t// TODO this is hacky\r\n\t\tif ($type.hasValue((<any>child)._childAddedDisposer)) {\r\n\t\t\tthis.removeDispose((<any>child)._childAddedDisposer);\r\n\t\t\t//(<any>child)._childAddedDisposer.dispose();\r\n\t\t\tdelete (<any>child)._childAddedDisposer;\r\n\t\t}\r\n\r\n\t\tif (this.element) {\r\n\t\t\tlet group = <Group>this.element;\r\n\t\t\tgroup.removeElement(child.group);\r\n\t\t}\r\n\r\n\t\tif (child.isMeasured) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child transformation. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {AMEvent<Sprite, ISpriteEvents>[\"transformed\"]} event Event object\r\n\t */\r\n\tpublic handleChildTransform(event: AMEvent<Sprite, ISpriteEvents>[\"transformed\"]): void {\r\n\t\tlet child: Sprite = event.target;\r\n\t\tif (child.isMeasured) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates Container's layout, causing it to be re-evaluated again.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//this.validateLayout();\r\n\t\t$array.move(system.invalidLayouts, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tsuper.invalidate();\r\n\r\n\t\tthis.sortChildren();\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child.invalid) {\r\n\t\t\t\tchild.invalidate(); // this sorts invalid components in correct order\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including layout AND all its child\r\n\t * elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic deepInvalidate(): void {\r\n\t\tsuper.invalidate();\r\n\t\tthis.sortChildren();\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child instanceof Container) {\r\n\t\t\t\tchild.deepInvalidate();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.invalidate();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Appends `<defs>` section to the element. This section holds all the SVG\r\n\t * definitions for the element, such as filters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendDefs(): void {\r\n\t\tsuper.appendDefs();\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child instanceof Container) {\r\n\t\t\t\tchild.appendDefs();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.appendDefs();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of the child [[Sprite]] elements contained in this\r\n\t * Container.\r\n\t *\r\n\t * @return {List<Sprite>} List of child elements (Sprites)\r\n\t */\r\n\tpublic get children(): List<Sprite> {\r\n\t\t// @todo Review if we can add all children to disposers\r\n\t\tif (!this._children) {\r\n\t\t\tthis._children = new List<Sprite>();\r\n\t\t\t//this._disposers.push(new ListDisposer(this._children));\r\n\t\t}\r\n\t\treturn this._children;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets minimum width (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t *\r\n\t * @param {Optional<number>} value Width (px)\r\n\t */\r\n\tpublic set minWidth(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minWidth\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retruns current minimum width. (px)\r\n\t *\r\n\t * @return {Optional<number>} Width (px)\r\n\t */\r\n\tpublic get minWidth(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets minimum height (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t * @param {Optional<number>} value Height (px)\r\n\t */\r\n\tpublic set minHeight(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minHeight\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retruns current minimum height. (px)\r\n\t *\r\n\t * @return {Optional<number>} Height (px)\r\n\t */\r\n\tpublic get minHeight(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets maximum width (px) for the Container. A container will not\r\n\t * grow beyond this value, even if child elements do not fit.\r\n\t *\r\n\t * @param {Optional<number>} value Width (px)\r\n\t */\r\n\tpublic set maxWidth(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxWidth\", value)) {\r\n\t\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\t\tthis.invalidateLayout();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retruns current maximum width. (px)\r\n\t *\r\n\t * @return {Optional<number>} Width (px)\r\n\t */\r\n\tpublic get maxWidth(): number {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.maxWidth; // used to be pixelWidth, but this causes problems\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn maxWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets maximum height (px) for the Container. A container will not\r\n\t * grow beyond this value, even if child elements do not fit.\r\n\t *\r\n\t * @param {Optional<number>} value Height (px)\r\n\t */\r\n\tpublic set maxHeight(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxHeight\", value)) {\r\n\t\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\t\tthis.invalidateLayout();\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retruns current maximum height. (px)\r\n\t *\r\n\t * @return {Optional<number>} Height (px)\r\n\t */\r\n\tpublic get maxHeight(): number {\r\n\t\tlet maxHeight = this.getPropertyValue(\"maxHeight\");\r\n\t\tif (!$type.isNumber(maxHeight)) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.maxHeight; // used to be pixelHeight, but this causes problems\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\t//this.validateLayout();\r\n\t\tthis.addChildren();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides the original `removeElement` so that Container's actual element\r\n\t * is not removed. We do not need to remove element of a Container.\r\n\t *\r\n\t * We do this because remove element each time will fail the `getBBox`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts Container's children: the ones with variable width and height are\r\n\t * put at the end of the list (depending on layout type), so that fixed-width\r\n\t * ones can be drawn first.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Sprite[]}  children  Container's children (elements)\r\n\t */\r\n\tpublic sortChildren(children?: Sprite[]): void {\r\n\r\n\t\tif (children) {\r\n\t\t\tlet length = children.length;\r\n\r\n\t\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\t\tlet child: Sprite = children[i];\r\n\t\t\t\t// TODO don't do anything if the indexes are the same ?\r\n\t\t\t\tif (this.children.indexOf(child) != -1) {\r\n\t\t\t\t\tthis.children.moveValue(child, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._childrenByLayout = [];\r\n\r\n\t\tif (this.layout == \"absolute\") {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tthis._childrenByLayout.push(child);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Assemble fixed-size and relative lists\r\n\t\t\tlet fixed: Sprite[] = [];\r\n\t\t\tlet relative: Sprite[] = [];\r\n\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tif (this.layout == \"horizontal\" || this.layout == \"grid\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.layout == \"vertical\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Concat everything into list\r\n\t\t\tthis._childrenByLayout = fixed.concat(relative);\r\n\t\t}\r\n\r\n\t\tthis.calculateRelativeSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates relative sizes for all Container's children.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic calculateRelativeSize(): void {\r\n\t\tlet totalRelativeWidth: number = 0;\r\n\t\tlet totalRelativeHeight: number = 0;\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t// if child is not measured, we do not care about it at all.\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\ttotalRelativeWidth += child.percentWidth;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\ttotalRelativeHeight += child.percentHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / totalRelativeWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\t// consider adding a property which would make the container of 100% when it's height is set to % value but there is only one object with percent width set in the parent container\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / totalRelativeHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\t// consider adding a property which would make the container of 100% when it's height is set to % value but there is only one object with percent width set in the parent container\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.layout == \"absolute\" || !child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t// consider adding a property which would make the container of 100% when it's height is set to % value but there is only one object with percent width set in the parent container\r\n\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t// consider adding a property which would make the container of 100% when it's height is set to % value but there is only one object with percent width set in the parent container\r\n\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds all children to Container's SVG element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic addChildren(): void {\r\n\t\tthis.sortChildren();\r\n\t\t// add it to parent\r\n\t\tif (this.element) {\r\n\t\t\t//$iter.each(this.zIndexGroups.iterator(), (child) => {\r\n\t\t\tlet zindexed = $array.copy(this._childrenByLayout);\r\n\t\t\tzindexed.sort((a: Sprite, b: Sprite) => {\r\n\t\t\t\treturn (a.zIndex || 0) - (b.zIndex || 0);\r\n\t\t\t});\r\n\t\t\t$array.each(zindexed, (child) => {\r\n\t\t\t\tif (child.group) {\r\n\t\t\t\t\tlet group = <Group>this.element;\r\n\t\t\t\t\tgroup.add(child.group);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new element of specific type and assigns as a child to the\r\n\t * Container.\r\n\t *\r\n\t * @param  {T extends Sprite}  Class type for the new element\r\n\t * @return {T}                 New element\r\n\t */\r\n\tpublic createChild<T extends Sprite>(classType: { new(): T; }): T {\r\n\t\tlet sprite = new classType();\r\n\t\tsprite.parent = this;\r\n\t\treturn sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all Container's children without actually destroying them.\r\n\t *\r\n\t * To destroy children use `disposeChildren()` instead.\r\n\t */\r\n\tpublic removeChildren(): void {\r\n\t\t// remove all children\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tthis.children.getIndex(0).parent = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes and destroys all Container's children.\r\n\t *\r\n\t * To remove children from Container without destroying them, use\r\n\t * `removeChildren()`.\r\n\t */\r\n\tpublic disposeChildren(): void {\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tthis.removeDispose(this.children.getIndex(0));\r\n\t\t\t//this.children.getIndex(0).dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element to use as container background.\r\n\t *\r\n\t * @param {Sprite}  background  Background element\r\n\t */\r\n\tpublic set background(background: this[\"_background\"]) {\r\n\t\tif (this._background && this.background != background) {\r\n\t\t\tthis.removeDispose(this._background);\r\n\t\t}\r\n\r\n\t\tif (background) {\r\n\t\t\tthis._background = background;\r\n\t\t\tthis._disposers.push(background);\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a [[Rectangle]] to use as a background for Container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {this} Background Rectangle element\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Sprite} Background element\r\n\t */\r\n\tpublic get background(): this[\"_background\"] {\r\n\t\tif (!this._background) {\r\n\t\t\tthis._background = this.createBackground();\r\n\t\t\tthis._background.fill = new InterfaceColorSet().getFor(\"background\");\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\r\n\t\treturn this._background;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates background element with required properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processBackground(): void {\r\n\t\tlet background = this._background;\r\n\t\tif (background) {\r\n\t\t\tbackground.isMeasured = false;\r\n\t\t\tbackground.zIndex = -Infinity;\r\n\t\t\tbackground.parent = this;\r\n\t\t\tthis._disposers.push(background);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the size of container and informs its children of how much size\r\n\t * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n\t * properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\t\t$array.remove(system.invalidLayouts, this);\r\n\r\n\t\tthis._availableWidth = this.innerWidth;\r\n\t\tthis._availableHeight = this.innerHeight;\r\n\r\n\t\tlet measuredWidth = 0;\r\n\t\tlet measuredHeight = 0;\r\n\r\n\t\tlet allValid = true;\r\n\r\n\t\tthis.sortChildren();\r\n\r\n\t\tif (this.children) {\r\n\r\n\t\t\t// we itterate through list of children, sorted by layout priority. sprites which width non-relative width/height will go first, so we will reduce available width before proceeding to sprites with relative width/height\r\n\t\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t\tlet maxWidth: number;\r\n\t\t\t\tlet maxHeight: number;\r\n\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\tmaxWidth = $math.round(this._availableWidth * child.relativeWidth);\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {// || this.layout == \"absolute\") { // not sure about absolute, but works well in cases like small map\r\n\t\t\t\t\t\tmaxWidth -= child.pixelMarginRight + child.pixelMarginLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\tmaxHeight = $math.round(this._availableHeight * child.relativeHeight);\r\n\t\t\t\t\tif (this.layout == \"vertical\") {//  || this.layout == \"absolute\") { // not sure about absolute, but works well in cases like small map\r\n\t\t\t\t\t\tmaxHeight -= child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if child is valid\r\n\t\t\t\tif (child.invalid == false) {\r\n\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\t// reduce available width if this is horizontal layout\r\n\t\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredWidth > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableWidth -= child.measuredWidth + child.pixelMarginLeft + child.pixelMarginRight;\r\n\r\n\t\t\t\t\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\t\t\t\t\tthis._availableWidth -= child.overflowX;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// reduce available height if this is vertical layout\r\n\t\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredHeight > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableHeight -= child.measuredHeight + child.pixelMarginTop + child.pixelMarginBottom;\r\n\r\n\t\t\t\t\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\t\t\t\t\tthis._availableHeight -= child.overflowY;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmeasuredWidth = Math.max(measuredWidth, child.measuredWidth);\r\n\t\t\t\t\t\tmeasuredHeight = Math.max(measuredHeight, child.measuredHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if child is not valid\r\n\t\t\t\telse {\r\n\t\t\t\t\t// tell child what maximum width/ height it can occupy\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\t\tif (child.maxWidth != maxWidth) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\tif (child.maxHeight != maxHeight) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// this is needed in case we have some children which we have to valign to, for example, center\r\n\t\tthis._measuredWidth = measuredWidth + this.pixelPaddingLeft + this.pixelPaddingRight;\r\n\t\tthis._measuredHeight = measuredHeight + this.pixelPaddingTop + this.pixelPaddingBottom;\r\n\r\n\t\t// arrange after measuring, only if all children are valid already\r\n\t\tif (allValid) {\r\n\t\t\tthis.arrange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Arranges children according to layout specs and available space / child\r\n\t * sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic arrange(): void {\r\n\t\tif (this.children) {\r\n\t\t\t/*\r\n\t\t\t   in this method we not only arrange children but also find out the size of the container\r\n\t\t\t   it might seem it would be easier to get container size using sprite's measure method,\r\n\t\t\t   however it would return only actual size of the bbox. However as each child meight have\r\n\t\t\t   margins set, we need to check each child - we do it here.\r\n\r\n\t\t\t   This method doesn't do anything with DOM, so it's not expensive\r\n\t\t\t*/\r\n\t\t\tlet measuredWidth: number = 0;\r\n\t\t\tlet measuredHeight: number = 0;\r\n\r\n\t\t\tlet left: number;\r\n\t\t\tlet right: number;\r\n\t\t\tlet top: number;\r\n\t\t\tlet bottom: number;\r\n\r\n\t\t\tlet nextX: number = 0;\r\n\t\t\tlet nextY: number = 0;\r\n\t\t\tlet row: number = 0;\r\n\t\t\tlet column: number = 0;\r\n\r\n\t\t\tlet columnWidth: number[] = [];\r\n\t\t\tlet rowHeight: number[] = [];\r\n\r\n\t\t\tlet maxCellWidth: number;\r\n\t\t\tlet minCellWidth: number;\r\n\t\t\tlet columnCount: number;\r\n\r\n\t\t\tlet paddingLeft: number = this.pixelPaddingLeft;\r\n\t\t\tlet paddingRight: number = this.pixelPaddingRight;\r\n\t\t\tlet paddingTop: number = this.pixelPaddingTop;\r\n\t\t\tlet paddingBottom: number = this.pixelPaddingBottom;\r\n\r\n\t\t\t// GRID PRECALCULATIONS\r\n\t\t\tif (this.layout == \"grid\") {\r\n\r\n\t\t\t\tminCellWidth = $math.fitToRange($iter.min($iter.map(this.children.iterator(), (x) => x.measuredWidth)), 1, this.maxWidth);\r\n\t\t\t\tmaxCellWidth = $math.fitToRange($iter.max($iter.map(this.children.iterator(), (x) => x.measuredWidth)), 1, this.maxWidth);\r\n\r\n\t\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\t\tcolumnCount = this.maxWidth / maxCellWidth;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnCount = this.maxWidth / minCellWidth; // predicted number of columns, yes it is usually much more than real number, but we fix that later\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumnCount = $math.max(1, Math.floor(columnCount));\r\n\t\t\t\tcolumnWidth = this.getColumnWidth(columnCount, maxCellWidth);\r\n\t\t\t}\r\n\r\n\t\t\tlet innerWidth: number = $math.max(this.innerWidth, this._measuredWidth - paddingLeft - paddingRight);\r\n\t\t\tlet innerHeight: number = $math.max(this.innerHeight, this._measuredHeight - paddingTop - paddingBottom);\r\n\r\n\t\t\tlet containerOverflowX:number;\r\n\t\t\tlet containerOverflowY:number;\t\t\t\r\n\r\n\t\t\t// we itterate through array of children\r\n\t\t\t// TODO use iterator instead\r\n\t\t\tfor (let i: number = 0, len = this.children.length; i < len; i++) {\r\n\t\t\t\tlet child: Sprite = this.children.getIndex(i);\r\n\r\n\t\t\t\tlet x: number = undefined; // must reset\r\n\t\t\t\tlet y: number = undefined; // must reset\r\n\r\n\t\t\t\tlet childOverflowX: number = child.overflowX;\r\n\t\t\t\tlet childOverflowY: number = child.overflowY;\r\n\t\t\t\tlet childMarginLeft: number = child.pixelMarginLeft;\r\n\t\t\t\tlet childMarginRight: number = child.pixelMarginRight;\r\n\t\t\t\tlet childMarginTop: number = child.pixelMarginTop;\r\n\t\t\t\tlet childMarginBottom: number = child.pixelMarginBottom;\r\n\r\n\t\t\t\t// this is not good, as if we rotate sprite, it gets incorrect\r\n\t\t\t\t//\tlet childWidth: number = Math.min(child.pixelWidth, child.measuredWidth);\r\n\t\t\t\t//\tlet childHeight: number = Math.min(child.pixelHeight, child.measuredHeight);\r\n\r\n\t\t\t\tlet childWidth: number = child.measuredWidth;\r\n\t\t\t\tlet childHeight: number = child.measuredHeight;\r\n\r\n\t\t\t\tif (child.isMeasured) {\r\n\r\n\t\t\t\t\tswitch (this.layout) {\r\n\t\t\t\t\t\t// absolute layout\r\n\t\t\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\t\t\t// horizontal alignment\r\n\t\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\t\tx = child.pixelMarginLeft - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\t\tx = innerWidth - childWidth - childMarginRight - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// vertical alignment\r\n\t\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\t\ty = childMarginTop - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\t\ty = innerHeight - childHeight - childMarginBottom - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// vertical layout\r\n\t\t\t\t\t\tcase \"vertical\":\r\n\r\n\t\t\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\t\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\t\t\tif (!$type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\t\t\tchildHeight += childOverflowY;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchildOverflowX = 0;\r\n\t\t\t\t\t\t\t\tchildOverflowY = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\t\tx = childMarginLeft - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\t\tx = innerWidth - childWidth - childMarginRight - childOverflowX;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ty = nextY - childOverflowY + childMarginTop;\r\n\r\n\t\t\t\t\t\t\tnextY = childHeight + y + childOverflowY + childMarginBottom;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t// horizontal layout\r\n\t\t\t\t\t\tcase \"horizontal\":\r\n\r\n\t\t\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\t\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\t\t\tif (!$type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\t\t\t\tchildWidth += childOverflowX;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchildOverflowX = 0;\r\n\t\t\t\t\t\t\t\tchildOverflowY = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\t\ty = child.pixelMarginTop - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\t\ty = innerHeight - childHeight - childMarginBottom - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tx = nextX - childOverflowX + childMarginLeft;\r\n\t\t\t\t\t\t\tnextX = x + childWidth + childOverflowX + childMarginRight;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase \"grid\":\r\n\t\t\t\t\t\t\tx = nextX - childOverflowX + childMarginLeft;\r\n\t\t\t\t\t\t\ty = nextY - childOverflowY + childMarginTop;\r\n\r\n\t\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\t\ty = nextY + child.pixelMarginTop - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\t\ty = nextY + (innerHeight - childHeight) / 2 - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\t\ty = nextY + innerHeight - childHeight - childMarginBottom - childOverflowY;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnextX += columnWidth[column];\r\n\r\n\t\t\t\t\t\t\trowHeight[row] = $math.max(rowHeight[row], childHeight);\r\n\t\t\t\t\t\t\tcolumn++;\r\n\r\n\t\t\t\t\t\t\tlet nextColumnWidth = columnWidth[column];\r\n\t\t\t\t\t\t\tif (!$type.isNumber(nextColumnWidth)) {\r\n\t\t\t\t\t\t\t\tnextColumnWidth = maxCellWidth;\r\n\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t// here we reduce number of columns\r\n\t\t\t\t\t\t\tif (nextX > this.maxWidth - nextColumnWidth && column < columnCount) {\r\n\t\t\t\t\t\t\t\tcolumnCount = column - 1; // cause we added one and we need current item to go to next row\r\n\r\n\t\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t\t\tnextY = 0;\r\n\r\n\t\t\t\t\t\t\t\trow = 0;\r\n\t\t\t\t\t\t\t\tcolumn = 0;\r\n\r\n\t\t\t\t\t\t\t\tcolumnWidth = this.getColumnWidth(columnCount, maxCellWidth);\r\n\t\t\t\t\t\t\t\trowHeight = [];\r\n\r\n\t\t\t\t\t\t\t\ti = -1;\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (column >= columnCount) {\r\n\t\t\t\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t\t\t\t\tnextY += rowHeight[row];\r\n\t\t\t\t\t\t\t\trow++;\r\n\t\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// NaN is handled by setter\r\n\t\t\t\t\tchild.moveTo({ x: x, y: y });\r\n\r\n\t\t\t\t\tlet childLeft = child.pixelX + childOverflowX;\r\n\t\t\t\t\tlet childRight = child.pixelX + childWidth + childOverflowX;\r\n\t\t\t\t\tlet childTop = child.pixelY + childOverflowY;\r\n\t\t\t\t\tlet childBottom = child.pixelY + childHeight + childOverflowY;\r\n\r\n\t\t\t\t\tchildLeft -= child.pixelMarginLeft;\r\n\t\t\t\t\tchildRight += child.pixelMarginRight;\r\n\r\n\t\t\t\t\tchildTop -= child.pixelMarginTop;\r\n\t\t\t\t\tchildBottom += child.pixelMarginBottom;\r\n\r\n\t\t\t\t\tif (childRight > right || !$type.isNumber(right)) {\r\n\t\t\t\t\t\tright = childRight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childLeft < left || !$type.isNumber(left)) {\r\n\t\t\t\t\t\tleft = childLeft;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childTop < top || !$type.isNumber(top)) {\r\n\t\t\t\t\t\ttop = childTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childBottom > bottom || !$type.isNumber(bottom)) {\r\n\t\t\t\t\t\tbottom = childBottom;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeasuredWidth = right - left;\r\n\t\t\t\t\tmeasuredHeight = bottom - top;\r\n\r\n\t\t\t\t\tcontainerOverflowX = $math.min(containerOverflowX, childLeft);\r\n\t\t\t\t\tcontainerOverflowY = $math.min(containerOverflowY, childTop);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._containerOverflowX = containerOverflowX;\r\n\t\t\tthis._containerOverflowY = containerOverflowY;\r\n\r\n\t\t\tinnerWidth = $math.max(innerWidth, measuredWidth);\r\n\t\t\tinnerHeight = $math.max(innerHeight, measuredHeight);\r\n\r\n\t\t\t/// handle content alignment\r\n\t\t\tlet dx: number;\r\n\t\t\tlet dy: number;\r\n\r\n\t\t\tif (this.contentAlign == \"left\") {\r\n\t\t\t\tdx = 0;\r\n\t\t\t}\r\n\t\t\tif (this.contentAlign == \"center\") {\r\n\t\t\t\tdx = (innerWidth - measuredWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentAlign == \"right\") {\r\n\t\t\t\tdx = innerWidth - measuredWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.contentValign == \"top\") {\r\n\t\t\t\tdy = 0;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"middle\") {\r\n\t\t\t\tdy = (innerHeight - measuredHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"bottom\") {\r\n\t\t\t\tdy = innerHeight - measuredHeight;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ($type.isNumber(dx)) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tlet childOverflowX: number = child.overflowX;\r\n\r\n\t\t\t\t\tlet ddx: number = dx;\r\n\r\n\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\tchildOverflowX = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childOverflowX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childOverflowX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(dy)) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tlet childOverflowY: number = child.overflowY;\r\n\r\n\t\t\t\t\tlet ddy: number = dy;\r\n\r\n\t\t\t\t\tif (child.ignoreOverflow) {\r\n\t\t\t\t\t\tchildOverflowY = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childOverflowY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tchild.y = ddy - childOverflowY;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tchild.y = child.pixelY + ddy;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childOverflowY;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet oldBBox = this._bbox;\r\n\r\n\r\n\t\t\tmeasuredWidth = $math.round($math.max(measuredWidth, this.innerWidth), 1);\r\n\t\t\tmeasuredHeight = $math.round($math.max(measuredHeight, this.innerHeight), 1);\r\n\r\n\t\t\t// experimental\r\n\t\t\t// this prevents invalidating layout in such cases as scrolling category axis, when labels go outside bounds and results transformed event\r\n\t\t\t// todo: need to check if this doesn't cause other problems.\r\n\t\t\tif (this.maxWidth > 0) {\r\n\t\t\t\tmeasuredWidth = $math.min(measuredWidth, this.maxWidth);\r\n\t\t\t\tmeasuredWidth = $math.max(measuredWidth, this.minWidth);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.maxHeight > 0) {\r\n\t\t\t\tmeasuredHeight = $math.min(measuredHeight, this.maxHeight);\r\n\t\t\t\tmeasuredHeight = $math.max(measuredHeight, this.minHeight);\r\n\t\t\t}\r\n\r\n\t\t\tthis._bbox = { x: 0, y: 0, width: measuredWidth, height: measuredHeight };\r\n\r\n\t\t\tthis.updateBackground(measuredWidth, measuredHeight);\r\n\r\n\t\t\tthis.measure();\r\n\r\n\t\t\tif (!oldBBox || (oldBBox.width != measuredWidth || oldBBox.height != measuredHeight)) {\r\n\t\t\t\t// temp\r\n\t\t\t\tif (this.events.isEnabled(\"transformed\")) {\r\n\t\t\t\t\tlet event: AMEvent<Container, ISpriteEvents>[\"transformed\"] = {\r\n\t\t\t\t\t\ttype: \"transformed\",\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (oldBBox) {\r\n\t\t\t\t\t\tevent.dummyData = oldBBox.width + \" \" + measuredWidth + \"  \" + oldBBox.height + \" \" + measuredHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"transformed\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update the background to fit into specific dimensions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t * @param {number} measuredWidth  Wdith (px)\r\n\t * @param {number} measuredHeight Height (px)\r\n\t */\r\n\tpublic updateBackground(measuredWidth: number, measuredHeight: number): void {\r\n\t\tlet background: Sprite = this._background; // accessing protected, as getter creates instance if it doesn't exist\r\n\t\tif (background) {\r\n\t\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\t\tbackground.width = this.maxWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackground.width = measuredWidth + this.pixelPaddingLeft + this.pixelPaddingRight;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\t\tbackground.height = this.maxHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackground.height = measuredHeight + this.pixelPaddingTop + this.pixelPaddingBottom;\r\n\t\t\t}\r\n\r\n\t\t\tbackground.x = - this.pixelPaddingLeft;// - background.overflowX;\r\n\t\t\tbackground.y = - this.pixelPaddingTop;// - background.overflowY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns widths of all columns in a horizontal Container layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  {number}    columnCount   Number of columns\r\n\t * @param  {number}    maxCellWidth  Maximum width of one grid cell\r\n\t * @return {number[]}                An array of column widths\r\n\t */\r\n\tpublic getColumnWidth(columnCount: number, maxCellWidth: number): number[] {\r\n\t\tlet columnWidth: number[] = [];\r\n\t\tlet column: number = 0;\r\n\r\n\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\t\tcolumnWidth[column] = maxCellWidth;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnWidth[column] = $math.max(columnWidth[column], child.measuredWidth + child.pixelMarginRight + child.pixelMarginLeft);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumn++;\r\n\r\n\t\t\t\tif (column == columnCount) {\r\n\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn columnWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", or \"grid\".\r\n\t *\r\n\t * @default \"absolute\"\r\n\t * @param {ContainerLayout} value Layout\r\n\t */\r\n\tpublic set layout(value: ContainerLayout) {\r\n\t\tif (this.setPropertyValue(\"layout\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ContainerLayout} Layout\r\n\t */\r\n\tpublic get layout(): ContainerLayout {\r\n\t\treturn this.getPropertyValue(\"layout\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical alignement of the elements for the vertical Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param {VerticalAlign} value vertical alignement\r\n\t */\r\n\tpublic set contentValign(value: VerticalAlign) {\r\n\t\tthis._contentValign = value;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {VerticalAlign} Vertical alignement\r\n\t */\r\n\tpublic get contentValign(): VerticalAlign {\r\n\t\treturn this._contentValign;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal alignement of the elements for the horizontal Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param {Align}  value  Horizontal alignement\r\n\t */\r\n\tpublic set contentAlign(value: Align) {\r\n\t\tthis._contentAlign = value;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Align} Horizontal alignement\r\n\t */\r\n\tpublic get contentAlign(): Align {\r\n\t\treturn this._contentAlign;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the grid of the Container should use fixed width. Fixed width\r\n\t * grid will divide available space to all its columns/rows equally, without\r\n\t * adapting to actual child sizes or size requirements.\r\n\t *\r\n\t * @default false\r\n\t * @param {boolean}  value  Should use fixed width grid?\r\n\t */\r\n\tpublic set fixedWidthGrid(value: boolean) {\r\n\t\tif (this._fixedWidthGrid != value) {\r\n\t\t\tthis._fixedWidthGrid = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean} Should use fixed width grid?\r\n\t */\r\n\tpublic get fixedWidthGrid(): boolean {\r\n\t\treturn this._fixedWidthGrid;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @param  {IPoint}   point  A coordinate to check\r\n\t * @return {boolean}         `true` if it fits within container\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\t\tlet deviation = 0.5; // sometimes coordinates are rounded to numbers like .999 so we add deviation here\r\n\t\tif (x >= -deviation && x <= this.pixelWidth + deviation && y >= -deviation && y <= this.pixelHeight + deviation) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from different Container, including background\r\n\t * clone.\r\n\t *\r\n\t * @param {this}  source  Source COntainer to copy from\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.layout = source.layout;\r\n\r\n\t\tif (source._background) {\r\n\t\t\tthis.background = source._background.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the Container, including all of its children.\r\n\t *\r\n\t * @return {this} New Container clone\r\n\t */\r\n\tpublic clone(): this {\r\n\t\tlet clone = super.clone();\r\n\r\n\t\tif (this.cloneChildren) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tlet clonedChild: Sprite = child.clone();\r\n\t\t\t\tclonedChild.parent = clone;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[Preloader]] instance to be used when COntainer is busy.\r\n\t *\r\n\t * @param {Preloader} preloader Preloader instance\r\n\t */\r\n\tpublic set preloader(preloader: Preloader) {\r\n\t\tif (this._preloader) {\r\n\t\t\tthis.removeDispose(this._preloader);\r\n\t\t}\r\n\t\tthis._preloader = preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.parent = this.tooltipContainer;\r\n\t\t\tthis._disposers.push(preloader);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates (if necessary) and returns an instance of the [[Preloader]] to\r\n\t * show when Container is busy loading.\r\n\t *\r\n\t * @return {Preloader} Preloader instance\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\tif (this._preloader) {\r\n\t\t\treturn this._preloader;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.preloader;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes Container from the system-wide list of invalid Containers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeFromInvalids() {\r\n\t\tsuper.removeFromInvalids();\r\n\t\t$array.remove(system.invalidLayouts, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]] to be used as data for the Container.\r\n\t *\r\n\t * @todo Description\r\n\t * @param {DataItem} dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: DataItem) {\r\n\t\tif (this._dataItem != dataItem) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tif (child.dataItem == this.dataItem) {\r\n\t\t\t\t\tchild.invalidate();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns Tooltip X coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} X (px)\r\n\t */\r\n\tprotected getTooltipX(): number {\r\n\t\treturn super.getTooltipX() + this._containerOverflowX;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip Y coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {number} Y (px)\r\n\t */\r\n\tprotected getTooltipY(): number {\r\n\t\treturn super.getTooltipY() + this._containerOverflowY;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @todo Remove commented out code\r\n\t */\r\n\r\n\t/*\r\n\t\tprotected set childrenByLayout(value: List<Sprite>) {\r\n\t\t\tthis._childrenByLayout = value;\r\n\t\t\tif (this._zIndexGroups) {\r\n\t\t\t\tthis._zIndexGroups.dispose();\r\n\t\t\t\tthis.zIndexGroups = this.zIndexGroups;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprotected get childrenByLayout(): List<Sprite> {\r\n\t\t\tif (!this._childrenByLayout) {\r\n\t\t\t\tthis._childrenByLayout = new List<Sprite>();\r\n\t\t\t\tthis.zIndexGroups = this.zIndexGroups;\r\n\t\t\t}\r\n\t\t\treturn this._childrenByLayout;\r\n\t\t}\r\n\r\n\t\tprotected set zIndexGroups(value: ListGrouper<Sprite>) {\r\n\t\t\tthis._zIndexGroups = value;\r\n\t\t}\r\n\r\n\t\tprotected get zIndexGroups(): ListGrouper<Sprite> {\r\n\t\t\tif (!this._zIndexGroups) {\r\n\t\t\t\tthis._zIndexGroups = new ListGrouper(this.childrenByLayout, (x) => x.zIndex || 0, $number.order);\r\n\t\t\t\tthis._disposers.push(this._zIndexGroups);\r\n\t\t\t}\r\n\t\t\treturn this._zIndexGroups;\r\n\t\t}\r\n\t*/\r\n\r\n}\r\n"]}