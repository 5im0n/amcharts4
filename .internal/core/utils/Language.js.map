{"version":3,"file":"Language.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Language.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport en from \"../../lang/en\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[Language]].\r\n */\r\nexport interface ILanguageEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when locale is changed by user.\r\n\t */\r\n\tlocaleChanged: {\r\n\t\tlocale: ILocale;\r\n\t};\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines properties that exist for the locale.\r\n */\r\nexport interface ILocaleProperties {\r\n\t// number formatter related\r\n\t\"_decimalSeparator\"?: string;\r\n\t\"_thousandSeparator\"?: string;\r\n\r\n\t// Default date formats for various periods\r\n\t\"_date_millisecond\"?: string;\r\n\t\"_date_second\"?: string;\r\n\t\"_date_minute\"?: string;\r\n\t\"_date_hour\"?: string;\r\n\t\"_date_day\"?: string;\r\n\t\"_date_week\"?: string;\r\n\t\"_date_month\"?: string;\r\n\t\"_date_year\"?: string;\r\n\r\n\t// Default duration formats for various base units\r\n\t\"_duration_millisecond\"?: string;\r\n\t\"_duration_second\"?: string;\r\n\t\"_duration_minute\"?: string;\r\n\t\"_duration_hour\"?: string;\r\n\t\"_duration_day\"?: string;\r\n\t\"_duration_week\"?: string;\r\n\t\"_duration_month\"?: string;\r\n\t\"_duration_year\"?: string;\r\n\r\n\t// Era\r\n\t\"_era_ad\"?: string;\r\n\t\"_era_bc\"?: string;\r\n\r\n\t// Period\r\n\t\"A\"?: string;\r\n\t\"P\"?: string;\r\n\t\"AM\"?: string;\r\n\t\"PM\"?: string;\r\n\t\"A.M.\"?: string;\r\n\t\"P.M.\"?: string;\r\n\r\n\t// Dates\r\n\t\"January\"?: string;\r\n\t\"February\"?: string;\r\n\t\"March\"?: string;\r\n\t\"April\"?: string;\r\n\t\"May\"?: string;\r\n\t\"June\"?: string;\r\n\t\"July\"?: string;\r\n\t\"August\"?: string;\r\n\t\"September\"?: string;\r\n\t\"October\"?: string;\r\n\t\"November\"?: string;\r\n\t\"December\"?: string;\r\n\t\"Jan\"?: string;\r\n\t\"Feb\"?: string;\r\n\t\"Mar\"?: string;\r\n\t\"Apr\"?: string;\r\n\t\"May(short)\"?: string;\r\n\t\"Jun\"?: string;\r\n\t\"Jul\"?: string;\r\n\t\"Aug\"?: string;\r\n\t\"Sep\"?: string;\r\n\t\"Oct\"?: string;\r\n\t\"Nov\"?: string;\r\n\t\"Dec\"?: string;\r\n\t\"Sunday\"?: string;\r\n\t\"Monday\"?: string;\r\n\t\"Tuesday\"?: string;\r\n\t\"Wednesday\"?: string;\r\n\t\"Thursday\"?: string;\r\n\t\"Friday\"?: string;\r\n\t\"Saturday\"?: string;\r\n\t\"Sun\"?: string;\r\n\t\"Mon\"?: string;\r\n\t\"Tue\"?: string;\r\n\t\"Wed\"?: string;\r\n\t\"Thu\"?: string;\r\n\t\"Fri\"?: string;\r\n\t\"Sat\"?: string;\r\n\r\n\t// Chart elements\r\n\t\"Zoom Out\"?: string;\r\n\t\"Legend\"?: string;\r\n\t\"Click, tap or press ENTER to toggle\"?: string;\r\n\t\"Loading\"?: string;\r\n\r\n\t// Chart types\r\n\t\"Chart\"?: string;\r\n\t\"Serial chart\"?: string;\r\n\t\"X/Y chart\"?: string;\r\n\t\"Pie chart\"?: string;\r\n\t\"Gauge chart\"?: string;\r\n\t\"Radar chart\"?: string;\r\n\t\"Sankey diagram\"?: string;\r\n\t\"TreeMap chart\"?: string;\r\n\r\n\t// Series types\r\n\t\"Series\"?: string;\r\n\t\"Candlestick Series\"?: string;\r\n\t\"Column Series\"?: string;\r\n\t\"Line Series\"?: string;\r\n\t\"Pie Slice Series\"?: string;\r\n\t\"X/Y Series\"?: string;\r\n\r\n\t// Map-related\r\n\t\"Map\"?: string;\r\n\t\"Press ENTER to zoom in\"?: string;\r\n\t\"Press ENTER to zoom out\"?: string;\r\n\t\"Use arrow keys to zoom in and out\"?: string;\r\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\r\n\t\"Home\"?: string;\r\n\r\n\t// Export-related\r\n\t\"Export\"?: string;\r\n\t\"Image\"?: string;\r\n\t\"Data\"?: string;\r\n\t\"Print\"?: string;\r\n\t\"Click, tap or press ENTER to open\"?: string;\r\n\t\"Click, tap or press ENTER to print.\"?: string;\r\n\t\"Click, tap or press ENTER to export as %1.\"?: string;\r\n\t'To save the image, right-click this link and choose \"Save picture as...\"': string;\r\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': string;\r\n\t\"(Press ESC to close this message)\"?: string;\r\n\t\"Image Export Complete\"?: string;\r\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\r\n\t\"Saved from\"?: string;\r\n\t\"PNG\"?: string;\r\n\t\"JPG\"?: string;\r\n\t\"GIF\"?: string;\r\n\t\"SVG\"?: string;\r\n\t\"PDF\"?: string;\r\n\t\"JSON\"?: string;\r\n\t\"CSV\"?: string;\r\n\t\"XLSX\"?: string;\r\n\r\n\t// Scrollbar-related\r\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\r\n\t\"Use left and right arrows to move selection\"?: string;\r\n\t\"Use left and right arrows to move left selection\"?: string;\r\n\t\"Use left and right arrows to move right selection\"?: string;\r\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\r\n\t\"Use up and down arrows to move selection\"?: string;\r\n\t\"Use up and down arrows to move lower selection\"?: string;\r\n\t\"Use up and down arrows to move upper selection\"?: string;\r\n\t\"From %1 to %2\"?: string;\r\n\t\"From %1\"?: string;\r\n\t\"To %1\"?: string;\r\n\r\n\t// Data loader-related\r\n\t\"No parser available for file: %1\"?: string;\r\n\t\"Error parsing file: %1\"?: string;\r\n\t\"Unable to load file: %1\"?: string;\r\n\t\"Invalid date\"?: string;\r\n}\r\n\r\n/**\r\n * Defines functions that exist for the locale.\r\n */\r\nexport interface ILocaleFunctions {\r\n\t// ordinal function\r\n\t\"_dateOrd\": (day: number) => string;\r\n}\r\n\r\n/**\r\n * Defines all of the defaults for locale properties.\r\n */\r\nexport interface ILocaleDefault extends ILocaleProperties, ILocaleFunctions { }\r\n\r\n/**\r\n * Defines locale interface.\r\n */\r\nexport interface ILocale extends Partial<ILocaleDefault> { };\r\n\r\n/**\r\n * Represents a list of available adapters for Language.\r\n */\r\nexport interface ILanguageAdapters {\r\n\r\n\t/**\r\n\t * Applied to result whenever retrieving currently set locale.\r\n\t */\r\n\tlocale: {\r\n\t\tlocale: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to a translation.\r\n\t */\r\n\ttranslate: {\r\n\t\ttranslation: string,\r\n\t\tlocale?: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to all of the locale translations.\r\n\t */\r\n\ttranslations: {\r\n\t\ttranslations: any,\r\n\t\tlocale?: ILocale\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\r\nexport class Language extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t *\r\n\t * @type {EventDispatcher<AMEvent<Language, ILanguageEvents>>}\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<Language, ILanguageEvents>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t *\r\n\t * @type {Adapter<Language, ILanguageAdapters>}\r\n\t */\r\n\tpublic adapter: Adapter<Language, ILanguageAdapters> = new Adapter<Language, ILanguageAdapters>(this);\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @type {ILocale}\r\n\t */\r\n\tprotected _locale: ILocale = en;\r\n\r\n\t/**\r\n\t * Default locale. A locale to fall back to if none is specified, or\r\n\t * if there's no translation for the prompt for the current language.\r\n\t *\r\n\t * @type {ILocaleDefault}\r\n\t */\r\n\tprotected _defaultLocale: ILocaleDefault = en;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Language\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns locale that is currently used.\r\n\t *\r\n\t * @param  {ILocale}  locale  Force locale. Will use current language if not set.\r\n\t * @return {string}           Locale\r\n\t */\r\n\tprotected getLocale(locale?: ILocale): ILocale {\r\n\t\tif (locale == null) {\r\n\t\t\tlocale = this._locale;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"locale\", {\r\n\t\t\tlocale: locale\r\n\t\t}).locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Retruns the translation of the string.\r\n\t *\r\n\t * If the translation is empty, it will return untranslated prompt.\r\n\t *\r\n\t * Third parameter and up are strings that can be used to replace \"%X\"\r\n\t * placeholders in prompt.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t * ```JavaScriptScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t *\r\n\t * @param  {Key}            prompt   A string to translate\r\n\t * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  {Array<string>}  ...rest  Parameters to replace in string\r\n\t * @return {string}                  Translation\r\n\t */\r\n\tpublic translate<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Init translation\r\n\t\tlet translation: string = prompt;\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleDefault[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif ($type.hasValue(value)) {\r\n\t\t\t// It might be an empty string\r\n\t\t\ttranslation = value || prompt;\r\n\r\n\t\t\t// Try to look in default language\r\n\t\t} else if (locale !== this._defaultLocale) {\r\n\t\t\treturn this.translate(prompt, this._defaultLocale, ...rest);\r\n\t\t}\r\n\r\n\t\t// Replace %1, %2, etc params\r\n\t\tif (rest.length) {\r\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\r\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return the translation\r\n\t\treturn this.adapter.apply(\"translate\", {\r\n\t\t\ttranslation: translation,\r\n\t\t\tlocale: locale\r\n\t\t}).translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates prompt.\r\n\t *\r\n\t * If translation is empty, it will return empty string, which is a different\r\n\t * behavior than that of regular `translate`.\r\n\t *\r\n\t * @param  {Key}            prompt   A string to translate\r\n\t * @param  {ILocale}        locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  {Array<string>}  ...rest  Parameters to replace in string\r\n\t * @return {string}                  Translation\r\n\t */\r\n\tpublic translateEmpty<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\tlet translation = this.translate(prompt, locale, ...rest);\r\n\t\treturn translation == prompt ? \"\" : translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a function.\r\n\t *\r\n\t * This method will return a function reference, but will not run it. It's\r\n\t * up to the caller script to run the function.\r\n\t *\r\n\t * @param  {Key}                    prompt  A function id to translate\r\n\t * @param  {ILocale}                locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return {ILocaleFunctions[Key]}          A language-specific version of the function\r\n\t * @todo Apply adapter\r\n\t */\r\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleFunctions[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value != null) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Try to look in default language\r\n\t\tif (locale !== this._defaultLocale) {\r\n\t\t\treturn this.translateFunc(prompt, this._defaultLocale);\r\n\t\t}\r\n\r\n\t\t// Fail - return empty function\r\n\t\treturn (): string => {\r\n\t\t\treturn \"\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a list of prompts in one go.\r\n\t *\r\n\t * @param  {Array<Key>}     list    An array of strings to translate\r\n\t * @param  {ILocale}        locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return {Array<string>}          An array of translated strings in the same order as source list\r\n\t */\r\n\tpublic translateAll<Key extends keyof ILocaleProperties>(list: Array<Key>, locale?: ILocale): Array<string> {\r\n\t\t// Translate all items in the list\r\n\t\tif (!this.isDefault()) {\r\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\r\n\r\n\t\t} else {\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the currently selected locale is a default locale.\r\n\t *\r\n\t * @return {boolean} `true` if locale is default; `false` if it is not.\r\n\t */\r\n\tpublic isDefault(): boolean {\r\n\t\treturn this._defaultLocale === this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @param {ILocale}  value  Locale definition (translations)\r\n\t */\r\n\tpublic set locale(value: ILocale) {\r\n\t\tif (this._locale != value) {\r\n\t\t\tthis._locale = value;\r\n\r\n\r\n\t\t\tif (this.events.isEnabled(\"localeChanged\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"localeChanged\", {\r\n\t\t\t\t\ttype: \"localeChanged\",\r\n\t\t\t\t\tlocale: value,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {ILocale} Locale definition\r\n\t */\r\n\tpublic get locale(): ILocale {\r\n\t\treturn this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns translations for a given locale.\r\n\t *\r\n\t * @ignore\r\n\t * @deprecated\r\n\t * @param  {ILocale}        locale  Locale\r\n\t * @return {ILocale}        Translations\r\n\t */\r\n\tpublic getTranslations(locale: ILocale): ILocale {\r\n\t\treturn this.adapter.apply(\"translations\", {\r\n\t\t\ttranslations: locale,\r\n\t\t\tlocale: locale\r\n\t\t}).translations;\r\n\t}\r\n\r\n}\r\n"]}