{"version":3,"file":"Iterator.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Iterator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport { IClone } from \"./Clone\";\r\nimport { Ordering } from \"./Order\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport interface Iterator<A> {\r\n\t(push: (value: A) => boolean): void;\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport interface Iterable<A> {\r\n\titerator(): Iterator<A>;\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function fromArray<A>(array: Array<A>): Iterator<A> {\r\n\treturn (push) => {\r\n\t\tconst length = array.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tif (!push(array[i])) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function length<A>(iter: Iterator<A>): number {\r\n\tlet sum = 0;\r\n\r\n\titer((_) => {\r\n\t\t++sum;\r\n\t\treturn true;\r\n\t});\r\n\r\n\treturn sum;\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function toArray<A>(iter: Iterator<A>): Array<A> {\r\n\tconst output: Array<A> = [];\r\n\r\n\titer((value) => {\r\n\t\toutput.push(value);\r\n\t\treturn true;\r\n\t});\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function eachContinue<A>(iter: Iterator<A>, fn: (value: A) => boolean): void {\r\n\treturn iter(fn);\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function each<A>(iter: Iterator<A>, fn: (value: A) => void): void {\r\n\treturn iter((value) => {\r\n\t\tfn(value);\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function sort<A>(iter: Iterator<A>, fn: (left: A, right: A) => Ordering): Iterator<A> {\r\n\treturn fromArray(toArray(iter).sort(fn));\r\n}\r\n\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport function map<A, B>(iter: Iterator<A>, fn: (value: A) => B): Iterator<B> {\r\n\treturn (push) => iter((value) => push(fn(value)));\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function filter<A>(iter: Iterator<A>, fn: (value: A) => boolean): Iterator<A> {\r\n\treturn (push) => iter((value) => {\r\n\t\tif (fn(value)) {\r\n\t\t\treturn push(value);\r\n\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function concat<A>(...args: Array<Iterator<A>>): Iterator<A> {\r\n\treturn (push) => {\r\n\t\tlet go = true;\r\n\r\n\t\tconst push2 = (value: A) => (go = push(value));\r\n\r\n\t\tconst length = args.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\targs[i](push2);\r\n\r\n\t\t\tif (!go) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function flatten<A>(iter: Iterator<Iterator<A>>): Iterator<A> {\r\n\treturn (push) => {\r\n\t\tlet go = true;\r\n\r\n\t\tconst push2 = (value: A) => (go = push(value));\r\n\r\n\t\treturn iter((value) => {\r\n\t\t\tvalue(push2);\r\n\t\t\treturn go;\r\n\t\t});\r\n\t};\r\n}\r\n\r\n/**\r\n * [number description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport function indexed<A>(iter: Iterator<A>): Iterator<[number, A]> {\r\n\treturn (push) => {\r\n\t\tlet index = 0;\r\n\r\n\t\treturn iter((value) => push([index++, value]));\r\n\t};\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function findIndex<A>(iter: Iterator<A>, matches: (value: A) => boolean): number {\r\n\tlet found = false;\r\n\tlet i = 0;\r\n\r\n\titer((value) => {\r\n\t\tif (matches(value)) {\r\n\t\t\tfound = true;\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\t++i;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\treturn (found ? i : -1);\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function find<A>(iter: Iterator<A>, matches: (value: A) => boolean): A | undefined {\r\n\tlet output;\r\n\r\n\titer((value) => {\r\n\t\tif (matches(value)) {\r\n\t\t\toutput = value;\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport function findMap<A, B>(iter: Iterator<A>, matches: (value: A) => B | null): B | undefined {\r\n\tlet output;\r\n\r\n\titer((value) => {\r\n\t\tconst v = matches(value);\r\n\r\n\t\tif (v !== null) {\r\n\t\t\toutput = v;\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {Iterator<A>}\r\n */\r\nexport function contains<A>(iter: Iterator<A>, matches: (value: A) => boolean): boolean {\r\n\tlet output = false;\r\n\r\n\titer((value) => {\r\n\t\tif (matches(value)) {\r\n\t\t\toutput = true;\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @type {[type]}\r\n */\r\nexport function foldl<A, B>(iter: Iterator<A>, init: B, fn: (state: B, value: A) => B): B {\r\n\titer((value) => {\r\n\t\tinit = fn(init, value);\r\n\t\treturn true;\r\n\t});\r\n\r\n\treturn init;\r\n}\r\n\r\n/**\r\n * [min2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number |     null}        left [description]\r\n * @param  {number}    right [description]\r\n * @return {number}          [description]\r\n */\r\nfunction min2(left: number | null, right: number): number {\r\n\tif (left == null || right < left) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn left;\r\n\t}\r\n}\r\n\r\n/**\r\n * [min description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param  {Iterator<number>} a [description]\r\n * @return {number}             [description]\r\n */\r\nexport function min(a: Iterator<number>): number | null {\r\n\treturn foldl(a, null, min2);\r\n}\r\n\r\n/**\r\n * [max2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {number |     null}        left [description]\r\n * @param  {number}    right [description]\r\n * @return {number}          [description]\r\n */\r\nfunction max2(left: number | null, right: number): number {\r\n\tif (left == null || right > left) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn left;\r\n\t}\r\n}\r\n\r\n/**\r\n * [max description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param  {Iterator<number>} a [description]\r\n * @return {number}             [description]\r\n */\r\nexport function max(a: Iterator<number>): number | null {\r\n\treturn foldl(a, null, max2);\r\n}\r\n\r\n\r\n/**\r\n * [join description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param  {Iterator<string>} iter [description]\r\n * @param  {string        =    \"\"}          separator [description]\r\n * @return {string}                [description]\r\n */\r\nexport function join(iter: Iterator<string>, separator: string = \"\"): string {\r\n\tlet first = true;\r\n\tlet init = \"\";\r\n\r\n\titer((value) => {\r\n\t\tif (first) {\r\n\t\t\tfirst = false;\r\n\r\n\t\t} else {\r\n\t\t\tinit += separator;\r\n\t\t}\r\n\r\n\t\tinit += value;\r\n\r\n\t\treturn true;\r\n\t});\r\n\r\n\treturn init;\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class ListIterator<T extends IClone<T>> {\r\n\tprivate _listCopy!: Array<T>;\r\n\tprivate _create: () => T;\r\n\r\n\tpublic list: Iterable<T>;\r\n\r\n\t// flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list\r\n\tpublic createNewItems: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * \r\n\t * @param {Iterable<T>} list [description]\r\n\t * @param {()       =>   T}           create [description]\r\n\t */\r\n\tconstructor(list: Iterable<T>, create: () => T) {\r\n\t\tthis.list = list;\r\n\t\tthis._create = create;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis._listCopy = toArray(this.list.iterator());\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis._listCopy.length = 0;\r\n\t}\r\n\r\n\tgetFirst(): $type.Optional<T> {\r\n\t\treturn this.returnItem(0);\r\n\t}\r\n\r\n\tgetLast(): $type.Optional<T> {\r\n\t\treturn this.returnItem(this._listCopy.length - 1);\r\n\t}\r\n\r\n\tfind(fn: (value: T) => boolean): $type.Optional<T> {\r\n\t\tlet index: number = $array.findIndex(this._listCopy, fn);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tlet item = this._listCopy[index];\r\n\t\t\t// TODO use removeIndex instead ?\r\n\t\t\t$array.remove(this._listCopy, item);\r\n\t\t\treturn item;\r\n\r\n\t\t} else {\r\n\t\t\treturn this.getLast();\r\n\t\t}\r\n\t}\r\n\r\n\tremoveItem(item: T): boolean {\r\n\t\treturn $array.remove(this._listCopy, item);\r\n\t}\r\n\r\n\tprotected returnItem(index: number): $type.Optional<T> {\r\n\t\tif (index >= 0 && index < this._listCopy.length) {\r\n\t\t\tlet item = this._listCopy[index];\r\n\t\t\t// TODO use removeIndex instead ?\r\n\t\t\t$array.remove(this._listCopy, item);\r\n\t\t\treturn item;\r\n\r\n\t\t} else if (this.createNewItems) {\r\n\t\t\treturn this._create();\r\n\t\t}\r\n\t}\r\n\r\n\titerator() {\r\n\t\treturn fromArray(this._listCopy);\r\n\t}\r\n}"]}