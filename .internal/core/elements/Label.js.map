{"version":3,"file":"Label.js","sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Label.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,SAAS,EAA8D,MAAM,cAAc,CAAC;AAGrG,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AA+B9B;;;;;GAKG;AAEH;;;;;;;GAOG;AACH;IAA2B,yBAAS;IAgCnC;;OAEG;IACH;QAAA,YACC,iBAAO,SAMP;QALA,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,KAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC9B,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAOD,sBAAW,8BAAW;QActB;;WAEG;aACH;YACC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC1B,CAAC;QAxBD;;;;WAIG;aACH,UAAuB,WAAiB;YACvC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvB,8BAA8B;gBAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACvC,CAAC;YACD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;gBAChC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC1B,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC;gBAC3B,WAAW,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACzC,CAAC;QACF,CAAC;;;OAAA;IAcD,sBAAW,uBAAI;QALf;;;;WAIG;aACH,UAAgB,KAAa;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAOD,sBAAW,uBAAI;QALf;;;;WAIG;aACH,UAAgB,KAAa;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAED;;;;;;;;OAQG;IACI,2BAAW,GAAlB,UAAmB,QAAkB;QACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACrC,iBAAM,WAAW,YAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACI,wBAAQ,GAAf,UAAgB,KAAW;QAC1B,iBAAM,QAAQ,YAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAEF,YAAC;AAAD,CAAC,AAhHD,CAA2B,SAAS,GAgHnC","sourcesContent":["/**\r\n * Label class is used to put textual elements on the chart. It uses [[Text]] to\r\n * add actual text, but is in itself a [[Container]] so that various sizing and\r\n * placement options can be applied to it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../Sprite\";\r\nimport { DataItem } from \"../DataItem\";\r\nimport { Text } from \"./Text\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Label]].\r\n */\r\nexport interface ILabelProperties extends IContainerProperties {\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Label]].\r\n */\r\nexport interface ILabelEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Label]].\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelAdapters extends IContainerAdapters, ILabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Label class is used to put textual elements on the chart. It uses [[Text]] to\r\n * add actual text, but is in itself a [[Container]] so that various sizing and\r\n * placement options can be applied to it.\r\n * \r\n * @see {@link ILabelEvents} for a list of available events\r\n * @see {@link ILabelAdapters} for a list of available Adapters\r\n */\r\nexport class Label extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ILabelProperties}\r\n\t */\r\n\tpublic _properties: ILabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ILabelAdapters}\r\n\t */\r\n\tpublic _adapter: ILabelAdapters;\r\n\r\n\t/**\r\n\t * Reference to a [[Text]] instance.\r\n\t * \r\n\t * @type {Text}\r\n\t */\r\n\tprotected _textElement: Text;\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t * \r\n\t * @type {SpriteEventDispatcher<AMEvent<Label, ILabelEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<Label, ILabelEvents>>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Label\";\r\n\t\tthis.textElement = new Text();\r\n\t\tthis.cloneChildren = false;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Text]] instance to be used as label element.\r\n\t * \r\n\t * @param {Text}  textElement  Text instance\r\n\t */\r\n\tpublic set textElement(textElement: Text) {\r\n\t\tif (this._textElement) {\r\n\t\t\t//this._textElement.dispose();\r\n\t\t\tthis.removeDispose(this._textElement);\r\n\t\t}\r\n\t\tif (textElement) {\r\n\t\t\tthis._textElement = textElement;\r\n\t\t\ttextElement.parent = this;\r\n\t\t\ttextElement.align = \"left\";\r\n\t\t\ttextElement.valign = \"top\";\r\n\t\t\tthis._disposers.push(this._textElement);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Text} Text instance\r\n\t */\r\n\tpublic get textElement(): Text {\r\n\t\treturn this._textElement;\r\n\t}\r\n\r\n\t/**\r\n\t * A plain text for the label.\r\n\t * \r\n\t * @param {string}  value  Text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tthis.textElement.text = value;\r\n\t}\r\n\r\n\t/**\r\n\t * An HTML content for the label.\r\n\t * \r\n\t * @param {string}  value  HTML\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tthis.textElement.html = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets data item for the label.\r\n\t *\r\n\t * This wil be used in resolving field references in text and replacing them\r\n\t * with real values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {DataItem} dataItem [description]\r\n\t */\r\n\tpublic setDataItem(dataItem: DataItem): void {\r\n\t\tthis.textElement.dataItem = dataItem;\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another [[Label]] instance.\r\n\t * \r\n\t * @param {Label}  label  Source element\r\n\t */\r\n\tpublic copyFrom(label: this) {\r\n\t\tsuper.copyFrom(label);\r\n\t\tthis.textElement.copyFrom(label.textElement);\r\n\t}\r\n\r\n}"]}