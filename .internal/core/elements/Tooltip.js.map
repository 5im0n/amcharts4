{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Provides functionality used to creating and showing tooltips (balloons).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { DictionaryTemplate } from \"../utils/Dictionary\";\r\nimport { PointedRectangle } from \"./PointedRectangle\";\r\nimport { PointedShape } from \"./PointedShape\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Text } from \"../elements/Text\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { color } from \"../utils/Color\";\r\nimport { DropShadowFilter } from \"../rendering/filters/DropShadowFilter\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { DataItem } from \"../DataItem\";\r\n\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $utils from \"../utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents options for tolltip pointer (arrow) orientation.\r\n *\r\n * @type {string}\r\n */\r\nexport type PointerOrientation = \"horizontal\" | \"vertical\";\r\n\r\n/**\r\n * Defines properties for [[Tooltip]].\r\n */\r\nexport interface ITooltipProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Pointer orientation: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @type {PointerOrientation}\r\n\t */\r\n\tpointerOrientation?: PointerOrientation;\r\n\r\n\t/**\r\n\t * Duration in milliseconds for the animation to take place when the tolltip\r\n\t * is moving from one place to another.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * Tooltip animation easing function.\r\n\t * @type {(value: number) => number}\r\n\t */\r\n\tanimationEasing?: (value: number) => number;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to\r\n\t * @type {boolean}\r\n\t */\r\n\tgetStrokeFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it is pointing to\r\n\t * @type {boolean}\r\n\t */\r\n\tgetFillFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better readability.\r\n\t * @type {boolean}\r\n\t */\r\n\tautoTextColor?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tooltip]].\r\n */\r\nexport interface ITooltipEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tooltip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITooltipAdapters extends IContainerAdapters, ITooltipProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Tooltip displays text and/or multimedia information in a balloon over chart\r\n * area.\r\n * @see {@link ITooltipEvents} for a list of available events\r\n * @see {@link ITooltipAdapters} for a list of available Adapters\r\n */\r\nexport class Tooltip extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ITooltipProperties}\r\n\t */\r\n\tpublic _properties: ITooltipProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ITooltipAdapters}\r\n\t */\r\n\tpublic _adapter: ITooltipAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t *\r\n\t * @type {SpriteEventDispatcher<AMEvent<Tooltip, ITooltipEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<Tooltip, ITooltipEvents>>;\r\n\r\n\t/**\r\n\t * A type for the background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {PointedRectangle}\r\n\t */\r\n\tpublic _background: PointedRectangle;\r\n\r\n\t/**\r\n\t * Text element that represents tooltip contents.\r\n\t */\r\n\tpublic textElement: Text = new Text();\r\n\r\n\t/**\r\n\t * A container that should be considered a \"boundary\" for the tolltip. A\r\n\t * bounding container is used to calculate numeric boundaries\r\n\t * (`boundingRect`). It is used to constrain the Tooltip to specific area on\r\n\t * the chart, like for example cursor tooltip in plot area.\r\n\t *\r\n\t * @type {Container}\r\n\t */\r\n\tprotected _boundingContainer: Container;\r\n\r\n\t/**\r\n\t * Holds numeric boundary values. Calculated from the `boundingContainer`.\r\n\t *\r\n\t * @type {IRectangle}\r\n\t */\r\n\tprotected _boundingRect: IRectangle = { x: - 20000, y: - 20000, width: 40000, height: 40000 };\r\n\r\n\t/**\r\n\t * Coordinates tolltip's pointer (stem) should point to.\r\n\t *\r\n\t * @type {IPoint}\r\n\t */\r\n\tprotected _pointTo: IPoint = { x: 0, y: 0 };\r\n\r\n\t/**\r\n\t * [fitPointerToBounds description]\r\n\t *\r\n\t * @todo Description\r\n\t * @type {boolean}\r\n\t */\r\n\tpublic fitPointerToBounds: boolean = false;\r\n\r\n\t/**\r\n\t * If tooltipOrientation is vertical, it can be drawn below or above point. We need to know this when solving overlapping\r\n\t *\r\n\t * @type \"up\" | \"down\"\r\n\t * @ignore\r\n\t */\r\n\tprotected _verticalOrientation: \"up\" | \"down\" = \"up\";\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Tooltip\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.getFillFromObject = true;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\t// Create chrome/background\r\n\t\tthis.background.mouseEnabled = false;\r\n\t\tthis.background.fillOpacity = 0.9;\r\n\t\tthis.background.strokeWidth = 1;\r\n\t\tthis.background.strokeOpacity = 1;\r\n\t\tthis.background.stroke = color(\"#ffffff\");\r\n\r\n\t\t// Create text element\r\n\t\tthis.textElement = this.createChild(Text);\r\n\t\tthis.textElement.padding(7, 12, 6, 12);\r\n\t\tthis.textElement.mouseEnabled = false;\r\n\t\tthis.textElement.horizontalCenter = \"middle\";\r\n\t\tthis.textElement.fill = color(\"#ffffff\");\r\n\t\tthis._disposers.push(this.textElement);\r\n\r\n\t\tthis.textElement.zIndex = 1; // @todo remove this line when bg sorting is solved\r\n\r\n\t\t// Set defaults\r\n\t\tthis.pointerOrientation = \"vertical\";\r\n\r\n\t\tlet dropShadow = new DropShadowFilter();\r\n\t\tdropShadow.dy = 1;\r\n\t\tdropShadow.dx = 1;\r\n\t\tdropShadow.opacity = 0.5;\r\n\r\n\t\tthis.filters.push(dropShadow);\r\n\r\n\t\tthis.animationDuration = 0;\r\n\t\tthis.animationEasing = $ease.cubicOut;\r\n\r\n\t\t// Set accessibility options\r\n\t\tthis.role = \"tooltip\";\r\n\r\n\t\tthis.visible = false;\r\n\t\tthis.opacity = 0;\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default false\r\n\t */\r\n\tpublic get getStrokeFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getStrokeFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @param {value} value boolean\t \r\n\t */\r\n\tpublic set getStrokeFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getStrokeFromObject\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better readability.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default false\r\n\t */\r\n\tpublic get autoTextColor(): boolean {\r\n\t\treturn this.getPropertyValue(\"autoTextColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better readability.\r\n\t *\r\n\t * @param {value} value boolean\r\n\t */\r\n\tpublic set autoTextColor(value: boolean) {\r\n\t\tthis.setPropertyValue(\"autoTextColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default true\r\n\t */\r\n\tpublic get getFillFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getFillFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it is pointing to.\r\n\t *\r\n\t * @param {value} value boolean\r\n\t */\r\n\tpublic set getFillFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getFillFromObject\", value, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns a background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return {PointedRectangle} Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new PointedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Pointer orientation: \"horizontal\" or \"vertical\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param {PointerOrientation}  value  Orientation\r\n\t */\r\n\tpublic set pointerOrientation(value: PointerOrientation) {\r\n\t\tthis.setPropertyValue(\"pointerOrientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {PointerOrientation} Orientation\r\n\t */\r\n\tpublic get pointerOrientation(): PointerOrientation {\r\n\t\treturn this.getPropertyValue(\"pointerOrientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Duration in milliseconds for the animation to take place when the tolltip\r\n\t * is moving from one place to another.\r\n\t * @default 0\r\n\t * @param {number}  value  number\r\n\t */\r\n\tpublic set animationDuration(value: number) {\r\n\t\tthis.setPropertyValue(\"animationDuration\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {PointerOrientation} Orientation\r\n\t */\r\n\tpublic get animationDuration(): number {\r\n\t\treturn this.getPropertyValue(\"animationDuration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tooltip animation easing function.\r\n\t * @todo: review description and default\r\n\t * @default $ease.cubicOut\r\n\t * @param {Function}  value (value: number) => number\r\n\t */\r\n\tpublic set animationEasing(value: (value: number) => number) {\r\n\t\tthis.setPropertyValue(\"animationEasing\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Function}\r\n\t */\r\n\tpublic get animationEasing(): (value: number) => number {\r\n\t\treturn this.getPropertyValue(\"animationEasing\");\r\n\t}\r\n\r\n\t/**\r\n\t * HTML content for the Tooltip.\r\n\t *\r\n\t * Provided value will be used as is, without applying any further\r\n\t * formatting to it.\r\n\t *\r\n\t * @param {string}  value  HTML content\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tthis.textElement.html = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} HTML content\r\n\t */\r\n\tpublic get html(): string {\r\n\t\treturn this.textElement.html;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets data item for the tooltip.\r\n\t *\r\n\t * This wil be used in resolving field references in text and replacing them\r\n\t * with real values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {DataItem}  dataItem  Data item\r\n\t */\r\n\tpublic setDataItem(dataItem: DataItem): void {\r\n\t\tthis.textElement.dataItem = dataItem;\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * SVG text content for the Tooltip.\r\n\t *\r\n\t * Text can have a number of formatting options supported by\r\n\t * [[TextFormatter]].\r\n\t *\r\n\t * @param {string}  value  SVG text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tif (this.textElement.text != value) {\r\n\t\t\tthis.textElement.text = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {string} SVG text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.textElement.text;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet textElement = this.textElement;\r\n\t\tlet background = this.background;\r\n\t\tbackground.cornerRadius = 3;\r\n\t\tbackground.pointerLength = 6;\r\n\t\tbackground.pointerBaseWidth = 10;\r\n\r\n\t\tif (textElement.invalid) {\r\n\t\t\ttextElement.validate();\r\n\t\t}\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet textW: number = textElement.pixelWidth;\r\n\t\tlet textH: number = textElement.pixelHeight;\r\n\r\n\t\tlet pointerLength = background.pointerLength;\r\n\r\n\t\tlet textX: number;\r\n\t\tlet textY: number;\r\n\r\n\t\t// horizontal\r\n\t\tif (this.pointerOrientation == \"horizontal\") {\r\n\t\t\ttextY = - textH / 2;\r\n\t\t\tif (x > boundingRect.x + boundingRect.width / 2) {\r\n\t\t\t\ttextX = - textW / 2 - pointerLength;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextX = textW / 2 + pointerLength;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// vertical pointer\r\n\t\telse {\r\n\t\t\ttextX = $math.fitToRange(0, boundingRect.x - x + textW / 2, boundingRect.x - x + boundingRect.width - textW / 2);\r\n\r\n\t\t\tif (y > boundingRect.y + textH + pointerLength) {\r\n\t\t\t\ttextY = - textH - pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"up\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextY = pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"down\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttextY = $math.fitToRange(textY, boundingRect.y - y, boundingRect.y + boundingRect.height - textH - y);\r\n\r\n\t\ttextElement.x = textX;\r\n\t\ttextElement.y = textY;\r\n\r\n\t\tthis.drawBackground();\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides functionality from the superclass.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\t// Do nothing\r\n\t}\r\n\r\n\t/**\r\n\t * Draws Tooltip background (chrome, background and pointer/stem).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic drawBackground(): void {\r\n\t\tlet textElement: Text = this.textElement;\r\n\t\tlet background: PointedRectangle = this.background;\r\n\t\tlet textWidth: number = textElement.pixelWidth;\r\n\t\tlet textHeight: number = textElement.pixelHeight;\r\n\t\tlet pixelWidth: number = this.pixelWidth;\r\n\t\tlet pixelHeight: number = this.pixelHeight;\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet bgWidth: number = textElement.pixelWidth;\r\n\t\tlet bgX: number = textElement.pixelX - textWidth / 2;\r\n\r\n\t\tlet bgHeight: number = textElement.pixelHeight;\r\n\t\tlet bgY: number = textElement.pixelY;\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundX1: number = boundingRect.x - x;\r\n\t\tlet boundX2: number = boundX1 + boundingRect.width;\r\n\t\tlet boundY1: number = boundingRect.y - y;\r\n\t\tlet boundY2: number = boundY1 + boundingRect.height;\r\n\r\n\t\t// all this math required when tooltip width is set from outside and it's bigger then text width\r\n\t\tif (this.pointerOrientation == \"vertical\") {\r\n\t\t\tif (pixelWidth > textWidth) {\r\n\t\t\t\tlet x1real: number = Math.min(-pixelWidth / 2, bgX);\r\n\t\t\t\tlet x2real: number = Math.max(pixelWidth / 2, bgX + textWidth);\r\n\t\t\t\t// fit to bounds\r\n\t\t\t\tlet x1: number = $math.fitToRange(x1real, boundX1, boundX2);\r\n\t\t\t\tlet x2: number = $math.fitToRange(x2real, boundX1, boundX2);\r\n\r\n\t\t\t\tbgWidth = x2 - x1;\r\n\t\t\t\tbgX = x1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (pixelHeight > textHeight) {\r\n\t\t\t\tlet y1real: number = Math.min(-pixelHeight / 2, bgY);\r\n\t\t\t\tlet y2real: number = Math.max(pixelHeight / 2, bgY + textHeight);\r\n\t\t\t\t// fit to bounds\r\n\t\t\t\tlet y1: number = $math.fitToRange(y1real, boundY1, boundY2);\r\n\t\t\t\tlet y2: number = $math.fitToRange(y2real, boundY1, boundY2);\r\n\r\n\t\t\t\tbgHeight = y2 - y1;\r\n\t\t\t\tbgY = y1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbackground.x = bgX;\r\n\t\tbackground.y = bgY;\r\n\r\n\t\tbackground.width = bgWidth;\r\n\t\tbackground.height = bgHeight;\r\n\r\n\t\tif (this.fitPointerToBounds) {\r\n\t\t\tbackground.pointerX = $math.fitToRange(- background.x, boundX1 - background.x, boundX2 - background.x);\r\n\t\t\tbackground.pointerY = $math.fitToRange(- background.y, boundY1 - background.y, boundY2 - background.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbackground.pointerX = - background.x;\r\n\t\t\tbackground.pointerY = - background.y;\r\n\t\t}\r\n\r\n\t\tbackground.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Set nes tooltip's anchor point and moves whole tooltip.\r\n\t *\r\n\t * @param {number}  x  X coordinate\r\n\t * @param {number}  y  Y coordinate\r\n\t */\r\n\tpublic pointTo(point: IPoint, instantly?: boolean): void {\r\n\t\tif (this._pointTo.x != point.x || this._pointTo.y != point.y) {\r\n\r\n\t\t\tthis._pointTo = point;\r\n\t\t\tthis.invalidate();\r\n\r\n\t\t\t// this helps to avoid strange animation from nowhere on initial show or when balloon was hidden already\r\n\t\t\tif (!this.visible || instantly) {\r\n\t\t\t\tthis.moveTo(this._pointTo);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnew Animation(this, [{ property: \"x\", to: point.x, from: this.pixelX }, { property: \"y\", to: point.y, from: this.pixelY }], this.animationDuration, this.animationEasing).start();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets numeric boundaries Tooltip needs to obey (so it does not go outside\r\n\t * specific area).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {IRectangle} rectangle Boundary rectangle\r\n\t */\r\n\tpublic setBounds(rectangle: IRectangle): void {\r\n\t\tthis._boundingRect = rectangle;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[Container]] instance to be used when calculating numeric\r\n\t * boundaries for the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {Container}  container  Boundary container\r\n\t */\r\n\tpublic set boundingContainer(container: Container) {\r\n\t\tthis._boundingContainer = container;\r\n\t\t// TODO remove closures ?\r\n\t\tcontainer.events.on(\"sizechanged\", this.updateBounds, this);\r\n\t\tcontainer.events.on(\"positionchanged\", this.updateBounds, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates numeric boundaries for the Tooltip, based on the\r\n\t * `boundingCountrainer`.\r\n\t */\r\n\tprotected updateBounds(): void {\r\n\t\tlet boundingContainer: Container = this._boundingContainer;\r\n\t\t// to global\r\n\t\tlet rect: IRectangle = $utils.spriteRectToSvg({\r\n\t\t\tx: boundingContainer.pixelX,\r\n\t\t\ty: boundingContainer.pixelY,\r\n\t\t\twidth: boundingContainer.maxWidth,\r\n\t\t\theight: boundingContainer.maxHeight\r\n\t\t}, boundingContainer);\r\n\t\tthis.setBounds(rect);\r\n\t}\r\n\r\n\t/**\r\n\t * If tooltipOrientation is vertical, it can be drawn below or above point. We need to know this when solving overlapping\r\n\t * @return \"up\" | \"down\" \r\n\t */\r\n\tpublic get verticalOrientation(): \"up\" | \"down\" {\r\n\t\treturn this._verticalOrientation;\r\n\t}\r\n}\r\n"]}