{"version":3,"file":"Slider.js","sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Slider.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,SAAS,EAA8D,MAAM,+BAA+B,CAAC;AAoCtH;;;;;GAKG;AAEH;;;;;GAKG;AACH;IAA4B,0BAAS;IAyBpC;;OAEG;IACH;QAAA,YACC,iBAAO,SAOP;QANA,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,KAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE7B,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAEF,aAAC;AAAD,CAAC,AAtCD,CAA4B,SAAS,GAsCpC","sourcesContent":["/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite, SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { IDisposer, MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n * \r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ISliderProperties}\r\n\t */\r\n\tpublic _properties: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @type {ISliderAdapters}\r\n\t */\r\n\tpublic _adapter: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t * \r\n\t * @type {SpriteEventDispatcher<AMEvent<Slider, ISliderEvents>>} Event dispatcher instance\r\n\t */\r\n\tpublic events: SpriteEventDispatcher<AMEvent<Slider, ISliderEvents>>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.disabled = true;\r\n\t\tthis.endGrip.disabled = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}"]}